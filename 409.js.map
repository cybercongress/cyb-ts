{"version":3,"file":"409.js","mappings":"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CT,CACF,EAvFAryB,EAAQ25B,MAAQn2B,OAAO82B,OAAO92B,OAAO+f,KAAKmW,EAAUC,QACpD35B,EAAQ85B,MAAQt2B,OAAO82B,OAAO92B,OAAO+f,KAAKmW,EAAUI,0CCVpD95B,EAAQ25B,MAAQn2B,OAAO82B,OAAO,CAC5B,SAAc,EACd,KAAc,GACd,WAAc,GACd,WAAc,GACd,eAAgB,GAChB,WAAc,GACd,WAAc,GACd,WAAc,GACd,WAAc,GACd,YAAc,GACd,YAAc,GACd,aAAc,GACd,aAAc,GACd,aAAc,GACd,aAAc,GACd,cAAe,GACf,aAAe,GACf,IAAe,IACf,IAAe,IACf,YAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,YAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,KACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,iBAAkB,MAClB,iBAAkB,MAClB,iBAAkB,MAClB,iBAAkB,QAGpBt6B,EAAQ85B,MAAQt2B,OAAO82B,OAAO,CAC5B,EAAK,WAGL,GAAM,OACN,GAAM,WACN,GAAM,WACN,GAAM,eACN,GAAM,WACN,GAAM,WACN,GAAM,WACN,GAAM,WACN,GAAM,YACN,GAAM,YACN,GAAM,aACN,GAAM,aACN,GAAM,aACN,GAAM,aAEN,GAAM,cACN,GAAM,aAEN,IAAM,MACN,IAAM,MAGN,MAAQ,YACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,YACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cAGR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,cACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,KAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ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","sources":["webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/varint/decode.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/varint/encode.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/varint/index.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/varint/length.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/varint/decode.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/varint/encode.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/varint/index.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/varint/length.js","webpack://cyb/./node_modules/@multiformats/multiaddr/node_modules/varint/decode.js","webpack://cyb/./node_modules/@multiformats/multiaddr/node_modules/varint/encode.js","webpack://cyb/./node_modules/@multiformats/multiaddr/node_modules/varint/index.js","webpack://cyb/./node_modules/@multiformats/multiaddr/node_modules/varint/length.js","webpack://cyb/./node_modules/@noble/hashes/_assert.js","webpack://cyb/./node_modules/@noble/hashes/_sha2.js","webpack://cyb/./node_modules/@noble/hashes/_u64.js","webpack://cyb/./node_modules/@noble/hashes/crypto.js","webpack://cyb/./node_modules/@noble/hashes/hmac.js","webpack://cyb/./node_modules/@noble/hashes/pbkdf2.js","webpack://cyb/./node_modules/@noble/hashes/ripemd160.js","webpack://cyb/./node_modules/@noble/hashes/sha256.js","webpack://cyb/./node_modules/@noble/hashes/sha3.js","webpack://cyb/./node_modules/@noble/hashes/sha512.js","webpack://cyb/./node_modules/@noble/hashes/utils.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getWindow.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/math.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/userAgent.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js","webpack://cyb/./node_modules/@popperjs/core/lib/enums.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/orderModifiers.js","webpack://cyb/./node_modules/@popperjs/core/lib/createPopper.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/debounce.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/mergeByName.js","webpack://cyb/./node_modules/@popperjs/core/lib/modifiers/eventListeners.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/getBasePlacement.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/getVariation.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/computeOffsets.js","webpack://cyb/./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js","webpack://cyb/./node_modules/@popperjs/core/lib/modifiers/computeStyles.js","webpack://cyb/./node_modules/@popperjs/core/lib/modifiers/offset.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/contains.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/rectToClientRect.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js","webpack://cyb/./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/expandToHashMap.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/detectOverflow.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/within.js","webpack://cyb/./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/getAltAxis.js","webpack://cyb/./node_modules/@popperjs/core/lib/modifiers/arrow.js","webpack://cyb/./node_modules/@popperjs/core/lib/modifiers/hide.js","webpack://cyb/./node_modules/@popperjs/core/lib/popper.js","webpack://cyb/./node_modules/@popperjs/core/lib/modifiers/applyStyles.js","webpack://cyb/./node_modules/@popperjs/core/lib/modifiers/flip.js","webpack://cyb/./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js","webpack://cyb/./node_modules/@protobufjs/aspromise/index.js","webpack://cyb/./node_modules/@protobufjs/base64/index.js","webpack://cyb/./node_modules/@protobufjs/eventemitter/index.js","webpack://cyb/./node_modules/@protobufjs/float/index.js","webpack://cyb/./node_modules/@protobufjs/inquire/index.js","webpack://cyb/./node_modules/@protobufjs/pool/index.js","webpack://cyb/./node_modules/@protobufjs/utf8/index.js","webpack://cyb/./node_modules/ms/index.js","webpack://cyb/./node_modules/multibase/src/base.js","webpack://cyb/./node_modules/multibase/src/base16.js","webpack://cyb/./node_modules/multibase/src/base32.js","webpack://cyb/./node_modules/multibase/src/base64.js","webpack://cyb/./node_modules/multibase/src/constants.js","webpack://cyb/./node_modules/multibase/src/index.js","webpack://cyb/./node_modules/multihashes/node_modules/multibase/src/base.js","webpack://cyb/./node_modules/multihashes/node_modules/multibase/src/base16.js","webpack://cyb/./node_modules/multihashes/node_modules/multibase/src/base32.js","webpack://cyb/./node_modules/multihashes/node_modules/multibase/src/base64.js","webpack://cyb/./node_modules/multihashes/node_modules/multibase/src/constants.js","webpack://cyb/./node_modules/multihashes/node_modules/multibase/src/index.js","webpack://cyb/./node_modules/multihashes/src/constants.js","webpack://cyb/./node_modules/multihashes/src/index.js","webpack://cyb/./node_modules/multihashing-async/src/blake.js","webpack://cyb/./node_modules/multihashing-async/src/crypto-sha1-2-browser.js","webpack://cyb/./node_modules/multihashing-async/src/crypto.js","webpack://cyb/./node_modules/multihashing-async/src/index.js","webpack://cyb/./node_modules/multihashing-async/src/utils.js","webpack://cyb/./node_modules/murmurhash3js-revisited/index.js","webpack://cyb/./node_modules/murmurhash3js-revisited/lib/murmurHash3js.js","webpack://cyb/./node_modules/murmurhash3js/index.js","webpack://cyb/./node_modules/murmurhash3js/lib/murmurHash3js.js","webpack://cyb/./node_modules/native-fetch/src/index.js","webpack://cyb/./node_modules/netmask/lib/netmask.js","webpack://cyb/./node_modules/next-event/index.js","webpack://cyb/./node_modules/ngraph.events/index.js","webpack://cyb/./node_modules/ngraph.forcelayout/index.js","webpack://cyb/./node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","webpack://cyb/./node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","webpack://cyb/./node_modules/ngraph.forcelayout/lib/codeGenerators/generateCreateBody.js","webpack://cyb/./node_modules/ngraph.forcelayout/lib/codeGenerators/generateCreateDragForce.js","webpack://cyb/./node_modules/ngraph.forcelayout/lib/codeGenerators/generateCreateSpringForce.js","webpack://cyb/./node_modules/ngraph.forcelayout/lib/codeGenerators/generateIntegrator.js","webpack://cyb/./node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","webpack://cyb/./node_modules/ngraph.forcelayout/lib/codeGenerators/getVariableName.js","webpack://cyb/./node_modules/ngraph.forcelayout/lib/createPhysicsSimulator.js","webpack://cyb/./node_modules/ngraph.forcelayout/lib/spring.js","webpack://cyb/./node_modules/ngraph.graph/index.js","webpack://cyb/./node_modules/ngraph.merge/index.js","webpack://cyb/./node_modules/ngraph.random/index.js","webpack://cyb/./node_modules/node-fetch/browser.js","webpack://cyb/./node_modules/node-forge/lib/aes.js","webpack://cyb/./node_modules/node-forge/lib/asn1.js","webpack://cyb/./node_modules/node-forge/lib/baseN.js","webpack://cyb/./node_modules/node-forge/lib/cipher.js","webpack://cyb/./node_modules/node-forge/lib/cipherModes.js","webpack://cyb/./node_modules/node-forge/lib/des.js","webpack://cyb/./node_modules/node-forge/lib/forge.js","webpack://cyb/./node_modules/node-forge/lib/hmac.js","webpack://cyb/./node_modules/node-forge/lib/jsbn.js","webpack://cyb/./node_modules/node-forge/lib/md.js","webpack://cyb/./node_modules/node-forge/lib/mgf.js","webpack://cyb/./node_modules/node-forge/lib/mgf1.js","webpack://cyb/./node_modules/node-forge/lib/oids.js","webpack://cyb/./node_modules/node-forge/lib/pbe.js","webpack://cyb/./node_modules/node-forge/lib/pbkdf2.js","webpack://cyb/./node_modules/node-forge/lib/pem.js","webpack://cyb/./node_modules/node-forge/lib/pkcs1.js","webpack://cyb/./node_modules/node-forge/lib/pkcs7.js","webpack://cyb/./node_modules/node-forge/lib/pkcs7asn1.js","webpack://cyb/./node_modules/node-forge/lib/prime.js","webpack://cyb/./node_modules/node-forge/lib/prng.js","webpack://cyb/./node_modules/node-forge/lib/pss.js","webpack://cyb/./node_modules/node-forge/lib/random.js","webpack://cyb/./node_modules/node-forge/lib/rc2.js","webpack://cyb/./node_modules/node-forge/lib/rsa.js","webpack://cyb/./node_modules/node-forge/lib/sha1.js","webpack://cyb/./node_modules/node-forge/lib/sha256.js","webpack://cyb/./node_modules/node-forge/lib/sha512.js","webpack://cyb/./node_modules/node-forge/lib/util.js","webpack://cyb/./node_modules/node-forge/lib/x509.js","webpack://cyb/./node_modules/node-polyfill-webpack-plugin/node_modules/buffer/index.js","webpack://cyb/./node_modules/nodeify/index.js","webpack://cyb/./node_modules/nodeify/node_modules/promise/index.js","webpack://cyb/./node_modules/number-to-bn/node_modules/bn.js/lib/bn.js","webpack://cyb/./node_modules/number-to-bn/src/index.js","webpack://cyb/./node_modules/object-assign/index.js","webpack://cyb/./node_modules/object-is/implementation.js","webpack://cyb/./node_modules/object-is/index.js","webpack://cyb/./node_modules/object-is/polyfill.js","webpack://cyb/./node_modules/object-is/shim.js","webpack://cyb/./node_modules/object-keys/implementation.js","webpack://cyb/./node_modules/object-keys/index.js","webpack://cyb/./node_modules/object-keys/isArguments.js","webpack://cyb/./node_modules/oboe/dist/oboe-browser.js","webpack://cyb/./node_modules/once/once.js","webpack://cyb/./node_modules/optimism/lib/bundle.esm.js","webpack://cyb/./node_modules/os-browserify/browser.js","webpack://cyb/./node_modules/p-fifo/index.js","webpack://cyb/./node_modules/p-fifo/node_modules/p-defer/index.js","webpack://cyb/./node_modules/p-queue/node_modules/eventemitter3/index.js","webpack://cyb/./node_modules/pako/dist/pako.esm.mjs","webpack://cyb/./node_modules/pako/index.js","webpack://cyb/./node_modules/pako/lib/deflate.js","webpack://cyb/./node_modules/pako/lib/inflate.js","webpack://cyb/./node_modules/pako/lib/utils/common.js","webpack://cyb/./node_modules/pako/lib/utils/strings.js","webpack://cyb/./node_modules/pako/lib/zlib/adler32.js","webpack://cyb/./node_modules/pako/lib/zlib/constants.js","webpack://cyb/./node_modules/pako/lib/zlib/crc32.js","webpack://cyb/./node_modules/pako/lib/zlib/deflate.js","webpack://cyb/./node_modules/pako/lib/zlib/gzheader.js","webpack://cyb/./node_modules/pako/lib/zlib/inffast.js","webpack://cyb/./node_modules/pako/lib/zlib/inflate.js","webpack://cyb/./node_modules/pako/lib/zlib/inftrees.js","webpack://cyb/./node_modules/pako/lib/zlib/messages.js","webpack://cyb/./node_modules/pako/lib/zlib/trees.js","webpack://cyb/./node_modules/pako/lib/zlib/zstream.js","webpack://cyb/./node_modules/parse-asn1/asn1.js","webpack://cyb/./node_modules/parse-asn1/certificate.js","webpack://cyb/./node_modules/parse-asn1/fixProc.js","webpack://cyb/./node_modules/parse-asn1/index.js","webpack://cyb/./node_modules/parse-duration/index.mjs","webpack://cyb/./node_modules/parse-headers/parse-headers.js","webpack://cyb/./node_modules/pbkdf2/browser.js","webpack://cyb/./node_modules/pbkdf2/lib/async.js","webpack://cyb/./node_modules/pbkdf2/lib/default-encoding.js","webpack://cyb/./node_modules/pbkdf2/lib/precondition.js","webpack://cyb/./node_modules/pbkdf2/lib/sync-browser.js","webpack://cyb/./node_modules/pbkdf2/lib/to-buffer.js","webpack://cyb/./node_modules/polished/dist/polished.esm.js","webpack://cyb/./node_modules/process/browser.js","webpack://cyb/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://cyb/./node_modules/prop-types/index.js","webpack://cyb/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://cyb/./node_modules/protobufjs/minimal.js","webpack://cyb/./node_modules/protobufjs/src/index-minimal.js","webpack://cyb/./node_modules/protobufjs/src/reader.js","webpack://cyb/./node_modules/protobufjs/src/reader_buffer.js","webpack://cyb/./node_modules/protobufjs/src/roots.js","webpack://cyb/./node_modules/protobufjs/src/rpc.js","webpack://cyb/./node_modules/protobufjs/src/rpc/service.js","webpack://cyb/./node_modules/protobufjs/src/util/longbits.js","webpack://cyb/./node_modules/protobufjs/src/util/minimal.js","webpack://cyb/./node_modules/protobufjs/src/writer.js","webpack://cyb/./node_modules/protobufjs/src/writer_buffer.js","webpack://cyb/./node_modules/protocol-buffers-schema/index.js","webpack://cyb/./node_modules/protocol-buffers-schema/parse.js","webpack://cyb/./node_modules/protocol-buffers-schema/stringify.js","webpack://cyb/./node_modules/protocol-buffers-schema/tokenize.js","webpack://cyb/./node_modules/protons-runtime/node_modules/protobufjs/src/reader.js","webpack://cyb/./node_modules/protons-runtime/node_modules/protobufjs/src/reader_buffer.js","webpack://cyb/./node_modules/protons-runtime/node_modules/protobufjs/src/util/longbits.js","webpack://cyb/./node_modules/protons-runtime/node_modules/protobufjs/src/util/minimal.js","webpack://cyb/./node_modules/protons-runtime/node_modules/protobufjs/src/writer.js","webpack://cyb/./node_modules/protons-runtime/node_modules/protobufjs/src/writer_buffer.js","webpack://cyb/./node_modules/protons/src/compile/decode.js","webpack://cyb/./node_modules/protons/src/compile/encode.js","webpack://cyb/./node_modules/protons/src/compile/encoding-length.js","webpack://cyb/./node_modules/protons/src/compile/encodings.js","webpack://cyb/./node_modules/protons/src/compile/index.js","webpack://cyb/./node_modules/protons/src/compile/utils.js","webpack://cyb/./node_modules/protons/src/index.js","webpack://cyb/./node_modules/public-encrypt/browser.js","webpack://cyb/./node_modules/public-encrypt/mgf.js","webpack://cyb/./node_modules/public-encrypt/privateDecrypt.js","webpack://cyb/./node_modules/public-encrypt/publicEncrypt.js","webpack://cyb/./node_modules/public-encrypt/withPublic.js","webpack://cyb/./node_modules/public-encrypt/xor.js","webpack://cyb/./node_modules/pump/index.js","webpack://cyb/./node_modules/querystring/decode.js","webpack://cyb/./node_modules/querystring/encode.js","webpack://cyb/./node_modules/querystring/index.js","webpack://cyb/./node_modules/queue-microtask/index.js","webpack://cyb/./node_modules/rabin-wasm/dist/rabin-wasm.js","webpack://cyb/./node_modules/rabin-wasm/src/index.js","webpack://cyb/./node_modules/rabin-wasm/src/rabin.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/@multiformats/multiaddr/dist/src/ip.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/@multiformats/multiaddr/dist/src/convert.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/@multiformats/multiaddr/dist/src/codec.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/@multiformats/multiaddr/dist/src/index.js","webpack://cyb/./node_modules/@multiformats/mafmt/dist/src/index.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/ip.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/convert.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/codec.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/index.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/dist/src/index.js","webpack://cyb/./node_modules/@multiformats/multiaddr/dist/src/ip.js","webpack://cyb/./node_modules/@multiformats/multiaddr/dist/src/convert.js","webpack://cyb/./node_modules/@multiformats/multiaddr/dist/src/codec.js","webpack://cyb/./node_modules/@multiformats/multiaddr/dist/src/index.js","webpack://cyb/./node_modules/@multiformats/multiaddr/dist/src/protocols-table.js","webpack://cyb/./node_modules/@multiformats/multiaddr/dist/src/resolvers/dns.browser.js","webpack://cyb/./node_modules/@multiformats/multiaddr/dist/src/resolvers/index.js","webpack://cyb/./node_modules/@multiformats/murmur3/src/index.js","webpack://cyb/./node_modules/@nftstorage/ipfs-cluster/src/index.js","webpack://cyb/./node_modules/@noble/ed25519/lib/esm/index.js","webpack://cyb/./node_modules/@noble/secp256k1/lib/esm/index.js","webpack://cyb/./node_modules/multiformats/vendor/base-x.js","webpack://cyb/./node_modules/multiformats/src/bases/base.js","webpack://cyb/./node_modules/multiformats/src/bases/base32.js","webpack://cyb/./node_modules/multiformats/src/bases/base36.js","webpack://cyb/./node_modules/multiformats/src/bases/base58.js","webpack://cyb/./node_modules/multiformats/src/bases/base64.js","webpack://cyb/./node_modules/multiformats/src/bases/identity.js","webpack://cyb/./node_modules/multiformats/src/bases/base2.js","webpack://cyb/./node_modules/multiformats/src/bases/base8.js","webpack://cyb/./node_modules/multiformats/src/bases/base10.js","webpack://cyb/./node_modules/multiformats/src/bases/base16.js","webpack://cyb/./node_modules/multiformats/src/bases/base256emoji.js","webpack://cyb/./node_modules/multiformats/src/basics.js","webpack://cyb/./node_modules/multiformats/src/block.js","webpack://cyb/./node_modules/multiformats/src/bytes.js","webpack://cyb/./node_modules/multiformats/src/cid.js","webpack://cyb/./node_modules/multiformats/src/codecs/json.js","webpack://cyb/./node_modules/multiformats/src/codecs/raw.js","webpack://cyb/./node_modules/multiformats/src/hashes/digest.js","webpack://cyb/./node_modules/multiformats/src/hashes/hasher.js","webpack://cyb/./node_modules/multiformats/src/hashes/identity.js","webpack://cyb/./node_modules/multiformats/src/hashes/sha2-browser.js","webpack://cyb/./node_modules/multiformats/src/traversal.js","webpack://cyb/./node_modules/multiformats/vendor/varint.js","webpack://cyb/./node_modules/multiformats/src/varint.js","webpack://cyb/./node_modules/nanoid/index.browser.js","webpack://cyb/./node_modules/observable-webworkers/dist/src/index.js","webpack://cyb/./node_modules/p-defer/index.js","webpack://cyb/./node_modules/p-event/index.js","webpack://cyb/./node_modules/p-queue/dist/priority-queue.js","webpack://cyb/./node_modules/p-queue/dist/lower-bound.js","webpack://cyb/./node_modules/p-queue/dist/index.js","webpack://cyb/./node_modules/p-reflect/index.js","webpack://cyb/./node_modules/p-settle/node_modules/yocto-queue/index.js","webpack://cyb/./node_modules/p-settle/node_modules/p-limit/index.js","webpack://cyb/./node_modules/p-settle/index.js","webpack://cyb/./node_modules/p-timeout/index.js","webpack://cyb/./node_modules/peek-readable/lib/EndOfFileStream.js","webpack://cyb/./node_modules/private-ip/lib/index.js","webpack://cyb/./node_modules/private-ip/index.js","webpack://cyb/./node_modules/property-information/lib/util/schema.js","webpack://cyb/./node_modules/property-information/lib/util/merge.js","webpack://cyb/./node_modules/property-information/lib/util/create.js","webpack://cyb/./node_modules/property-information/lib/xlink.js","webpack://cyb/./node_modules/property-information/lib/xml.js","webpack://cyb/./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://cyb/./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://cyb/./node_modules/property-information/lib/xmlns.js","webpack://cyb/./node_modules/property-information/lib/aria.js","webpack://cyb/./node_modules/property-information/lib/html.js","webpack://cyb/./node_modules/property-information/lib/svg.js","webpack://cyb/./node_modules/property-information/index.js","webpack://cyb/./node_modules/property-information/lib/find.js","webpack://cyb/./node_modules/property-information/lib/hast-to-react.js","webpack://cyb/./node_modules/property-information/lib/normalize.js","webpack://cyb/./node_modules/property-information/lib/util/defined-info.js","webpack://cyb/./node_modules/property-information/lib/util/info.js","webpack://cyb/./node_modules/property-information/lib/util/types.js","webpack://cyb/./node_modules/protons-runtime/dist/src/utils.js","webpack://cyb/./node_modules/protons-runtime/dist/src/decode.js","webpack://cyb/./node_modules/protons-runtime/dist/src/encode.js","webpack://cyb/./node_modules/protons-runtime/dist/src/codec.js","webpack://cyb/./node_modules/protons-runtime/dist/src/codecs/enum.js","webpack://cyb/./node_modules/protons-runtime/dist/src/codecs/message.js"],"sourcesContent":["module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n//# sourceMappingURL=_sha2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig: exports.toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst hmac_js_1 = require(\"./hmac.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    _assert_js_1.default.hash(hash);\n    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    _assert_js_1.default.number(c);\n    _assert_js_1.default.number(dkLen);\n    _assert_js_1.default.number(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = (0, utils_js_1.toBytes)(_password);\n    const salt = (0, utils_js_1.toBytes)(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac_js_1.hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nfunction pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2 = pbkdf2;\nasync function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, (i) => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2Async = pbkdf2Async;\n//# sourceMappingURL=pbkdf2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ripemd160 = exports.RIPEMD160 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = new Uint32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst Kr = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = new Uint32Array(16);\nclass RIPEMD160 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\nexports.RIPEMD160 = RIPEMD160;\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexports.ripemd160 = (0, utils_js_1.wrapConstructor)(() => new RIPEMD160());\n//# sourceMappingURL=ripemd160.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha224 = exports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\nexports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = _u64_js_1.default.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBH(h, l, s) : _u64_js_1.default.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBL(h, l, s) : _u64_js_1.default.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        _assert_js_1.default.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        _assert_js_1.default.exists(this, false);\n        _assert_js_1.default.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        _assert_js_1.default.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        _assert_js_1.default.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512_224 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_224 = (0, utils_js_1.wrapConstructor)(() => new SHA512_224());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\nexports.randomBytes = randomBytes;\n//# sourceMappingURL=utils.js.map","export default function getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}","import getWindow from \"./getWindow.js\";\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nexport { isElement, isHTMLElement, isShadowRoot };","export var max = Math.max;\nexport var min = Math.min;\nexport var round = Math.round;","export default function getUAString() {\n  var uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(function (item) {\n      return item.brand + \"/\" + item.version;\n    }).join(' ');\n  }\n\n  return navigator.userAgent;\n}","import getUAString from \"../utils/userAgent.js\";\nexport default function isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}","import { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport { round } from \"../utils/math.js\";\nimport getWindow from \"./getWindow.js\";\nimport isLayoutViewport from \"./isLayoutViewport.js\";\nexport default function getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  var clientRect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  var _ref = isElement(element) ? getWindow(element) : window,\n      visualViewport = _ref.visualViewport;\n\n  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n  var width = clientRect.width / scaleX;\n  var height = clientRect.height / scaleY;\n  return {\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x: x,\n    y: y\n  };\n}","import getWindow from \"./getWindow.js\";\nexport default function getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}","export default function getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}","import { isElement } from \"./instanceOf.js\";\nexport default function getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nexport default function getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}","import getWindow from \"./getWindow.js\";\nexport default function getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}","import getComputedStyle from \"./getComputedStyle.js\";\nexport default function isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport { round } from \"../utils/math.js\";\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}","import getWindowScroll from \"./getWindowScroll.js\";\nimport getWindow from \"./getWindow.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getHTMLElementScroll from \"./getHTMLElementScroll.js\";\nexport default function getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}","export default function getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}","import getNodeName from \"./getNodeName.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport { isShadowRoot } from \"./instanceOf.js\";\nexport default function getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}","import getParentNode from \"./getParentNode.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nexport default function getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}","import getScrollParent from \"./getScrollParent.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getWindow from \"./getWindow.js\";\nimport isScrollParent from \"./isScrollParent.js\";\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nexport default function listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}","import getNodeName from \"./getNodeName.js\";\nexport default function isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}","import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement, isShadowRoot } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getUAString from \"../utils/userAgent.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = /firefox/i.test(getUAString());\n  var isIE = /Trident/i.test(getUAString());\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}","export var top = 'top';\nexport var bottom = 'bottom';\nexport var right = 'right';\nexport var left = 'left';\nexport var auto = 'auto';\nexport var basePlacements = [top, bottom, right, left];\nexport var start = 'start';\nexport var end = 'end';\nexport var clippingParents = 'clippingParents';\nexport var viewport = 'viewport';\nexport var popper = 'popper';\nexport var reference = 'reference';\nexport var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nexport var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nexport var beforeRead = 'beforeRead';\nexport var read = 'read';\nexport var afterRead = 'afterRead'; // pure-logic modifiers\n\nexport var beforeMain = 'beforeMain';\nexport var main = 'main';\nexport var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nexport var beforeWrite = 'beforeWrite';\nexport var write = 'write';\nexport var afterWrite = 'afterWrite';\nexport var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];","import { modifierPhases } from \"../enums.js\"; // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nexport default function orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}","import getCompositeRect from \"./dom-utils/getCompositeRect.js\";\nimport getLayoutRect from \"./dom-utils/getLayoutRect.js\";\nimport listScrollParents from \"./dom-utils/listScrollParents.js\";\nimport getOffsetParent from \"./dom-utils/getOffsetParent.js\";\nimport getComputedStyle from \"./dom-utils/getComputedStyle.js\";\nimport orderModifiers from \"./utils/orderModifiers.js\";\nimport debounce from \"./utils/debounce.js\";\nimport validateModifiers from \"./utils/validateModifiers.js\";\nimport uniqueBy from \"./utils/uniqueBy.js\";\nimport getBasePlacement from \"./utils/getBasePlacement.js\";\nimport mergeByName from \"./utils/mergeByName.js\";\nimport detectOverflow from \"./utils/detectOverflow.js\";\nimport { isElement } from \"./dom-utils/instanceOf.js\";\nimport { auto } from \"./enums.js\";\nvar INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';\nvar INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nexport function popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        }); // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n\n        if (process.env.NODE_ENV !== \"production\") {\n          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref) {\n            var name = _ref.name;\n            return name;\n          });\n          validateModifiers(modifiers);\n\n          if (getBasePlacement(state.options.placement) === auto) {\n            var flipModifier = state.orderedModifiers.find(function (_ref2) {\n              var name = _ref2.name;\n              return name === 'flip';\n            });\n\n            if (!flipModifier) {\n              console.error(['Popper: \"auto\" placements require the \"flip\" modifier be', 'present and enabled to work.'].join(' '));\n            }\n          }\n\n          var _getComputedStyle = getComputedStyle(popper),\n              marginTop = _getComputedStyle.marginTop,\n              marginRight = _getComputedStyle.marginRight,\n              marginBottom = _getComputedStyle.marginBottom,\n              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can\n          // cause bugs with positioning, so we'll warn the consumer\n\n\n          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {\n            return parseFloat(margin);\n          })) {\n            console.warn(['Popper: CSS \"margin\" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));\n          }\n        }\n\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(INVALID_ELEMENT_ERROR);\n          }\n\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n        var __debug_loops__ = 0;\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (process.env.NODE_ENV !== \"production\") {\n            __debug_loops__ += 1;\n\n            if (__debug_loops__ > 100) {\n              console.error(INFINITE_LOOP_ERROR);\n              break;\n            }\n          }\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(INVALID_ELEMENT_ERROR);\n      }\n\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref3) {\n        var name = _ref3.name,\n            _ref3$options = _ref3.options,\n            options = _ref3$options === void 0 ? {} : _ref3$options,\n            effect = _ref3.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nexport var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\nexport { detectOverflow };","export default function debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}","export default function mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}","import getWindow from \"../dom-utils/getWindow.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n};","import { auto } from \"../enums.js\";\nexport default function getBasePlacement(placement) {\n  return placement.split('-')[0];\n}","export default function getVariation(placement) {\n  return placement.split('-')[1];\n}","export default function getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}","import getBasePlacement from \"./getBasePlacement.js\";\nimport getVariation from \"./getVariation.js\";\nimport getMainAxisFromPlacement from \"./getMainAxisFromPlacement.js\";\nimport { top, right, bottom, left, start, end } from \"../enums.js\";\nexport default function computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}","import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};","import { top, left, right, bottom, end } from \"../enums.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getWindow from \"../dom-utils/getWindow.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getComputedStyle from \"../dom-utils/getComputedStyle.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport { round } from \"../utils/math.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref, win) {\n  var x = _ref.x,\n      y = _ref.y;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0\n  };\n}\n\nexport function mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === top || (placement === left || placement === right) && variation === end) {\n      sideY = bottom;\n      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left || (placement === top || placement === bottom) && variation === end) {\n      sideX = right;\n      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }, getWindow(popper)) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || '';\n\n    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {\n      return transitionProperty.indexOf(property) >= 0;\n    })) {\n      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".', '\\n\\n', 'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\\n\\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));\n    }\n  }\n\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { top, left, right, placements } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};","var hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nexport default function getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}","var hash = {\n  start: 'end',\n  end: 'start'\n};\nexport default function getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}","import { isShadowRoot } from \"./instanceOf.js\";\nexport default function contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}","export default function rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}","import { viewport } from \"../enums.js\";\nimport getViewportRect from \"./getViewportRect.js\";\nimport getDocumentRect from \"./getDocumentRect.js\";\nimport listScrollParents from \"./listScrollParents.js\";\nimport getOffsetParent from \"./getOffsetParent.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport contains from \"./contains.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport rectToClientRect from \"../utils/rectToClientRect.js\";\nimport { max, min } from \"../utils/math.js\";\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  var rect = getBoundingClientRect(element, false, strategy === 'fixed');\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent, strategy) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nexport default function getClippingRect(element, boundary, rootBoundary, strategy) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}","import getWindow from \"./getWindow.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport isLayoutViewport from \"./isLayoutViewport.js\";\nexport default function getViewportRect(element, strategy) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    var layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}","import getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nimport { max } from \"../utils/math.js\"; // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nexport default function getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}","import getFreshSideObject from \"./getFreshSideObject.js\";\nexport default function mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}","export default function getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}","export default function expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}","import getClippingRect from \"../dom-utils/getClippingRect.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getBoundingClientRect from \"../dom-utils/getBoundingClientRect.js\";\nimport computeOffsets from \"./computeOffsets.js\";\nimport rectToClientRect from \"./rectToClientRect.js\";\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from \"../enums.js\";\nimport { isElement } from \"../dom-utils/instanceOf.js\";\nimport mergePaddingObject from \"./mergePaddingObject.js\";\nimport expandToHashMap from \"./expandToHashMap.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport default function detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$strategy = _options.strategy,\n      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}","import { max as mathMax, min as mathMin } from \"./math.js\";\nexport function within(min, value, max) {\n  return mathMax(min, mathMin(value, max));\n}\nexport function withinMaxClamp(min, value, max) {\n  var v = within(min, value, max);\n  return v > max ? max : v;\n}","import { top, left, right, bottom, start } from \"../enums.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport getAltAxis from \"../utils/getAltAxis.js\";\nimport { within, withinMaxClamp } from \"../utils/within.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport getFreshSideObject from \"../utils/getFreshSideObject.js\";\nimport { min as mathMin, max as mathMax } from \"../utils/math.js\";\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = offset + overflow[mainSide];\n    var max = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? mathMin(min, tetherMin) : min, offset, tether ? mathMax(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n\n    var _mainSide = mainAxis === 'x' ? top : left;\n\n    var _altSide = mainAxis === 'x' ? bottom : right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _len = altAxis === 'y' ? 'height' : 'width';\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;\n\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};","export default function getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport contains from \"../dom-utils/contains.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport { within } from \"../utils/within.js\";\nimport mergePaddingObject from \"../utils/mergePaddingObject.js\";\nimport expandToHashMap from \"../utils/expandToHashMap.js\";\nimport { left, right, basePlacements, top, bottom } from \"../enums.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!isHTMLElement(arrowElement)) {\n      console.error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '));\n    }\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};","import { top, bottom, left, right } from \"../enums.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};","import { popperGenerator, detectOverflow } from \"./createPopper.js\";\nimport eventListeners from \"./modifiers/eventListeners.js\";\nimport popperOffsets from \"./modifiers/popperOffsets.js\";\nimport computeStyles from \"./modifiers/computeStyles.js\";\nimport applyStyles from \"./modifiers/applyStyles.js\";\nimport offset from \"./modifiers/offset.js\";\nimport flip from \"./modifiers/flip.js\";\nimport preventOverflow from \"./modifiers/preventOverflow.js\";\nimport arrow from \"./modifiers/arrow.js\";\nimport hide from \"./modifiers/hide.js\";\nvar defaultModifiers = [eventListeners, popperOffsets, computeStyles, applyStyles, offset, flip, preventOverflow, arrow, hide];\nvar createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow }; // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper as createPopperLite } from \"./popper-lite.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport * from \"./modifiers/index.js\";","import getNodeName from \"../dom-utils/getNodeName.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n};","import getOppositePlacement from \"../utils/getOppositePlacement.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getOppositeVariationPlacement from \"../utils/getOppositeVariationPlacement.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport computeAutoPlacement from \"../utils/computeAutoPlacement.js\";\nimport { bottom, top, start, right, left, auto } from \"../enums.js\";\nimport getVariation from \"../utils/getVariation.js\"; // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};","import getVariation from \"./getVariation.js\";\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\nimport detectOverflow from \"./detectOverflow.js\";\nimport getBasePlacement from \"./getBasePlacement.js\";\nexport default function computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(' '));\n    }\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","'use strict'\n\nclass Base {\n  constructor (name, code, implementation, alphabet) {\n    this.name = name\n    this.code = code\n    this.alphabet = alphabet\n    if (implementation && alphabet) {\n      this.engine = implementation(alphabet)\n    }\n  }\n\n  encode (stringOrBuffer) {\n    return this.engine.encode(stringOrBuffer)\n  }\n\n  decode (stringOrBuffer) {\n    return this.engine.decode(stringOrBuffer)\n  }\n\n  isImplemented () {\n    return this.engine\n  }\n}\n\nmodule.exports = Base\n","'use strict'\nconst { Buffer } = require('buffer')\n\nmodule.exports = function base16 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return Buffer.from(input).toString('hex')\n      }\n      return input.toString('hex')\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base16 character')\n        }\n      }\n      return Buffer.from(input, 'hex')\n    }\n  }\n}\n","'use strict'\n\nfunction decode (input, alphabet) {\n  input = input.replace(new RegExp('=', 'g'), '')\n  const length = input.length\n\n  let bits = 0\n  let value = 0\n\n  let index = 0\n  const output = new Uint8Array((length * 5 / 8) | 0)\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 5) | alphabet.indexOf(input[i])\n    bits += 5\n\n    if (bits >= 8) {\n      output[index++] = (value >>> (bits - 8)) & 255\n      bits -= 8\n    }\n  }\n\n  return output.buffer\n}\n\nfunction encode (buffer, alphabet) {\n  const length = buffer.byteLength\n  const view = new Uint8Array(buffer)\n  const padding = alphabet.indexOf('=') === alphabet.length - 1\n\n  if (padding) {\n    alphabet = alphabet.substring(0, alphabet.length - 1)\n  }\n\n  let bits = 0\n  let value = 0\n  let output = ''\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 8) | view[i]\n    bits += 8\n\n    while (bits >= 5) {\n      output += alphabet[(value >>> (bits - 5)) & 31]\n      bits -= 5\n    }\n  }\n\n  if (bits > 0) {\n    output += alphabet[(value << (5 - bits)) & 31]\n  }\n\n  if (padding) {\n    while ((output.length % 8) !== 0) {\n      output += '='\n    }\n  }\n\n  return output\n}\n\nmodule.exports = function base32 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return encode(Uint8Array.from(input), alphabet)\n      }\n\n      return encode(input, alphabet)\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base32 character')\n        }\n      }\n\n      return decode(input, alphabet)\n    }\n  }\n}\n","'use strict'\nconst { Buffer } = require('buffer')\n\nmodule.exports = function base64 (alphabet) {\n  // The alphabet is only used to know:\n  //   1. If padding is enabled (must contain '=')\n  //   2. If the output must be url-safe (must contain '-' and '_')\n  //   3. If the input of the output function is valid\n  // The alphabets from RFC 4648 are always used.\n  const padding = alphabet.indexOf('=') > -1\n  const url = alphabet.indexOf('-') > -1 && alphabet.indexOf('_') > -1\n\n  return {\n    encode (input) {\n      let output = ''\n\n      if (typeof input === 'string') {\n        output = Buffer.from(input).toString('base64')\n      } else {\n        output = input.toString('base64')\n      }\n\n      if (url) {\n        output = output.replace(/\\+/g, '-').replace(/\\//g, '_')\n      }\n\n      const pad = output.indexOf('=')\n      if (pad > 0 && !padding) {\n        output = output.substring(0, pad)\n      }\n\n      return output\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base64 character')\n        }\n      }\n\n      return Buffer.from(input, 'base64')\n    }\n  }\n}\n","'use strict'\n\nconst Base = require('./base.js')\nconst baseX = require('base-x')\nconst base16 = require('./base16')\nconst base32 = require('./base32')\nconst base64 = require('./base64')\n\n// name, code, implementation, alphabet\nconst constants = [\n  ['base1', '1', '', '1'],\n  ['base2', '0', baseX, '01'],\n  ['base8', '7', baseX, '01234567'],\n  ['base10', '9', baseX, '0123456789'],\n  ['base16', 'f', base16, '0123456789abcdef'],\n  ['base32', 'b', base32, 'abcdefghijklmnopqrstuvwxyz234567'],\n  ['base32pad', 'c', base32, 'abcdefghijklmnopqrstuvwxyz234567='],\n  ['base32hex', 'v', base32, '0123456789abcdefghijklmnopqrstuv'],\n  ['base32hexpad', 't', base32, '0123456789abcdefghijklmnopqrstuv='],\n  ['base32z', 'h', base32, 'ybndrfg8ejkmcpqxot1uwisza345h769'],\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\n  ['base64', 'm', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\n  ['base64pad', 'M', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\n  ['base64url', 'u', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\n  ['base64urlpad', 'U', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\n]\n\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\n  return prev\n}, {})\n\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]]\n  return prev\n}, {})\n\nmodule.exports = {\n  names: names,\n  codes: codes\n}\n","/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n * @module Multibase\n */\n'use strict'\n\nconst { Buffer } = require('buffer')\nconst constants = require('./constants')\n\nexports = module.exports = multibase\nexports.encode = encode\nexports.decode = decode\nexports.isEncoded = isEncoded\nexports.names = Object.freeze(Object.keys(constants.names))\nexports.codes = Object.freeze(Object.keys(constants.codes))\n\nconst errNotSupported = new Error('Unsupported encoding')\n\n/**\n * Create a new buffer with the multibase varint+code.\n *\n * @param {string|number} nameOrCode - The multibase name or code number.\n * @param {Buffer} buf - The data to be prefixed with multibase.\n * @memberof Multibase\n * @returns {Buffer}\n */\nfunction multibase (nameOrCode, buf) {\n  if (!buf) {\n    throw new Error('requires an encoded buffer')\n  }\n  const base = getBase(nameOrCode)\n  const codeBuf = Buffer.from(base.code)\n\n  const name = base.name\n  validEncode(name, buf)\n  return Buffer.concat([codeBuf, buf])\n}\n\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {string|number} nameOrCode - The multibase name or code number.\n * @param {Buffer} buf - The data to be encoded.\n * @returns {Buffer}\n * @memberof Multibase\n */\nfunction encode (nameOrCode, buf) {\n  const base = getBase(nameOrCode)\n  const name = base.name\n\n  return multibase(name, Buffer.from(base.encode(buf)))\n}\n\n/**\n * Takes a buffer or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Buffer|string} bufOrString\n * @returns {Buffer}\n * @memberof Multibase\n *\n */\nfunction decode (bufOrString) {\n  if (Buffer.isBuffer(bufOrString)) {\n    bufOrString = bufOrString.toString()\n  }\n\n  const code = bufOrString.substring(0, 1)\n  bufOrString = bufOrString.substring(1, bufOrString.length)\n\n  if (typeof bufOrString === 'string') {\n    bufOrString = Buffer.from(bufOrString)\n  }\n\n  const base = getBase(code)\n  return Buffer.from(base.decode(bufOrString.toString()))\n}\n\n/**\n * Is the given data multibase encoded?\n *\n * @param {Buffer|string} bufOrString\n * @returns {boolean}\n * @memberof Multibase\n */\nfunction isEncoded (bufOrString) {\n  if (Buffer.isBuffer(bufOrString)) {\n    bufOrString = bufOrString.toString()\n  }\n\n  // Ensure bufOrString is a string\n  if (Object.prototype.toString.call(bufOrString) !== '[object String]') {\n    return false\n  }\n\n  const code = bufOrString.substring(0, 1)\n  try {\n    const base = getBase(code)\n    return base.name\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * @param {string} name\n * @param {Buffer} buf\n * @private\n * @returns {undefined}\n */\nfunction validEncode (name, buf) {\n  const base = getBase(name)\n  base.decode(buf.toString())\n}\n\nfunction getBase (nameOrCode) {\n  let base\n\n  if (constants.names[nameOrCode]) {\n    base = constants.names[nameOrCode]\n  } else if (constants.codes[nameOrCode]) {\n    base = constants.codes[nameOrCode]\n  } else {\n    throw errNotSupported\n  }\n\n  if (!base.isImplemented()) {\n    throw new Error('Base ' + nameOrCode + ' is not implemented yet')\n  }\n\n  return base\n}\n","'use strict'\n\nclass Base {\n  constructor (name, code, implementation, alphabet) {\n    this.name = name\n    this.code = code\n    this.alphabet = alphabet\n    if (implementation && alphabet) {\n      this.engine = implementation(alphabet)\n    }\n  }\n\n  encode (stringOrBuffer) {\n    return this.engine.encode(stringOrBuffer)\n  }\n\n  decode (stringOrBuffer) {\n    return this.engine.decode(stringOrBuffer)\n  }\n\n  isImplemented () {\n    return this.engine\n  }\n}\n\nmodule.exports = Base\n","'use strict'\nconst { Buffer } = require('buffer')\n\nmodule.exports = function base16 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return Buffer.from(input).toString('hex')\n      }\n      return input.toString('hex')\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base16 character')\n        }\n      }\n      return Buffer.from(input, 'hex')\n    }\n  }\n}\n","'use strict'\n\nfunction decode (input, alphabet) {\n  input = input.replace(new RegExp('=', 'g'), '')\n  const length = input.length\n\n  let bits = 0\n  let value = 0\n\n  let index = 0\n  const output = new Uint8Array((length * 5 / 8) | 0)\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 5) | alphabet.indexOf(input[i])\n    bits += 5\n\n    if (bits >= 8) {\n      output[index++] = (value >>> (bits - 8)) & 255\n      bits -= 8\n    }\n  }\n\n  return output.buffer\n}\n\nfunction encode (buffer, alphabet) {\n  const length = buffer.byteLength\n  const view = new Uint8Array(buffer)\n  const padding = alphabet.indexOf('=') === alphabet.length - 1\n\n  if (padding) {\n    alphabet = alphabet.substring(0, alphabet.length - 1)\n  }\n\n  let bits = 0\n  let value = 0\n  let output = ''\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 8) | view[i]\n    bits += 8\n\n    while (bits >= 5) {\n      output += alphabet[(value >>> (bits - 5)) & 31]\n      bits -= 5\n    }\n  }\n\n  if (bits > 0) {\n    output += alphabet[(value << (5 - bits)) & 31]\n  }\n\n  if (padding) {\n    while ((output.length % 8) !== 0) {\n      output += '='\n    }\n  }\n\n  return output\n}\n\nmodule.exports = function base32 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return encode(Uint8Array.from(input), alphabet)\n      }\n\n      return encode(input, alphabet)\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base32 character')\n        }\n      }\n\n      return decode(input, alphabet)\n    }\n  }\n}\n","'use strict'\nconst { Buffer } = require('buffer')\n\nmodule.exports = function base64 (alphabet) {\n  // The alphabet is only used to know:\n  //   1. If padding is enabled (must contain '=')\n  //   2. If the output must be url-safe (must contain '-' and '_')\n  //   3. If the input of the output function is valid\n  // The alphabets from RFC 4648 are always used.\n  const padding = alphabet.indexOf('=') > -1\n  const url = alphabet.indexOf('-') > -1 && alphabet.indexOf('_') > -1\n\n  return {\n    encode (input) {\n      let output = ''\n\n      if (typeof input === 'string') {\n        output = Buffer.from(input).toString('base64')\n      } else {\n        output = input.toString('base64')\n      }\n\n      if (url) {\n        output = output.replace(/\\+/g, '-').replace(/\\//g, '_')\n      }\n\n      const pad = output.indexOf('=')\n      if (pad > 0 && !padding) {\n        output = output.substring(0, pad)\n      }\n\n      return output\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base64 character')\n        }\n      }\n\n      return Buffer.from(input, 'base64')\n    }\n  }\n}\n","'use strict'\n\nconst Base = require('./base.js')\nconst baseX = require('base-x')\nconst base16 = require('./base16')\nconst base32 = require('./base32')\nconst base64 = require('./base64')\n\n// name, code, implementation, alphabet\nconst constants = [\n  ['base1', '1', '', '1'],\n  ['base2', '0', baseX, '01'],\n  ['base8', '7', baseX, '01234567'],\n  ['base10', '9', baseX, '0123456789'],\n  ['base16', 'f', base16, '0123456789abcdef'],\n  ['base32', 'b', base32, 'abcdefghijklmnopqrstuvwxyz234567'],\n  ['base32pad', 'c', base32, 'abcdefghijklmnopqrstuvwxyz234567='],\n  ['base32hex', 'v', base32, '0123456789abcdefghijklmnopqrstuv'],\n  ['base32hexpad', 't', base32, '0123456789abcdefghijklmnopqrstuv='],\n  ['base32z', 'h', base32, 'ybndrfg8ejkmcpqxot1uwisza345h769'],\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\n  ['base64', 'm', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\n  ['base64pad', 'M', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\n  ['base64url', 'u', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\n  ['base64urlpad', 'U', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\n]\n\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\n  return prev\n}, {})\n\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]]\n  return prev\n}, {})\n\nmodule.exports = {\n  names: names,\n  codes: codes\n}\n","/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n * @module Multibase\n */\n'use strict'\n\nconst { Buffer } = require('buffer')\nconst constants = require('./constants')\n\nexports = module.exports = multibase\nexports.encode = encode\nexports.decode = decode\nexports.isEncoded = isEncoded\nexports.names = Object.freeze(Object.keys(constants.names))\nexports.codes = Object.freeze(Object.keys(constants.codes))\n\n/**\n * Create a new buffer with the multibase varint+code.\n *\n * @param {string|number} nameOrCode - The multibase name or code number.\n * @param {Buffer} buf - The data to be prefixed with multibase.\n * @memberof Multibase\n * @returns {Buffer}\n */\nfunction multibase (nameOrCode, buf) {\n  if (!buf) {\n    throw new Error('requires an encoded buffer')\n  }\n  const base = getBase(nameOrCode)\n  const codeBuf = Buffer.from(base.code)\n\n  const name = base.name\n  validEncode(name, buf)\n  return Buffer.concat([codeBuf, buf])\n}\n\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {string|number} nameOrCode - The multibase name or code number.\n * @param {Buffer} buf - The data to be encoded.\n * @returns {Buffer}\n * @memberof Multibase\n */\nfunction encode (nameOrCode, buf) {\n  const base = getBase(nameOrCode)\n  const name = base.name\n\n  return multibase(name, Buffer.from(base.encode(buf)))\n}\n\n/**\n * Takes a buffer or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Buffer|string} bufOrString\n * @returns {Buffer}\n * @memberof Multibase\n *\n */\nfunction decode (bufOrString) {\n  if (Buffer.isBuffer(bufOrString)) {\n    bufOrString = bufOrString.toString()\n  }\n\n  const code = bufOrString.substring(0, 1)\n  bufOrString = bufOrString.substring(1, bufOrString.length)\n\n  if (typeof bufOrString === 'string') {\n    bufOrString = Buffer.from(bufOrString)\n  }\n\n  const base = getBase(code)\n  return Buffer.from(base.decode(bufOrString.toString()))\n}\n\n/**\n * Is the given data multibase encoded?\n *\n * @param {Buffer|string} bufOrString\n * @returns {boolean}\n * @memberof Multibase\n */\nfunction isEncoded (bufOrString) {\n  if (Buffer.isBuffer(bufOrString)) {\n    bufOrString = bufOrString.toString()\n  }\n\n  // Ensure bufOrString is a string\n  if (Object.prototype.toString.call(bufOrString) !== '[object String]') {\n    return false\n  }\n\n  const code = bufOrString.substring(0, 1)\n  try {\n    const base = getBase(code)\n    return base.name\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * @param {string} name\n * @param {Buffer} buf\n * @private\n * @returns {undefined}\n */\nfunction validEncode (name, buf) {\n  const base = getBase(name)\n  base.decode(buf.toString())\n}\n\nfunction getBase (nameOrCode) {\n  let base\n\n  if (constants.names[nameOrCode]) {\n    base = constants.names[nameOrCode]\n  } else if (constants.codes[nameOrCode]) {\n    base = constants.codes[nameOrCode]\n  } else {\n    throw new Error('Unsupported encoding')\n  }\n\n  if (!base.isImplemented()) {\n    throw new Error('Base ' + nameOrCode + ' is not implemented yet')\n  }\n\n  return base\n}\n","/* eslint quote-props: off */\n/* eslint key-spacing: off */\n'use strict'\n\nexports.names = Object.freeze({\n  'identity':   0x0,\n  'sha1':       0x11,\n  'sha2-256':   0x12,\n  'sha2-512':   0x13,\n  'dbl-sha2-256': 0x56,\n  'sha3-224':   0x17,\n  'sha3-256':   0x16,\n  'sha3-384':   0x15,\n  'sha3-512':   0x14,\n  'shake-128':  0x18,\n  'shake-256':  0x19,\n  'keccak-224': 0x1A,\n  'keccak-256': 0x1B,\n  'keccak-384': 0x1C,\n  'keccak-512': 0x1D,\n  'murmur3-128': 0x22,\n  'murmur3-32':  0x23,\n  'md4':         0xd4,\n  'md5':         0xd5,\n  'blake2b-8':   0xb201,\n  'blake2b-16':  0xb202,\n  'blake2b-24':  0xb203,\n  'blake2b-32':  0xb204,\n  'blake2b-40':  0xb205,\n  'blake2b-48':  0xb206,\n  'blake2b-56':  0xb207,\n  'blake2b-64':  0xb208,\n  'blake2b-72':  0xb209,\n  'blake2b-80':  0xb20a,\n  'blake2b-88':  0xb20b,\n  'blake2b-96':  0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8':   0xb241,\n  'blake2s-16':  0xb242,\n  'blake2s-24':  0xb243,\n  'blake2s-32':  0xb244,\n  'blake2s-40':  0xb245,\n  'blake2s-48':  0xb246,\n  'blake2s-56':  0xb247,\n  'blake2s-64':  0xb248,\n  'blake2s-72':  0xb249,\n  'blake2s-80':  0xb24a,\n  'blake2s-88':  0xb24b,\n  'blake2s-96':  0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'Skein256-8': 0xb301,\n  'Skein256-16': 0xb302,\n  'Skein256-24': 0xb303,\n  'Skein256-32': 0xb304,\n  'Skein256-40': 0xb305,\n  'Skein256-48': 0xb306,\n  'Skein256-56': 0xb307,\n  'Skein256-64': 0xb308,\n  'Skein256-72': 0xb309,\n  'Skein256-80': 0xb30a,\n  'Skein256-88': 0xb30b,\n  'Skein256-96': 0xb30c,\n  'Skein256-104': 0xb30d,\n  'Skein256-112': 0xb30e,\n  'Skein256-120': 0xb30f,\n  'Skein256-128': 0xb310,\n  'Skein256-136': 0xb311,\n  'Skein256-144': 0xb312,\n  'Skein256-152': 0xb313,\n  'Skein256-160': 0xb314,\n  'Skein256-168': 0xb315,\n  'Skein256-176': 0xb316,\n  'Skein256-184': 0xb317,\n  'Skein256-192': 0xb318,\n  'Skein256-200': 0xb319,\n  'Skein256-208': 0xb31a,\n  'Skein256-216': 0xb31b,\n  'Skein256-224': 0xb31c,\n  'Skein256-232': 0xb31d,\n  'Skein256-240': 0xb31e,\n  'Skein256-248': 0xb31f,\n  'Skein256-256': 0xb320,\n  'Skein512-8': 0xb321,\n  'Skein512-16': 0xb322,\n  'Skein512-24': 0xb323,\n  'Skein512-32': 0xb324,\n  'Skein512-40': 0xb325,\n  'Skein512-48': 0xb326,\n  'Skein512-56': 0xb327,\n  'Skein512-64': 0xb328,\n  'Skein512-72': 0xb329,\n  'Skein512-80': 0xb32a,\n  'Skein512-88': 0xb32b,\n  'Skein512-96': 0xb32c,\n  'Skein512-104': 0xb32d,\n  'Skein512-112': 0xb32e,\n  'Skein512-120': 0xb32f,\n  'Skein512-128': 0xb330,\n  'Skein512-136': 0xb331,\n  'Skein512-144': 0xb332,\n  'Skein512-152': 0xb333,\n  'Skein512-160': 0xb334,\n  'Skein512-168': 0xb335,\n  'Skein512-176': 0xb336,\n  'Skein512-184': 0xb337,\n  'Skein512-192': 0xb338,\n  'Skein512-200': 0xb339,\n  'Skein512-208': 0xb33a,\n  'Skein512-216': 0xb33b,\n  'Skein512-224': 0xb33c,\n  'Skein512-232': 0xb33d,\n  'Skein512-240': 0xb33e,\n  'Skein512-248': 0xb33f,\n  'Skein512-256': 0xb340,\n  'Skein512-264': 0xb341,\n  'Skein512-272': 0xb342,\n  'Skein512-280': 0xb343,\n  'Skein512-288': 0xb344,\n  'Skein512-296': 0xb345,\n  'Skein512-304': 0xb346,\n  'Skein512-312': 0xb347,\n  'Skein512-320': 0xb348,\n  'Skein512-328': 0xb349,\n  'Skein512-336': 0xb34a,\n  'Skein512-344': 0xb34b,\n  'Skein512-352': 0xb34c,\n  'Skein512-360': 0xb34d,\n  'Skein512-368': 0xb34e,\n  'Skein512-376': 0xb34f,\n  'Skein512-384': 0xb350,\n  'Skein512-392': 0xb351,\n  'Skein512-400': 0xb352,\n  'Skein512-408': 0xb353,\n  'Skein512-416': 0xb354,\n  'Skein512-424': 0xb355,\n  'Skein512-432': 0xb356,\n  'Skein512-440': 0xb357,\n  'Skein512-448': 0xb358,\n  'Skein512-456': 0xb359,\n  'Skein512-464': 0xb35a,\n  'Skein512-472': 0xb35b,\n  'Skein512-480': 0xb35c,\n  'Skein512-488': 0xb35d,\n  'Skein512-496': 0xb35e,\n  'Skein512-504': 0xb35f,\n  'Skein512-512': 0xb360,\n  'Skein1024-8': 0xb361,\n  'Skein1024-16': 0xb362,\n  'Skein1024-24': 0xb363,\n  'Skein1024-32': 0xb364,\n  'Skein1024-40': 0xb365,\n  'Skein1024-48': 0xb366,\n  'Skein1024-56': 0xb367,\n  'Skein1024-64': 0xb368,\n  'Skein1024-72': 0xb369,\n  'Skein1024-80': 0xb36a,\n  'Skein1024-88': 0xb36b,\n  'Skein1024-96': 0xb36c,\n  'Skein1024-104': 0xb36d,\n  'Skein1024-112': 0xb36e,\n  'Skein1024-120': 0xb36f,\n  'Skein1024-128': 0xb370,\n  'Skein1024-136': 0xb371,\n  'Skein1024-144': 0xb372,\n  'Skein1024-152': 0xb373,\n  'Skein1024-160': 0xb374,\n  'Skein1024-168': 0xb375,\n  'Skein1024-176': 0xb376,\n  'Skein1024-184': 0xb377,\n  'Skein1024-192': 0xb378,\n  'Skein1024-200': 0xb379,\n  'Skein1024-208': 0xb37a,\n  'Skein1024-216': 0xb37b,\n  'Skein1024-224': 0xb37c,\n  'Skein1024-232': 0xb37d,\n  'Skein1024-240': 0xb37e,\n  'Skein1024-248': 0xb37f,\n  'Skein1024-256': 0xb380,\n  'Skein1024-264': 0xb381,\n  'Skein1024-272': 0xb382,\n  'Skein1024-280': 0xb383,\n  'Skein1024-288': 0xb384,\n  'Skein1024-296': 0xb385,\n  'Skein1024-304': 0xb386,\n  'Skein1024-312': 0xb387,\n  'Skein1024-320': 0xb388,\n  'Skein1024-328': 0xb389,\n  'Skein1024-336': 0xb38a,\n  'Skein1024-344': 0xb38b,\n  'Skein1024-352': 0xb38c,\n  'Skein1024-360': 0xb38d,\n  'Skein1024-368': 0xb38e,\n  'Skein1024-376': 0xb38f,\n  'Skein1024-384': 0xb390,\n  'Skein1024-392': 0xb391,\n  'Skein1024-400': 0xb392,\n  'Skein1024-408': 0xb393,\n  'Skein1024-416': 0xb394,\n  'Skein1024-424': 0xb395,\n  'Skein1024-432': 0xb396,\n  'Skein1024-440': 0xb397,\n  'Skein1024-448': 0xb398,\n  'Skein1024-456': 0xb399,\n  'Skein1024-464': 0xb39a,\n  'Skein1024-472': 0xb39b,\n  'Skein1024-480': 0xb39c,\n  'Skein1024-488': 0xb39d,\n  'Skein1024-496': 0xb39e,\n  'Skein1024-504': 0xb39f,\n  'Skein1024-512': 0xb3a0,\n  'Skein1024-520': 0xb3a1,\n  'Skein1024-528': 0xb3a2,\n  'Skein1024-536': 0xb3a3,\n  'Skein1024-544': 0xb3a4,\n  'Skein1024-552': 0xb3a5,\n  'Skein1024-560': 0xb3a6,\n  'Skein1024-568': 0xb3a7,\n  'Skein1024-576': 0xb3a8,\n  'Skein1024-584': 0xb3a9,\n  'Skein1024-592': 0xb3aa,\n  'Skein1024-600': 0xb3ab,\n  'Skein1024-608': 0xb3ac,\n  'Skein1024-616': 0xb3ad,\n  'Skein1024-624': 0xb3ae,\n  'Skein1024-632': 0xb3af,\n  'Skein1024-640': 0xb3b0,\n  'Skein1024-648': 0xb3b1,\n  'Skein1024-656': 0xb3b2,\n  'Skein1024-664': 0xb3b3,\n  'Skein1024-672': 0xb3b4,\n  'Skein1024-680': 0xb3b5,\n  'Skein1024-688': 0xb3b6,\n  'Skein1024-696': 0xb3b7,\n  'Skein1024-704': 0xb3b8,\n  'Skein1024-712': 0xb3b9,\n  'Skein1024-720': 0xb3ba,\n  'Skein1024-728': 0xb3bb,\n  'Skein1024-736': 0xb3bc,\n  'Skein1024-744': 0xb3bd,\n  'Skein1024-752': 0xb3be,\n  'Skein1024-760': 0xb3bf,\n  'Skein1024-768': 0xb3c0,\n  'Skein1024-776': 0xb3c1,\n  'Skein1024-784': 0xb3c2,\n  'Skein1024-792': 0xb3c3,\n  'Skein1024-800': 0xb3c4,\n  'Skein1024-808': 0xb3c5,\n  'Skein1024-816': 0xb3c6,\n  'Skein1024-824': 0xb3c7,\n  'Skein1024-832': 0xb3c8,\n  'Skein1024-840': 0xb3c9,\n  'Skein1024-848': 0xb3ca,\n  'Skein1024-856': 0xb3cb,\n  'Skein1024-864': 0xb3cc,\n  'Skein1024-872': 0xb3cd,\n  'Skein1024-880': 0xb3ce,\n  'Skein1024-888': 0xb3cf,\n  'Skein1024-896': 0xb3d0,\n  'Skein1024-904': 0xb3d1,\n  'Skein1024-912': 0xb3d2,\n  'Skein1024-920': 0xb3d3,\n  'Skein1024-928': 0xb3d4,\n  'Skein1024-936': 0xb3d5,\n  'Skein1024-944': 0xb3d6,\n  'Skein1024-952': 0xb3d7,\n  'Skein1024-960': 0xb3d8,\n  'Skein1024-968': 0xb3d9,\n  'Skein1024-976': 0xb3da,\n  'Skein1024-984': 0xb3db,\n  'Skein1024-992': 0xb3dc,\n  'Skein1024-1000': 0xb3dd,\n  'Skein1024-1008': 0xb3de,\n  'Skein1024-1016': 0xb3df,\n  'Skein1024-1024': 0xb3e0\n})\n\nexports.codes = Object.freeze({\n  0x0: 'identity',\n\n  // sha family\n  0x11: 'sha1',\n  0x12: 'sha2-256',\n  0x13: 'sha2-512',\n  0x56: 'dbl-sha2-256',\n  0x17: 'sha3-224',\n  0x16: 'sha3-256',\n  0x15: 'sha3-384',\n  0x14: 'sha3-512',\n  0x18: 'shake-128',\n  0x19: 'shake-256',\n  0x1A: 'keccak-224',\n  0x1B: 'keccak-256',\n  0x1C: 'keccak-384',\n  0x1D: 'keccak-512',\n\n  0x22: 'murmur3-128',\n  0x23: 'murmur3-32',\n\n  0xd4: 'md4',\n  0xd5: 'md5',\n\n  // blake2\n  0xb201: 'blake2b-8',\n  0xb202: 'blake2b-16',\n  0xb203: 'blake2b-24',\n  0xb204: 'blake2b-32',\n  0xb205: 'blake2b-40',\n  0xb206: 'blake2b-48',\n  0xb207: 'blake2b-56',\n  0xb208: 'blake2b-64',\n  0xb209: 'blake2b-72',\n  0xb20a: 'blake2b-80',\n  0xb20b: 'blake2b-88',\n  0xb20c: 'blake2b-96',\n  0xb20d: 'blake2b-104',\n  0xb20e: 'blake2b-112',\n  0xb20f: 'blake2b-120',\n  0xb210: 'blake2b-128',\n  0xb211: 'blake2b-136',\n  0xb212: 'blake2b-144',\n  0xb213: 'blake2b-152',\n  0xb214: 'blake2b-160',\n  0xb215: 'blake2b-168',\n  0xb216: 'blake2b-176',\n  0xb217: 'blake2b-184',\n  0xb218: 'blake2b-192',\n  0xb219: 'blake2b-200',\n  0xb21a: 'blake2b-208',\n  0xb21b: 'blake2b-216',\n  0xb21c: 'blake2b-224',\n  0xb21d: 'blake2b-232',\n  0xb21e: 'blake2b-240',\n  0xb21f: 'blake2b-248',\n  0xb220: 'blake2b-256',\n  0xb221: 'blake2b-264',\n  0xb222: 'blake2b-272',\n  0xb223: 'blake2b-280',\n  0xb224: 'blake2b-288',\n  0xb225: 'blake2b-296',\n  0xb226: 'blake2b-304',\n  0xb227: 'blake2b-312',\n  0xb228: 'blake2b-320',\n  0xb229: 'blake2b-328',\n  0xb22a: 'blake2b-336',\n  0xb22b: 'blake2b-344',\n  0xb22c: 'blake2b-352',\n  0xb22d: 'blake2b-360',\n  0xb22e: 'blake2b-368',\n  0xb22f: 'blake2b-376',\n  0xb230: 'blake2b-384',\n  0xb231: 'blake2b-392',\n  0xb232: 'blake2b-400',\n  0xb233: 'blake2b-408',\n  0xb234: 'blake2b-416',\n  0xb235: 'blake2b-424',\n  0xb236: 'blake2b-432',\n  0xb237: 'blake2b-440',\n  0xb238: 'blake2b-448',\n  0xb239: 'blake2b-456',\n  0xb23a: 'blake2b-464',\n  0xb23b: 'blake2b-472',\n  0xb23c: 'blake2b-480',\n  0xb23d: 'blake2b-488',\n  0xb23e: 'blake2b-496',\n  0xb23f: 'blake2b-504',\n  0xb240: 'blake2b-512',\n  0xb241: 'blake2s-8',\n  0xb242: 'blake2s-16',\n  0xb243: 'blake2s-24',\n  0xb244: 'blake2s-32',\n  0xb245: 'blake2s-40',\n  0xb246: 'blake2s-48',\n  0xb247: 'blake2s-56',\n  0xb248: 'blake2s-64',\n  0xb249: 'blake2s-72',\n  0xb24a: 'blake2s-80',\n  0xb24b: 'blake2s-88',\n  0xb24c: 'blake2s-96',\n  0xb24d: 'blake2s-104',\n  0xb24e: 'blake2s-112',\n  0xb24f: 'blake2s-120',\n  0xb250: 'blake2s-128',\n  0xb251: 'blake2s-136',\n  0xb252: 'blake2s-144',\n  0xb253: 'blake2s-152',\n  0xb254: 'blake2s-160',\n  0xb255: 'blake2s-168',\n  0xb256: 'blake2s-176',\n  0xb257: 'blake2s-184',\n  0xb258: 'blake2s-192',\n  0xb259: 'blake2s-200',\n  0xb25a: 'blake2s-208',\n  0xb25b: 'blake2s-216',\n  0xb25c: 'blake2s-224',\n  0xb25d: 'blake2s-232',\n  0xb25e: 'blake2s-240',\n  0xb25f: 'blake2s-248',\n  0xb260: 'blake2s-256',\n\n  // skein\n  0xb301: 'Skein256-8',\n  0xb302: 'Skein256-16',\n  0xb303: 'Skein256-24',\n  0xb304: 'Skein256-32',\n  0xb305: 'Skein256-40',\n  0xb306: 'Skein256-48',\n  0xb307: 'Skein256-56',\n  0xb308: 'Skein256-64',\n  0xb309: 'Skein256-72',\n  0xb30a: 'Skein256-80',\n  0xb30b: 'Skein256-88',\n  0xb30c: 'Skein256-96',\n  0xb30d: 'Skein256-104',\n  0xb30e: 'Skein256-112',\n  0xb30f: 'Skein256-120',\n  0xb310: 'Skein256-128',\n  0xb311: 'Skein256-136',\n  0xb312: 'Skein256-144',\n  0xb313: 'Skein256-152',\n  0xb314: 'Skein256-160',\n  0xb315: 'Skein256-168',\n  0xb316: 'Skein256-176',\n  0xb317: 'Skein256-184',\n  0xb318: 'Skein256-192',\n  0xb319: 'Skein256-200',\n  0xb31a: 'Skein256-208',\n  0xb31b: 'Skein256-216',\n  0xb31c: 'Skein256-224',\n  0xb31d: 'Skein256-232',\n  0xb31e: 'Skein256-240',\n  0xb31f: 'Skein256-248',\n  0xb320: 'Skein256-256',\n  0xb321: 'Skein512-8',\n  0xb322: 'Skein512-16',\n  0xb323: 'Skein512-24',\n  0xb324: 'Skein512-32',\n  0xb325: 'Skein512-40',\n  0xb326: 'Skein512-48',\n  0xb327: 'Skein512-56',\n  0xb328: 'Skein512-64',\n  0xb329: 'Skein512-72',\n  0xb32a: 'Skein512-80',\n  0xb32b: 'Skein512-88',\n  0xb32c: 'Skein512-96',\n  0xb32d: 'Skein512-104',\n  0xb32e: 'Skein512-112',\n  0xb32f: 'Skein512-120',\n  0xb330: 'Skein512-128',\n  0xb331: 'Skein512-136',\n  0xb332: 'Skein512-144',\n  0xb333: 'Skein512-152',\n  0xb334: 'Skein512-160',\n  0xb335: 'Skein512-168',\n  0xb336: 'Skein512-176',\n  0xb337: 'Skein512-184',\n  0xb338: 'Skein512-192',\n  0xb339: 'Skein512-200',\n  0xb33a: 'Skein512-208',\n  0xb33b: 'Skein512-216',\n  0xb33c: 'Skein512-224',\n  0xb33d: 'Skein512-232',\n  0xb33e: 'Skein512-240',\n  0xb33f: 'Skein512-248',\n  0xb340: 'Skein512-256',\n  0xb341: 'Skein512-264',\n  0xb342: 'Skein512-272',\n  0xb343: 'Skein512-280',\n  0xb344: 'Skein512-288',\n  0xb345: 'Skein512-296',\n  0xb346: 'Skein512-304',\n  0xb347: 'Skein512-312',\n  0xb348: 'Skein512-320',\n  0xb349: 'Skein512-328',\n  0xb34a: 'Skein512-336',\n  0xb34b: 'Skein512-344',\n  0xb34c: 'Skein512-352',\n  0xb34d: 'Skein512-360',\n  0xb34e: 'Skein512-368',\n  0xb34f: 'Skein512-376',\n  0xb350: 'Skein512-384',\n  0xb351: 'Skein512-392',\n  0xb352: 'Skein512-400',\n  0xb353: 'Skein512-408',\n  0xb354: 'Skein512-416',\n  0xb355: 'Skein512-424',\n  0xb356: 'Skein512-432',\n  0xb357: 'Skein512-440',\n  0xb358: 'Skein512-448',\n  0xb359: 'Skein512-456',\n  0xb35a: 'Skein512-464',\n  0xb35b: 'Skein512-472',\n  0xb35c: 'Skein512-480',\n  0xb35d: 'Skein512-488',\n  0xb35e: 'Skein512-496',\n  0xb35f: 'Skein512-504',\n  0xb360: 'Skein512-512',\n  0xb361: 'Skein1024-8',\n  0xb362: 'Skein1024-16',\n  0xb363: 'Skein1024-24',\n  0xb364: 'Skein1024-32',\n  0xb365: 'Skein1024-40',\n  0xb366: 'Skein1024-48',\n  0xb367: 'Skein1024-56',\n  0xb368: 'Skein1024-64',\n  0xb369: 'Skein1024-72',\n  0xb36a: 'Skein1024-80',\n  0xb36b: 'Skein1024-88',\n  0xb36c: 'Skein1024-96',\n  0xb36d: 'Skein1024-104',\n  0xb36e: 'Skein1024-112',\n  0xb36f: 'Skein1024-120',\n  0xb370: 'Skein1024-128',\n  0xb371: 'Skein1024-136',\n  0xb372: 'Skein1024-144',\n  0xb373: 'Skein1024-152',\n  0xb374: 'Skein1024-160',\n  0xb375: 'Skein1024-168',\n  0xb376: 'Skein1024-176',\n  0xb377: 'Skein1024-184',\n  0xb378: 'Skein1024-192',\n  0xb379: 'Skein1024-200',\n  0xb37a: 'Skein1024-208',\n  0xb37b: 'Skein1024-216',\n  0xb37c: 'Skein1024-224',\n  0xb37d: 'Skein1024-232',\n  0xb37e: 'Skein1024-240',\n  0xb37f: 'Skein1024-248',\n  0xb380: 'Skein1024-256',\n  0xb381: 'Skein1024-264',\n  0xb382: 'Skein1024-272',\n  0xb383: 'Skein1024-280',\n  0xb384: 'Skein1024-288',\n  0xb385: 'Skein1024-296',\n  0xb386: 'Skein1024-304',\n  0xb387: 'Skein1024-312',\n  0xb388: 'Skein1024-320',\n  0xb389: 'Skein1024-328',\n  0xb38a: 'Skein1024-336',\n  0xb38b: 'Skein1024-344',\n  0xb38c: 'Skein1024-352',\n  0xb38d: 'Skein1024-360',\n  0xb38e: 'Skein1024-368',\n  0xb38f: 'Skein1024-376',\n  0xb390: 'Skein1024-384',\n  0xb391: 'Skein1024-392',\n  0xb392: 'Skein1024-400',\n  0xb393: 'Skein1024-408',\n  0xb394: 'Skein1024-416',\n  0xb395: 'Skein1024-424',\n  0xb396: 'Skein1024-432',\n  0xb397: 'Skein1024-440',\n  0xb398: 'Skein1024-448',\n  0xb399: 'Skein1024-456',\n  0xb39a: 'Skein1024-464',\n  0xb39b: 'Skein1024-472',\n  0xb39c: 'Skein1024-480',\n  0xb39d: 'Skein1024-488',\n  0xb39e: 'Skein1024-496',\n  0xb39f: 'Skein1024-504',\n  0xb3a0: 'Skein1024-512',\n  0xb3a1: 'Skein1024-520',\n  0xb3a2: 'Skein1024-528',\n  0xb3a3: 'Skein1024-536',\n  0xb3a4: 'Skein1024-544',\n  0xb3a5: 'Skein1024-552',\n  0xb3a6: 'Skein1024-560',\n  0xb3a7: 'Skein1024-568',\n  0xb3a8: 'Skein1024-576',\n  0xb3a9: 'Skein1024-584',\n  0xb3aa: 'Skein1024-592',\n  0xb3ab: 'Skein1024-600',\n  0xb3ac: 'Skein1024-608',\n  0xb3ad: 'Skein1024-616',\n  0xb3ae: 'Skein1024-624',\n  0xb3af: 'Skein1024-632',\n  0xb3b0: 'Skein1024-640',\n  0xb3b1: 'Skein1024-648',\n  0xb3b2: 'Skein1024-656',\n  0xb3b3: 'Skein1024-664',\n  0xb3b4: 'Skein1024-672',\n  0xb3b5: 'Skein1024-680',\n  0xb3b6: 'Skein1024-688',\n  0xb3b7: 'Skein1024-696',\n  0xb3b8: 'Skein1024-704',\n  0xb3b9: 'Skein1024-712',\n  0xb3ba: 'Skein1024-720',\n  0xb3bb: 'Skein1024-728',\n  0xb3bc: 'Skein1024-736',\n  0xb3bd: 'Skein1024-744',\n  0xb3be: 'Skein1024-752',\n  0xb3bf: 'Skein1024-760',\n  0xb3c0: 'Skein1024-768',\n  0xb3c1: 'Skein1024-776',\n  0xb3c2: 'Skein1024-784',\n  0xb3c3: 'Skein1024-792',\n  0xb3c4: 'Skein1024-800',\n  0xb3c5: 'Skein1024-808',\n  0xb3c6: 'Skein1024-816',\n  0xb3c7: 'Skein1024-824',\n  0xb3c8: 'Skein1024-832',\n  0xb3c9: 'Skein1024-840',\n  0xb3ca: 'Skein1024-848',\n  0xb3cb: 'Skein1024-856',\n  0xb3cc: 'Skein1024-864',\n  0xb3cd: 'Skein1024-872',\n  0xb3ce: 'Skein1024-880',\n  0xb3cf: 'Skein1024-888',\n  0xb3d0: 'Skein1024-896',\n  0xb3d1: 'Skein1024-904',\n  0xb3d2: 'Skein1024-912',\n  0xb3d3: 'Skein1024-920',\n  0xb3d4: 'Skein1024-928',\n  0xb3d5: 'Skein1024-936',\n  0xb3d6: 'Skein1024-944',\n  0xb3d7: 'Skein1024-952',\n  0xb3d8: 'Skein1024-960',\n  0xb3d9: 'Skein1024-968',\n  0xb3da: 'Skein1024-976',\n  0xb3db: 'Skein1024-984',\n  0xb3dc: 'Skein1024-992',\n  0xb3dd: 'Skein1024-1000',\n  0xb3de: 'Skein1024-1008',\n  0xb3df: 'Skein1024-1016',\n  0xb3e0: 'Skein1024-1024'\n})\n\nexports.defaultLengths = Object.freeze({\n  0x11: 20,\n  0x12: 32,\n  0x13: 64,\n  0x56: 32,\n  0x17: 28,\n  0x16: 32,\n  0x15: 48,\n  0x14: 64,\n  0x18: 32,\n  0x19: 64,\n  0x1A: 28,\n  0x1B: 32,\n  0x1C: 48,\n  0x1D: 64,\n  0x22: 32,\n\n  0xb201: 0x01,\n  0xb202: 0x02,\n  0xb203: 0x03,\n  0xb204: 0x04,\n  0xb205: 0x05,\n  0xb206: 0x06,\n  0xb207: 0x07,\n  0xb208: 0x08,\n  0xb209: 0x09,\n  0xb20a: 0x0a,\n  0xb20b: 0x0b,\n  0xb20c: 0x0c,\n  0xb20d: 0x0d,\n  0xb20e: 0x0e,\n  0xb20f: 0x0f,\n  0xb210: 0x10,\n  0xb211: 0x11,\n  0xb212: 0x12,\n  0xb213: 0x13,\n  0xb214: 0x14,\n  0xb215: 0x15,\n  0xb216: 0x16,\n  0xb217: 0x17,\n  0xb218: 0x18,\n  0xb219: 0x19,\n  0xb21a: 0x1a,\n  0xb21b: 0x1b,\n  0xb21c: 0x1c,\n  0xb21d: 0x1d,\n  0xb21e: 0x1e,\n  0xb21f: 0x1f,\n  0xb220: 0x20,\n  0xb221: 0x21,\n  0xb222: 0x22,\n  0xb223: 0x23,\n  0xb224: 0x24,\n  0xb225: 0x25,\n  0xb226: 0x26,\n  0xb227: 0x27,\n  0xb228: 0x28,\n  0xb229: 0x29,\n  0xb22a: 0x2a,\n  0xb22b: 0x2b,\n  0xb22c: 0x2c,\n  0xb22d: 0x2d,\n  0xb22e: 0x2e,\n  0xb22f: 0x2f,\n  0xb230: 0x30,\n  0xb231: 0x31,\n  0xb232: 0x32,\n  0xb233: 0x33,\n  0xb234: 0x34,\n  0xb235: 0x35,\n  0xb236: 0x36,\n  0xb237: 0x37,\n  0xb238: 0x38,\n  0xb239: 0x39,\n  0xb23a: 0x3a,\n  0xb23b: 0x3b,\n  0xb23c: 0x3c,\n  0xb23d: 0x3d,\n  0xb23e: 0x3e,\n  0xb23f: 0x3f,\n  0xb240: 0x40,\n  0xb241: 0x01,\n  0xb242: 0x02,\n  0xb243: 0x03,\n  0xb244: 0x04,\n  0xb245: 0x05,\n  0xb246: 0x06,\n  0xb247: 0x07,\n  0xb248: 0x08,\n  0xb249: 0x09,\n  0xb24a: 0x0a,\n  0xb24b: 0x0b,\n  0xb24c: 0x0c,\n  0xb24d: 0x0d,\n  0xb24e: 0x0e,\n  0xb24f: 0x0f,\n  0xb250: 0x10,\n  0xb251: 0x11,\n  0xb252: 0x12,\n  0xb253: 0x13,\n  0xb254: 0x14,\n  0xb255: 0x15,\n  0xb256: 0x16,\n  0xb257: 0x17,\n  0xb258: 0x18,\n  0xb259: 0x19,\n  0xb25a: 0x1a,\n  0xb25b: 0x1b,\n  0xb25c: 0x1c,\n  0xb25d: 0x1d,\n  0xb25e: 0x1e,\n  0xb25f: 0x1f,\n  0xb260: 0x20,\n  0xb301: 0x01,\n  0xb302: 0x02,\n  0xb303: 0x03,\n  0xb304: 0x04,\n  0xb305: 0x05,\n  0xb306: 0x06,\n  0xb307: 0x07,\n  0xb308: 0x08,\n  0xb309: 0x09,\n  0xb30a: 0x0a,\n  0xb30b: 0x0b,\n  0xb30c: 0x0c,\n  0xb30d: 0x0d,\n  0xb30e: 0x0e,\n  0xb30f: 0x0f,\n  0xb310: 0x10,\n  0xb311: 0x11,\n  0xb312: 0x12,\n  0xb313: 0x13,\n  0xb314: 0x14,\n  0xb315: 0x15,\n  0xb316: 0x16,\n  0xb317: 0x17,\n  0xb318: 0x18,\n  0xb319: 0x19,\n  0xb31a: 0x1a,\n  0xb31b: 0x1b,\n  0xb31c: 0x1c,\n  0xb31d: 0x1d,\n  0xb31e: 0x1e,\n  0xb31f: 0x1f,\n  0xb320: 0x20,\n  0xb321: 0x01,\n  0xb322: 0x02,\n  0xb323: 0x03,\n  0xb324: 0x04,\n  0xb325: 0x05,\n  0xb326: 0x06,\n  0xb327: 0x07,\n  0xb328: 0x08,\n  0xb329: 0x09,\n  0xb32a: 0x0a,\n  0xb32b: 0x0b,\n  0xb32c: 0x0c,\n  0xb32d: 0x0d,\n  0xb32e: 0x0e,\n  0xb32f: 0x0f,\n  0xb330: 0x10,\n  0xb331: 0x11,\n  0xb332: 0x12,\n  0xb333: 0x13,\n  0xb334: 0x14,\n  0xb335: 0x15,\n  0xb336: 0x16,\n  0xb337: 0x17,\n  0xb338: 0x18,\n  0xb339: 0x19,\n  0xb33a: 0x1a,\n  0xb33b: 0x1b,\n  0xb33c: 0x1c,\n  0xb33d: 0x1d,\n  0xb33e: 0x1e,\n  0xb33f: 0x1f,\n  0xb340: 0x20,\n  0xb341: 0x21,\n  0xb342: 0x22,\n  0xb343: 0x23,\n  0xb344: 0x24,\n  0xb345: 0x25,\n  0xb346: 0x26,\n  0xb347: 0x27,\n  0xb348: 0x28,\n  0xb349: 0x29,\n  0xb34a: 0x2a,\n  0xb34b: 0x2b,\n  0xb34c: 0x2c,\n  0xb34d: 0x2d,\n  0xb34e: 0x2e,\n  0xb34f: 0x2f,\n  0xb350: 0x30,\n  0xb351: 0x31,\n  0xb352: 0x32,\n  0xb353: 0x33,\n  0xb354: 0x34,\n  0xb355: 0x35,\n  0xb356: 0x36,\n  0xb357: 0x37,\n  0xb358: 0x38,\n  0xb359: 0x39,\n  0xb35a: 0x3a,\n  0xb35b: 0x3b,\n  0xb35c: 0x3c,\n  0xb35d: 0x3d,\n  0xb35e: 0x3e,\n  0xb35f: 0x3f,\n  0xb360: 0x40,\n  0xb361: 0x01,\n  0xb362: 0x02,\n  0xb363: 0x03,\n  0xb364: 0x04,\n  0xb365: 0x05,\n  0xb366: 0x06,\n  0xb367: 0x07,\n  0xb368: 0x08,\n  0xb369: 0x09,\n  0xb36a: 0x0a,\n  0xb36b: 0x0b,\n  0xb36c: 0x0c,\n  0xb36d: 0x0d,\n  0xb36e: 0x0e,\n  0xb36f: 0x0f,\n  0xb370: 0x10,\n  0xb371: 0x11,\n  0xb372: 0x12,\n  0xb373: 0x13,\n  0xb374: 0x14,\n  0xb375: 0x15,\n  0xb376: 0x16,\n  0xb377: 0x17,\n  0xb378: 0x18,\n  0xb379: 0x19,\n  0xb37a: 0x1a,\n  0xb37b: 0x1b,\n  0xb37c: 0x1c,\n  0xb37d: 0x1d,\n  0xb37e: 0x1e,\n  0xb37f: 0x1f,\n  0xb380: 0x20,\n  0xb381: 0x21,\n  0xb382: 0x22,\n  0xb383: 0x23,\n  0xb384: 0x24,\n  0xb385: 0x25,\n  0xb386: 0x26,\n  0xb387: 0x27,\n  0xb388: 0x28,\n  0xb389: 0x29,\n  0xb38a: 0x2a,\n  0xb38b: 0x2b,\n  0xb38c: 0x2c,\n  0xb38d: 0x2d,\n  0xb38e: 0x2e,\n  0xb38f: 0x2f,\n  0xb390: 0x30,\n  0xb391: 0x31,\n  0xb392: 0x32,\n  0xb393: 0x33,\n  0xb394: 0x34,\n  0xb395: 0x35,\n  0xb396: 0x36,\n  0xb397: 0x37,\n  0xb398: 0x38,\n  0xb399: 0x39,\n  0xb39a: 0x3a,\n  0xb39b: 0x3b,\n  0xb39c: 0x3c,\n  0xb39d: 0x3d,\n  0xb39e: 0x3e,\n  0xb39f: 0x3f,\n  0xb3a0: 0x40,\n  0xb3a1: 0x41,\n  0xb3a2: 0x42,\n  0xb3a3: 0x43,\n  0xb3a4: 0x44,\n  0xb3a5: 0x45,\n  0xb3a6: 0x46,\n  0xb3a7: 0x47,\n  0xb3a8: 0x48,\n  0xb3a9: 0x49,\n  0xb3aa: 0x4a,\n  0xb3ab: 0x4b,\n  0xb3ac: 0x4c,\n  0xb3ad: 0x4d,\n  0xb3ae: 0x4e,\n  0xb3af: 0x4f,\n  0xb3b0: 0x50,\n  0xb3b1: 0x51,\n  0xb3b2: 0x52,\n  0xb3b3: 0x53,\n  0xb3b4: 0x54,\n  0xb3b5: 0x55,\n  0xb3b6: 0x56,\n  0xb3b7: 0x57,\n  0xb3b8: 0x58,\n  0xb3b9: 0x59,\n  0xb3ba: 0x5a,\n  0xb3bb: 0x5b,\n  0xb3bc: 0x5c,\n  0xb3bd: 0x5d,\n  0xb3be: 0x5e,\n  0xb3bf: 0x5f,\n  0xb3c0: 0x60,\n  0xb3c1: 0x61,\n  0xb3c2: 0x62,\n  0xb3c3: 0x63,\n  0xb3c4: 0x64,\n  0xb3c5: 0x65,\n  0xb3c6: 0x66,\n  0xb3c7: 0x67,\n  0xb3c8: 0x68,\n  0xb3c9: 0x69,\n  0xb3ca: 0x6a,\n  0xb3cb: 0x6b,\n  0xb3cc: 0x6c,\n  0xb3cd: 0x6d,\n  0xb3ce: 0x6e,\n  0xb3cf: 0x6f,\n  0xb3d0: 0x70,\n  0xb3d1: 0x71,\n  0xb3d2: 0x72,\n  0xb3d3: 0x73,\n  0xb3d4: 0x74,\n  0xb3d5: 0x75,\n  0xb3d6: 0x76,\n  0xb3d7: 0x77,\n  0xb3d8: 0x78,\n  0xb3d9: 0x79,\n  0xb3da: 0x7a,\n  0xb3db: 0x7b,\n  0xb3dc: 0x7c,\n  0xb3dd: 0x7d,\n  0xb3de: 0x7e,\n  0xb3df: 0x7f,\n  0xb3e0: 0x80\n})\n","/**\n * Multihash implementation in JavaScript.\n *\n * @module multihash\n */\n'use strict'\n\nconst { Buffer } = require('buffer')\nconst multibase = require('multibase')\nconst varint = require('varint')\nconst cs = require('./constants')\n\nexports.names = cs.names\nexports.codes = cs.codes\nexports.defaultLengths = cs.defaultLengths\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toHexString = function toHexString (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return hash.toString('hex')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Buffer}\n */\nexports.fromHexString = function fromHexString (hash) {\n  return Buffer.from(hash, 'hex')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toB58String = function toB58String (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return multibase.encode('base58btc', hash).toString().slice(1)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Buffer} hash\n * @returns {Buffer}\n */\nexports.fromB58String = function fromB58String (hash) {\n  let encoded = hash\n  if (Buffer.isBuffer(hash)) {\n    encoded = hash.toString()\n  }\n\n  return multibase.decode('z' + encoded)\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Buffer} buf\n * @returns {{code: number, name: string, length: number, digest: Buffer}} result\n */\nexports.decode = function decode (buf) {\n  if (!(Buffer.isBuffer(buf))) {\n    throw new Error('multihash must be a Buffer')\n  }\n\n  if (buf.length < 2) {\n    throw new Error('multihash too short. must be > 2 bytes.')\n  }\n\n  const code = varint.decode(buf)\n  if (!exports.isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  const len = varint.decode(buf)\n  if (len < 0) {\n    throw new Error(`multihash invalid length: ${len}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${buf.toString('hex')}`)\n  }\n\n  return {\n    code: code,\n    name: cs.codes[code],\n    length: len,\n    digest: buf\n  }\n}\n\n/**\n *  Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Buffer} digest\n * @param {string|number} code\n * @param {number} [length]\n * @returns {Buffer}\n */\nexports.encode = function encode (digest, code, length) {\n  if (!digest || code === undefined) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = exports.coerceCode(code)\n\n  if (!(Buffer.isBuffer(digest))) {\n    throw new Error('digest should be a Buffer')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  return Buffer.concat([\n    Buffer.from(varint.encode(hashfn)),\n    Buffer.from(varint.encode(length)),\n    digest\n  ])\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n * @param {string|number} name\n * @returns {number}\n */\nexports.coerceCode = function coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (cs.names[name] === undefined) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = cs.names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  if (cs.codes[code] === undefined && !exports.isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks wether a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isAppCode = function appCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isValidCode = function validCode (code) {\n  if (exports.isAppCode(code)) {\n    return true\n  }\n\n  if (cs.codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  exports.decode(multihash) // throws if bad.\n}\nexports.validate = validate\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nexports.prefix = function prefix (multihash) {\n  validate(multihash)\n\n  return multihash.slice(0, 2)\n}\n","'use strict'\n\nconst blake = require('blakejs')\n\nconst toCallback = require('./utils').toCallback\n\nconst minB = 0xb201\nconst minS = 0xb241\n\nconst blake2b = {\n  init: blake.blake2bInit,\n  update: blake.blake2bUpdate,\n  digest: blake.blake2bFinal\n}\n\nconst blake2s = {\n  init: blake.blake2sInit,\n  update: blake.blake2sUpdate,\n  digest: blake.blake2sFinal\n}\n\nconst makeB2Hash = (size, hf) => toCallback((buf) => {\n  const ctx = hf.init(size, null)\n  hf.update(ctx, buf)\n  return Buffer.from(hf.digest(ctx))\n})\n\nmodule.exports = (table) => {\n  for (let i = 0; i < 64; i++) {\n    table[minB + i] = makeB2Hash(i + 1, blake2b)\n  }\n  for (let i = 0; i < 32; i++) {\n    table[minS + i] = makeB2Hash(i + 1, blake2s)\n  }\n}\n","/* global self */\n\n'use strict'\n\nconst nodeify = require('nodeify')\n\nconst webCrypto = getWebCrypto()\n\nfunction getWebCrypto () {\n  if (self.crypto) {\n    return self.crypto.subtle || self.crypto.webkitSubtle\n  }\n\n  if (self.msCrypto) {\n    return self.msCrypto.subtle\n  }\n}\n\nfunction webCryptoHash (type) {\n  if (!webCrypto) {\n    throw new Error('Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context')\n  }\n\n  return (data, callback) => {\n    const res = webCrypto.digest({ name: type }, data)\n\n    if (typeof res.then !== 'function') { // IE11\n      res.onerror = () => {\n        callback(new Error(`hashing data using ${type}`))\n      }\n      res.oncomplete = (e) => {\n        callback(null, e.target.result)\n      }\n      return\n    }\n\n    nodeify(\n      res.then((raw) => Buffer.from(new Uint8Array(raw))),\n      callback\n    )\n  }\n}\n\nfunction sha1 (buf, callback) {\n  webCryptoHash('SHA-1')(buf, callback)\n}\n\nfunction sha2256 (buf, callback) {\n  webCryptoHash('SHA-256')(buf, callback)\n}\n\nfunction sha2512 (buf, callback) {\n  webCryptoHash('SHA-512')(buf, callback)\n}\n\nmodule.exports = {\n  sha1: sha1,\n  sha2256: sha2256,\n  sha2512: sha2512\n}\n","'use strict'\n\nconst sha3 = require('js-sha3')\nconst murmur3 = require('murmurhash3js')\n\nconst utils = require('./utils')\nconst sha = require('./crypto-sha1-2')\n\nconst toCallback = utils.toCallback\nconst toBuf = utils.toBuf\nconst fromString = utils.fromString\nconst fromNumberTo32BitBuf = utils.fromNumberTo32BitBuf\n\nconst dblSha2256 = (buf, cb) => {\n  sha.sha2256(buf, (err, firstHash) => {\n    if (err) {\n      cb(err)\n    }\n    sha.sha2256((Buffer.from(firstHash)), cb)\n  })\n}\n\nmodule.exports = {\n  sha1: sha.sha1,\n  sha2256: sha.sha2256,\n  sha2512: sha.sha2512,\n  sha3512: toCallback(toBuf(sha3.sha3_512)),\n  sha3384: toCallback(toBuf(sha3.sha3_384)),\n  sha3256: toCallback(toBuf(sha3.sha3_256)),\n  sha3224: toCallback(toBuf(sha3.sha3_224)),\n  shake128: toCallback(toBuf(sha3.shake_128, 128)),\n  shake256: toCallback(toBuf(sha3.shake_256, 256)),\n  keccak224: toCallback(toBuf(sha3.keccak_224)),\n  keccak256: toCallback(toBuf(sha3.keccak_256)),\n  keccak384: toCallback(toBuf(sha3.keccak_384)),\n  keccak512: toCallback(toBuf(sha3.keccak_512)),\n  murmur3128: toCallback(toBuf(fromString(murmur3.x64.hash128))),\n  murmur332: toCallback(fromNumberTo32BitBuf(fromString(murmur3.x86.hash32))),\n  addBlake: require('./blake'),\n  dblSha2256: dblSha2256\n}\n","'use strict'\n\nconst multihash = require('multihashes')\nconst crypto = require('./crypto')\n\nmodule.exports = Multihashing\n\n/**\n * Hash the given `buf` using the algorithm specified\n * by `func`.\n *\n * @param {Buffer} buf - The value to hash.\n * @param {number|string} func - The algorithm to use.\n * @param {number} [length] - Optionally trim the result to this length.\n * @param {function(Error, Buffer)} callback\n * @returns {undefined}\n */\nfunction Multihashing (buf, func, length, callback) {\n  if (typeof length === 'function') {\n    callback = length\n    length = undefined\n  }\n\n  if (!callback) {\n    throw new Error('Missing callback')\n  }\n\n  Multihashing.digest(buf, func, length, (err, digest) => {\n    if (err) {\n      return callback(err)\n    }\n\n    callback(null, multihash.encode(digest, func, length))\n  })\n}\n\n/**\n * The `buffer` module for easy use in the browser.\n *\n * @type {Buffer}\n */\nMultihashing.Buffer = Buffer // for browser things\n\n/**\n * Expose multihash itself, to avoid silly double requires.\n */\nMultihashing.multihash = multihash\n\n/**\n * @param {Buffer} buf - The value to hash.\n * @param {number|string} func - The algorithm to use.\n * @param {number} [length] - Optionally trim the result to this length.\n * @param {function(Error, Buffer)} callback\n * @returns {undefined}\n */\nMultihashing.digest = function (buf, func, length, callback) {\n  if (typeof length === 'function') {\n    callback = length\n    length = undefined\n  }\n\n  if (!callback) {\n    throw new Error('Missing callback')\n  }\n\n  let cb = callback\n  if (length) {\n    cb = (err, digest) => {\n      if (err) {\n        return callback(err)\n      }\n\n      callback(null, digest.slice(0, length))\n    }\n  }\n\n  let hash\n  try {\n    hash = Multihashing.createHash(func)\n  } catch (err) {\n    return cb(err)\n  }\n\n  hash(buf, cb)\n}\n\n/**\n * @param {string|number} func\n *\n * @returns {function} - The to `func` corresponding hash function.\n */\nMultihashing.createHash = function (func) {\n  func = multihash.coerceCode(func)\n  if (!Multihashing.functions[func]) {\n    throw new Error('multihash function ' + func + ' not yet supported')\n  }\n\n  return Multihashing.functions[func]\n}\n\n/**\n * Mapping of multihash codes to their hashing functions.\n * @type {Object}\n */\nMultihashing.functions = {\n  // sha1\n  0x11: crypto.sha1,\n  // sha2-256\n  0x12: crypto.sha2256,\n  // sha2-512\n  0x13: crypto.sha2512,\n  // sha3-512\n  0x14: crypto.sha3512,\n  // sha3-384\n  0x15: crypto.sha3384,\n  // sha3-256\n  0x16: crypto.sha3256,\n  // sha3-224\n  0x17: crypto.sha3224,\n  // shake-128\n  0x18: crypto.shake128,\n  // shake-256\n  0x19: crypto.shake256,\n  // keccak-224\n  0x1A: crypto.keccak224,\n  // keccak-256\n  0x1B: crypto.keccak256,\n  // keccak-384\n  0x1C: crypto.keccak384,\n  // keccak-512\n  0x1D: crypto.keccak512,\n  // murmur3-128\n  0x22: crypto.murmur3128,\n  // murmur3-32\n  0x23: crypto.murmur332,\n  // dbl-sha2-256\n  0x56: crypto.dblSha2256\n}\n\n// add blake functions\ncrypto.addBlake(Multihashing.functions)\n","'use strict'\n\nexports.toCallback = (doWork) => {\n  return function (input, callback) {\n    let res\n    try {\n      res = doWork(input)\n    } catch (err) {\n      process.nextTick(callback, err)\n      return\n    }\n\n    process.nextTick(callback, null, res)\n  }\n}\n\nexports.toBuf = (doWork, other) => (input) => {\n  let result = doWork(input, other)\n  return Buffer.from(result, 'hex')\n}\n\nexports.fromString = (doWork, other) => (_input) => {\n  const input = Buffer.isBuffer(_input) ? _input.toString() : _input\n  return doWork(input, other)\n}\n\nexports.fromNumberTo32BitBuf = (doWork, other) => (input) => {\n  let number = doWork(input, other)\n  const bytes = new Array(4)\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n\n  return Buffer.from(bytes)\n}\n","module.exports = require('./lib/murmurHash3js');\n","/* jshint -W086: true */\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n;(function (root, undefined) {\n    'use strict';\n\n    // Create a local object that'll be exported or referenced globally.\n    var library = {\n        'version': '3.0.0',\n        'x86': {},\n        'x64': {},\n        'inputValidation': true\n    };\n\n    // PRIVATE FUNCTIONS\n    // -----------------\n\n    function _validBytes(bytes) {\n        // check the input is an array or a typed array\n        if (!Array.isArray(bytes) && !ArrayBuffer.isView(bytes)) {\n            return false;\n        }\n\n        // check all bytes are actually bytes\n        for (var i = 0; i < bytes.length; i++) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] < 0 || bytes[i] > 255) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function _x86Multiply(m, n) {\n        //\n        // Given two 32bit ints, returns the two multiplied together as a\n        // 32bit int.\n        //\n\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n    }\n\n    function _x86Rotl(m, n) {\n        //\n        // Given a 32bit int and an int representing a number of bit positions,\n        // returns the 32bit int rotated left by that number of positions.\n        //\n\n        return (m << n) | (m >>> (32 - n));\n    }\n\n    function _x86Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x86 mix of that block.\n        //\n\n        h ^= h >>> 16;\n        h = _x86Multiply(h, 0x85ebca6b);\n        h ^= h >>> 13;\n        h = _x86Multiply(h, 0xc2b2ae35);\n        h ^= h >>> 16;\n\n        return h;\n    }\n\n    function _x64Add(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // added together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] + n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] + n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] + n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += m[0] + n[0];\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Multiply(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] * n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] * n[3];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[2] += m[3] * n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] * n[3];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[2] * n[2];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[3] * n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Rotl(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) rotated left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 32) {\n            return [m[1], m[0]];\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n        } else {\n            n -= 32;\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n        }\n    }\n\n    function _x64LeftShift(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) shifted left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 0) {\n            return m;\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n        } else {\n            return [m[1] << (n - 32), 0];\n        }\n    }\n\n    function _x64Xor(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // xored together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        return [m[0] ^ n[0], m[1] ^ n[1]];\n    }\n\n    function _x64Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x64 mix of that block.\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n        // only place where we need to right shift 64bit ints.)\n        //\n\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n\n        return h;\n    }\n\n    // PUBLIC FUNCTIONS\n    // ----------------\n\n    library.x86.hash32 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 32 bit hash\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 4;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n\n        var k1 = 0;\n\n        var c1 = 0xcc9e2d51;\n        var c2 = 0x1b873593;\n\n        for (var i = 0; i < blocks; i = i + 4) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n\n            h1 ^= k1;\n            h1 = _x86Rotl(h1, 13);\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        }\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h1 = _x86Fmix(h1);\n\n        return h1 >>> 0;\n    };\n\n    library.x86.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n\n        seed = seed || 0;\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n        var h2 = seed;\n        var h3 = seed;\n        var h4 = seed;\n\n        var k1 = 0;\n        var k2 = 0;\n        var k3 = 0;\n        var k4 = 0;\n\n        var c1 = 0x239b961b;\n        var c2 = 0xab0e9789;\n        var c3 = 0x38b34ae5;\n        var c4 = 0xa1e38b93;\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n            k2 = (bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24);\n            k3 = (bytes[i + 8]) | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24);\n            k4 = (bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n\n            h1 = _x86Rotl(h1, 19);\n            h1 += h2;\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n\n            h2 = _x86Rotl(h2, 17);\n            h2 += h3;\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n\n            h3 = _x86Rotl(h3, 15);\n            h3 += h4;\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n\n            h4 = _x86Rotl(h4, 13);\n            h4 += h1;\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        }\n\n        k1 = 0;\n        k2 = 0;\n        k3 = 0;\n        k4 = 0;\n\n        switch (remainder) {\n            case 15:\n                k4 ^= bytes[i + 14] << 16;\n\n            case 14:\n                k4 ^= bytes[i + 13] << 8;\n\n            case 13:\n                k4 ^= bytes[i + 12];\n                k4 = _x86Multiply(k4, c4);\n                k4 = _x86Rotl(k4, 18);\n                k4 = _x86Multiply(k4, c1);\n                h4 ^= k4;\n\n            case 12:\n                k3 ^= bytes[i + 11] << 24;\n\n            case 11:\n                k3 ^= bytes[i + 10] << 16;\n\n            case 10:\n                k3 ^= bytes[i + 9] << 8;\n\n            case 9:\n                k3 ^= bytes[i + 8];\n                k3 = _x86Multiply(k3, c3);\n                k3 = _x86Rotl(k3, 17);\n                k3 = _x86Multiply(k3, c4);\n                h3 ^= k3;\n\n            case 8:\n                k2 ^= bytes[i + 7] << 24;\n\n            case 7:\n                k2 ^= bytes[i + 6] << 16;\n\n            case 6:\n                k2 ^= bytes[i + 5] << 8;\n\n            case 5:\n                k2 ^= bytes[i + 4];\n                k2 = _x86Multiply(k2, c2);\n                k2 = _x86Rotl(k2, 16);\n                k2 = _x86Multiply(k2, c3);\n                h2 ^= k2;\n\n            case 4:\n                k1 ^= bytes[i + 3] << 24;\n\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h2 ^= bytes.length;\n        h3 ^= bytes.length;\n        h4 ^= bytes.length;\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        h1 = _x86Fmix(h1);\n        h2 = _x86Fmix(h2);\n        h3 = _x86Fmix(h3);\n        h4 = _x86Fmix(h4);\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n    };\n\n    library.x64.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = [0, seed];\n        var h2 = [0, seed];\n\n        var k1 = [0, 0];\n        var k2 = [0, 0];\n\n        var c1 = [0x87c37b91, 0x114253d5];\n        var c2 = [0x4cf5ad43, 0x2745937f];\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = [(bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24), (bytes[i]) |\n                (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24)];\n            k2 = [(bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24), (bytes[i + 8]) |\n                (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24)];\n\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n\n            h1 = _x64Rotl(h1, 27);\n            h1 = _x64Add(h1, h2);\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n\n            h2 = _x64Rotl(h2, 31);\n            h2 = _x64Add(h2, h1);\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        }\n\n        k1 = [0, 0];\n        k2 = [0, 0];\n\n        switch (remainder) {\n            case 15:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 14]], 48));\n\n            case 14:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 13]], 40));\n\n            case 13:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 12]], 32));\n\n            case 12:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 11]], 24));\n\n            case 11:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 10]], 16));\n\n            case 10:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 9]], 8));\n\n            case 9:\n                k2 = _x64Xor(k2, [0, bytes[i + 8]]);\n                k2 = _x64Multiply(k2, c2);\n                k2 = _x64Rotl(k2, 33);\n                k2 = _x64Multiply(k2, c1);\n                h2 = _x64Xor(h2, k2);\n\n            case 8:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 7]], 56));\n\n            case 7:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 6]], 48));\n\n            case 6:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 5]], 40));\n\n            case 5:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 4]], 32));\n\n            case 4:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 3]], 24));\n\n            case 3:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 2]], 16));\n\n            case 2:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 1]], 8));\n\n            case 1:\n                k1 = _x64Xor(k1, [0, bytes[i]]);\n                k1 = _x64Multiply(k1, c1);\n                k1 = _x64Rotl(k1, 31);\n                k1 = _x64Multiply(k1, c2);\n                h1 = _x64Xor(h1, k1);\n        }\n\n        h1 = _x64Xor(h1, [0, bytes.length]);\n        h2 = _x64Xor(h2, [0, bytes.length]);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        h1 = _x64Fmix(h1);\n        h2 = _x64Fmix(h2);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    };\n\n    // INITIALIZATION\n    // --------------\n\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n    // of the global object.\n    if (typeof exports !== 'undefined') {\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = library;\n        }\n\n        exports.murmurHash3 = library;\n\n    } else if (typeof define === 'function' && define.amd) {\n\n        define([], function () {\n            return library;\n        });\n    } else {\n\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n        // original value. Returns a reference to the library object, to allow\n        // it to be used under a different name.\n        library._murmurHash3 = root.murmurHash3;\n\n        library.noConflict = function () {\n            root.murmurHash3 = library._murmurHash3;\n            library._murmurHash3 = undefined;\n            library.noConflict = undefined;\n\n            return library;\n        };\n\n        root.murmurHash3 = library;\n    }\n})(this);\n","module.exports = require('./lib/murmurHash3js');\n","/* jshint -W086: true */\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n;(function (root, undefined) {\n    'use strict';\n\n    // Create a local object that'll be exported or referenced globally.\n    var library = {\n        'version': '3.0.1',\n        'x86': {},\n        'x64': {}\n    };\n\n    // PRIVATE FUNCTIONS\n    // -----------------\n\n    function _x86Multiply(m, n) {\n        //\n        // Given two 32bit ints, returns the two multiplied together as a\n        // 32bit int.\n        //\n\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n    }\n\n    function _x86Rotl(m, n) {\n        //\n        // Given a 32bit int and an int representing a number of bit positions,\n        // returns the 32bit int rotated left by that number of positions.\n        //\n\n        return (m << n) | (m >>> (32 - n));\n    }\n\n    function _x86Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x86 mix of that block.\n        //\n\n        h ^= h >>> 16;\n        h = _x86Multiply(h, 0x85ebca6b);\n        h ^= h >>> 13;\n        h = _x86Multiply(h, 0xc2b2ae35);\n        h ^= h >>> 16;\n\n        return h;\n    }\n\n    function _x64Add(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // added together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] + n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] + n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] + n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += m[0] + n[0];\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Multiply(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] * n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] * n[3];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[2] += m[3] * n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] * n[3];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[2] * n[2];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[3] * n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Rotl(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) rotated left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 32) {\n            return [m[1], m[0]];\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n        } else {\n            n -= 32;\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n        }\n    }\n\n    function _x64LeftShift(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) shifted left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 0) {\n            return m;\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n        } else {\n            return [m[1] << (n - 32), 0];\n        }\n    }\n\n    function _x64Xor(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // xored together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        return [m[0] ^ n[0], m[1] ^ n[1]];\n    }\n\n    function _x64Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x64 mix of that block.\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n        // only place where we need to right shift 64bit ints.)\n        //\n\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n\n        return h;\n    }\n\n    // PUBLIC FUNCTIONS\n    // ----------------\n\n    library.x86.hash32 = function (key, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 32 bit hash\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\n        //\n\n        key = key || '';\n        seed = seed || 0;\n\n        var remainder = key.length % 4;\n        var bytes = key.length - remainder;\n\n        var h1 = seed;\n\n        var k1 = 0;\n\n        var c1 = 0xcc9e2d51;\n        var c2 = 0x1b873593;\n\n        for (var i = 0; i < bytes; i = i + 4) {\n            k1 = ((key.charCodeAt(i) & 0xff)) | ((key.charCodeAt(i + 1) & 0xff) << 8) | ((key.charCodeAt(i + 2) & 0xff) << 16) | ((key.charCodeAt(i + 3) & 0xff) << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n\n            h1 ^= k1;\n            h1 = _x86Rotl(h1, 13);\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        }\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3:\n                k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n\n            case 2:\n                k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n\n            case 1:\n                k1 ^= (key.charCodeAt(i) & 0xff);\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= key.length;\n        h1 = _x86Fmix(h1);\n\n        return h1 >>> 0;\n    };\n\n    library.x86.hash128 = function (key, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n        //\n\n        key = key || '';\n        seed = seed || 0;\n\n        var remainder = key.length % 16;\n        var bytes = key.length - remainder;\n\n        var h1 = seed;\n        var h2 = seed;\n        var h3 = seed;\n        var h4 = seed;\n\n        var k1 = 0;\n        var k2 = 0;\n        var k3 = 0;\n        var k4 = 0;\n\n        var c1 = 0x239b961b;\n        var c2 = 0xab0e9789;\n        var c3 = 0x38b34ae5;\n        var c4 = 0xa1e38b93;\n\n        for (var i = 0; i < bytes; i = i + 16) {\n            k1 = ((key.charCodeAt(i) & 0xff)) | ((key.charCodeAt(i + 1) & 0xff) << 8) | ((key.charCodeAt(i + 2) & 0xff) << 16) | ((key.charCodeAt(i + 3) & 0xff) << 24);\n            k2 = ((key.charCodeAt(i + 4) & 0xff)) | ((key.charCodeAt(i + 5) & 0xff) << 8) | ((key.charCodeAt(i + 6) & 0xff) << 16) | ((key.charCodeAt(i + 7) & 0xff) << 24);\n            k3 = ((key.charCodeAt(i + 8) & 0xff)) | ((key.charCodeAt(i + 9) & 0xff) << 8) | ((key.charCodeAt(i + 10) & 0xff) << 16) | ((key.charCodeAt(i + 11) & 0xff) << 24);\n            k4 = ((key.charCodeAt(i + 12) & 0xff)) | ((key.charCodeAt(i + 13) & 0xff) << 8) | ((key.charCodeAt(i + 14) & 0xff) << 16) | ((key.charCodeAt(i + 15) & 0xff) << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n\n            h1 = _x86Rotl(h1, 19);\n            h1 += h2;\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n\n            h2 = _x86Rotl(h2, 17);\n            h2 += h3;\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n\n            h3 = _x86Rotl(h3, 15);\n            h3 += h4;\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n\n            h4 = _x86Rotl(h4, 13);\n            h4 += h1;\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        }\n\n        k1 = 0;\n        k2 = 0;\n        k3 = 0;\n        k4 = 0;\n\n        switch (remainder) {\n            case 15:\n                k4 ^= key.charCodeAt(i + 14) << 16;\n\n            case 14:\n                k4 ^= key.charCodeAt(i + 13) << 8;\n\n            case 13:\n                k4 ^= key.charCodeAt(i + 12);\n                k4 = _x86Multiply(k4, c4);\n                k4 = _x86Rotl(k4, 18);\n                k4 = _x86Multiply(k4, c1);\n                h4 ^= k4;\n\n            case 12:\n                k3 ^= key.charCodeAt(i + 11) << 24;\n\n            case 11:\n                k3 ^= key.charCodeAt(i + 10) << 16;\n\n            case 10:\n                k3 ^= key.charCodeAt(i + 9) << 8;\n\n            case 9:\n                k3 ^= key.charCodeAt(i + 8);\n                k3 = _x86Multiply(k3, c3);\n                k3 = _x86Rotl(k3, 17);\n                k3 = _x86Multiply(k3, c4);\n                h3 ^= k3;\n\n            case 8:\n                k2 ^= key.charCodeAt(i + 7) << 24;\n\n            case 7:\n                k2 ^= key.charCodeAt(i + 6) << 16;\n\n            case 6:\n                k2 ^= key.charCodeAt(i + 5) << 8;\n\n            case 5:\n                k2 ^= key.charCodeAt(i + 4);\n                k2 = _x86Multiply(k2, c2);\n                k2 = _x86Rotl(k2, 16);\n                k2 = _x86Multiply(k2, c3);\n                h2 ^= k2;\n\n            case 4:\n                k1 ^= key.charCodeAt(i + 3) << 24;\n\n            case 3:\n                k1 ^= key.charCodeAt(i + 2) << 16;\n\n            case 2:\n                k1 ^= key.charCodeAt(i + 1) << 8;\n\n            case 1:\n                k1 ^= key.charCodeAt(i);\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= key.length;\n        h2 ^= key.length;\n        h3 ^= key.length;\n        h4 ^= key.length;\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        h1 = _x86Fmix(h1);\n        h2 = _x86Fmix(h2);\n        h3 = _x86Fmix(h3);\n        h4 = _x86Fmix(h4);\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n    };\n\n    library.x64.hash128 = function (key, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n        //\n\n        key = key || '';\n        seed = seed || 0;\n\n        var remainder = key.length % 16;\n        var bytes = key.length - remainder;\n\n        var h1 = [0, seed];\n        var h2 = [0, seed];\n\n        var k1 = [0, 0];\n        var k2 = [0, 0];\n\n        var c1 = [0x87c37b91, 0x114253d5];\n        var c2 = [0x4cf5ad43, 0x2745937f];\n\n        for (var i = 0; i < bytes; i = i + 16) {\n            k1 = [((key.charCodeAt(i + 4) & 0xff)) | ((key.charCodeAt(i + 5) & 0xff) << 8) | ((key.charCodeAt(i + 6) & 0xff) << 16) | ((key.charCodeAt(i + 7) & 0xff) << 24), ((key.charCodeAt(i) & 0xff)) | ((key.charCodeAt(i + 1) &\n                0xff) << 8) | ((key.charCodeAt(i + 2) & 0xff) << 16) | ((key.charCodeAt(i + 3) & 0xff) << 24)];\n            k2 = [((key.charCodeAt(i + 12) & 0xff)) | ((key.charCodeAt(i + 13) & 0xff) << 8) | ((key.charCodeAt(i + 14) & 0xff) << 16) | ((key.charCodeAt(i + 15) & 0xff) << 24), ((key.charCodeAt(i + 8) & 0xff)) | ((key.charCodeAt(i +\n                9) & 0xff) << 8) | ((key.charCodeAt(i + 10) & 0xff) << 16) | ((key.charCodeAt(i + 11) & 0xff) << 24)];\n\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n\n            h1 = _x64Rotl(h1, 27);\n            h1 = _x64Add(h1, h2);\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n\n            h2 = _x64Rotl(h2, 31);\n            h2 = _x64Add(h2, h1);\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        }\n\n        k1 = [0, 0];\n        k2 = [0, 0];\n\n        switch (remainder) {\n            case 15:\n                k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 14)], 48));\n\n            case 14:\n                k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 13)], 40));\n\n            case 13:\n                k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 12)], 32));\n\n            case 12:\n                k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 11)], 24));\n\n            case 11:\n                k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 10)], 16));\n\n            case 10:\n                k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 9)], 8));\n\n            case 9:\n                k2 = _x64Xor(k2, [0, key.charCodeAt(i + 8)]);\n                k2 = _x64Multiply(k2, c2);\n                k2 = _x64Rotl(k2, 33);\n                k2 = _x64Multiply(k2, c1);\n                h2 = _x64Xor(h2, k2);\n\n            case 8:\n                k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 7)], 56));\n\n            case 7:\n                k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 6)], 48));\n\n            case 6:\n                k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 5)], 40));\n\n            case 5:\n                k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 4)], 32));\n\n            case 4:\n                k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 3)], 24));\n\n            case 3:\n                k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 2)], 16));\n\n            case 2:\n                k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 1)], 8));\n\n            case 1:\n                k1 = _x64Xor(k1, [0, key.charCodeAt(i)]);\n                k1 = _x64Multiply(k1, c1);\n                k1 = _x64Rotl(k1, 31);\n                k1 = _x64Multiply(k1, c2);\n                h1 = _x64Xor(h1, k1);\n        }\n\n        h1 = _x64Xor(h1, [0, key.length]);\n        h2 = _x64Xor(h2, [0, key.length]);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        h1 = _x64Fmix(h1);\n        h2 = _x64Fmix(h2);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    };\n\n    // INITIALIZATION\n    // --------------\n\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n    // of the global object.\n    if (typeof exports !== 'undefined') {\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = library;\n        }\n\n        exports.murmurHash3 = library;\n\n    } else if (typeof define === 'function' && define.amd) {\n\n        define([], function () {\n            return library;\n        });\n    } else {\n\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n        // original value. Returns a reference to the library object, to allow\n        // it to be used under a different name.\n        library._murmurHash3 = root.murmurHash3;\n\n        library.noConflict = function () {\n            root.murmurHash3 = library._murmurHash3;\n            library._murmurHash3 = undefined;\n            library.noConflict = undefined;\n\n            return library;\n        };\n\n        root.murmurHash3 = library;\n    }\n})(this);\n","'use strict'\n\nif (globalThis.fetch && globalThis.Headers && globalThis.Request && globalThis.Response) {\n  module.exports = {\n    default: globalThis.fetch,\n    Headers: globalThis.Headers,\n    Request: globalThis.Request,\n    Response: globalThis.Response\n  }\n} else {\n  module.exports = {\n    default: require('node-fetch').default,\n    Headers: require('node-fetch').Headers,\n    Request: require('node-fetch').Request,\n    Response: require('node-fetch').Response\n  }\n}\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var Netmask, atob, chr, chr0, chrA, chra, ip2long, long2ip;\n\n  long2ip = function(long) {\n    var a, b, c, d;\n    a = (long & (0xff << 24)) >>> 24;\n    b = (long & (0xff << 16)) >>> 16;\n    c = (long & (0xff << 8)) >>> 8;\n    d = long & 0xff;\n    return [a, b, c, d].join('.');\n  };\n\n  ip2long = function(ip) {\n    var b, c, i, j, n, ref;\n    b = [];\n    for (i = j = 0; j <= 3; i = ++j) {\n      if (ip.length === 0) {\n        break;\n      }\n      if (i > 0) {\n        if (ip[0] !== '.') {\n          throw new Error('Invalid IP');\n        }\n        ip = ip.substring(1);\n      }\n      ref = atob(ip), n = ref[0], c = ref[1];\n      ip = ip.substring(c);\n      b.push(n);\n    }\n    if (ip.length !== 0) {\n      throw new Error('Invalid IP');\n    }\n    switch (b.length) {\n      case 1:\n        if (b[0] > 0xFFFFFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return b[0] >>> 0;\n      case 2:\n        if (b[0] > 0xFF || b[1] > 0xFFFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1]) >>> 0;\n      case 3:\n        if (b[0] > 0xFF || b[1] > 0xFF || b[2] > 0xFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1] << 16 | b[2]) >>> 0;\n      case 4:\n        if (b[0] > 0xFF || b[1] > 0xFF || b[2] > 0xFF || b[3] > 0xFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1] << 16 | b[2] << 8 | b[3]) >>> 0;\n      default:\n        throw new Error('Invalid IP');\n    }\n  };\n\n  chr = function(b) {\n    return b.charCodeAt(0);\n  };\n\n  chr0 = chr('0');\n\n  chra = chr('a');\n\n  chrA = chr('A');\n\n  atob = function(s) {\n    var base, dmax, i, n, start;\n    n = 0;\n    base = 10;\n    dmax = '9';\n    i = 0;\n    if (s.length > 1 && s[i] === '0') {\n      if (s[i + 1] === 'x' || s[i + 1] === 'X') {\n        i += 2;\n        base = 16;\n      } else if ('0' <= s[i + 1] && s[i + 1] <= '9') {\n        i++;\n        base = 8;\n        dmax = '7';\n      }\n    }\n    start = i;\n    while (i < s.length) {\n      if ('0' <= s[i] && s[i] <= dmax) {\n        n = (n * base + (chr(s[i]) - chr0)) >>> 0;\n      } else if (base === 16) {\n        if ('a' <= s[i] && s[i] <= 'f') {\n          n = (n * base + (10 + chr(s[i]) - chra)) >>> 0;\n        } else if ('A' <= s[i] && s[i] <= 'F') {\n          n = (n * base + (10 + chr(s[i]) - chrA)) >>> 0;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n      if (n > 0xFFFFFFFF) {\n        throw new Error('too large');\n      }\n      i++;\n    }\n    if (i === start) {\n      throw new Error('empty octet');\n    }\n    return [n, i];\n  };\n\n  Netmask = (function() {\n    function Netmask(net, mask) {\n      var error, i, j, ref;\n      if (typeof net !== 'string') {\n        throw new Error(\"Missing `net' parameter\");\n      }\n      if (!mask) {\n        ref = net.split('/', 2), net = ref[0], mask = ref[1];\n      }\n      if (!mask) {\n        mask = 32;\n      }\n      if (typeof mask === 'string' && mask.indexOf('.') > -1) {\n        try {\n          this.maskLong = ip2long(mask);\n        } catch (error1) {\n          error = error1;\n          throw new Error(\"Invalid mask: \" + mask);\n        }\n        for (i = j = 32; j >= 0; i = --j) {\n          if (this.maskLong === (0xffffffff << (32 - i)) >>> 0) {\n            this.bitmask = i;\n            break;\n          }\n        }\n      } else if (mask || mask === 0) {\n        this.bitmask = parseInt(mask, 10);\n        this.maskLong = 0;\n        if (this.bitmask > 0) {\n          this.maskLong = (0xffffffff << (32 - this.bitmask)) >>> 0;\n        }\n      } else {\n        throw new Error(\"Invalid mask: empty\");\n      }\n      try {\n        this.netLong = (ip2long(net) & this.maskLong) >>> 0;\n      } catch (error1) {\n        error = error1;\n        throw new Error(\"Invalid net address: \" + net);\n      }\n      if (!(this.bitmask <= 32)) {\n        throw new Error(\"Invalid mask for ip4: \" + mask);\n      }\n      this.size = Math.pow(2, 32 - this.bitmask);\n      this.base = long2ip(this.netLong);\n      this.mask = long2ip(this.maskLong);\n      this.hostmask = long2ip(~this.maskLong);\n      this.first = this.bitmask <= 30 ? long2ip(this.netLong + 1) : this.base;\n      this.last = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 2) : long2ip(this.netLong + this.size - 1);\n      this.broadcast = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 1) : void 0;\n    }\n\n    Netmask.prototype.contains = function(ip) {\n      if (typeof ip === 'string' && (ip.indexOf('/') > 0 || ip.split('.').length !== 4)) {\n        ip = new Netmask(ip);\n      }\n      if (ip instanceof Netmask) {\n        return this.contains(ip.base) && this.contains(ip.broadcast || ip.last);\n      } else {\n        return (ip2long(ip) & this.maskLong) >>> 0 === (this.netLong & this.maskLong) >>> 0;\n      }\n    };\n\n    Netmask.prototype.next = function(count) {\n      if (count == null) {\n        count = 1;\n      }\n      return new Netmask(long2ip(this.netLong + (this.size * count)), this.mask);\n    };\n\n    Netmask.prototype.forEach = function(fn) {\n      var index, lastLong, long;\n      long = ip2long(this.first);\n      lastLong = ip2long(this.last);\n      index = 0;\n      while (long <= lastLong) {\n        fn(long2ip(long), long, index);\n        index++;\n        long++;\n      }\n    };\n\n    Netmask.prototype.toString = function() {\n      return this.base + \"/\" + this.bitmask;\n    };\n\n    return Netmask;\n\n  })();\n\n  exports.ip2long = ip2long;\n\n  exports.long2ip = long2ip;\n\n  exports.Netmask = Netmask;\n\n}).call(this);\n","module.exports = nextEvent\n\nfunction nextEvent (emitter, name) {\n  var next = null\n  emitter.on(name, function (data) {\n    if (!next) return\n    var fn = next\n    next = null\n    fn(data)\n  })\n\n  return function (once) {\n    next = once\n  }\n}\n","module.exports = function eventify(subject) {\n  validateSubject(subject);\n\n  var eventsStorage = createEventsStorage(subject);\n  subject.on = eventsStorage.on;\n  subject.off = eventsStorage.off;\n  subject.fire = eventsStorage.fire;\n  return subject;\n};\n\nfunction createEventsStorage(subject) {\n  // Store all event listeners to this hash. Key is event name, value is array\n  // of callback records.\n  //\n  // A callback record consists of callback function and its optional context:\n  // { 'eventName' => [{callback: function, ctx: object}] }\n  var registeredEvents = Object.create(null);\n\n  return {\n    on: function (eventName, callback, ctx) {\n      if (typeof callback !== 'function') {\n        throw new Error('callback is expected to be a function');\n      }\n      var handlers = registeredEvents[eventName];\n      if (!handlers) {\n        handlers = registeredEvents[eventName] = [];\n      }\n      handlers.push({callback: callback, ctx: ctx});\n\n      return subject;\n    },\n\n    off: function (eventName, callback) {\n      var wantToRemoveAll = (typeof eventName === 'undefined');\n      if (wantToRemoveAll) {\n        // Killing old events storage should be enough in this case:\n        registeredEvents = Object.create(null);\n        return subject;\n      }\n\n      if (registeredEvents[eventName]) {\n        var deleteAllCallbacksForEvent = (typeof callback !== 'function');\n        if (deleteAllCallbacksForEvent) {\n          delete registeredEvents[eventName];\n        } else {\n          var callbacks = registeredEvents[eventName];\n          for (var i = 0; i < callbacks.length; ++i) {\n            if (callbacks[i].callback === callback) {\n              callbacks.splice(i, 1);\n            }\n          }\n        }\n      }\n\n      return subject;\n    },\n\n    fire: function (eventName) {\n      var callbacks = registeredEvents[eventName];\n      if (!callbacks) {\n        return subject;\n      }\n\n      var fireArguments;\n      if (arguments.length > 1) {\n        fireArguments = Array.prototype.splice.call(arguments, 1);\n      }\n      for(var i = 0; i < callbacks.length; ++i) {\n        var callbackInfo = callbacks[i];\n        callbackInfo.callback.apply(callbackInfo.ctx, fireArguments);\n      }\n\n      return subject;\n    }\n  };\n}\n\nfunction validateSubject(subject) {\n  if (!subject) {\n    throw new Error('Eventify cannot use falsy object as events subject');\n  }\n  var reservedWords = ['on', 'fire', 'off'];\n  for (var i = 0; i < reservedWords.length; ++i) {\n    if (subject.hasOwnProperty(reservedWords[i])) {\n      throw new Error(\"Subject cannot be eventified, since it already has property '\" + reservedWords[i] + \"'\");\n    }\n  }\n}\n","module.exports = createLayout;\nmodule.exports.simulator = require('./lib/createPhysicsSimulator');\n\nvar eventify = require('ngraph.events');\n\n/**\n * Creates force based layout for a given graph.\n *\n * @param {ngraph.graph} graph which needs to be laid out\n * @param {object} physicsSettings if you need custom settings\n * for physics simulator you can pass your own settings here. If it's not passed\n * a default one will be created.\n */\nfunction createLayout(graph, physicsSettings) {\n  if (!graph) {\n    throw new Error('Graph structure cannot be undefined');\n  }\n\n  var createSimulator = (physicsSettings && physicsSettings.createSimulator) || require('./lib/createPhysicsSimulator');\n  var physicsSimulator = createSimulator(physicsSettings);\n  if (Array.isArray(physicsSettings)) throw new Error('Physics settings is expected to be an object');\n\n  var nodeMass = graph.version > 19 ? defaultSetNodeMass : defaultArrayNodeMass;\n  if (physicsSettings && typeof physicsSettings.nodeMass === 'function') {\n    nodeMass = physicsSettings.nodeMass;\n  }\n\n  var nodeBodies = new Map();\n  var springs = {};\n  var bodiesCount = 0;\n\n  var springTransform = physicsSimulator.settings.springTransform || noop;\n\n  // Initialize physics with what we have in the graph:\n  initPhysics();\n  listenToEvents();\n\n  var wasStable = false;\n\n  var api = {\n    /**\n     * Performs one step of iterative layout algorithm\n     *\n     * @returns {boolean} true if the system should be considered stable; False otherwise.\n     * The system is stable if no further call to `step()` can improve the layout.\n     */\n    step: function() {\n      if (bodiesCount === 0) {\n        updateStableStatus(true);\n        return true;\n      }\n\n      var lastMove = physicsSimulator.step();\n\n      // Save the movement in case if someone wants to query it in the step\n      // callback.\n      api.lastMove = lastMove;\n\n      // Allow listeners to perform low-level actions after nodes are updated.\n      api.fire('step');\n\n      var ratio = lastMove/bodiesCount;\n      var isStableNow = ratio <= 0.01; // TODO: The number is somewhat arbitrary...\n      updateStableStatus(isStableNow);\n\n\n      return isStableNow;\n    },\n\n    /**\n     * For a given `nodeId` returns position\n     */\n    getNodePosition: function (nodeId) {\n      return getInitializedBody(nodeId).pos;\n    },\n\n    /**\n     * Sets position of a node to a given coordinates\n     * @param {string} nodeId node identifier\n     * @param {number} x position of a node\n     * @param {number} y position of a node\n     * @param {number=} z position of node (only if applicable to body)\n     */\n    setNodePosition: function (nodeId) {\n      var body = getInitializedBody(nodeId);\n      body.setPosition.apply(body, Array.prototype.slice.call(arguments, 1));\n    },\n\n    /**\n     * @returns {Object} Link position by link id\n     * @returns {Object.from} {x, y} coordinates of link start\n     * @returns {Object.to} {x, y} coordinates of link end\n     */\n    getLinkPosition: function (linkId) {\n      var spring = springs[linkId];\n      if (spring) {\n        return {\n          from: spring.from.pos,\n          to: spring.to.pos\n        };\n      }\n    },\n\n    /**\n     * @returns {Object} area required to fit in the graph. Object contains\n     * `x1`, `y1` - top left coordinates\n     * `x2`, `y2` - bottom right coordinates\n     */\n    getGraphRect: function () {\n      return physicsSimulator.getBBox();\n    },\n\n    /**\n     * Iterates over each body in the layout simulator and performs a callback(body, nodeId)\n     */\n    forEachBody: forEachBody,\n\n    /*\n     * Requests layout algorithm to pin/unpin node to its current position\n     * Pinned nodes should not be affected by layout algorithm and always\n     * remain at their position\n     */\n    pinNode: function (node, isPinned) {\n      var body = getInitializedBody(node.id);\n       body.isPinned = !!isPinned;\n    },\n\n    /**\n     * Checks whether given graph's node is currently pinned\n     */\n    isNodePinned: function (node) {\n      return getInitializedBody(node.id).isPinned;\n    },\n\n    /**\n     * Request to release all resources\n     */\n    dispose: function() {\n      graph.off('changed', onGraphChanged);\n      api.fire('disposed');\n    },\n\n    /**\n     * Gets physical body for a given node id. If node is not found undefined\n     * value is returned.\n     */\n    getBody: getBody,\n\n    /**\n     * Gets spring for a given edge.\n     *\n     * @param {string} linkId link identifer. If two arguments are passed then\n     * this argument is treated as formNodeId\n     * @param {string=} toId when defined this parameter denotes head of the link\n     * and first argument is treated as tail of the link (fromId)\n     */\n    getSpring: getSpring,\n\n    /**\n     * Returns length of cumulative force vector. The closer this to zero - the more stable the system is\n     */\n    getForceVectorLength: getForceVectorLength,\n\n    /**\n     * [Read only] Gets current physics simulator\n     */\n    simulator: physicsSimulator,\n\n    /**\n     * Gets the graph that was used for layout\n     */\n    graph: graph,\n\n    /**\n     * Gets amount of movement performed during last step operation\n     */\n    lastMove: 0\n  };\n\n  eventify(api);\n\n  return api;\n\n  function updateStableStatus(isStableNow) {\n    if (wasStable !== isStableNow) {\n      wasStable = isStableNow;\n      onStableChanged(isStableNow);\n    }\n  }\n\n  function forEachBody(cb) {\n    nodeBodies.forEach(cb);\n  }\n\n  function getForceVectorLength() {\n    var fx = 0, fy = 0;\n    forEachBody(function(body) {\n      fx += Math.abs(body.force.x);\n      fy += Math.abs(body.force.y);\n    });\n    return Math.sqrt(fx * fx + fy * fy);\n  }\n\n  function getSpring(fromId, toId) {\n    var linkId;\n    if (toId === undefined) {\n      if (typeof fromId !== 'object') {\n        // assume fromId as a linkId:\n        linkId = fromId;\n      } else {\n        // assume fromId to be a link object:\n        linkId = fromId.id;\n      }\n    } else {\n      // toId is defined, should grab link:\n      var link = graph.hasLink(fromId, toId);\n      if (!link) return;\n      linkId = link.id;\n    }\n\n    return springs[linkId];\n  }\n\n  function getBody(nodeId) {\n    return nodeBodies.get(nodeId);\n  }\n\n  function listenToEvents() {\n    graph.on('changed', onGraphChanged);\n  }\n\n  function onStableChanged(isStable) {\n    api.fire('stable', isStable);\n  }\n\n  function onGraphChanged(changes) {\n    for (var i = 0; i < changes.length; ++i) {\n      var change = changes[i];\n      if (change.changeType === 'add') {\n        if (change.node) {\n          initBody(change.node.id);\n        }\n        if (change.link) {\n          initLink(change.link);\n        }\n      } else if (change.changeType === 'remove') {\n        if (change.node) {\n          releaseNode(change.node);\n        }\n        if (change.link) {\n          releaseLink(change.link);\n        }\n      }\n    }\n    bodiesCount = graph.getNodesCount();\n  }\n\n  function initPhysics() {\n    bodiesCount = 0;\n\n    graph.forEachNode(function (node) {\n      initBody(node.id);\n      bodiesCount += 1;\n    });\n\n    graph.forEachLink(initLink);\n  }\n\n  function initBody(nodeId) {\n    var body = nodeBodies.get(nodeId);\n    if (!body) {\n      var node = graph.getNode(nodeId);\n      if (!node) {\n        throw new Error('initBody() was called with unknown node id');\n      }\n\n      var pos = node.position;\n      if (!pos) {\n        var neighbors = getNeighborBodies(node);\n        pos = physicsSimulator.getBestNewBodyPosition(neighbors);\n      }\n\n      body = physicsSimulator.addBodyAt(pos);\n      body.id = nodeId;\n\n      nodeBodies.set(nodeId, body);\n      updateBodyMass(nodeId);\n\n      if (isNodeOriginallyPinned(node)) {\n        body.isPinned = true;\n      }\n    }\n  }\n\n  function releaseNode(node) {\n    var nodeId = node.id;\n    var body = nodeBodies.get(nodeId);\n    if (body) {\n      nodeBodies.delete(nodeId);\n      physicsSimulator.removeBody(body);\n    }\n  }\n\n  function initLink(link) {\n    updateBodyMass(link.fromId);\n    updateBodyMass(link.toId);\n\n    var fromBody = nodeBodies.get(link.fromId),\n        toBody  = nodeBodies.get(link.toId),\n        spring = physicsSimulator.addSpring(fromBody, toBody, link.length);\n\n    springTransform(link, spring);\n\n    springs[link.id] = spring;\n  }\n\n  function releaseLink(link) {\n    var spring = springs[link.id];\n    if (spring) {\n      var from = graph.getNode(link.fromId),\n          to = graph.getNode(link.toId);\n\n      if (from) updateBodyMass(from.id);\n      if (to) updateBodyMass(to.id);\n\n      delete springs[link.id];\n\n      physicsSimulator.removeSpring(spring);\n    }\n  }\n\n  function getNeighborBodies(node) {\n    // TODO: Could probably be done better on memory\n    var neighbors = [];\n    if (!node.links) {\n      return neighbors;\n    }\n    var maxNeighbors = Math.min(node.links.length, 2);\n    for (var i = 0; i < maxNeighbors; ++i) {\n      var link = node.links[i];\n      var otherBody = link.fromId !== node.id ? nodeBodies.get(link.fromId) : nodeBodies.get(link.toId);\n      if (otherBody && otherBody.pos) {\n        neighbors.push(otherBody);\n      }\n    }\n\n    return neighbors;\n  }\n\n  function updateBodyMass(nodeId) {\n    var body = nodeBodies.get(nodeId);\n    body.mass = nodeMass(nodeId);\n    if (Number.isNaN(body.mass)) {\n      throw new Error('Node mass should be a number');\n    }\n  }\n\n  /**\n   * Checks whether graph node has in its settings pinned attribute,\n   * which means layout algorithm cannot move it. Node can be marked\n   * as pinned, if it has \"isPinned\" attribute, or when node.data has it.\n   *\n   * @param {Object} node a graph node to check\n   * @return {Boolean} true if node should be treated as pinned; false otherwise.\n   */\n  function isNodeOriginallyPinned(node) {\n    return (node && (node.isPinned || (node.data && node.data.isPinned)));\n  }\n\n  function getInitializedBody(nodeId) {\n    var body = nodeBodies.get(nodeId);\n    if (!body) {\n      initBody(nodeId);\n      body = nodeBodies.get(nodeId);\n    }\n    return body;\n  }\n\n  /**\n   * Calculates mass of a body, which corresponds to node with given id.\n   *\n   * @param {String|Number} nodeId identifier of a node, for which body mass needs to be calculated\n   * @returns {Number} recommended mass of the body;\n   */\n  function defaultArrayNodeMass(nodeId) {\n    // This function is for older versions of ngraph.graph.\n    var links = graph.getLinks(nodeId);\n    if (!links) return 1;\n    return 1 + links.length / 3.0;\n  }\n\n  function defaultSetNodeMass(nodeId) {\n    var links = graph.getLinks(nodeId);\n    if (!links) return 1;\n    return 1 + links.size / 3.0;\n  }\n}\n\nfunction noop() { }\n","const getVariableName = require('./getVariableName');\n\nmodule.exports = function createPatternBuilder(dimension) {\n\n  return pattern;\n  \n  function pattern(template, config) {\n    let indent = (config && config.indent) || 0;\n    let join = (config && config.join !== undefined) ? config.join : '\\n';\n    let indentString = Array(indent + 1).join(' ');\n    let buffer = [];\n    for (let i = 0; i < dimension; ++i) {\n      let variableName = getVariableName(i);\n      let prefix = (i === 0) ? '' : indentString;\n      buffer.push(prefix + template.replace(/{var}/g, variableName));\n    }\n    return buffer.join(join);\n  }\n};\n","\nmodule.exports = generateBoundsFunction;\nmodule.exports.generateFunctionBody = generateBoundsFunctionBody;\n\nconst createPatternBuilder = require('./createPatternBuilder');\n\nfunction generateBoundsFunction(dimension) {\n  let code = generateBoundsFunctionBody(dimension);\n  return new Function('bodies', 'settings', 'random', code);\n}\n\nfunction generateBoundsFunctionBody(dimension) {\n  let pattern = createPatternBuilder(dimension);\n\n  let code = `\n  var boundingBox = {\n    ${pattern('min_{var}: 0, max_{var}: 0,', {indent: 4})}\n  };\n\n  return {\n    box: boundingBox,\n\n    update: updateBoundingBox,\n\n    reset: resetBoundingBox,\n\n    getBestNewPosition: function (neighbors) {\n      var ${pattern('base_{var} = 0', {join: ', '})};\n\n      if (neighbors.length) {\n        for (var i = 0; i < neighbors.length; ++i) {\n          let neighborPos = neighbors[i].pos;\n          ${pattern('base_{var} += neighborPos.{var};', {indent: 10})}\n        }\n\n        ${pattern('base_{var} /= neighbors.length;', {indent: 8})}\n      } else {\n        ${pattern('base_{var} = (boundingBox.min_{var} + boundingBox.max_{var}) / 2;', {indent: 8})}\n      }\n\n      var springLength = settings.springLength;\n      return {\n        ${pattern('{var}: base_{var} + (random.nextDouble() - 0.5) * springLength,', {indent: 8})}\n      };\n    }\n  };\n\n  function updateBoundingBox() {\n    var i = bodies.length;\n    if (i === 0) return; // No bodies - no borders.\n\n    ${pattern('var max_{var} = -Infinity;', {indent: 4})}\n    ${pattern('var min_{var} = Infinity;', {indent: 4})}\n\n    while(i--) {\n      // this is O(n), it could be done faster with quadtree, if we check the root node bounds\n      var bodyPos = bodies[i].pos;\n      ${pattern('if (bodyPos.{var} < min_{var}) min_{var} = bodyPos.{var};', {indent: 6})}\n      ${pattern('if (bodyPos.{var} > max_{var}) max_{var} = bodyPos.{var};', {indent: 6})}\n    }\n\n    ${pattern('boundingBox.min_{var} = min_{var};', {indent: 4})}\n    ${pattern('boundingBox.max_{var} = max_{var};', {indent: 4})}\n  }\n\n  function resetBoundingBox() {\n    ${pattern('boundingBox.min_{var} = boundingBox.max_{var} = 0;', {indent: 4})}\n  }\n`;\n  return code;\n}\n","\nconst createPatternBuilder = require('./createPatternBuilder');\n\nmodule.exports = generateCreateBodyFunction;\nmodule.exports.generateCreateBodyFunctionBody = generateCreateBodyFunctionBody;\n\n// InlineTransform: getVectorCode\nmodule.exports.getVectorCode = getVectorCode;\n// InlineTransform: getBodyCode\nmodule.exports.getBodyCode = getBodyCode;\n// InlineTransformExport: module.exports = function() { return Body; }\n\nfunction generateCreateBodyFunction(dimension, debugSetters) {\n  let code = generateCreateBodyFunctionBody(dimension, debugSetters);\n  let {Body} = (new Function(code))();\n  return Body;\n}\n\nfunction generateCreateBodyFunctionBody(dimension, debugSetters) {\n  let code = `\n${getVectorCode(dimension, debugSetters)}\n${getBodyCode(dimension, debugSetters)}\nreturn {Body: Body, Vector: Vector};\n`;\n  return code;\n}\n\nfunction getBodyCode(dimension) {\n  let pattern = createPatternBuilder(dimension);\n  let variableList = pattern('{var}', {join: ', '});\n  return `\nfunction Body(${variableList}) {\n  this.isPinned = false;\n  this.pos = new Vector(${variableList});\n  this.force = new Vector();\n  this.velocity = new Vector();\n  this.mass = 1;\n\n  this.springCount = 0;\n  this.springLength = 0;\n}\n\nBody.prototype.reset = function() {\n  this.force.reset();\n  this.springCount = 0;\n  this.springLength = 0;\n}\n\nBody.prototype.setPosition = function (${variableList}) {\n  ${pattern('this.pos.{var} = {var} || 0;', {indent: 2})}\n};`;\n}\n\nfunction getVectorCode(dimension, debugSetters) {\n  let pattern = createPatternBuilder(dimension);\n  let setters = '';\n  if (debugSetters) {\n    setters = `${pattern(\"\\n\\\n   var v{var};\\n\\\nObject.defineProperty(this, '{var}', {\\n\\\n  set: function(v) { \\n\\\n    if (!Number.isFinite(v)) throw new Error('Cannot set non-numbers to {var}');\\n\\\n    v{var} = v; \\n\\\n  },\\n\\\n  get: function() { return v{var}; }\\n\\\n});\")}`;\n  }\n\n  let variableList = pattern('{var}', {join: ', '});\n  return `function Vector(${variableList}) {\n  ${setters}\n    if (typeof arguments[0] === 'object') {\n      // could be another vector\n      let v = arguments[0];\n      ${pattern('if (!Number.isFinite(v.{var})) throw new Error(\"Expected value is not a finite number at Vector constructor ({var})\");', {indent: 4})}\n      ${pattern('this.{var} = v.{var};', {indent: 4})}\n    } else {\n      ${pattern('this.{var} = typeof {var} === \"number\" ? {var} : 0;', {indent: 4})}\n    }\n  }\n  \n  Vector.prototype.reset = function () {\n    ${pattern('this.{var} = ', {join: ''})}0;\n  };`;\n}","const createPatternBuilder = require('./createPatternBuilder');\n\nmodule.exports = generateCreateDragForceFunction;\nmodule.exports.generateCreateDragForceFunctionBody = generateCreateDragForceFunctionBody;\n\nfunction generateCreateDragForceFunction(dimension) {\n  let code = generateCreateDragForceFunctionBody(dimension);\n  return new Function('options', code);\n}\n\nfunction generateCreateDragForceFunctionBody(dimension) {\n  let pattern = createPatternBuilder(dimension);\n  let code = `\n  if (!Number.isFinite(options.dragCoefficient)) throw new Error('dragCoefficient is not a finite number');\n\n  return {\n    update: function(body) {\n      ${pattern('body.force.{var} -= options.dragCoefficient * body.velocity.{var};', {indent: 6})}\n    }\n  };\n`;\n  return code;\n}\n","const createPatternBuilder = require('./createPatternBuilder');\n\nmodule.exports = generateCreateSpringForceFunction;\nmodule.exports.generateCreateSpringForceFunctionBody = generateCreateSpringForceFunctionBody;\n\nfunction generateCreateSpringForceFunction(dimension) {\n  let code = generateCreateSpringForceFunctionBody(dimension);\n  return new Function('options', 'random', code);\n}\n\nfunction generateCreateSpringForceFunctionBody(dimension) {\n  let pattern = createPatternBuilder(dimension);\n  let code = `\n  if (!Number.isFinite(options.springCoefficient)) throw new Error('Spring coefficient is not a number');\n  if (!Number.isFinite(options.springLength)) throw new Error('Spring length is not a number');\n\n  return {\n    /**\n     * Updates forces acting on a spring\n     */\n    update: function (spring) {\n      var body1 = spring.from;\n      var body2 = spring.to;\n      var length = spring.length < 0 ? options.springLength : spring.length;\n      ${pattern('var d{var} = body2.pos.{var} - body1.pos.{var};', {indent: 6})}\n      var r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n\n      if (r === 0) {\n        ${pattern('d{var} = (random.nextDouble() - 0.5) / 50;', {indent: 8})}\n        r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n      }\n\n      var d = r - length;\n      var coefficient = ((spring.coefficient > 0) ? spring.coefficient : options.springCoefficient) * d / r;\n\n      ${pattern('body1.force.{var} += coefficient * d{var}', {indent: 6})};\n      body1.springCount += 1;\n      body1.springLength += r;\n\n      ${pattern('body2.force.{var} -= coefficient * d{var}', {indent: 6})};\n      body2.springCount += 1;\n      body2.springLength += r;\n    }\n  };\n`;\n  return code;\n}\n","const createPatternBuilder = require('./createPatternBuilder');\n\nmodule.exports = generateIntegratorFunction;\nmodule.exports.generateIntegratorFunctionBody = generateIntegratorFunctionBody;\n\nfunction generateIntegratorFunction(dimension) {\n  let code = generateIntegratorFunctionBody(dimension);\n  return new Function('bodies', 'timeStep', 'adaptiveTimeStepWeight', code);\n}\n\nfunction generateIntegratorFunctionBody(dimension) {\n  let pattern = createPatternBuilder(dimension);\n  let code = `\n  var length = bodies.length;\n  if (length === 0) return 0;\n\n  ${pattern('var d{var} = 0, t{var} = 0;', {indent: 2})}\n\n  for (var i = 0; i < length; ++i) {\n    var body = bodies[i];\n    if (body.isPinned) continue;\n\n    if (adaptiveTimeStepWeight && body.springCount) {\n      timeStep = (adaptiveTimeStepWeight * body.springLength/body.springCount);\n    }\n\n    var coeff = timeStep / body.mass;\n\n    ${pattern('body.velocity.{var} += coeff * body.force.{var};', {indent: 4})}\n    ${pattern('var v{var} = body.velocity.{var};', {indent: 4})}\n    var v = Math.sqrt(${pattern('v{var} * v{var}', {join: ' + '})});\n\n    if (v > 1) {\n      // We normalize it so that we move within timeStep range. \n      // for the case when v <= 1 - we let velocity to fade out.\n      ${pattern('body.velocity.{var} = v{var} / v;', {indent: 6})}\n    }\n\n    ${pattern('d{var} = timeStep * body.velocity.{var};', {indent: 4})}\n\n    ${pattern('body.pos.{var} += d{var};', {indent: 4})}\n\n    ${pattern('t{var} += Math.abs(d{var});', {indent: 4})}\n  }\n\n  return (${pattern('t{var} * t{var}', {join: ' + '})})/length;\n`;\n  return code;\n}\n","const createPatternBuilder = require('./createPatternBuilder');\nconst getVariableName = require('./getVariableName');\n\nmodule.exports = generateQuadTreeFunction;\nmodule.exports.generateQuadTreeFunctionBody = generateQuadTreeFunctionBody;\n\n// These exports are for InlineTransform tool.\n// InlineTransform: getInsertStackCode\nmodule.exports.getInsertStackCode = getInsertStackCode;\n// InlineTransform: getQuadNodeCode\nmodule.exports.getQuadNodeCode = getQuadNodeCode;\n// InlineTransform: isSamePosition\nmodule.exports.isSamePosition = isSamePosition;\n// InlineTransform: getChildBodyCode\nmodule.exports.getChildBodyCode = getChildBodyCode;\n// InlineTransform: setChildBodyCode\nmodule.exports.setChildBodyCode = setChildBodyCode;\n\nfunction generateQuadTreeFunction(dimension) {\n  let code = generateQuadTreeFunctionBody(dimension);\n  return (new Function(code))();\n}\n\nfunction generateQuadTreeFunctionBody(dimension) {\n  let pattern = createPatternBuilder(dimension);\n  let quadCount = Math.pow(2, dimension);\n\n  let code = `\n${getInsertStackCode()}\n${getQuadNodeCode(dimension)}\n${isSamePosition(dimension)}\n${getChildBodyCode(dimension)}\n${setChildBodyCode(dimension)}\n\nfunction createQuadTree(options, random) {\n  options = options || {};\n  options.gravity = typeof options.gravity === 'number' ? options.gravity : -1;\n  options.theta = typeof options.theta === 'number' ? options.theta : 0.8;\n\n  var gravity = options.gravity;\n  var updateQueue = [];\n  var insertStack = new InsertStack();\n  var theta = options.theta;\n\n  var nodesCache = [];\n  var currentInCache = 0;\n  var root = newNode();\n\n  return {\n    insertBodies: insertBodies,\n\n    /**\n     * Gets root node if it is present\n     */\n    getRoot: function() {\n      return root;\n    },\n\n    updateBodyForce: update,\n\n    options: function(newOptions) {\n      if (newOptions) {\n        if (typeof newOptions.gravity === 'number') {\n          gravity = newOptions.gravity;\n        }\n        if (typeof newOptions.theta === 'number') {\n          theta = newOptions.theta;\n        }\n\n        return this;\n      }\n\n      return {\n        gravity: gravity,\n        theta: theta\n      };\n    }\n  };\n\n  function newNode() {\n    // To avoid pressure on GC we reuse nodes.\n    var node = nodesCache[currentInCache];\n    if (node) {\n${assignQuads('      node.')}\n      node.body = null;\n      node.mass = ${pattern('node.mass_{var} = ', {join: ''})}0;\n      ${pattern('node.min_{var} = node.max_{var} = ', {join: ''})}0;\n    } else {\n      node = new QuadNode();\n      nodesCache[currentInCache] = node;\n    }\n\n    ++currentInCache;\n    return node;\n  }\n\n  function update(sourceBody) {\n    var queue = updateQueue;\n    var v;\n    ${pattern('var d{var};', {indent: 4})}\n    var r; \n    ${pattern('var f{var} = 0;', {indent: 4})}\n    var queueLength = 1;\n    var shiftIdx = 0;\n    var pushIdx = 1;\n\n    queue[0] = root;\n\n    while (queueLength) {\n      var node = queue[shiftIdx];\n      var body = node.body;\n\n      queueLength -= 1;\n      shiftIdx += 1;\n      var differentBody = (body !== sourceBody);\n      if (body && differentBody) {\n        // If the current node is a leaf node (and it is not source body),\n        // calculate the force exerted by the current node on body, and add this\n        // amount to body's net force.\n        ${pattern('d{var} = body.pos.{var} - sourceBody.pos.{var};', {indent: 8})}\n        r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n\n        if (r === 0) {\n          // Poor man's protection against zero distance.\n          ${pattern('d{var} = (random.nextDouble() - 0.5) / 50;', {indent: 10})}\n          r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n        }\n\n        // This is standard gravitation force calculation but we divide\n        // by r^3 to save two operations when normalizing force vector.\n        v = gravity * body.mass * sourceBody.mass / (r * r * r);\n        ${pattern('f{var} += v * d{var};', {indent: 8})}\n      } else if (differentBody) {\n        // Otherwise, calculate the ratio s / r,  where s is the width of the region\n        // represented by the internal node, and r is the distance between the body\n        // and the node's center-of-mass\n        ${pattern('d{var} = node.mass_{var} / node.mass - sourceBody.pos.{var};', {indent: 8})}\n        r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n\n        if (r === 0) {\n          // Sorry about code duplication. I don't want to create many functions\n          // right away. Just want to see performance first.\n          ${pattern('d{var} = (random.nextDouble() - 0.5) / 50;', {indent: 10})}\n          r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n        }\n        // If s / r < θ, treat this internal node as a single body, and calculate the\n        // force it exerts on sourceBody, and add this amount to sourceBody's net force.\n        if ((node.max_${getVariableName(0)} - node.min_${getVariableName(0)}) / r < theta) {\n          // in the if statement above we consider node's width only\n          // because the region was made into square during tree creation.\n          // Thus there is no difference between using width or height.\n          v = gravity * node.mass * sourceBody.mass / (r * r * r);\n          ${pattern('f{var} += v * d{var};', {indent: 10})}\n        } else {\n          // Otherwise, run the procedure recursively on each of the current node's children.\n\n          // I intentionally unfolded this loop, to save several CPU cycles.\n${runRecursiveOnChildren()}\n        }\n      }\n    }\n\n    ${pattern('sourceBody.force.{var} += f{var};', {indent: 4})}\n  }\n\n  function insertBodies(bodies) {\n    ${pattern('var {var}min = Number.MAX_VALUE;', {indent: 4})}\n    ${pattern('var {var}max = Number.MIN_VALUE;', {indent: 4})}\n    var i = bodies.length;\n\n    // To reduce quad tree depth we are looking for exact bounding box of all particles.\n    while (i--) {\n      var pos = bodies[i].pos;\n      ${pattern('if (pos.{var} < {var}min) {var}min = pos.{var};', {indent: 6})}\n      ${pattern('if (pos.{var} > {var}max) {var}max = pos.{var};', {indent: 6})}\n    }\n\n    // Makes the bounds square.\n    var maxSideLength = -Infinity;\n    ${pattern('if ({var}max - {var}min > maxSideLength) maxSideLength = {var}max - {var}min ;', {indent: 4})}\n\n    currentInCache = 0;\n    root = newNode();\n    ${pattern('root.min_{var} = {var}min;', {indent: 4})}\n    ${pattern('root.max_{var} = {var}min + maxSideLength;', {indent: 4})}\n\n    i = bodies.length - 1;\n    if (i >= 0) {\n      root.body = bodies[i];\n    }\n    while (i--) {\n      insert(bodies[i], root);\n    }\n  }\n\n  function insert(newBody) {\n    insertStack.reset();\n    insertStack.push(root, newBody);\n\n    while (!insertStack.isEmpty()) {\n      var stackItem = insertStack.pop();\n      var node = stackItem.node;\n      var body = stackItem.body;\n\n      if (!node.body) {\n        // This is internal node. Update the total mass of the node and center-of-mass.\n        ${pattern('var {var} = body.pos.{var};', {indent: 8})}\n        node.mass += body.mass;\n        ${pattern('node.mass_{var} += body.mass * {var};', {indent: 8})}\n\n        // Recursively insert the body in the appropriate quadrant.\n        // But first find the appropriate quadrant.\n        var quadIdx = 0; // Assume we are in the 0's quad.\n        ${pattern('var min_{var} = node.min_{var};', {indent: 8})}\n        ${pattern('var max_{var} = (min_{var} + node.max_{var}) / 2;', {indent: 8})}\n\n${assignInsertionQuadIndex(8)}\n\n        var child = getChild(node, quadIdx);\n\n        if (!child) {\n          // The node is internal but this quadrant is not taken. Add\n          // subnode to it.\n          child = newNode();\n          ${pattern('child.min_{var} = min_{var};', {indent: 10})}\n          ${pattern('child.max_{var} = max_{var};', {indent: 10})}\n          child.body = body;\n\n          setChild(node, quadIdx, child);\n        } else {\n          // continue searching in this quadrant.\n          insertStack.push(child, body);\n        }\n      } else {\n        // We are trying to add to the leaf node.\n        // We have to convert current leaf into internal node\n        // and continue adding two nodes.\n        var oldBody = node.body;\n        node.body = null; // internal nodes do not cary bodies\n\n        if (isSamePosition(oldBody.pos, body.pos)) {\n          // Prevent infinite subdivision by bumping one node\n          // anywhere in this quadrant\n          var retriesCount = 3;\n          do {\n            var offset = random.nextDouble();\n            ${pattern('var d{var} = (node.max_{var} - node.min_{var}) * offset;', {indent: 12})}\n\n            ${pattern('oldBody.pos.{var} = node.min_{var} + d{var};', {indent: 12})}\n            retriesCount -= 1;\n            // Make sure we don't bump it out of the box. If we do, next iteration should fix it\n          } while (retriesCount > 0 && isSamePosition(oldBody.pos, body.pos));\n\n          if (retriesCount === 0 && isSamePosition(oldBody.pos, body.pos)) {\n            // This is very bad, we ran out of precision.\n            // if we do not return from the method we'll get into\n            // infinite loop here. So we sacrifice correctness of layout, and keep the app running\n            // Next layout iteration should get larger bounding box in the first step and fix this\n            return;\n          }\n        }\n        // Next iteration should subdivide node further.\n        insertStack.push(node, oldBody);\n        insertStack.push(node, body);\n      }\n    }\n  }\n}\nreturn createQuadTree;\n\n`;\n  return code;\n\n\n  function assignInsertionQuadIndex(indentCount) {\n    let insertionCode = [];\n    let indent = Array(indentCount + 1).join(' ');\n    for (let i = 0; i < dimension; ++i) {\n      insertionCode.push(indent + `if (${getVariableName(i)} > max_${getVariableName(i)}) {`);\n      insertionCode.push(indent + `  quadIdx = quadIdx + ${Math.pow(2, i)};`);\n      insertionCode.push(indent + `  min_${getVariableName(i)} = max_${getVariableName(i)};`);\n      insertionCode.push(indent + `  max_${getVariableName(i)} = node.max_${getVariableName(i)};`);\n      insertionCode.push(indent + `}`);\n    }\n    return insertionCode.join('\\n');\n    // if (x > max_x) { // somewhere in the eastern part.\n    //   quadIdx = quadIdx + 1;\n    //   left = right;\n    //   right = node.right;\n    // }\n  }\n\n  function runRecursiveOnChildren() {\n    let indent = Array(11).join(' ');\n    let recursiveCode = [];\n    for (let i = 0; i < quadCount; ++i) {\n      recursiveCode.push(indent + `if (node.quad${i}) {`);\n      recursiveCode.push(indent + `  queue[pushIdx] = node.quad${i};`);\n      recursiveCode.push(indent + `  queueLength += 1;`);\n      recursiveCode.push(indent + `  pushIdx += 1;`);\n      recursiveCode.push(indent + `}`);\n    }\n    return recursiveCode.join('\\n');\n    // if (node.quad0) {\n    //   queue[pushIdx] = node.quad0;\n    //   queueLength += 1;\n    //   pushIdx += 1;\n    // }\n  }\n\n  function assignQuads(indent) {\n    // this.quad0 = null;\n    // this.quad1 = null;\n    // this.quad2 = null;\n    // this.quad3 = null;\n    let quads = [];\n    for (let i = 0; i < quadCount; ++i) {\n      quads.push(`${indent}quad${i} = null;`);\n    }\n    return quads.join('\\n');\n  }\n}\n\nfunction isSamePosition(dimension) {\n  let pattern = createPatternBuilder(dimension);\n  return `\n  function isSamePosition(point1, point2) {\n    ${pattern('var d{var} = Math.abs(point1.{var} - point2.{var});', {indent: 2})}\n  \n    return ${pattern('d{var} < 1e-8', {join: ' && '})};\n  }  \n`;\n}\n\nfunction setChildBodyCode(dimension) {\n  var quadCount = Math.pow(2, dimension);\n  return `\nfunction setChild(node, idx, child) {\n  ${setChildBody()}\n}`;\n  function setChildBody() {\n    let childBody = [];\n    for (let i = 0; i < quadCount; ++i) {\n      let prefix = (i === 0) ? '  ' : '  else ';\n      childBody.push(`${prefix}if (idx === ${i}) node.quad${i} = child;`);\n    }\n\n    return childBody.join('\\n');\n    // if (idx === 0) node.quad0 = child;\n    // else if (idx === 1) node.quad1 = child;\n    // else if (idx === 2) node.quad2 = child;\n    // else if (idx === 3) node.quad3 = child;\n  }\n}\n\nfunction getChildBodyCode(dimension) {\n  return `function getChild(node, idx) {\n${getChildBody()}\n  return null;\n}`;\n\n  function getChildBody() {\n    let childBody = [];\n    let quadCount = Math.pow(2, dimension);\n    for (let i = 0; i < quadCount; ++i) {\n      childBody.push(`  if (idx === ${i}) return node.quad${i};`);\n    }\n\n    return childBody.join('\\n');\n    // if (idx === 0) return node.quad0;\n    // if (idx === 1) return node.quad1;\n    // if (idx === 2) return node.quad2;\n    // if (idx === 3) return node.quad3;\n  }\n}\n\nfunction getQuadNodeCode(dimension) {\n  let pattern = createPatternBuilder(dimension);\n  let quadCount = Math.pow(2, dimension);\n  var quadNodeCode = `\nfunction QuadNode() {\n  // body stored inside this node. In quad tree only leaf nodes (by construction)\n  // contain bodies:\n  this.body = null;\n\n  // Child nodes are stored in quads. Each quad is presented by number:\n  // 0 | 1\n  // -----\n  // 2 | 3\n${assignQuads('  this.')}\n\n  // Total mass of current node\n  this.mass = 0;\n\n  // Center of mass coordinates\n  ${pattern('this.mass_{var} = 0;', {indent: 2})}\n\n  // bounding box coordinates\n  ${pattern('this.min_{var} = 0;', {indent: 2})}\n  ${pattern('this.max_{var} = 0;', {indent: 2})}\n}\n`;\n  return quadNodeCode;\n\n  function assignQuads(indent) {\n    // this.quad0 = null;\n    // this.quad1 = null;\n    // this.quad2 = null;\n    // this.quad3 = null;\n    let quads = [];\n    for (let i = 0; i < quadCount; ++i) {\n      quads.push(`${indent}quad${i} = null;`);\n    }\n    return quads.join('\\n');\n  }\n}\n\nfunction getInsertStackCode() {\n  return `\n/**\n * Our implementation of QuadTree is non-recursive to avoid GC hit\n * This data structure represent stack of elements\n * which we are trying to insert into quad tree.\n */\nfunction InsertStack () {\n    this.stack = [];\n    this.popIdx = 0;\n}\n\nInsertStack.prototype = {\n    isEmpty: function() {\n        return this.popIdx === 0;\n    },\n    push: function (node, body) {\n        var item = this.stack[this.popIdx];\n        if (!item) {\n            // we are trying to avoid memory pressure: create new element\n            // only when absolutely necessary\n            this.stack[this.popIdx] = new InsertStackElement(node, body);\n        } else {\n            item.node = node;\n            item.body = body;\n        }\n        ++this.popIdx;\n    },\n    pop: function () {\n        if (this.popIdx > 0) {\n            return this.stack[--this.popIdx];\n        }\n    },\n    reset: function () {\n        this.popIdx = 0;\n    }\n};\n\nfunction InsertStackElement(node, body) {\n    this.node = node; // QuadTree node\n    this.body = body; // physical body which needs to be inserted to node\n}\n`;\n}","module.exports = function getVariableName(index) {\n  if (index === 0) return 'x';\n  if (index === 1) return 'y';\n  if (index === 2) return 'z';\n  return 'c' + (index + 1);\n};","/**\n * Manages a simulation of physical forces acting on bodies and springs.\n */\nmodule.exports = createPhysicsSimulator;\n\nvar generateCreateBodyFunction = require('./codeGenerators/generateCreateBody');\nvar generateQuadTreeFunction = require('./codeGenerators/generateQuadTree');\nvar generateBoundsFunction = require('./codeGenerators/generateBounds');\nvar generateCreateDragForceFunction = require('./codeGenerators/generateCreateDragForce');\nvar generateCreateSpringForceFunction = require('./codeGenerators/generateCreateSpringForce');\nvar generateIntegratorFunction = require('./codeGenerators/generateIntegrator');\n\nvar dimensionalCache = {};\n\nfunction createPhysicsSimulator(settings) {\n  var Spring = require('./spring');\n  var merge = require('ngraph.merge');\n  var eventify = require('ngraph.events');\n  if (settings) {\n    // Check for names from older versions of the layout\n    if (settings.springCoeff !== undefined) throw new Error('springCoeff was renamed to springCoefficient');\n    if (settings.dragCoeff !== undefined) throw new Error('dragCoeff was renamed to dragCoefficient');\n  }\n\n  settings = merge(settings, {\n      /**\n       * Ideal length for links (springs in physical model).\n       */\n      springLength: 10,\n\n      /**\n       * Hook's law coefficient. 1 - solid spring.\n       */\n      springCoefficient: 0.8, \n\n      /**\n       * Coulomb's law coefficient. It's used to repel nodes thus should be negative\n       * if you make it positive nodes start attract each other :).\n       */\n      gravity: -12,\n\n      /**\n       * Theta coefficient from Barnes Hut simulation. Ranged between (0, 1).\n       * The closer it's to 1 the more nodes algorithm will have to go through.\n       * Setting it to one makes Barnes Hut simulation no different from\n       * brute-force forces calculation (each node is considered).\n       */\n      theta: 0.8,\n\n      /**\n       * Drag force coefficient. Used to slow down system, thus should be less than 1.\n       * The closer it is to 0 the less tight system will be.\n       */\n      dragCoefficient: 0.9, // TODO: Need to rename this to something better. E.g. `dragCoefficient`\n\n      /**\n       * Default time step (dt) for forces integration\n       */\n      timeStep : 0.5,\n\n      /**\n       * Adaptive time step uses average spring length to compute actual time step:\n       * See: https://twitter.com/anvaka/status/1293067160755957760\n       */\n      adaptiveTimeStepWeight: 0,\n\n      /**\n       * This parameter defines number of dimensions of the space where simulation\n       * is performed. \n       */\n      dimensions: 2,\n\n      /**\n       * In debug mode more checks are performed, this will help you catch errors\n       * quickly, however for production build it is recommended to turn off this flag\n       * to speed up computation.\n       */\n      debug: false\n  });\n\n  var factory = dimensionalCache[settings.dimensions];\n  if (!factory) {\n    var dimensions = settings.dimensions;\n    factory = {\n      Body: generateCreateBodyFunction(dimensions, settings.debug),\n      createQuadTree: generateQuadTreeFunction(dimensions),\n      createBounds: generateBoundsFunction(dimensions),\n      createDragForce: generateCreateDragForceFunction(dimensions),\n      createSpringForce: generateCreateSpringForceFunction(dimensions),\n      integrate: generateIntegratorFunction(dimensions),\n    };\n    dimensionalCache[dimensions] = factory;\n  }\n\n  var Body = factory.Body;\n  var createQuadTree = factory.createQuadTree;\n  var createBounds = factory.createBounds;\n  var createDragForce = factory.createDragForce;\n  var createSpringForce = factory.createSpringForce;\n  var integrate = factory.integrate;\n  var createBody = pos => new Body(pos);\n\n  var random = require('ngraph.random').random(42);\n  var bodies = []; // Bodies in this simulation.\n  var springs = []; // Springs in this simulation.\n\n  var quadTree = createQuadTree(settings, random);\n  var bounds = createBounds(bodies, settings, random);\n  var springForce = createSpringForce(settings, random);\n  var dragForce = createDragForce(settings);\n\n  var totalMovement = 0; // how much movement we made on last step\n  var forces = [];\n  var forceMap = new Map();\n  var iterationNumber = 0;\n \n  addForce('nbody', nbodyForce);\n  addForce('spring', updateSpringForce);\n\n  var publicApi = {\n    /**\n     * Array of bodies, registered with current simulator\n     *\n     * Note: To add new body, use addBody() method. This property is only\n     * exposed for testing/performance purposes.\n     */\n    bodies: bodies,\n  \n    quadTree: quadTree,\n\n    /**\n     * Array of springs, registered with current simulator\n     *\n     * Note: To add new spring, use addSpring() method. This property is only\n     * exposed for testing/performance purposes.\n     */\n    springs: springs,\n\n    /**\n     * Returns settings with which current simulator was initialized\n     */\n    settings: settings,\n\n    /**\n     * Adds a new force to simulation\n     */\n    addForce: addForce,\n    \n    /**\n     * Removes a force from the simulation.\n     */\n    removeForce: removeForce,\n\n    /**\n     * Returns a map of all registered forces.\n     */\n    getForces: getForces,\n\n    /**\n     * Performs one step of force simulation.\n     *\n     * @returns {boolean} true if system is considered stable; False otherwise.\n     */\n    step: function () {\n      for (var i = 0; i < forces.length; ++i) {\n        forces[i](iterationNumber);\n      }\n      var movement = integrate(bodies, settings.timeStep, settings.adaptiveTimeStepWeight);\n      iterationNumber += 1;\n      return movement;\n    },\n\n    /**\n     * Adds body to the system\n     *\n     * @param {ngraph.physics.primitives.Body} body physical body\n     *\n     * @returns {ngraph.physics.primitives.Body} added body\n     */\n    addBody: function (body) {\n      if (!body) {\n        throw new Error('Body is required');\n      }\n      bodies.push(body);\n\n      return body;\n    },\n\n    /**\n     * Adds body to the system at given position\n     *\n     * @param {Object} pos position of a body\n     *\n     * @returns {ngraph.physics.primitives.Body} added body\n     */\n    addBodyAt: function (pos) {\n      if (!pos) {\n        throw new Error('Body position is required');\n      }\n      var body = createBody(pos);\n      bodies.push(body);\n\n      return body;\n    },\n\n    /**\n     * Removes body from the system\n     *\n     * @param {ngraph.physics.primitives.Body} body to remove\n     *\n     * @returns {Boolean} true if body found and removed. falsy otherwise;\n     */\n    removeBody: function (body) {\n      if (!body) { return; }\n\n      var idx = bodies.indexOf(body);\n      if (idx < 0) { return; }\n\n      bodies.splice(idx, 1);\n      if (bodies.length === 0) {\n        bounds.reset();\n      }\n      return true;\n    },\n\n    /**\n     * Adds a spring to this simulation.\n     *\n     * @returns {Object} - a handle for a spring. If you want to later remove\n     * spring pass it to removeSpring() method.\n     */\n    addSpring: function (body1, body2, springLength, springCoefficient) {\n      if (!body1 || !body2) {\n        throw new Error('Cannot add null spring to force simulator');\n      }\n\n      if (typeof springLength !== 'number') {\n        springLength = -1; // assume global configuration\n      }\n\n      var spring = new Spring(body1, body2, springLength, springCoefficient >= 0 ? springCoefficient : -1);\n      springs.push(spring);\n\n      // TODO: could mark simulator as dirty.\n      return spring;\n    },\n\n    /**\n     * Returns amount of movement performed on last step() call\n     */\n    getTotalMovement: function () {\n      return totalMovement;\n    },\n\n    /**\n     * Removes spring from the system\n     *\n     * @param {Object} spring to remove. Spring is an object returned by addSpring\n     *\n     * @returns {Boolean} true if spring found and removed. falsy otherwise;\n     */\n    removeSpring: function (spring) {\n      if (!spring) { return; }\n      var idx = springs.indexOf(spring);\n      if (idx > -1) {\n        springs.splice(idx, 1);\n        return true;\n      }\n    },\n\n    getBestNewBodyPosition: function (neighbors) {\n      return bounds.getBestNewPosition(neighbors);\n    },\n\n    /**\n     * Returns bounding box which covers all bodies\n     */\n    getBBox: getBoundingBox, \n    getBoundingBox: getBoundingBox, \n\n    invalidateBBox: function () {\n      console.warn('invalidateBBox() is deprecated, bounds always recomputed on `getBBox()` call');\n    },\n\n    // TODO: Move the force specific stuff to force\n    gravity: function (value) {\n      if (value !== undefined) {\n        settings.gravity = value;\n        quadTree.options({gravity: value});\n        return this;\n      } else {\n        return settings.gravity;\n      }\n    },\n\n    theta: function (value) {\n      if (value !== undefined) {\n        settings.theta = value;\n        quadTree.options({theta: value});\n        return this;\n      } else {\n        return settings.theta;\n      }\n    },\n\n    /**\n     * Returns pseudo-random number generator instance.\n     */\n    random: random\n  };\n\n  // allow settings modification via public API:\n  expose(settings, publicApi);\n\n  eventify(publicApi);\n\n  return publicApi;\n\n  function getBoundingBox() {\n    bounds.update();\n    return bounds.box;\n  }\n\n  function addForce(forceName, forceFunction) {\n    if (forceMap.has(forceName)) throw new Error('Force ' + forceName + ' is already added');\n\n    forceMap.set(forceName, forceFunction);\n    forces.push(forceFunction);\n  }\n\n  function removeForce(forceName) {\n    var forceIndex = forces.indexOf(forceMap.get(forceName));\n    if (forceIndex < 0) return;\n    forces.splice(forceIndex, 1);\n    forceMap.delete(forceName);\n  }\n\n  function getForces() {\n    // TODO: Should I trust them or clone the forces?\n    return forceMap;\n  }\n\n  function nbodyForce(/* iterationUmber */) {\n    if (bodies.length === 0) return;\n\n    quadTree.insertBodies(bodies);\n    var i = bodies.length;\n    while (i--) {\n      var body = bodies[i];\n      if (!body.isPinned) {\n        body.reset();\n        quadTree.updateBodyForce(body);\n        dragForce.update(body);\n      }\n    }\n  }\n\n  function updateSpringForce() {\n    var i = springs.length;\n    while (i--) {\n      springForce.update(springs[i]);\n    }\n  }\n\n}\n\nfunction expose(settings, target) {\n  for (var key in settings) {\n    augment(settings, target, key);\n  }\n}\n\nfunction augment(source, target, key) {\n  if (!source.hasOwnProperty(key)) return;\n  if (typeof target[key] === 'function') {\n    // this accessor is already defined. Ignore it\n    return;\n  }\n  var sourceIsNumber = Number.isFinite(source[key]);\n\n  if (sourceIsNumber) {\n    target[key] = function (value) {\n      if (value !== undefined) {\n        if (!Number.isFinite(value)) throw new Error('Value of ' + key + ' should be a valid number.');\n        source[key] = value;\n        return target;\n      }\n      return source[key];\n    };\n  } else {\n    target[key] = function (value) {\n      if (value !== undefined) {\n        source[key] = value;\n        return target;\n      }\n      return source[key];\n    };\n  }\n}\n","module.exports = Spring;\n\n/**\n * Represents a physical spring. Spring connects two bodies, has rest length\n * stiffness coefficient and optional weight\n */\nfunction Spring(fromBody, toBody, length, springCoefficient) {\n    this.from = fromBody;\n    this.to = toBody;\n    this.length = length;\n    this.coefficient = springCoefficient;\n}\n","/**\n * @fileOverview Contains definition of the core graph object.\n */\n\n// TODO: need to change storage layer:\n// 1. Be able to get all nodes O(1)\n// 2. Be able to get number of links O(1)\n\n/**\n * @example\n *  var graph = require('ngraph.graph')();\n *  graph.addNode(1);     // graph has one node.\n *  graph.addLink(2, 3);  // now graph contains three nodes and one link.\n *\n */\nmodule.exports = createGraph;\n\nvar eventify = require('ngraph.events');\n\n/**\n * Creates a new graph\n */\nfunction createGraph(options) {\n  // Graph structure is maintained as dictionary of nodes\n  // and array of links. Each node has 'links' property which\n  // hold all links related to that node. And general links\n  // array is used to speed up all links enumeration. This is inefficient\n  // in terms of memory, but simplifies coding.\n  options = options || {};\n  if ('uniqueLinkId' in options) {\n    console.warn(\n      'ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\\n' +\n      'Use `multigraph` option instead\\n',\n      '\\n',\n      'Note: there is also change in default behavior: From now on each graph\\n'+\n      'is considered to be not a multigraph by default (each edge is unique).'\n    );\n\n    options.multigraph = options.uniqueLinkId;\n  }\n\n  // Dear reader, the non-multigraphs do not guarantee that there is only\n  // one link for a given pair of node. When this option is set to false\n  // we can save some memory and CPU (18% faster for non-multigraph);\n  if (options.multigraph === undefined) options.multigraph = false;\n\n  if (typeof Map !== 'function') {\n    // TODO: Should we polyfill it ourselves? We don't use much operations there..\n    throw new Error('ngraph.graph requires `Map` to be defined. Please polyfill it before using ngraph');\n  } \n\n  var nodes = new Map(); // nodeId => Node\n  var links = new Map(); // linkId => Link\n    // Hash of multi-edges. Used to track ids of edges between same nodes\n  var multiEdges = {};\n  var suspendEvents = 0;\n\n  var createLink = options.multigraph ? createUniqueLink : createSingleLink,\n\n    // Our graph API provides means to listen to graph changes. Users can subscribe\n    // to be notified about changes in the graph by using `on` method. However\n    // in some cases they don't use it. To avoid unnecessary memory consumption\n    // we will not record graph changes until we have at least one subscriber.\n    // Code below supports this optimization.\n    //\n    // Accumulates all changes made during graph updates.\n    // Each change element contains:\n    //  changeType - one of the strings: 'add', 'remove' or 'update';\n    //  node - if change is related to node this property is set to changed graph's node;\n    //  link - if change is related to link this property is set to changed graph's link;\n    changes = [],\n    recordLinkChange = noop,\n    recordNodeChange = noop,\n    enterModification = noop,\n    exitModification = noop;\n\n  // this is our public API:\n  var graphPart = {\n    /**\n     * Sometimes duck typing could be slow. Giving clients a hint about data structure\n     * via explicit version number here:\n     */\n    version: 20.0,\n\n    /**\n     * Adds node to the graph. If node with given id already exists in the graph\n     * its data is extended with whatever comes in 'data' argument.\n     *\n     * @param nodeId the node's identifier. A string or number is preferred.\n     * @param [data] additional data for the node being added. If node already\n     *   exists its data object is augmented with the new one.\n     *\n     * @return {node} The newly added node or node with given id if it already exists.\n     */\n    addNode: addNode,\n\n    /**\n     * Adds a link to the graph. The function always create a new\n     * link between two nodes. If one of the nodes does not exists\n     * a new node is created.\n     *\n     * @param fromId link start node id;\n     * @param toId link end node id;\n     * @param [data] additional data to be set on the new link;\n     *\n     * @return {link} The newly created link\n     */\n    addLink: addLink,\n\n    /**\n     * Removes link from the graph. If link does not exist does nothing.\n     *\n     * @param link - object returned by addLink() or getLinks() methods.\n     *\n     * @returns true if link was removed; false otherwise.\n     */\n    removeLink: removeLink,\n\n    /**\n     * Removes node with given id from the graph. If node does not exist in the graph\n     * does nothing.\n     *\n     * @param nodeId node's identifier passed to addNode() function.\n     *\n     * @returns true if node was removed; false otherwise.\n     */\n    removeNode: removeNode,\n\n    /**\n     * Gets node with given identifier. If node does not exist undefined value is returned.\n     *\n     * @param nodeId requested node identifier;\n     *\n     * @return {node} in with requested identifier or undefined if no such node exists.\n     */\n    getNode: getNode,\n\n    /**\n     * Gets number of nodes in this graph.\n     *\n     * @return number of nodes in the graph.\n     */\n    getNodeCount: getNodeCount,\n\n    /**\n     * Gets total number of links in the graph.\n     */\n    getLinkCount: getLinkCount,\n\n    /**\n     * Gets total number of links in the graph.\n     */\n    getEdgeCount: getLinkCount,\n\n    /**\n     * Synonym for `getLinkCount()`\n     */\n    getLinksCount: getLinkCount,\n    \n    /**\n     * Synonym for `getNodeCount()`\n     */\n    getNodesCount: getNodeCount,\n\n    /**\n     * Gets all links (inbound and outbound) from the node with given id.\n     * If node with given id is not found null is returned.\n     *\n     * @param nodeId requested node identifier.\n     *\n     * @return Set of links from and to requested node if such node exists;\n     *   otherwise null is returned.\n     */\n    getLinks: getLinks,\n\n    /**\n     * Invokes callback on each node of the graph.\n     *\n     * @param {Function(node)} callback Function to be invoked. The function\n     *   is passed one argument: visited node.\n     */\n    forEachNode: forEachNode,\n\n    /**\n     * Invokes callback on every linked (adjacent) node to the given one.\n     *\n     * @param nodeId Identifier of the requested node.\n     * @param {Function(node, link)} callback Function to be called on all linked nodes.\n     *   The function is passed two parameters: adjacent node and link object itself.\n     * @param oriented if true graph treated as oriented.\n     */\n    forEachLinkedNode: forEachLinkedNode,\n\n    /**\n     * Enumerates all links in the graph\n     *\n     * @param {Function(link)} callback Function to be called on all links in the graph.\n     *   The function is passed one parameter: graph's link object.\n     *\n     * Link object contains at least the following fields:\n     *  fromId - node id where link starts;\n     *  toId - node id where link ends,\n     *  data - additional data passed to graph.addLink() method.\n     */\n    forEachLink: forEachLink,\n\n    /**\n     * Suspend all notifications about graph changes until\n     * endUpdate is called.\n     */\n    beginUpdate: enterModification,\n\n    /**\n     * Resumes all notifications about graph changes and fires\n     * graph 'changed' event in case there are any pending changes.\n     */\n    endUpdate: exitModification,\n\n    /**\n     * Removes all nodes and links from the graph.\n     */\n    clear: clear,\n\n    /**\n     * Detects whether there is a link between two nodes.\n     * Operation complexity is O(n) where n - number of links of a node.\n     * NOTE: this function is synonym for getLink()\n     *\n     * @returns link if there is one. null otherwise.\n     */\n    hasLink: getLink,\n\n    /**\n     * Detects whether there is a node with given id\n     * \n     * Operation complexity is O(1)\n     * NOTE: this function is synonym for getNode()\n     *\n     * @returns node if there is one; Falsy value otherwise.\n     */\n    hasNode: getNode,\n\n    /**\n     * Gets an edge between two nodes.\n     * Operation complexity is O(n) where n - number of links of a node.\n     *\n     * @param {string} fromId link start identifier\n     * @param {string} toId link end identifier\n     *\n     * @returns link if there is one; undefined otherwise.\n     */\n    getLink: getLink\n  };\n\n  // this will add `on()` and `fire()` methods.\n  eventify(graphPart);\n\n  monitorSubscribers();\n\n  return graphPart;\n\n  function monitorSubscribers() {\n    var realOn = graphPart.on;\n\n    // replace real `on` with our temporary on, which will trigger change\n    // modification monitoring:\n    graphPart.on = on;\n\n    function on() {\n      // now it's time to start tracking stuff:\n      graphPart.beginUpdate = enterModification = enterModificationReal;\n      graphPart.endUpdate = exitModification = exitModificationReal;\n      recordLinkChange = recordLinkChangeReal;\n      recordNodeChange = recordNodeChangeReal;\n\n      // this will replace current `on` method with real pub/sub from `eventify`.\n      graphPart.on = realOn;\n      // delegate to real `on` handler:\n      return realOn.apply(graphPart, arguments);\n    }\n  }\n\n  function recordLinkChangeReal(link, changeType) {\n    changes.push({\n      link: link,\n      changeType: changeType\n    });\n  }\n\n  function recordNodeChangeReal(node, changeType) {\n    changes.push({\n      node: node,\n      changeType: changeType\n    });\n  }\n\n  function addNode(nodeId, data) {\n    if (nodeId === undefined) {\n      throw new Error('Invalid node identifier');\n    }\n\n    enterModification();\n\n    var node = getNode(nodeId);\n    if (!node) {\n      node = new Node(nodeId, data);\n      recordNodeChange(node, 'add');\n    } else {\n      node.data = data;\n      recordNodeChange(node, 'update');\n    }\n\n    nodes.set(nodeId, node);\n\n    exitModification();\n    return node;\n  }\n\n  function getNode(nodeId) {\n    return nodes.get(nodeId);\n  }\n\n  function removeNode(nodeId) {\n    var node = getNode(nodeId);\n    if (!node) {\n      return false;\n    }\n\n    enterModification();\n\n    var prevLinks = node.links;\n    if (prevLinks) {\n      prevLinks.forEach(removeLinkInstance);\n      node.links = null;\n    }\n\n    nodes.delete(nodeId);\n\n    recordNodeChange(node, 'remove');\n\n    exitModification();\n\n    return true;\n  }\n\n\n  function addLink(fromId, toId, data) {\n    enterModification();\n\n    var fromNode = getNode(fromId) || addNode(fromId);\n    var toNode = getNode(toId) || addNode(toId);\n\n    var link = createLink(fromId, toId, data);\n    var isUpdate = links.has(link.id);\n\n    links.set(link.id, link);\n\n    // TODO: this is not cool. On large graphs potentially would consume more memory.\n    addLinkToNode(fromNode, link);\n    if (fromId !== toId) {\n      // make sure we are not duplicating links for self-loops\n      addLinkToNode(toNode, link);\n    }\n\n    recordLinkChange(link, isUpdate ? 'update' : 'add');\n\n    exitModification();\n\n    return link;\n  }\n\n  function createSingleLink(fromId, toId, data) {\n    var linkId = makeLinkId(fromId, toId);\n    var prevLink = links.get(linkId);\n    if (prevLink) {\n      prevLink.data = data;\n      return prevLink;\n    }\n\n    return new Link(fromId, toId, data, linkId);\n  }\n\n  function createUniqueLink(fromId, toId, data) {\n    // TODO: Find a better/faster way to store multigraphs\n    var linkId = makeLinkId(fromId, toId);\n    var isMultiEdge = multiEdges.hasOwnProperty(linkId);\n    if (isMultiEdge || getLink(fromId, toId)) {\n      if (!isMultiEdge) {\n        multiEdges[linkId] = 0;\n      }\n      var suffix = '@' + (++multiEdges[linkId]);\n      linkId = makeLinkId(fromId + suffix, toId + suffix);\n    }\n\n    return new Link(fromId, toId, data, linkId);\n  }\n\n  function getNodeCount() {\n    return nodes.size;\n  }\n\n  function getLinkCount() {\n    return links.size;\n  }\n\n  function getLinks(nodeId) {\n    var node = getNode(nodeId);\n    return node ? node.links : null;\n  }\n\n  function removeLink(link, otherId) {\n    if (otherId !== undefined) {\n      link = getLink(link, otherId);\n    }\n    return removeLinkInstance(link);\n  }\n\n  function removeLinkInstance(link) {\n    if (!link) {\n      return false;\n    }\n    if (!links.get(link.id)) return false;\n\n    enterModification();\n\n    links.delete(link.id);\n\n    var fromNode = getNode(link.fromId);\n    var toNode = getNode(link.toId);\n\n    if (fromNode) {\n      fromNode.links.delete(link);\n    }\n\n    if (toNode) {\n      toNode.links.delete(link);\n    }\n\n    recordLinkChange(link, 'remove');\n\n    exitModification();\n\n    return true;\n  }\n\n  function getLink(fromNodeId, toNodeId) {\n    if (fromNodeId === undefined || toNodeId === undefined) return undefined;\n    return links.get(makeLinkId(fromNodeId, toNodeId));\n  }\n\n  function clear() {\n    enterModification();\n    forEachNode(function(node) {\n      removeNode(node.id);\n    });\n    exitModification();\n  }\n\n  function forEachLink(callback) {\n    if (typeof callback === 'function') {\n      var valuesIterator = links.values();\n      var nextValue = valuesIterator.next();\n      while (!nextValue.done) {\n        if (callback(nextValue.value)) {\n          return true; // client doesn't want to proceed. Return.\n        }\n        nextValue = valuesIterator.next();\n      }\n    }\n  }\n\n  function forEachLinkedNode(nodeId, callback, oriented) {\n    var node = getNode(nodeId);\n\n    if (node && node.links && typeof callback === 'function') {\n      if (oriented) {\n        return forEachOrientedLink(node.links, nodeId, callback);\n      } else {\n        return forEachNonOrientedLink(node.links, nodeId, callback);\n      }\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function forEachNonOrientedLink(links, nodeId, callback) {\n    var quitFast;\n\n    var valuesIterator = links.values();\n    var nextValue = valuesIterator.next();\n    while (!nextValue.done) {\n      var link = nextValue.value;\n      var linkedNodeId = link.fromId === nodeId ? link.toId : link.fromId;\n      quitFast = callback(nodes.get(linkedNodeId), link);\n      if (quitFast) {\n        return true; // Client does not need more iterations. Break now.\n      }\n      nextValue = valuesIterator.next();\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function forEachOrientedLink(links, nodeId, callback) {\n    var quitFast;\n    var valuesIterator = links.values();\n    var nextValue = valuesIterator.next();\n    while (!nextValue.done) {\n      var link = nextValue.value;\n      if (link.fromId === nodeId) {\n        quitFast = callback(nodes.get(link.toId), link);\n        if (quitFast) {\n          return true; // Client does not need more iterations. Break now.\n        }\n      }\n      nextValue = valuesIterator.next();\n    }\n  }\n\n  // we will not fire anything until users of this library explicitly call `on()`\n  // method.\n  function noop() {}\n\n  // Enter, Exit modification allows bulk graph updates without firing events.\n  function enterModificationReal() {\n    suspendEvents += 1;\n  }\n\n  function exitModificationReal() {\n    suspendEvents -= 1;\n    if (suspendEvents === 0 && changes.length > 0) {\n      graphPart.fire('changed', changes);\n      changes.length = 0;\n    }\n  }\n\n  function forEachNode(callback) {\n    if (typeof callback !== 'function') {\n      throw new Error('Function is expected to iterate over graph nodes. You passed ' + callback);\n    }\n\n    var valuesIterator = nodes.values();\n    var nextValue = valuesIterator.next();\n    while (!nextValue.done) {\n      if (callback(nextValue.value)) {\n        return true; // client doesn't want to proceed. Return.\n      }\n      nextValue = valuesIterator.next();\n    }\n  }\n}\n\n/**\n * Internal structure to represent node;\n */\nfunction Node(id, data) {\n  this.id = id;\n  this.links = null;\n  this.data = data;\n}\n\nfunction addLinkToNode(node, link) {\n  if (node.links) {\n    node.links.add(link);\n  } else {\n    node.links = new Set([link]);\n  }\n}\n\n/**\n * Internal structure to represent links;\n */\nfunction Link(fromId, toId, data, id) {\n  this.fromId = fromId;\n  this.toId = toId;\n  this.data = data;\n  this.id = id;\n}\n\nfunction makeLinkId(fromId, toId) {\n  return fromId.toString() + '👉 ' + toId.toString();\n}\n","module.exports = merge;\n\n/**\n * Augments `target` with properties in `options`. Does not override\n * target's properties if they are defined and matches expected type in \n * options\n *\n * @returns {Object} merged object\n */\nfunction merge(target, options) {\n  var key;\n  if (!target) { target = {}; }\n  if (options) {\n    for (key in options) {\n      if (options.hasOwnProperty(key)) {\n        var targetHasIt = target.hasOwnProperty(key),\n            optionsValueType = typeof options[key],\n            shouldReplace = !targetHasIt || (typeof target[key] !== optionsValueType);\n\n        if (shouldReplace) {\n          target[key] = options[key];\n        } else if (optionsValueType === 'object') {\n          // go deep, don't care about loops here, we are simple API!:\n          target[key] = merge(target[key], options[key]);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n","module.exports = random;\n\n// TODO: Deprecate?\nmodule.exports.random = random,\nmodule.exports.randomIterator = randomIterator\n\n/**\n * Creates seeded PRNG with two methods:\n *   next() and nextDouble()\n */\nfunction random(inputSeed) {\n  var seed = typeof inputSeed === 'number' ? inputSeed : (+new Date());\n  return new Generator(seed)\n}\n\nfunction Generator(seed) {\n  this.seed = seed;\n}\n\n/**\n  * Generates random integer number in the range from 0 (inclusive) to maxValue (exclusive)\n  *\n  * @param maxValue Number REQUIRED. Omitting this number will result in NaN values from PRNG.\n  */\nGenerator.prototype.next = next;\n\n/**\n  * Generates random double number in the range from 0 (inclusive) to 1 (exclusive)\n  * This function is the same as Math.random() (except that it could be seeded)\n  */\nGenerator.prototype.nextDouble = nextDouble;\n\n/**\n * Returns a random real number from uniform distribution in [0, 1)\n */\nGenerator.prototype.uniform = nextDouble;\n\n/**\n * Returns a random real number from a Gaussian distribution\n * with 0 as a mean, and 1 as standard deviation u ~ N(0,1)\n */\nGenerator.prototype.gaussian = gaussian;\n\nfunction gaussian() {\n  // use the polar form of the Box-Muller transform\n  // based on https://introcs.cs.princeton.edu/java/23recursion/StdRandom.java\n  var r, x, y;\n  do {\n    x = this.nextDouble() * 2 - 1;\n    y = this.nextDouble() * 2 - 1;\n    r = x * x + y * y;\n  } while (r >= 1 || r === 0);\n\n  return x * Math.sqrt(-2 * Math.log(r)/r);\n}\n\n/**\n * See https://twitter.com/anvaka/status/1296182534150135808\n */\nGenerator.prototype.levy = levy;\n\nfunction levy() {\n  var beta = 3 / 2;\n  var sigma = Math.pow(\n      gamma( 1 + beta ) * Math.sin(Math.PI * beta / 2) / \n        (gamma((1 + beta) / 2) * beta * Math.pow(2, (beta - 1) / 2)),\n      1/beta\n  );\n  return this.gaussian() * sigma / Math.pow(Math.abs(this.gaussian()), 1/beta);\n}\n\n// gamma function approximation\nfunction gamma(z) {\n  return Math.sqrt(2 * Math.PI / z) * Math.pow((1 / Math.E) * (z + 1 / (12 * z - 1 / (10 * z))), z);\n}\n\nfunction nextDouble() {\n  var seed = this.seed;\n  // Robert Jenkins' 32 bit integer hash function.\n  seed = ((seed + 0x7ed55d16) + (seed << 12)) & 0xffffffff;\n  seed = ((seed ^ 0xc761c23c) ^ (seed >>> 19)) & 0xffffffff;\n  seed = ((seed + 0x165667b1) + (seed << 5)) & 0xffffffff;\n  seed = ((seed + 0xd3a2646c) ^ (seed << 9)) & 0xffffffff;\n  seed = ((seed + 0xfd7046c5) + (seed << 3)) & 0xffffffff;\n  seed = ((seed ^ 0xb55a4f09) ^ (seed >>> 16)) & 0xffffffff;\n  this.seed = seed;\n  return (seed & 0xfffffff) / 0x10000000;\n}\n\nfunction next(maxValue) {\n  return Math.floor(this.nextDouble() * maxValue);\n}\n\n/*\n * Creates iterator over array, which returns items of array in random order\n * Time complexity is guaranteed to be O(n);\n */\nfunction randomIterator(array, customRandom) {\n  var localRandom = customRandom || random();\n  if (typeof localRandom.next !== 'function') {\n    throw new Error('customRandom does not match expected API: next() function is missing');\n  }\n\n  return {\n    forEach: forEach,\n\n    /**\n     * Shuffles array randomly, in place.\n     */\n    shuffle: shuffle\n  };\n\n  function shuffle() {\n    var i, j, t;\n    for (i = array.length - 1; i > 0; --i) {\n      j = localRandom.next(i + 1); // i inclusive\n      t = array[j];\n      array[j] = array[i];\n      array[i] = t;\n    }\n\n    return array;\n  }\n\n  function forEach(callback) {\n    var i, j, t;\n    for (i = array.length - 1; i > 0; --i) {\n      j = localRandom.next(i + 1); // i inclusive\n      t = array[j];\n      array[j] = array[i];\n      array[i] = t;\n\n      callback(t);\n    }\n\n    if (array.length) {\n      callback(array[0]);\n    }\n  }\n}","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n","/**\n * Advanced Encryption Standard (AES) implementation.\n *\n * This implementation is based on the public domain library 'jscrypto' which\n * was written by:\n *\n * Emily Stark (estark@stanford.edu)\n * Mike Hamburg (mhamburg@stanford.edu)\n * Dan Boneh (dabo@cs.stanford.edu)\n *\n * Parts of this code are based on the OpenSSL implementation of AES:\n * http://www.openssl.org\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* AES API */\nmodule.exports = forge.aes = forge.aes || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new AES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the AES algorithm object.\n */\nforge.aes.Algorithm = function(name, mode) {\n  if(!init) {\n    initialize();\n  }\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 16,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this AES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.aes.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = options.key;\n  var tmp;\n\n  /* Note: The key may be a string of bytes, an array of bytes, a byte\n    buffer, or an array of 32-bit integers. If the key is in bytes, then\n    it must be 16, 24, or 32 bytes in length. If it is in 32-bit\n    integers, it must be 4, 6, or 8 integers long. */\n\n  if(typeof key === 'string' &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key string into byte buffer\n    key = forge.util.createBuffer(key);\n  } else if(forge.util.isArray(key) &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key integer array into byte buffer\n    tmp = key;\n    key = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      key.putByte(tmp[i]);\n    }\n  }\n\n  // convert key byte buffer into 32-bit integer array\n  if(!forge.util.isArray(key)) {\n    tmp = key;\n    key = [];\n\n    // key lengths of 16, 24, 32 bytes allowed\n    var len = tmp.length();\n    if(len === 16 || len === 24 || len === 32) {\n      len = len >>> 2;\n      for(var i = 0; i < len; ++i) {\n        key.push(tmp.getInt32());\n      }\n    }\n  }\n\n  // key must be an array of 32-bit integers by now\n  if(!forge.util.isArray(key) ||\n    !(key.length === 4 || key.length === 6 || key.length === 8)) {\n    throw new Error('Invalid key parameter.');\n  }\n\n  // encryption operation is always used for these modes\n  var mode = this.mode.name;\n  var encryptOp = (['CFB', 'OFB', 'CTR', 'GCM'].indexOf(mode) !== -1);\n\n  // do key expansion\n  this._w = _expandKey(key, options.decrypt && !encryptOp);\n  this._init = true;\n};\n\n/**\n * Expands a key. Typically only used for testing.\n *\n * @param key the symmetric key to expand, as an array of 32-bit words.\n * @param decrypt true to expand for decryption, false for encryption.\n *\n * @return the expanded key.\n */\nforge.aes._expandKey = function(key, decrypt) {\n  if(!init) {\n    initialize();\n  }\n  return _expandKey(key, decrypt);\n};\n\n/**\n * Updates a single block. Typically only used for testing.\n *\n * @param w the expanded key to use.\n * @param input an array of block-size 32-bit words.\n * @param output an array of block-size 32-bit words.\n * @param decrypt true to decrypt, false to encrypt.\n */\nforge.aes._updateBlock = _updateBlock;\n\n/** Register AES algorithms **/\n\nregisterAlgorithm('AES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('AES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('AES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('AES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('AES-CTR', forge.cipher.modes.ctr);\nregisterAlgorithm('AES-GCM', forge.cipher.modes.gcm);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.aes.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** AES implementation **/\n\nvar init = false; // not yet initialized\nvar Nb = 4;       // number of words comprising the state (AES = 4)\nvar sbox;         // non-linear substitution table used in key expansion\nvar isbox;        // inversion of sbox\nvar rcon;         // round constant word array\nvar mix;          // mix-columns table\nvar imix;         // inverse mix-columns table\n\n/**\n * Performs initialization, ie: precomputes tables to optimize for speed.\n *\n * One way to understand how AES works is to imagine that 'addition' and\n * 'multiplication' are interfaces that require certain mathematical\n * properties to hold true (ie: they are associative) but they might have\n * different implementations and produce different kinds of results ...\n * provided that their mathematical properties remain true. AES defines\n * its own methods of addition and multiplication but keeps some important\n * properties the same, ie: associativity and distributivity. The\n * explanation below tries to shed some light on how AES defines addition\n * and multiplication of bytes and 32-bit words in order to perform its\n * encryption and decryption algorithms.\n *\n * The basics:\n *\n * The AES algorithm views bytes as binary representations of polynomials\n * that have either 1 or 0 as the coefficients. It defines the addition\n * or subtraction of two bytes as the XOR operation. It also defines the\n * multiplication of two bytes as a finite field referred to as GF(2^8)\n * (Note: 'GF' means \"Galois Field\" which is a field that contains a finite\n * number of elements so GF(2^8) has 256 elements).\n *\n * This means that any two bytes can be represented as binary polynomials;\n * when they multiplied together and modularly reduced by an irreducible\n * polynomial of the 8th degree, the results are the field GF(2^8). The\n * specific irreducible polynomial that AES uses in hexadecimal is 0x11b.\n * This multiplication is associative with 0x01 as the identity:\n *\n * (b * 0x01 = GF(b, 0x01) = b).\n *\n * The operation GF(b, 0x02) can be performed at the byte level by left\n * shifting b once and then XOR'ing it (to perform the modular reduction)\n * with 0x11b if b is >= 128. Repeated application of the multiplication\n * of 0x02 can be used to implement the multiplication of any two bytes.\n *\n * For instance, multiplying 0x57 and 0x13, denoted as GF(0x57, 0x13), can\n * be performed by factoring 0x13 into 0x01, 0x02, and 0x10. Then these\n * factors can each be multiplied by 0x57 and then added together. To do\n * the multiplication, values for 0x57 multiplied by each of these 3 factors\n * can be precomputed and stored in a table. To add them, the values from\n * the table are XOR'd together.\n *\n * AES also defines addition and multiplication of words, that is 4-byte\n * numbers represented as polynomials of 3 degrees where the coefficients\n * are the values of the bytes.\n *\n * The word [a0, a1, a2, a3] is a polynomial a3x^3 + a2x^2 + a1x + a0.\n *\n * Addition is performed by XOR'ing like powers of x. Multiplication\n * is performed in two steps, the first is an algebriac expansion as\n * you would do normally (where addition is XOR). But the result is\n * a polynomial larger than 3 degrees and thus it cannot fit in a word. So\n * next the result is modularly reduced by an AES-specific polynomial of\n * degree 4 which will always produce a polynomial of less than 4 degrees\n * such that it will fit in a word. In AES, this polynomial is x^4 + 1.\n *\n * The modular product of two polynomials 'a' and 'b' is thus:\n *\n * d(x) = d3x^3 + d2x^2 + d1x + d0\n * with\n * d0 = GF(a0, b0) ^ GF(a3, b1) ^ GF(a2, b2) ^ GF(a1, b3)\n * d1 = GF(a1, b0) ^ GF(a0, b1) ^ GF(a3, b2) ^ GF(a2, b3)\n * d2 = GF(a2, b0) ^ GF(a1, b1) ^ GF(a0, b2) ^ GF(a3, b3)\n * d3 = GF(a3, b0) ^ GF(a2, b1) ^ GF(a1, b2) ^ GF(a0, b3)\n *\n * As a matrix:\n *\n * [d0] = [a0 a3 a2 a1][b0]\n * [d1]   [a1 a0 a3 a2][b1]\n * [d2]   [a2 a1 a0 a3][b2]\n * [d3]   [a3 a2 a1 a0][b3]\n *\n * Special polynomials defined by AES (0x02 == {02}):\n * a(x)    = {03}x^3 + {01}x^2 + {01}x + {02}\n * a^-1(x) = {0b}x^3 + {0d}x^2 + {09}x + {0e}.\n *\n * These polynomials are used in the MixColumns() and InverseMixColumns()\n * operations, respectively, to cause each element in the state to affect\n * the output (referred to as diffusing).\n *\n * RotWord() uses: a0 = a1 = a2 = {00} and a3 = {01}, which is the\n * polynomial x3.\n *\n * The ShiftRows() method modifies the last 3 rows in the state (where\n * the state is 4 words with 4 bytes per word) by shifting bytes cyclically.\n * The 1st byte in the second row is moved to the end of the row. The 1st\n * and 2nd bytes in the third row are moved to the end of the row. The 1st,\n * 2nd, and 3rd bytes are moved in the fourth row.\n *\n * More details on how AES arithmetic works:\n *\n * In the polynomial representation of binary numbers, XOR performs addition\n * and subtraction and multiplication in GF(2^8) denoted as GF(a, b)\n * corresponds with the multiplication of polynomials modulo an irreducible\n * polynomial of degree 8. In other words, for AES, GF(a, b) will multiply\n * polynomial 'a' with polynomial 'b' and then do a modular reduction by\n * an AES-specific irreducible polynomial of degree 8.\n *\n * A polynomial is irreducible if its only divisors are one and itself. For\n * the AES algorithm, this irreducible polynomial is:\n *\n * m(x) = x^8 + x^4 + x^3 + x + 1,\n *\n * or {01}{1b} in hexadecimal notation, where each coefficient is a bit:\n * 100011011 = 283 = 0x11b.\n *\n * For example, GF(0x57, 0x83) = 0xc1 because\n *\n * 0x57 = 87  = 01010111 = x^6 + x^4 + x^2 + x + 1\n * 0x85 = 131 = 10000101 = x^7 + x + 1\n *\n * (x^6 + x^4 + x^2 + x + 1) * (x^7 + x + 1)\n * =  x^13 + x^11 + x^9 + x^8 + x^7 +\n *    x^7 + x^5 + x^3 + x^2 + x +\n *    x^6 + x^4 + x^2 + x + 1\n * =  x^13 + x^11 + x^9 + x^8 + x^6 + x^5 + x^4 + x^3 + 1 = y\n *    y modulo (x^8 + x^4 + x^3 + x + 1)\n * =  x^7 + x^6 + 1.\n *\n * The modular reduction by m(x) guarantees the result will be a binary\n * polynomial of less than degree 8, so that it can fit in a byte.\n *\n * The operation to multiply a binary polynomial b with x (the polynomial\n * x in binary representation is 00000010) is:\n *\n * b_7x^8 + b_6x^7 + b_5x^6 + b_4x^5 + b_3x^4 + b_2x^3 + b_1x^2 + b_0x^1\n *\n * To get GF(b, x) we must reduce that by m(x). If b_7 is 0 (that is the\n * most significant bit is 0 in b) then the result is already reduced. If\n * it is 1, then we can reduce it by subtracting m(x) via an XOR.\n *\n * It follows that multiplication by x (00000010 or 0x02) can be implemented\n * by performing a left shift followed by a conditional bitwise XOR with\n * 0x1b. This operation on bytes is denoted by xtime(). Multiplication by\n * higher powers of x can be implemented by repeated application of xtime().\n *\n * By adding intermediate results, multiplication by any constant can be\n * implemented. For instance:\n *\n * GF(0x57, 0x13) = 0xfe because:\n *\n * xtime(b) = (b & 128) ? (b << 1 ^ 0x11b) : (b << 1)\n *\n * Note: We XOR with 0x11b instead of 0x1b because in javascript our\n * datatype for b can be larger than 1 byte, so a left shift will not\n * automatically eliminate bits that overflow a byte ... by XOR'ing the\n * overflow bit with 1 (the extra one from 0x11b) we zero it out.\n *\n * GF(0x57, 0x02) = xtime(0x57) = 0xae\n * GF(0x57, 0x04) = xtime(0xae) = 0x47\n * GF(0x57, 0x08) = xtime(0x47) = 0x8e\n * GF(0x57, 0x10) = xtime(0x8e) = 0x07\n *\n * GF(0x57, 0x13) = GF(0x57, (0x01 ^ 0x02 ^ 0x10))\n *\n * And by the distributive property (since XOR is addition and GF() is\n * multiplication):\n *\n * = GF(0x57, 0x01) ^ GF(0x57, 0x02) ^ GF(0x57, 0x10)\n * = 0x57 ^ 0xae ^ 0x07\n * = 0xfe.\n */\nfunction initialize() {\n  init = true;\n\n  /* Populate the Rcon table. These are the values given by\n    [x^(i-1),{00},{00},{00}] where x^(i-1) are powers of x (and x = 0x02)\n    in the field of GF(2^8), where i starts at 1.\n\n    rcon[0] = [0x00, 0x00, 0x00, 0x00]\n    rcon[1] = [0x01, 0x00, 0x00, 0x00] 2^(1-1) = 2^0 = 1\n    rcon[2] = [0x02, 0x00, 0x00, 0x00] 2^(2-1) = 2^1 = 2\n    ...\n    rcon[9]  = [0x1B, 0x00, 0x00, 0x00] 2^(9-1)  = 2^8 = 0x1B\n    rcon[10] = [0x36, 0x00, 0x00, 0x00] 2^(10-1) = 2^9 = 0x36\n\n    We only store the first byte because it is the only one used.\n  */\n  rcon = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1B, 0x36];\n\n  // compute xtime table which maps i onto GF(i, 0x02)\n  var xtime = new Array(256);\n  for(var i = 0; i < 128; ++i) {\n    xtime[i] = i << 1;\n    xtime[i + 128] = (i + 128) << 1 ^ 0x11B;\n  }\n\n  // compute all other tables\n  sbox = new Array(256);\n  isbox = new Array(256);\n  mix = new Array(4);\n  imix = new Array(4);\n  for(var i = 0; i < 4; ++i) {\n    mix[i] = new Array(256);\n    imix[i] = new Array(256);\n  }\n  var e = 0, ei = 0, e2, e4, e8, sx, sx2, me, ime;\n  for(var i = 0; i < 256; ++i) {\n    /* We need to generate the SubBytes() sbox and isbox tables so that\n      we can perform byte substitutions. This requires us to traverse\n      all of the elements in GF, find their multiplicative inverses,\n      and apply to each the following affine transformation:\n\n      bi' = bi ^ b(i + 4) mod 8 ^ b(i + 5) mod 8 ^ b(i + 6) mod 8 ^\n            b(i + 7) mod 8 ^ ci\n      for 0 <= i < 8, where bi is the ith bit of the byte, and ci is the\n      ith bit of a byte c with the value {63} or {01100011}.\n\n      It is possible to traverse every possible value in a Galois field\n      using what is referred to as a 'generator'. There are many\n      generators (128 out of 256): 3,5,6,9,11,82 to name a few. To fully\n      traverse GF we iterate 255 times, multiplying by our generator\n      each time.\n\n      On each iteration we can determine the multiplicative inverse for\n      the current element.\n\n      Suppose there is an element in GF 'e'. For a given generator 'g',\n      e = g^x. The multiplicative inverse of e is g^(255 - x). It turns\n      out that if use the inverse of a generator as another generator\n      it will produce all of the corresponding multiplicative inverses\n      at the same time. For this reason, we choose 5 as our inverse\n      generator because it only requires 2 multiplies and 1 add and its\n      inverse, 82, requires relatively few operations as well.\n\n      In order to apply the affine transformation, the multiplicative\n      inverse 'ei' of 'e' can be repeatedly XOR'd (4 times) with a\n      bit-cycling of 'ei'. To do this 'ei' is first stored in 's' and\n      'x'. Then 's' is left shifted and the high bit of 's' is made the\n      low bit. The resulting value is stored in 's'. Then 'x' is XOR'd\n      with 's' and stored in 'x'. On each subsequent iteration the same\n      operation is performed. When 4 iterations are complete, 'x' is\n      XOR'd with 'c' (0x63) and the transformed value is stored in 'x'.\n      For example:\n\n      s = 01000001\n      x = 01000001\n\n      iteration 1: s = 10000010, x ^= s\n      iteration 2: s = 00000101, x ^= s\n      iteration 3: s = 00001010, x ^= s\n      iteration 4: s = 00010100, x ^= s\n      x ^= 0x63\n\n      This can be done with a loop where s = (s << 1) | (s >> 7). However,\n      it can also be done by using a single 16-bit (in this case 32-bit)\n      number 'sx'. Since XOR is an associative operation, we can set 'sx'\n      to 'ei' and then XOR it with 'sx' left-shifted 1,2,3, and 4 times.\n      The most significant bits will flow into the high 8 bit positions\n      and be correctly XOR'd with one another. All that remains will be\n      to cycle the high 8 bits by XOR'ing them all with the lower 8 bits\n      afterwards.\n\n      At the same time we're populating sbox and isbox we can precompute\n      the multiplication we'll need to do to do MixColumns() later.\n    */\n\n    // apply affine transformation\n    sx = ei ^ (ei << 1) ^ (ei << 2) ^ (ei << 3) ^ (ei << 4);\n    sx = (sx >> 8) ^ (sx & 255) ^ 0x63;\n\n    // update tables\n    sbox[e] = sx;\n    isbox[sx] = e;\n\n    /* Mixing columns is done using matrix multiplication. The columns\n      that are to be mixed are each a single word in the current state.\n      The state has Nb columns (4 columns). Therefore each column is a\n      4 byte word. So to mix the columns in a single column 'c' where\n      its rows are r0, r1, r2, and r3, we use the following matrix\n      multiplication:\n\n      [2 3 1 1]*[r0,c]=[r'0,c]\n      [1 2 3 1] [r1,c] [r'1,c]\n      [1 1 2 3] [r2,c] [r'2,c]\n      [3 1 1 2] [r3,c] [r'3,c]\n\n      r0, r1, r2, and r3 are each 1 byte of one of the words in the\n      state (a column). To do matrix multiplication for each mixed\n      column c' we multiply the corresponding row from the left matrix\n      with the corresponding column from the right matrix. In total, we\n      get 4 equations:\n\n      r0,c' = 2*r0,c + 3*r1,c + 1*r2,c + 1*r3,c\n      r1,c' = 1*r0,c + 2*r1,c + 3*r2,c + 1*r3,c\n      r2,c' = 1*r0,c + 1*r1,c + 2*r2,c + 3*r3,c\n      r3,c' = 3*r0,c + 1*r1,c + 1*r2,c + 2*r3,c\n\n      As usual, the multiplication is as previously defined and the\n      addition is XOR. In order to optimize mixing columns we can store\n      the multiplication results in tables. If you think of the whole\n      column as a word (it might help to visualize by mentally rotating\n      the equations above by counterclockwise 90 degrees) then you can\n      see that it would be useful to map the multiplications performed on\n      each byte (r0, r1, r2, r3) onto a word as well. For instance, we\n      could map 2*r0,1*r0,1*r0,3*r0 onto a word by storing 2*r0 in the\n      highest 8 bits and 3*r0 in the lowest 8 bits (with the other two\n      respectively in the middle). This means that a table can be\n      constructed that uses r0 as an index to the word. We can do the\n      same with r1, r2, and r3, creating a total of 4 tables.\n\n      To construct a full c', we can just look up each byte of c in\n      their respective tables and XOR the results together.\n\n      Also, to build each table we only have to calculate the word\n      for 2,1,1,3 for every byte ... which we can do on each iteration\n      of this loop since we will iterate over every byte. After we have\n      calculated 2,1,1,3 we can get the results for the other tables\n      by cycling the byte at the end to the beginning. For instance\n      we can take the result of table 2,1,1,3 and produce table 3,2,1,1\n      by moving the right most byte to the left most position just like\n      how you can imagine the 3 moved out of 2,1,1,3 and to the front\n      to produce 3,2,1,1.\n\n      There is another optimization in that the same multiples of\n      the current element we need in order to advance our generator\n      to the next iteration can be reused in performing the 2,1,1,3\n      calculation. We also calculate the inverse mix column tables,\n      with e,9,d,b being the inverse of 2,1,1,3.\n\n      When we're done, and we need to actually mix columns, the first\n      byte of each state word should be put through mix[0] (2,1,1,3),\n      the second through mix[1] (3,2,1,1) and so forth. Then they should\n      be XOR'd together to produce the fully mixed column.\n    */\n\n    // calculate mix and imix table values\n    sx2 = xtime[sx];\n    e2 = xtime[e];\n    e4 = xtime[e2];\n    e8 = xtime[e4];\n    me =\n      (sx2 << 24) ^  // 2\n      (sx << 16) ^   // 1\n      (sx << 8) ^    // 1\n      (sx ^ sx2);    // 3\n    ime =\n      (e2 ^ e4 ^ e8) << 24 ^  // E (14)\n      (e ^ e8) << 16 ^        // 9\n      (e ^ e4 ^ e8) << 8 ^    // D (13)\n      (e ^ e2 ^ e8);          // B (11)\n    // produce each of the mix tables by rotating the 2,1,1,3 value\n    for(var n = 0; n < 4; ++n) {\n      mix[n][e] = me;\n      imix[n][sx] = ime;\n      // cycle the right most byte to the left most position\n      // ie: 2,1,1,3 becomes 3,2,1,1\n      me = me << 24 | me >>> 8;\n      ime = ime << 24 | ime >>> 8;\n    }\n\n    // get next element and inverse\n    if(e === 0) {\n      // 1 is the inverse of 1\n      e = ei = 1;\n    } else {\n      // e = 2e + 2*2*2*(10e)) = multiply e by 82 (chosen generator)\n      // ei = ei + 2*2*ei = multiply ei by 5 (inverse generator)\n      e = e2 ^ xtime[xtime[xtime[e2 ^ e8]]];\n      ei ^= xtime[xtime[ei]];\n    }\n  }\n}\n\n/**\n * Generates a key schedule using the AES key expansion algorithm.\n *\n * The AES algorithm takes the Cipher Key, K, and performs a Key Expansion\n * routine to generate a key schedule. The Key Expansion generates a total\n * of Nb*(Nr + 1) words: the algorithm requires an initial set of Nb words,\n * and each of the Nr rounds requires Nb words of key data. The resulting\n * key schedule consists of a linear array of 4-byte words, denoted [wi ],\n * with i in the range 0 <= i < Nb(Nr + 1).\n *\n * KeyExpansion(byte key[4*Nk], word w[Nb*(Nr+1)], Nk)\n * AES-128 (Nb=4, Nk=4, Nr=10)\n * AES-192 (Nb=4, Nk=6, Nr=12)\n * AES-256 (Nb=4, Nk=8, Nr=14)\n * Note: Nr=Nk+6.\n *\n * Nb is the number of columns (32-bit words) comprising the State (or\n * number of bytes in a block). For AES, Nb=4.\n *\n * @param key the key to schedule (as an array of 32-bit words).\n * @param decrypt true to modify the key schedule to decrypt, false not to.\n *\n * @return the generated key schedule.\n */\nfunction _expandKey(key, decrypt) {\n  // copy the key's words to initialize the key schedule\n  var w = key.slice(0);\n\n  /* RotWord() will rotate a word, moving the first byte to the last\n    byte's position (shifting the other bytes left).\n\n    We will be getting the value of Rcon at i / Nk. 'i' will iterate\n    from Nk to (Nb * Nr+1). Nk = 4 (4 byte key), Nb = 4 (4 words in\n    a block), Nr = Nk + 6 (10). Therefore 'i' will iterate from\n    4 to 44 (exclusive). Each time we iterate 4 times, i / Nk will\n    increase by 1. We use a counter iNk to keep track of this.\n   */\n\n  // go through the rounds expanding the key\n  var temp, iNk = 1;\n  var Nk = w.length;\n  var Nr1 = Nk + 6 + 1;\n  var end = Nb * Nr1;\n  for(var i = Nk; i < end; ++i) {\n    temp = w[i - 1];\n    if(i % Nk === 0) {\n      // temp = SubWord(RotWord(temp)) ^ Rcon[i / Nk]\n      temp =\n        sbox[temp >>> 16 & 255] << 24 ^\n        sbox[temp >>> 8 & 255] << 16 ^\n        sbox[temp & 255] << 8 ^\n        sbox[temp >>> 24] ^ (rcon[iNk] << 24);\n      iNk++;\n    } else if(Nk > 6 && (i % Nk === 4)) {\n      // temp = SubWord(temp)\n      temp =\n        sbox[temp >>> 24] << 24 ^\n        sbox[temp >>> 16 & 255] << 16 ^\n        sbox[temp >>> 8 & 255] << 8 ^\n        sbox[temp & 255];\n    }\n    w[i] = w[i - Nk] ^ temp;\n  }\n\n  /* When we are updating a cipher block we always use the code path for\n     encryption whether we are decrypting or not (to shorten code and\n     simplify the generation of look up tables). However, because there\n     are differences in the decryption algorithm, other than just swapping\n     in different look up tables, we must transform our key schedule to\n     account for these changes:\n\n     1. The decryption algorithm gets its key rounds in reverse order.\n     2. The decryption algorithm adds the round key before mixing columns\n       instead of afterwards.\n\n     We don't need to modify our key schedule to handle the first case,\n     we can just traverse the key schedule in reverse order when decrypting.\n\n     The second case requires a little work.\n\n     The tables we built for performing rounds will take an input and then\n     perform SubBytes() and MixColumns() or, for the decrypt version,\n     InvSubBytes() and InvMixColumns(). But the decrypt algorithm requires\n     us to AddRoundKey() before InvMixColumns(). This means we'll need to\n     apply some transformations to the round key to inverse-mix its columns\n     so they'll be correct for moving AddRoundKey() to after the state has\n     had its columns inverse-mixed.\n\n     To inverse-mix the columns of the state when we're decrypting we use a\n     lookup table that will apply InvSubBytes() and InvMixColumns() at the\n     same time. However, the round key's bytes are not inverse-substituted\n     in the decryption algorithm. To get around this problem, we can first\n     substitute the bytes in the round key so that when we apply the\n     transformation via the InvSubBytes()+InvMixColumns() table, it will\n     undo our substitution leaving us with the original value that we\n     want -- and then inverse-mix that value.\n\n     This change will correctly alter our key schedule so that we can XOR\n     each round key with our already transformed decryption state. This\n     allows us to use the same code path as the encryption algorithm.\n\n     We make one more change to the decryption key. Since the decryption\n     algorithm runs in reverse from the encryption algorithm, we reverse\n     the order of the round keys to avoid having to iterate over the key\n     schedule backwards when running the encryption algorithm later in\n     decryption mode. In addition to reversing the order of the round keys,\n     we also swap each round key's 2nd and 4th rows. See the comments\n     section where rounds are performed for more details about why this is\n     done. These changes are done inline with the other substitution\n     described above.\n  */\n  if(decrypt) {\n    var tmp;\n    var m0 = imix[0];\n    var m1 = imix[1];\n    var m2 = imix[2];\n    var m3 = imix[3];\n    var wnew = w.slice(0);\n    end = w.length;\n    for(var i = 0, wi = end - Nb; i < end; i += Nb, wi -= Nb) {\n      // do not sub the first or last round key (round keys are Nb\n      // words) as no column mixing is performed before they are added,\n      // but do change the key order\n      if(i === 0 || i === (end - Nb)) {\n        wnew[i] = w[wi];\n        wnew[i + 1] = w[wi + 3];\n        wnew[i + 2] = w[wi + 2];\n        wnew[i + 3] = w[wi + 1];\n      } else {\n        // substitute each round key byte because the inverse-mix\n        // table will inverse-substitute it (effectively cancel the\n        // substitution because round key bytes aren't sub'd in\n        // decryption mode) and swap indexes 3 and 1\n        for(var n = 0; n < Nb; ++n) {\n          tmp = w[wi + n];\n          wnew[i + (3&-n)] =\n            m0[sbox[tmp >>> 24]] ^\n            m1[sbox[tmp >>> 16 & 255]] ^\n            m2[sbox[tmp >>> 8 & 255]] ^\n            m3[sbox[tmp & 255]];\n        }\n      }\n    }\n    w = wnew;\n  }\n\n  return w;\n}\n\n/**\n * Updates a single block (16 bytes) using AES. The update will either\n * encrypt or decrypt the block.\n *\n * @param w the key schedule.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(w, input, output, decrypt) {\n  /*\n  Cipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[0, Nb-1])\n    for round = 1 step 1 to Nr-1\n      SubBytes(state)\n      ShiftRows(state)\n      MixColumns(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n    end for\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    out = state\n  end\n\n  InvCipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    for round = Nr-1 step -1 downto 1\n      InvShiftRows(state)\n      InvSubBytes(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n      InvMixColumns(state)\n    end for\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n    out = state\n  end\n  */\n\n  // Encrypt: AddRoundKey(state, w[0, Nb-1])\n  // Decrypt: AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n  var Nr = w.length / 4 - 1;\n  var m0, m1, m2, m3, sub;\n  if(decrypt) {\n    m0 = imix[0];\n    m1 = imix[1];\n    m2 = imix[2];\n    m3 = imix[3];\n    sub = isbox;\n  } else {\n    m0 = mix[0];\n    m1 = mix[1];\n    m2 = mix[2];\n    m3 = mix[3];\n    sub = sbox;\n  }\n  var a, b, c, d, a2, b2, c2;\n  a = input[0] ^ w[0];\n  b = input[decrypt ? 3 : 1] ^ w[1];\n  c = input[2] ^ w[2];\n  d = input[decrypt ? 1 : 3] ^ w[3];\n  var i = 3;\n\n  /* In order to share code we follow the encryption algorithm when both\n    encrypting and decrypting. To account for the changes required in the\n    decryption algorithm, we use different lookup tables when decrypting\n    and use a modified key schedule to account for the difference in the\n    order of transformations applied when performing rounds. We also get\n    key rounds in reverse order (relative to encryption). */\n  for(var round = 1; round < Nr; ++round) {\n    /* As described above, we'll be using table lookups to perform the\n      column mixing. Each column is stored as a word in the state (the\n      array 'input' has one column as a word at each index). In order to\n      mix a column, we perform these transformations on each row in c,\n      which is 1 byte in each word. The new column for c0 is c'0:\n\n               m0      m1      m2      m3\n      r0,c'0 = 2*r0,c0 + 3*r1,c0 + 1*r2,c0 + 1*r3,c0\n      r1,c'0 = 1*r0,c0 + 2*r1,c0 + 3*r2,c0 + 1*r3,c0\n      r2,c'0 = 1*r0,c0 + 1*r1,c0 + 2*r2,c0 + 3*r3,c0\n      r3,c'0 = 3*r0,c0 + 1*r1,c0 + 1*r2,c0 + 2*r3,c0\n\n      So using mix tables where c0 is a word with r0 being its upper\n      8 bits and r3 being its lower 8 bits:\n\n      m0[c0 >> 24] will yield this word: [2*r0,1*r0,1*r0,3*r0]\n      ...\n      m3[c0 & 255] will yield this word: [1*r3,1*r3,3*r3,2*r3]\n\n      Therefore to mix the columns in each word in the state we\n      do the following (& 255 omitted for brevity):\n      c'0,r0 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r1 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r2 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r3 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n\n      However, before mixing, the algorithm requires us to perform\n      ShiftRows(). The ShiftRows() transformation cyclically shifts the\n      last 3 rows of the state over different offsets. The first row\n      (r = 0) is not shifted.\n\n      s'_r,c = s_r,(c + shift(r, Nb) mod Nb\n      for 0 < r < 4 and 0 <= c < Nb and\n      shift(1, 4) = 1\n      shift(2, 4) = 2\n      shift(3, 4) = 3.\n\n      This causes the first byte in r = 1 to be moved to the end of\n      the row, the first 2 bytes in r = 2 to be moved to the end of\n      the row, the first 3 bytes in r = 3 to be moved to the end of\n      the row:\n\n      r1: [c0 c1 c2 c3] => [c1 c2 c3 c0]\n      r2: [c0 c1 c2 c3]    [c2 c3 c0 c1]\n      r3: [c0 c1 c2 c3]    [c3 c0 c1 c2]\n\n      We can make these substitutions inline with our column mixing to\n      generate an updated set of equations to produce each word in the\n      state (note the columns have changed positions):\n\n      c0 c1 c2 c3 => c0 c1 c2 c3\n      c0 c1 c2 c3    c1 c2 c3 c0  (cycled 1 byte)\n      c0 c1 c2 c3    c2 c3 c0 c1  (cycled 2 bytes)\n      c0 c1 c2 c3    c3 c0 c1 c2  (cycled 3 bytes)\n\n      Therefore:\n\n      c'0 = 2*r0,c0 + 3*r1,c1 + 1*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 2*r1,c1 + 3*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 1*r1,c1 + 2*r2,c2 + 3*r3,c3\n      c'0 = 3*r0,c0 + 1*r1,c1 + 1*r2,c2 + 2*r3,c3\n\n      c'1 = 2*r0,c1 + 3*r1,c2 + 1*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 2*r1,c2 + 3*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 1*r1,c2 + 2*r2,c3 + 3*r3,c0\n      c'1 = 3*r0,c1 + 1*r1,c2 + 1*r2,c3 + 2*r3,c0\n\n      ... and so forth for c'2 and c'3. The important distinction is\n      that the columns are cycling, with c0 being used with the m0\n      map when calculating c0, but c1 being used with the m0 map when\n      calculating c1 ... and so forth.\n\n      When performing the inverse we transform the mirror image and\n      skip the bottom row, instead of the top one, and move upwards:\n\n      c3 c2 c1 c0 => c0 c3 c2 c1  (cycled 3 bytes) *same as encryption\n      c3 c2 c1 c0    c1 c0 c3 c2  (cycled 2 bytes)\n      c3 c2 c1 c0    c2 c1 c0 c3  (cycled 1 byte)  *same as encryption\n      c3 c2 c1 c0    c3 c2 c1 c0\n\n      If you compare the resulting matrices for ShiftRows()+MixColumns()\n      and for InvShiftRows()+InvMixColumns() the 2nd and 4th columns are\n      different (in encrypt mode vs. decrypt mode). So in order to use\n      the same code to handle both encryption and decryption, we will\n      need to do some mapping.\n\n      If in encryption mode we let a=c0, b=c1, c=c2, d=c3, and r<N> be\n      a row number in the state, then the resulting matrix in encryption\n      mode for applying the above transformations would be:\n\n      r1: a b c d\n      r2: b c d a\n      r3: c d a b\n      r4: d a b c\n\n      If we did the same in decryption mode we would get:\n\n      r1: a d c b\n      r2: b a d c\n      r3: c b a d\n      r4: d c b a\n\n      If instead we swap d and b (set b=c3 and d=c1), then we get:\n\n      r1: a b c d\n      r2: d a b c\n      r3: c d a b\n      r4: b c d a\n\n      Now the 1st and 3rd rows are the same as the encryption matrix. All\n      we need to do then to make the mapping exactly the same is to swap\n      the 2nd and 4th rows when in decryption mode. To do this without\n      having to do it on each iteration, we swapped the 2nd and 4th rows\n      in the decryption key schedule. We also have to do the swap above\n      when we first pull in the input and when we set the final output. */\n    a2 =\n      m0[a >>> 24] ^\n      m1[b >>> 16 & 255] ^\n      m2[c >>> 8 & 255] ^\n      m3[d & 255] ^ w[++i];\n    b2 =\n      m0[b >>> 24] ^\n      m1[c >>> 16 & 255] ^\n      m2[d >>> 8 & 255] ^\n      m3[a & 255] ^ w[++i];\n    c2 =\n      m0[c >>> 24] ^\n      m1[d >>> 16 & 255] ^\n      m2[a >>> 8 & 255] ^\n      m3[b & 255] ^ w[++i];\n    d =\n      m0[d >>> 24] ^\n      m1[a >>> 16 & 255] ^\n      m2[b >>> 8 & 255] ^\n      m3[c & 255] ^ w[++i];\n    a = a2;\n    b = b2;\n    c = c2;\n  }\n\n  /*\n    Encrypt:\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n\n    Decrypt:\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n   */\n  // Note: rows are shifted inline\n  output[0] =\n    (sub[a >>> 24] << 24) ^\n    (sub[b >>> 16 & 255] << 16) ^\n    (sub[c >>> 8 & 255] << 8) ^\n    (sub[d & 255]) ^ w[++i];\n  output[decrypt ? 3 : 1] =\n    (sub[b >>> 24] << 24) ^\n    (sub[c >>> 16 & 255] << 16) ^\n    (sub[d >>> 8 & 255] << 8) ^\n    (sub[a & 255]) ^ w[++i];\n  output[2] =\n    (sub[c >>> 24] << 24) ^\n    (sub[d >>> 16 & 255] << 16) ^\n    (sub[a >>> 8 & 255] << 8) ^\n    (sub[b & 255]) ^ w[++i];\n  output[decrypt ? 1 : 3] =\n    (sub[d >>> 24] << 24) ^\n    (sub[a >>> 16 & 255] << 16) ^\n    (sub[b >>> 8 & 255] << 8) ^\n    (sub[c & 255]) ^ w[++i];\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('AES-<mode>', key);\n * forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates a deprecated AES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key and iv may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param options the options to use.\n *          key the symmetric key to use.\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'AES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n","/**\n * Javascript implementation of Abstract Syntax Notation Number One.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n *\n * An API for storing data using the Abstract Syntax Notation Number One\n * format using DER (Distinguished Encoding Rules) encoding. This encoding is\n * commonly used to store data for PKI, i.e. X.509 Certificates, and this\n * implementation exists for that purpose.\n *\n * Abstract Syntax Notation Number One (ASN.1) is used to define the abstract\n * syntax of information without restricting the way the information is encoded\n * for transmission. It provides a standard that allows for open systems\n * communication. ASN.1 defines the syntax of information data and a number of\n * simple data types as well as a notation for describing them and specifying\n * values for them.\n *\n * The RSA algorithm creates public and private keys that are often stored in\n * X.509 or PKCS#X formats -- which use ASN.1 (encoded in DER format). This\n * class provides the most basic functionality required to store and load DSA\n * keys that are encoded according to ASN.1.\n *\n * The most common binary encodings for ASN.1 are BER (Basic Encoding Rules)\n * and DER (Distinguished Encoding Rules). DER is just a subset of BER that\n * has stricter requirements for how data must be encoded.\n *\n * Each ASN.1 structure has a tag (a byte identifying the ASN.1 structure type)\n * and a byte array for the value of this ASN1 structure which may be data or a\n * list of ASN.1 structures.\n *\n * Each ASN.1 structure using BER is (Tag-Length-Value):\n *\n * | byte 0 | bytes X | bytes Y |\n * |--------|---------|----------\n * |  tag   | length  |  value  |\n *\n * ASN.1 allows for tags to be of \"High-tag-number form\" which allows a tag to\n * be two or more octets, but that is not supported by this class. A tag is\n * only 1 byte. Bits 1-5 give the tag number (ie the data type within a\n * particular 'class'), 6 indicates whether or not the ASN.1 value is\n * constructed from other ASN.1 values, and bits 7 and 8 give the 'class'. If\n * bits 7 and 8 are both zero, the class is UNIVERSAL. If only bit 7 is set,\n * then the class is APPLICATION. If only bit 8 is set, then the class is\n * CONTEXT_SPECIFIC. If both bits 7 and 8 are set, then the class is PRIVATE.\n * The tag numbers for the data types for the class UNIVERSAL are listed below:\n *\n * UNIVERSAL 0 Reserved for use by the encoding rules\n * UNIVERSAL 1 Boolean type\n * UNIVERSAL 2 Integer type\n * UNIVERSAL 3 Bitstring type\n * UNIVERSAL 4 Octetstring type\n * UNIVERSAL 5 Null type\n * UNIVERSAL 6 Object identifier type\n * UNIVERSAL 7 Object descriptor type\n * UNIVERSAL 8 External type and Instance-of type\n * UNIVERSAL 9 Real type\n * UNIVERSAL 10 Enumerated type\n * UNIVERSAL 11 Embedded-pdv type\n * UNIVERSAL 12 UTF8String type\n * UNIVERSAL 13 Relative object identifier type\n * UNIVERSAL 14-15 Reserved for future editions\n * UNIVERSAL 16 Sequence and Sequence-of types\n * UNIVERSAL 17 Set and Set-of types\n * UNIVERSAL 18-22, 25-30 Character string types\n * UNIVERSAL 23-24 Time types\n *\n * The length of an ASN.1 structure is specified after the tag identifier.\n * There is a definite form and an indefinite form. The indefinite form may\n * be used if the encoding is constructed and not all immediately available.\n * The indefinite form is encoded using a length byte with only the 8th bit\n * set. The end of the constructed object is marked using end-of-contents\n * octets (two zero bytes).\n *\n * The definite form looks like this:\n *\n * The length may take up 1 or more bytes, it depends on the length of the\n * value of the ASN.1 structure. DER encoding requires that if the ASN.1\n * structure has a value that has a length greater than 127, more than 1 byte\n * will be used to store its length, otherwise just one byte will be used.\n * This is strict.\n *\n * In the case that the length of the ASN.1 value is less than 127, 1 octet\n * (byte) is used to store the \"short form\" length. The 8th bit has a value of\n * 0 indicating the length is \"short form\" and not \"long form\" and bits 7-1\n * give the length of the data. (The 8th bit is the left-most, most significant\n * bit: also known as big endian or network format).\n *\n * In the case that the length of the ASN.1 value is greater than 127, 2 to\n * 127 octets (bytes) are used to store the \"long form\" length. The first\n * byte's 8th bit is set to 1 to indicate the length is \"long form.\" Bits 7-1\n * give the number of additional octets. All following octets are in base 256\n * with the most significant digit first (typical big-endian binary unsigned\n * integer storage). So, for instance, if the length of a value was 257, the\n * first byte would be set to:\n *\n * 10000010 = 130 = 0x82.\n *\n * This indicates there are 2 octets (base 256) for the length. The second and\n * third bytes (the octets just mentioned) would store the length in base 256:\n *\n * octet 2: 00000001 = 1 * 256^1 = 256\n * octet 3: 00000001 = 1 * 256^0 = 1\n * total = 257\n *\n * The algorithm for converting a js integer value of 257 to base-256 is:\n *\n * var value = 257;\n * var bytes = [];\n * bytes[0] = (value >>> 8) & 0xFF; // most significant byte first\n * bytes[1] = value & 0xFF;        // least significant byte last\n *\n * On the ASN.1 UNIVERSAL Object Identifier (OID) type:\n *\n * An OID can be written like: \"value1.value2.value3...valueN\"\n *\n * The DER encoding rules:\n *\n * The first byte has the value 40 * value1 + value2.\n * The following bytes, if any, encode the remaining values. Each value is\n * encoded in base 128, most significant digit first (big endian), with as\n * few digits as possible, and the most significant bit of each byte set\n * to 1 except the last in each value's encoding. For example: Given the\n * OID \"1.2.840.113549\", its DER encoding is (remember each byte except the\n * last one in each encoding is OR'd with 0x80):\n *\n * byte 1: 40 * 1 + 2 = 42 = 0x2A.\n * bytes 2-3: 128 * 6 + 72 = 840 = 6 72 = 6 72 = 0x0648 = 0x8648\n * bytes 4-6: 16384 * 6 + 128 * 119 + 13 = 6 119 13 = 0x06770D = 0x86F70D\n *\n * The final value is: 0x2A864886F70D.\n * The full OID (including ASN.1 tag and length of 6 bytes) is:\n * 0x06062A864886F70D\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./oids');\n\n/* ASN.1 API */\nvar asn1 = module.exports = forge.asn1 = forge.asn1 || {};\n\n/**\n * ASN.1 classes.\n */\nasn1.Class = {\n  UNIVERSAL:        0x00,\n  APPLICATION:      0x40,\n  CONTEXT_SPECIFIC: 0x80,\n  PRIVATE:          0xC0\n};\n\n/**\n * ASN.1 types. Not all types are supported by this implementation, only\n * those necessary to implement a simple PKI are implemented.\n */\nasn1.Type = {\n  NONE:             0,\n  BOOLEAN:          1,\n  INTEGER:          2,\n  BITSTRING:        3,\n  OCTETSTRING:      4,\n  NULL:             5,\n  OID:              6,\n  ODESC:            7,\n  EXTERNAL:         8,\n  REAL:             9,\n  ENUMERATED:      10,\n  EMBEDDED:        11,\n  UTF8:            12,\n  ROID:            13,\n  SEQUENCE:        16,\n  SET:             17,\n  PRINTABLESTRING: 19,\n  IA5STRING:       22,\n  UTCTIME:         23,\n  GENERALIZEDTIME: 24,\n  BMPSTRING:       30\n};\n\n/**\n * Creates a new asn1 object.\n *\n * @param tagClass the tag class for the object.\n * @param type the data type (tag number) for the object.\n * @param constructed true if the asn1 object is in constructed form.\n * @param value the value for the object, if it is not constructed.\n * @param [options] the options to use:\n *          [bitStringContents] the plain BIT STRING content including padding\n *            byte.\n *\n * @return the asn1 object.\n */\nasn1.create = function(tagClass, type, constructed, value, options) {\n  /* An asn1 object has a tagClass, a type, a constructed flag, and a\n    value. The value's type depends on the constructed flag. If\n    constructed, it will contain a list of other asn1 objects. If not,\n    it will contain the ASN.1 value as an array of bytes formatted\n    according to the ASN.1 data type. */\n\n  // remove undefined values\n  if(forge.util.isArray(value)) {\n    var tmp = [];\n    for(var i = 0; i < value.length; ++i) {\n      if(value[i] !== undefined) {\n        tmp.push(value[i]);\n      }\n    }\n    value = tmp;\n  }\n\n  var obj = {\n    tagClass: tagClass,\n    type: type,\n    constructed: constructed,\n    composed: constructed || forge.util.isArray(value),\n    value: value\n  };\n  if(options && 'bitStringContents' in options) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    obj.bitStringContents = options.bitStringContents;\n    // TODO: add readonly flag to avoid this overhead\n    // save copy to detect changes\n    obj.original = asn1.copy(obj);\n  }\n  return obj;\n};\n\n/**\n * Copies an asn1 object.\n *\n * @param obj the asn1 object.\n * @param [options] copy options:\n *          [excludeBitStringContents] true to not copy bitStringContents\n *\n * @return the a copy of the asn1 object.\n */\nasn1.copy = function(obj, options) {\n  var copy;\n\n  if(forge.util.isArray(obj)) {\n    copy = [];\n    for(var i = 0; i < obj.length; ++i) {\n      copy.push(asn1.copy(obj[i], options));\n    }\n    return copy;\n  }\n\n  if(typeof obj === 'string') {\n    // TODO: copy byte buffer if it's a buffer not a string\n    return obj;\n  }\n\n  copy = {\n    tagClass: obj.tagClass,\n    type: obj.type,\n    constructed: obj.constructed,\n    composed: obj.composed,\n    value: asn1.copy(obj.value, options)\n  };\n  if(options && !options.excludeBitStringContents) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    copy.bitStringContents = obj.bitStringContents;\n  }\n  return copy;\n};\n\n/**\n * Compares asn1 objects for equality.\n *\n * Note this function does not run in constant time.\n *\n * @param obj1 the first asn1 object.\n * @param obj2 the second asn1 object.\n * @param [options] compare options:\n *          [includeBitStringContents] true to compare bitStringContents\n *\n * @return true if the asn1 objects are equal.\n */\nasn1.equals = function(obj1, obj2, options) {\n  if(forge.util.isArray(obj1)) {\n    if(!forge.util.isArray(obj2)) {\n      return false;\n    }\n    if(obj1.length !== obj2.length) {\n      return false;\n    }\n    for(var i = 0; i < obj1.length; ++i) {\n      if(!asn1.equals(obj1[i], obj2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if(typeof obj1 !== typeof obj2) {\n    return false;\n  }\n\n  if(typeof obj1 === 'string') {\n    return obj1 === obj2;\n  }\n\n  var equal = obj1.tagClass === obj2.tagClass &&\n    obj1.type === obj2.type &&\n    obj1.constructed === obj2.constructed &&\n    obj1.composed === obj2.composed &&\n    asn1.equals(obj1.value, obj2.value);\n  if(options && options.includeBitStringContents) {\n    equal = equal && (obj1.bitStringContents === obj2.bitStringContents);\n  }\n\n  return equal;\n};\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param b the BER-encoded ASN.1 byte buffer, starting with the first\n *          length byte.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nasn1.getBerValueLength = function(b) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  var b2 = b.getByte();\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    length = b.getInt((b2 & 0x7F) << 3);\n  }\n  return length;\n};\n\n/**\n * Check if the byte buffer has enough bytes. Throws an Error if not.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n * @param n the number of bytes the buffer must have.\n */\nfunction _checkBufferLength(bytes, remaining, n) {\n  if(n > remaining) {\n    var error = new Error('Too few bytes to parse DER.');\n    error.available = bytes.length();\n    error.remaining = remaining;\n    error.requested = n;\n    throw error;\n  }\n}\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nvar _getValueLength = function(bytes, remaining) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  // fromDer already checked that this byte exists\n  var b2 = bytes.getByte();\n  remaining--;\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    var longFormBytes = b2 & 0x7F;\n    _checkBufferLength(bytes, remaining, longFormBytes);\n    length = bytes.getInt(longFormBytes << 3);\n  }\n  // FIXME: this will only happen for 32 bit getInt with high bit set\n  if(length < 0) {\n    throw new Error('Negative length: ' + length);\n  }\n  return length;\n};\n\n/**\n * Parses an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param [strict] true to be strict when checking value lengths, false to\n *          allow truncated values (default: true).\n * @param [options] object with options or boolean strict flag\n *          [strict] true to be strict when checking value lengths, false to\n *            allow truncated values (default: true).\n *          [parseAllBytes] true to ensure all bytes are parsed\n *            (default: true)\n *          [decodeBitStrings] true to attempt to decode the content of\n *            BIT STRINGs (not OCTET STRINGs) using strict mode. Note that\n *            without schema support to understand the data context this can\n *            erroneously decode values that happen to be valid ASN.1. This\n *            flag will be deprecated or removed as soon as schema support is\n *            available. (default: true)\n *\n * @throws Will throw an error for various malformed input conditions.\n *\n * @return the parsed asn1 object.\n */\nasn1.fromDer = function(bytes, options) {\n  if(options === undefined) {\n    options = {\n      strict: true,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(typeof options === 'boolean') {\n    options = {\n      strict: options,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(!('strict' in options)) {\n    options.strict = true;\n  }\n  if(!('parseAllBytes' in options)) {\n    options.parseAllBytes = true;\n  }\n  if(!('decodeBitStrings' in options)) {\n    options.decodeBitStrings = true;\n  }\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var byteCount = bytes.length();\n  var value = _fromDer(bytes, bytes.length(), 0, options);\n  if(options.parseAllBytes && bytes.length() !== 0) {\n    var error = new Error('Unparsed DER bytes remain after ASN.1 parsing.');\n    error.byteCount = byteCount;\n    error.remaining = bytes.length();\n    throw error;\n  }\n  return value;\n};\n\n/**\n * Internal function to parse an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the number of bytes remaining for this chunk.\n * @param depth the current parsing depth.\n * @param options object with same options as fromDer().\n *\n * @return the parsed asn1 object.\n */\nfunction _fromDer(bytes, remaining, depth, options) {\n  // temporary storage for consumption calculations\n  var start;\n\n  // minimum length for ASN.1 DER structure is 2\n  _checkBufferLength(bytes, remaining, 2);\n\n  // get the first byte\n  var b1 = bytes.getByte();\n  // consumed one byte\n  remaining--;\n\n  // get the tag class\n  var tagClass = (b1 & 0xC0);\n\n  // get the type (bits 1-5)\n  var type = b1 & 0x1F;\n\n  // get the variable value length and adjust remaining bytes\n  start = bytes.length();\n  var length = _getValueLength(bytes, remaining);\n  remaining -= start - bytes.length();\n\n  // ensure there are enough bytes to get the value\n  if(length !== undefined && length > remaining) {\n    if(options.strict) {\n      var error = new Error('Too few bytes to read ASN.1 value.');\n      error.available = bytes.length();\n      error.remaining = remaining;\n      error.requested = length;\n      throw error;\n    }\n    // Note: be lenient with truncated values and use remaining state bytes\n    length = remaining;\n  }\n\n  // value storage\n  var value;\n  // possible BIT STRING contents storage\n  var bitStringContents;\n\n  // constructed flag is bit 6 (32 = 0x20) of the first byte\n  var constructed = ((b1 & 0x20) === 0x20);\n  if(constructed) {\n    // parse child asn1 objects from the value\n    value = [];\n    if(length === undefined) {\n      // asn1 object of indefinite length, read until end tag\n      for(;;) {\n        _checkBufferLength(bytes, remaining, 2);\n        if(bytes.bytes(2) === String.fromCharCode(0, 0)) {\n          bytes.getBytes(2);\n          remaining -= 2;\n          break;\n        }\n        start = bytes.length();\n        value.push(_fromDer(bytes, remaining, depth + 1, options));\n        remaining -= start - bytes.length();\n      }\n    } else {\n      // parsing asn1 object of definite length\n      while(length > 0) {\n        start = bytes.length();\n        value.push(_fromDer(bytes, length, depth + 1, options));\n        remaining -= start - bytes.length();\n        length -= start - bytes.length();\n      }\n    }\n  }\n\n  // if a BIT STRING, save the contents including padding\n  if(value === undefined && tagClass === asn1.Class.UNIVERSAL &&\n    type === asn1.Type.BITSTRING) {\n    bitStringContents = bytes.bytes(length);\n  }\n\n  // determine if a non-constructed value should be decoded as a composed\n  // value that contains other ASN.1 objects. BIT STRINGs (and OCTET STRINGs)\n  // can be used this way.\n  if(value === undefined && options.decodeBitStrings &&\n    tagClass === asn1.Class.UNIVERSAL &&\n    // FIXME: OCTET STRINGs not yet supported here\n    // .. other parts of forge expect to decode OCTET STRINGs manually\n    (type === asn1.Type.BITSTRING /*|| type === asn1.Type.OCTETSTRING*/) &&\n    length > 1) {\n    // save read position\n    var savedRead = bytes.read;\n    var savedRemaining = remaining;\n    var unused = 0;\n    if(type === asn1.Type.BITSTRING) {\n      /* The first octet gives the number of bits by which the length of the\n        bit string is less than the next multiple of eight (this is called\n        the \"number of unused bits\").\n\n        The second and following octets give the value of the bit string\n        converted to an octet string. */\n      _checkBufferLength(bytes, remaining, 1);\n      unused = bytes.getByte();\n      remaining--;\n    }\n    // if all bits are used, maybe the BIT/OCTET STRING holds ASN.1 objs\n    if(unused === 0) {\n      try {\n        // attempt to parse child asn1 object from the value\n        // (stored in array to signal composed value)\n        start = bytes.length();\n        var subOptions = {\n          // enforce strict mode to avoid parsing ASN.1 from plain data\n          strict: true,\n          decodeBitStrings: true\n        };\n        var composed = _fromDer(bytes, remaining, depth + 1, subOptions);\n        var used = start - bytes.length();\n        remaining -= used;\n        if(type == asn1.Type.BITSTRING) {\n          used++;\n        }\n\n        // if the data all decoded and the class indicates UNIVERSAL or\n        // CONTEXT_SPECIFIC then assume we've got an encapsulated ASN.1 object\n        var tc = composed.tagClass;\n        if(used === length &&\n          (tc === asn1.Class.UNIVERSAL || tc === asn1.Class.CONTEXT_SPECIFIC)) {\n          value = [composed];\n        }\n      } catch(ex) {\n      }\n    }\n    if(value === undefined) {\n      // restore read position\n      bytes.read = savedRead;\n      remaining = savedRemaining;\n    }\n  }\n\n  if(value === undefined) {\n    // asn1 not constructed or composed, get raw value\n    // TODO: do DER to OID conversion and vice-versa in .toDer?\n\n    if(length === undefined) {\n      if(options.strict) {\n        throw new Error('Non-constructed ASN.1 object of indefinite length.');\n      }\n      // be lenient and use remaining state bytes\n      length = remaining;\n    }\n\n    if(type === asn1.Type.BMPSTRING) {\n      value = '';\n      for(; length > 0; length -= 2) {\n        _checkBufferLength(bytes, remaining, 2);\n        value += String.fromCharCode(bytes.getInt16());\n        remaining -= 2;\n      }\n    } else {\n      value = bytes.getBytes(length);\n      remaining -= length;\n    }\n  }\n\n  // add BIT STRING contents if available\n  var asn1Options = bitStringContents === undefined ? null : {\n    bitStringContents: bitStringContents\n  };\n\n  // create and return asn1 object\n  return asn1.create(tagClass, type, constructed, value, asn1Options);\n}\n\n/**\n * Converts the given asn1 object to a buffer of bytes in DER format.\n *\n * @param asn1 the asn1 object to convert to bytes.\n *\n * @return the buffer of bytes.\n */\nasn1.toDer = function(obj) {\n  var bytes = forge.util.createBuffer();\n\n  // build the first byte\n  var b1 = obj.tagClass | obj.type;\n\n  // for storing the ASN.1 value\n  var value = forge.util.createBuffer();\n\n  // use BIT STRING contents if available and data not changed\n  var useBitStringContents = false;\n  if('bitStringContents' in obj) {\n    useBitStringContents = true;\n    if(obj.original) {\n      useBitStringContents = asn1.equals(obj, obj.original);\n    }\n  }\n\n  if(useBitStringContents) {\n    value.putBytes(obj.bitStringContents);\n  } else if(obj.composed) {\n    // if composed, use each child asn1 object's DER bytes as value\n    // turn on 6th bit (0x20 = 32) to indicate asn1 is constructed\n    // from other asn1 objects\n    if(obj.constructed) {\n      b1 |= 0x20;\n    } else {\n      // type is a bit string, add unused bits of 0x00\n      value.putByte(0x00);\n    }\n\n    // add all of the child DER bytes together\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        value.putBuffer(asn1.toDer(obj.value[i]));\n      }\n    }\n  } else {\n    // use asn1.value directly\n    if(obj.type === asn1.Type.BMPSTRING) {\n      for(var i = 0; i < obj.value.length; ++i) {\n        value.putInt16(obj.value.charCodeAt(i));\n      }\n    } else {\n      // ensure integer is minimally-encoded\n      // TODO: should all leading bytes be stripped vs just one?\n      // .. ex '00 00 01' => '01'?\n      if(obj.type === asn1.Type.INTEGER &&\n        obj.value.length > 1 &&\n        // leading 0x00 for positive integer\n        ((obj.value.charCodeAt(0) === 0 &&\n        (obj.value.charCodeAt(1) & 0x80) === 0) ||\n        // leading 0xFF for negative integer\n        (obj.value.charCodeAt(0) === 0xFF &&\n        (obj.value.charCodeAt(1) & 0x80) === 0x80))) {\n        value.putBytes(obj.value.substr(1));\n      } else {\n        value.putBytes(obj.value);\n      }\n    }\n  }\n\n  // add tag byte\n  bytes.putByte(b1);\n\n  // use \"short form\" encoding\n  if(value.length() <= 127) {\n    // one byte describes the length\n    // bit 8 = 0 and bits 7-1 = length\n    bytes.putByte(value.length() & 0x7F);\n  } else {\n    // use \"long form\" encoding\n    // 2 to 127 bytes describe the length\n    // first byte: bit 8 = 1 and bits 7-1 = # of additional bytes\n    // other bytes: length in base 256, big-endian\n    var len = value.length();\n    var lenBytes = '';\n    do {\n      lenBytes += String.fromCharCode(len & 0xFF);\n      len = len >>> 8;\n    } while(len > 0);\n\n    // set first byte to # bytes used to store the length and turn on\n    // bit 8 to indicate long-form length is used\n    bytes.putByte(lenBytes.length | 0x80);\n\n    // concatenate length bytes in reverse since they were generated\n    // little endian and we need big endian\n    for(var i = lenBytes.length - 1; i >= 0; --i) {\n      bytes.putByte(lenBytes.charCodeAt(i));\n    }\n  }\n\n  // concatenate value bytes\n  bytes.putBuffer(value);\n  return bytes;\n};\n\n/**\n * Converts an OID dot-separated string to a byte buffer. The byte buffer\n * contains only the DER-encoded value, not any tag or length bytes.\n *\n * @param oid the OID dot-separated string.\n *\n * @return the byte buffer.\n */\nasn1.oidToDer = function(oid) {\n  // split OID into individual values\n  var values = oid.split('.');\n  var bytes = forge.util.createBuffer();\n\n  // first byte is 40 * value1 + value2\n  bytes.putByte(40 * parseInt(values[0], 10) + parseInt(values[1], 10));\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var last, valueBytes, value, b;\n  for(var i = 2; i < values.length; ++i) {\n    // produce value bytes in reverse because we don't know how many\n    // bytes it will take to store the value\n    last = true;\n    valueBytes = [];\n    value = parseInt(values[i], 10);\n    do {\n      b = value & 0x7F;\n      value = value >>> 7;\n      // if value is not last, then turn on 8th bit\n      if(!last) {\n        b |= 0x80;\n      }\n      valueBytes.push(b);\n      last = false;\n    } while(value > 0);\n\n    // add value bytes in reverse (needs to be in big endian)\n    for(var n = valueBytes.length - 1; n >= 0; --n) {\n      bytes.putByte(valueBytes[n]);\n    }\n  }\n\n  return bytes;\n};\n\n/**\n * Converts a DER-encoded byte buffer to an OID dot-separated string. The\n * byte buffer should contain only the DER-encoded value, not any tag or\n * length bytes.\n *\n * @param bytes the byte buffer.\n *\n * @return the OID dot-separated string.\n */\nasn1.derToOid = function(bytes) {\n  var oid;\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  // first byte is 40 * value1 + value2\n  var b = bytes.getByte();\n  oid = Math.floor(b / 40) + '.' + (b % 40);\n\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var value = 0;\n  while(bytes.length() > 0) {\n    b = bytes.getByte();\n    value = value << 7;\n    // not the last byte for the value\n    if(b & 0x80) {\n      value += b & 0x7F;\n    } else {\n      // last byte\n      oid += '.' + (value + b);\n      value = 0;\n    }\n  }\n\n  return oid;\n};\n\n/**\n * Converts a UTCTime value to a date.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Parsing that structure hasn't been implemented yet.\n *\n * @param utc the UTCTime value to convert.\n *\n * @return the date.\n */\nasn1.utcTimeToDate = function(utc) {\n  /* The following formats can be used:\n\n    YYMMDDhhmmZ\n    YYMMDDhhmm+hh'mm'\n    YYMMDDhhmm-hh'mm'\n    YYMMDDhhmmssZ\n    YYMMDDhhmmss+hh'mm'\n    YYMMDDhhmmss-hh'mm'\n\n    Where:\n\n    YY is the least significant two digits of the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  // if YY >= 50 use 19xx, if YY < 50 use 20xx\n  var year = parseInt(utc.substr(0, 2), 10);\n  year = (year >= 50) ? 1900 + year : 2000 + year;\n  var MM = parseInt(utc.substr(2, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(utc.substr(4, 2), 10);\n  var hh = parseInt(utc.substr(6, 2), 10);\n  var mm = parseInt(utc.substr(8, 2), 10);\n  var ss = 0;\n\n  // not just YYMMDDhhmmZ\n  if(utc.length > 11) {\n    // get character after minutes\n    var c = utc.charAt(10);\n    var end = 10;\n\n    // see if seconds are present\n    if(c !== '+' && c !== '-') {\n      // get seconds\n      ss = parseInt(utc.substr(10, 2), 10);\n      end += 2;\n    }\n  }\n\n  // update date\n  date.setUTCFullYear(year, MM, DD);\n  date.setUTCHours(hh, mm, ss, 0);\n\n  if(end) {\n    // get +/- after end of time\n    c = utc.charAt(end);\n    if(c === '+' || c === '-') {\n      // get hours+minutes offset\n      var hhoffset = parseInt(utc.substr(end + 1, 2), 10);\n      var mmoffset = parseInt(utc.substr(end + 4, 2), 10);\n\n      // calculate offset in milliseconds\n      var offset = hhoffset * 60 + mmoffset;\n      offset *= 60000;\n\n      // apply offset\n      if(c === '+') {\n        date.setTime(+date - offset);\n      } else {\n        date.setTime(+date + offset);\n      }\n    }\n  }\n\n  return date;\n};\n\n/**\n * Converts a GeneralizedTime value to a date.\n *\n * @param gentime the GeneralizedTime value to convert.\n *\n * @return the date.\n */\nasn1.generalizedTimeToDate = function(gentime) {\n  /* The following formats can be used:\n\n    YYYYMMDDHHMMSS\n    YYYYMMDDHHMMSS.fff\n    YYYYMMDDHHMMSSZ\n    YYYYMMDDHHMMSS.fffZ\n    YYYYMMDDHHMMSS+hh'mm'\n    YYYYMMDDHHMMSS.fff+hh'mm'\n    YYYYMMDDHHMMSS-hh'mm'\n    YYYYMMDDHHMMSS.fff-hh'mm'\n\n    Where:\n\n    YYYY is the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    .fff is the second fraction, accurate to three decimal places\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  var YYYY = parseInt(gentime.substr(0, 4), 10);\n  var MM = parseInt(gentime.substr(4, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(gentime.substr(6, 2), 10);\n  var hh = parseInt(gentime.substr(8, 2), 10);\n  var mm = parseInt(gentime.substr(10, 2), 10);\n  var ss = parseInt(gentime.substr(12, 2), 10);\n  var fff = 0;\n  var offset = 0;\n  var isUTC = false;\n\n  if(gentime.charAt(gentime.length - 1) === 'Z') {\n    isUTC = true;\n  }\n\n  var end = gentime.length - 5, c = gentime.charAt(end);\n  if(c === '+' || c === '-') {\n    // get hours+minutes offset\n    var hhoffset = parseInt(gentime.substr(end + 1, 2), 10);\n    var mmoffset = parseInt(gentime.substr(end + 4, 2), 10);\n\n    // calculate offset in milliseconds\n    offset = hhoffset * 60 + mmoffset;\n    offset *= 60000;\n\n    // apply offset\n    if(c === '+') {\n      offset *= -1;\n    }\n\n    isUTC = true;\n  }\n\n  // check for second fraction\n  if(gentime.charAt(14) === '.') {\n    fff = parseFloat(gentime.substr(14), 10) * 1000;\n  }\n\n  if(isUTC) {\n    date.setUTCFullYear(YYYY, MM, DD);\n    date.setUTCHours(hh, mm, ss, fff);\n\n    // apply offset\n    date.setTime(+date + offset);\n  } else {\n    date.setFullYear(YYYY, MM, DD);\n    date.setHours(hh, mm, ss, fff);\n  }\n\n  return date;\n};\n\n/**\n * Converts a date to a UTCTime value.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Converting to a GeneralizedTime hasn't been\n * implemented yet.\n *\n * @param date the date to convert.\n *\n * @return the UTCTime value.\n */\nasn1.dateToUtcTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYMMDDhhmmssZ\n  var format = [];\n  format.push(('' + date.getUTCFullYear()).substr(2));\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a date to a GeneralizedTime value.\n *\n * @param date the date to convert.\n *\n * @return the GeneralizedTime value as a string.\n */\nasn1.dateToGeneralizedTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYYYMMDDHHMMSSZ\n  var format = [];\n  format.push('' + date.getUTCFullYear());\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a javascript integer to a DER-encoded byte buffer to be used\n * as the value for an INTEGER type.\n *\n * @param x the integer.\n *\n * @return the byte buffer.\n */\nasn1.integerToDer = function(x) {\n  var rval = forge.util.createBuffer();\n  if(x >= -0x80 && x < 0x80) {\n    return rval.putSignedInt(x, 8);\n  }\n  if(x >= -0x8000 && x < 0x8000) {\n    return rval.putSignedInt(x, 16);\n  }\n  if(x >= -0x800000 && x < 0x800000) {\n    return rval.putSignedInt(x, 24);\n  }\n  if(x >= -0x80000000 && x < 0x80000000) {\n    return rval.putSignedInt(x, 32);\n  }\n  var error = new Error('Integer too large; max is 32-bits.');\n  error.integer = x;\n  throw error;\n};\n\n/**\n * Converts a DER-encoded byte buffer to a javascript integer. This is\n * typically used to decode the value of an INTEGER type.\n *\n * @param bytes the byte buffer.\n *\n * @return the integer.\n */\nasn1.derToInteger = function(bytes) {\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var n = bytes.length() * 8;\n  if(n > 32) {\n    throw new Error('Integer too large; max is 32-bits.');\n  }\n  return bytes.getSignedInt(n);\n};\n\n/**\n * Validates that the given ASN.1 object is at least a super set of the\n * given ASN.1 structure. Only tag classes and types are checked. An\n * optional map may also be provided to capture ASN.1 values while the\n * structure is checked.\n *\n * To capture an ASN.1 value, set an object in the validator's 'capture'\n * parameter to the key to use in the capture map. To capture the full\n * ASN.1 object, specify 'captureAsn1'. To capture BIT STRING bytes, including\n * the leading unused bits counter byte, specify 'captureBitStringContents'.\n * To capture BIT STRING bytes, without the leading unused bits counter byte,\n * specify 'captureBitStringValue'.\n *\n * Objects in the validator may set a field 'optional' to true to indicate\n * that it isn't necessary to pass validation.\n *\n * @param obj the ASN.1 object to validate.\n * @param v the ASN.1 structure validator.\n * @param capture an optional map to capture values in.\n * @param errors an optional array for storing validation errors.\n *\n * @return true on success, false on failure.\n */\nasn1.validate = function(obj, v, capture, errors) {\n  var rval = false;\n\n  // ensure tag class and type are the same if specified\n  if((obj.tagClass === v.tagClass || typeof(v.tagClass) === 'undefined') &&\n    (obj.type === v.type || typeof(v.type) === 'undefined')) {\n    // ensure constructed flag is the same if specified\n    if(obj.constructed === v.constructed ||\n      typeof(v.constructed) === 'undefined') {\n      rval = true;\n\n      // handle sub values\n      if(v.value && forge.util.isArray(v.value)) {\n        var j = 0;\n        for(var i = 0; rval && i < v.value.length; ++i) {\n          rval = v.value[i].optional || false;\n          if(obj.value[j]) {\n            rval = asn1.validate(obj.value[j], v.value[i], capture, errors);\n            if(rval) {\n              ++j;\n            } else if(v.value[i].optional) {\n              rval = true;\n            }\n          }\n          if(!rval && errors) {\n            errors.push(\n              '[' + v.name + '] ' +\n              'Tag class \"' + v.tagClass + '\", type \"' +\n              v.type + '\" expected value length \"' +\n              v.value.length + '\", got \"' +\n              obj.value.length + '\"');\n          }\n        }\n      }\n\n      if(rval && capture) {\n        if(v.capture) {\n          capture[v.capture] = obj.value;\n        }\n        if(v.captureAsn1) {\n          capture[v.captureAsn1] = obj;\n        }\n        if(v.captureBitStringContents && 'bitStringContents' in obj) {\n          capture[v.captureBitStringContents] = obj.bitStringContents;\n        }\n        if(v.captureBitStringValue && 'bitStringContents' in obj) {\n          var value;\n          if(obj.bitStringContents.length < 2) {\n            capture[v.captureBitStringValue] = '';\n          } else {\n            // FIXME: support unused bits with data shifting\n            var unused = obj.bitStringContents.charCodeAt(0);\n            if(unused !== 0) {\n              throw new Error(\n                'captureBitStringValue only supported for zero unused bits');\n            }\n            capture[v.captureBitStringValue] = obj.bitStringContents.slice(1);\n          }\n        }\n      }\n    } else if(errors) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected constructed \"' + v.constructed + '\", got \"' +\n        obj.constructed + '\"');\n    }\n  } else if(errors) {\n    if(obj.tagClass !== v.tagClass) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected tag class \"' + v.tagClass + '\", got \"' +\n        obj.tagClass + '\"');\n    }\n    if(obj.type !== v.type) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected type \"' + v.type + '\", got \"' + obj.type + '\"');\n    }\n  }\n  return rval;\n};\n\n// regex for testing for non-latin characters\nvar _nonLatinRegex = /[^\\\\u0000-\\\\u00ff]/;\n\n/**\n * Pretty prints an ASN.1 object to a string.\n *\n * @param obj the object to write out.\n * @param level the level in the tree.\n * @param indentation the indentation to use.\n *\n * @return the string.\n */\nasn1.prettyPrint = function(obj, level, indentation) {\n  var rval = '';\n\n  // set default level and indentation\n  level = level || 0;\n  indentation = indentation || 2;\n\n  // start new line for deep levels\n  if(level > 0) {\n    rval += '\\n';\n  }\n\n  // create indent\n  var indent = '';\n  for(var i = 0; i < level * indentation; ++i) {\n    indent += ' ';\n  }\n\n  // print class:type\n  rval += indent + 'Tag: ';\n  switch(obj.tagClass) {\n  case asn1.Class.UNIVERSAL:\n    rval += 'Universal:';\n    break;\n  case asn1.Class.APPLICATION:\n    rval += 'Application:';\n    break;\n  case asn1.Class.CONTEXT_SPECIFIC:\n    rval += 'Context-Specific:';\n    break;\n  case asn1.Class.PRIVATE:\n    rval += 'Private:';\n    break;\n  }\n\n  if(obj.tagClass === asn1.Class.UNIVERSAL) {\n    rval += obj.type;\n\n    // known types\n    switch(obj.type) {\n    case asn1.Type.NONE:\n      rval += ' (None)';\n      break;\n    case asn1.Type.BOOLEAN:\n      rval += ' (Boolean)';\n      break;\n    case asn1.Type.INTEGER:\n      rval += ' (Integer)';\n      break;\n    case asn1.Type.BITSTRING:\n      rval += ' (Bit string)';\n      break;\n    case asn1.Type.OCTETSTRING:\n      rval += ' (Octet string)';\n      break;\n    case asn1.Type.NULL:\n      rval += ' (Null)';\n      break;\n    case asn1.Type.OID:\n      rval += ' (Object Identifier)';\n      break;\n    case asn1.Type.ODESC:\n      rval += ' (Object Descriptor)';\n      break;\n    case asn1.Type.EXTERNAL:\n      rval += ' (External or Instance of)';\n      break;\n    case asn1.Type.REAL:\n      rval += ' (Real)';\n      break;\n    case asn1.Type.ENUMERATED:\n      rval += ' (Enumerated)';\n      break;\n    case asn1.Type.EMBEDDED:\n      rval += ' (Embedded PDV)';\n      break;\n    case asn1.Type.UTF8:\n      rval += ' (UTF8)';\n      break;\n    case asn1.Type.ROID:\n      rval += ' (Relative Object Identifier)';\n      break;\n    case asn1.Type.SEQUENCE:\n      rval += ' (Sequence)';\n      break;\n    case asn1.Type.SET:\n      rval += ' (Set)';\n      break;\n    case asn1.Type.PRINTABLESTRING:\n      rval += ' (Printable String)';\n      break;\n    case asn1.Type.IA5String:\n      rval += ' (IA5String (ASCII))';\n      break;\n    case asn1.Type.UTCTIME:\n      rval += ' (UTC time)';\n      break;\n    case asn1.Type.GENERALIZEDTIME:\n      rval += ' (Generalized time)';\n      break;\n    case asn1.Type.BMPSTRING:\n      rval += ' (BMP String)';\n      break;\n    }\n  } else {\n    rval += obj.type;\n  }\n\n  rval += '\\n';\n  rval += indent + 'Constructed: ' + obj.constructed + '\\n';\n\n  if(obj.composed) {\n    var subvalues = 0;\n    var sub = '';\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        subvalues += 1;\n        sub += asn1.prettyPrint(obj.value[i], level + 1, indentation);\n        if((i + 1) < obj.value.length) {\n          sub += ',';\n        }\n      }\n    }\n    rval += indent + 'Sub values: ' + subvalues + sub;\n  } else {\n    rval += indent + 'Value: ';\n    if(obj.type === asn1.Type.OID) {\n      var oid = asn1.derToOid(obj.value);\n      rval += oid;\n      if(forge.pki && forge.pki.oids) {\n        if(oid in forge.pki.oids) {\n          rval += ' (' + forge.pki.oids[oid] + ') ';\n        }\n      }\n    }\n    if(obj.type === asn1.Type.INTEGER) {\n      try {\n        rval += asn1.derToInteger(obj.value);\n      } catch(ex) {\n        rval += '0x' + forge.util.bytesToHex(obj.value);\n      }\n    } else if(obj.type === asn1.Type.BITSTRING) {\n      // TODO: shift bits as needed to display without padding\n      if(obj.value.length > 1) {\n        // remove unused bits field\n        rval += '0x' + forge.util.bytesToHex(obj.value.slice(1));\n      } else {\n        rval += '(none)';\n      }\n      // show unused bit count\n      if(obj.value.length > 0) {\n        var unused = obj.value.charCodeAt(0);\n        if(unused == 1) {\n          rval += ' (1 unused bit shown)';\n        } else if(unused > 1) {\n          rval += ' (' + unused + ' unused bits shown)';\n        }\n      }\n    } else if(obj.type === asn1.Type.OCTETSTRING) {\n      if(!_nonLatinRegex.test(obj.value)) {\n        rval += '(' + obj.value + ') ';\n      }\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.type === asn1.Type.UTF8) {\n      try {\n        rval += forge.util.decodeUtf8(obj.value);\n      } catch(e) {\n        if(e.message === 'URI malformed') {\n          rval +=\n            '0x' + forge.util.bytesToHex(obj.value) + ' (malformed UTF8)';\n        } else {\n          throw e;\n        }\n      }\n    } else if(obj.type === asn1.Type.PRINTABLESTRING ||\n      obj.type === asn1.Type.IA5String) {\n      rval += obj.value;\n    } else if(_nonLatinRegex.test(obj.value)) {\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.value.length === 0) {\n      rval += '[null]';\n    } else {\n      rval += obj.value;\n    }\n  }\n\n  return rval;\n};\n","/**\n * Base-N/Base-X encoding/decoding functions.\n *\n * Original implementation from base-x:\n * https://github.com/cryptocoinjs/base-x\n *\n * Which is MIT licensed:\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nvar api = {};\nmodule.exports = api;\n\n// baseN alphabet indexes\nvar _reverseAlphabets = {};\n\n/**\n * BaseN-encodes a Uint8Array using the given alphabet.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the baseN-encoded output string.\n */\napi.encode = function(input, alphabet, maxline) {\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n  if(maxline !== undefined && typeof maxline !== 'number') {\n    throw new TypeError('\"maxline\" must be a number.');\n  }\n\n  var output = '';\n\n  if(!(input instanceof Uint8Array)) {\n    // assume forge byte buffer\n    output = _encodeWithByteBuffer(input, alphabet);\n  } else {\n    var i = 0;\n    var base = alphabet.length;\n    var first = alphabet.charAt(0);\n    var digits = [0];\n    for(i = 0; i < input.length; ++i) {\n      for(var j = 0, carry = input[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % base;\n        carry = (carry / base) | 0;\n      }\n\n      while(carry > 0) {\n        digits.push(carry % base);\n        carry = (carry / base) | 0;\n      }\n    }\n\n    // deal with leading zeros\n    for(i = 0; input[i] === 0 && i < input.length - 1; ++i) {\n      output += first;\n    }\n    // convert digits to a string\n    for(i = digits.length - 1; i >= 0; --i) {\n      output += alphabet[digits[i]];\n    }\n  }\n\n  if(maxline) {\n    var regex = new RegExp('.{1,' + maxline + '}', 'g');\n    output = output.match(regex).join('\\r\\n');\n  }\n\n  return output;\n};\n\n/**\n * Decodes a baseN-encoded (using the given alphabet) string to a\n * Uint8Array.\n *\n * @param input the baseN-encoded input string.\n *\n * @return the Uint8Array.\n */\napi.decode = function(input, alphabet) {\n  if(typeof input !== 'string') {\n    throw new TypeError('\"input\" must be a string.');\n  }\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n\n  var table = _reverseAlphabets[alphabet];\n  if(!table) {\n    // compute reverse alphabet\n    table = _reverseAlphabets[alphabet] = [];\n    for(var i = 0; i < alphabet.length; ++i) {\n      table[alphabet.charCodeAt(i)] = i;\n    }\n  }\n\n  // remove whitespace characters\n  input = input.replace(/\\s/g, '');\n\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var bytes = [0];\n  for(var i = 0; i < input.length; i++) {\n    var value = table[input.charCodeAt(i)];\n    if(value === undefined) {\n      return;\n    }\n\n    for(var j = 0, carry = value; j < bytes.length; ++j) {\n      carry += bytes[j] * base;\n      bytes[j] = carry & 0xff;\n      carry >>= 8;\n    }\n\n    while(carry > 0) {\n      bytes.push(carry & 0xff);\n      carry >>= 8;\n    }\n  }\n\n  // deal with leading zeros\n  for(var k = 0; input[k] === first && k < input.length - 1; ++k) {\n    bytes.push(0);\n  }\n\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(bytes.reverse());\n  }\n\n  return new Uint8Array(bytes.reverse());\n};\n\nfunction _encodeWithByteBuffer(input, alphabet) {\n  var i = 0;\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var digits = [0];\n  for(i = 0; i < input.length(); ++i) {\n    for(var j = 0, carry = input.at(i); j < digits.length; ++j) {\n      carry += digits[j] << 8;\n      digits[j] = carry % base;\n      carry = (carry / base) | 0;\n    }\n\n    while(carry > 0) {\n      digits.push(carry % base);\n      carry = (carry / base) | 0;\n    }\n  }\n\n  var output = '';\n\n  // deal with leading zeros\n  for(i = 0; input.at(i) === 0 && i < input.length() - 1; ++i) {\n    output += first;\n  }\n  // convert digits to a string\n  for(i = digits.length - 1; i >= 0; --i) {\n    output += alphabet[digits[i]];\n  }\n\n  return output;\n}\n","/**\n * Cipher base API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nmodule.exports = forge.cipher = forge.cipher || {};\n\n// registered algorithms\nforge.cipher.algorithms = forge.cipher.algorithms || {};\n\n/**\n * Creates a cipher object that can be used to encrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createCipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: false\n  });\n};\n\n/**\n * Creates a decipher object that can be used to decrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createDecipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: true\n  });\n};\n\n/**\n * Registers an algorithm by name. If the name was already registered, the\n * algorithm API object will be overwritten.\n *\n * @param name the name of the algorithm.\n * @param algorithm the algorithm API object.\n */\nforge.cipher.registerAlgorithm = function(name, algorithm) {\n  name = name.toUpperCase();\n  forge.cipher.algorithms[name] = algorithm;\n};\n\n/**\n * Gets a registered algorithm by name.\n *\n * @param name the name of the algorithm.\n *\n * @return the algorithm, if found, null if not.\n */\nforge.cipher.getAlgorithm = function(name) {\n  name = name.toUpperCase();\n  if(name in forge.cipher.algorithms) {\n    return forge.cipher.algorithms[name];\n  }\n  return null;\n};\n\nvar BlockCipher = forge.cipher.BlockCipher = function(options) {\n  this.algorithm = options.algorithm;\n  this.mode = this.algorithm.mode;\n  this.blockSize = this.mode.blockSize;\n  this._finish = false;\n  this._input = null;\n  this.output = null;\n  this._op = options.decrypt ? this.mode.decrypt : this.mode.encrypt;\n  this._decrypt = options.decrypt;\n  this.algorithm.initialize(options);\n};\n\n/**\n * Starts or restarts the encryption or decryption process, whichever\n * was previously configured.\n *\n * For non-GCM mode, the IV may be a binary-encoded string of bytes, an array\n * of bytes, a byte buffer, or an array of 32-bit integers. If the IV is in\n * bytes, then it must be Nb (16) bytes in length. If the IV is given in as\n * 32-bit integers, then it must be 4 integers long.\n *\n * Note: an IV is not required or used in ECB mode.\n *\n * For GCM-mode, the IV must be given as a binary-encoded string of bytes or\n * a byte buffer. The number of bytes should be 12 (96 bits) as recommended\n * by NIST SP-800-38D but another length may be given.\n *\n * @param options the options to use:\n *          iv the initialization vector to use as a binary-encoded string of\n *            bytes, null to reuse the last ciphered block from a previous\n *            update() (this \"residue\" method is for legacy support only).\n *          additionalData additional authentication data as a binary-encoded\n *            string of bytes, for 'GCM' mode, (default: none).\n *          tagLength desired length of authentication tag, in bits, for\n *            'GCM' mode (0-128, default: 128).\n *          tag the authentication tag to check if decrypting, as a\n *             binary-encoded string of bytes.\n *          output the output the buffer to write to, null to create one.\n */\nBlockCipher.prototype.start = function(options) {\n  options = options || {};\n  var opts = {};\n  for(var key in options) {\n    opts[key] = options[key];\n  }\n  opts.decrypt = this._decrypt;\n  this._finish = false;\n  this._input = forge.util.createBuffer();\n  this.output = options.output || forge.util.createBuffer();\n  this.mode.start(opts);\n};\n\n/**\n * Updates the next block according to the cipher mode.\n *\n * @param input the buffer to read from.\n */\nBlockCipher.prototype.update = function(input) {\n  if(input) {\n    // input given, so empty it into the input buffer\n    this._input.putBuffer(input);\n  }\n\n  // do cipher operation until it needs more input and not finished\n  while(!this._op.call(this.mode, this._input, this.output, this._finish) &&\n    !this._finish) {}\n\n  // free consumed memory from input buffer\n  this._input.compact();\n};\n\n/**\n * Finishes encrypting or decrypting.\n *\n * @param pad a padding function to use in CBC mode, null for default,\n *          signature(blockSize, buffer, decrypt).\n *\n * @return true if successful, false on error.\n */\nBlockCipher.prototype.finish = function(pad) {\n  // backwards-compatibility w/deprecated padding API\n  // Note: will overwrite padding functions even after another start() call\n  if(pad && (this.mode.name === 'ECB' || this.mode.name === 'CBC')) {\n    this.mode.pad = function(input) {\n      return pad(this.blockSize, input, false);\n    };\n    this.mode.unpad = function(output) {\n      return pad(this.blockSize, output, true);\n    };\n  }\n\n  // build options for padding and afterFinish functions\n  var options = {};\n  options.decrypt = this._decrypt;\n\n  // get # of bytes that won't fill a block\n  options.overflow = this._input.length() % this.blockSize;\n\n  if(!this._decrypt && this.mode.pad) {\n    if(!this.mode.pad(this._input, options)) {\n      return false;\n    }\n  }\n\n  // do final update\n  this._finish = true;\n  this.update();\n\n  if(this._decrypt && this.mode.unpad) {\n    if(!this.mode.unpad(this.output, options)) {\n      return false;\n    }\n  }\n\n  if(this.mode.afterFinish) {\n    if(!this.mode.afterFinish(this.output, options)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","/**\n * Supported cipher modes.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.cipher = forge.cipher || {};\n\n// supported cipher modes\nvar modes = module.exports = forge.cipher.modes = forge.cipher.modes || {};\n\n/** Electronic codebook (ECB) (Don't use this; it's not secure) **/\n\nmodes.ecb = function(options) {\n  options = options || {};\n  this.name = 'ECB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.ecb.prototype.start = function(options) {};\n\nmodes.ecb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.ecb.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher-block Chaining (CBC) **/\n\nmodes.cbc = function(options) {\n  options = options || {};\n  this.name = 'CBC';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.cbc.prototype.start = function(options) {\n  // Note: legacy support for using IV residue (has security flaws)\n  // if IV is null, reuse block from previous processing\n  if(options.iv === null) {\n    // must have a previous block\n    if(!this._prev) {\n      throw new Error('Invalid IV parameter.');\n    }\n    this._iv = this._prev.slice(0);\n  } else if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  } else {\n    // save IV as \"previous\" block\n    this._iv = transformIV(options.iv, this.blockSize);\n    this._prev = this._iv.slice(0);\n  }\n};\n\nmodes.cbc.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  // CBC XOR's IV (or previous block) with plaintext\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = this._prev[i] ^ input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous block\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n  this._prev = this._outBlock;\n};\n\nmodes.cbc.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous ciphered block\n  // CBC XOR's IV (or previous block) with ciphertext\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._prev[i] ^ this._outBlock[i]);\n  }\n  this._prev = this._inBlock.slice(0);\n};\n\nmodes.cbc.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.cbc.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher feedback (CFB) **/\n\nmodes.cfb = function(options) {\n  options = options || {};\n  this.name = 'CFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32() ^ this._outBlock[i];\n      output.putInt32(this._inBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32() ^ this._outBlock[i];\n    this._partialOutput.putInt32(this._partialBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32();\n      output.putInt32(this._inBlock[i] ^ this._outBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32();\n    this._partialOutput.putInt32(this._partialBlock[i] ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\n/** Output feedback (OFB) **/\n\nmodes.ofb = function(options) {\n  options = options || {};\n  this.name = 'OFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(input.length() === 0) {\n    return true;\n  }\n\n  // encrypt block (OFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output and update next input\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n      this._inBlock[i] = this._outBlock[i];\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._outBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.decrypt = modes.ofb.prototype.encrypt;\n\n/** Counter (CTR) **/\n\nmodes.ctr = function(options) {\n  options = options || {};\n  this.name = 'CTR';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CTR always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes > 0) {\n      // block still incomplete, restore input buffer\n      input.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // block complete, increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.ctr.prototype.decrypt = modes.ctr.prototype.encrypt;\n\n/** Galois/Counter Mode (GCM) **/\n\nmodes.gcm = function(options) {\n  options = options || {};\n  this.name = 'GCM';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n\n  // R is actually this value concatenated with 120 more zero bits, but\n  // we only XOR against R so the other zeros have no effect -- we just\n  // apply this value to the first integer in a block\n  this._R = 0xE1000000;\n};\n\nmodes.gcm.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // ensure IV is a byte buffer\n  var iv = forge.util.createBuffer(options.iv);\n\n  // no ciphered data processed yet\n  this._cipherLength = 0;\n\n  // default additional data is none\n  var additionalData;\n  if('additionalData' in options) {\n    additionalData = forge.util.createBuffer(options.additionalData);\n  } else {\n    additionalData = forge.util.createBuffer();\n  }\n\n  // default tag length is 128 bits\n  if('tagLength' in options) {\n    this._tagLength = options.tagLength;\n  } else {\n    this._tagLength = 128;\n  }\n\n  // if tag is given, ensure tag matches tag length\n  this._tag = null;\n  if(options.decrypt) {\n    // save tag to check later\n    this._tag = forge.util.createBuffer(options.tag).getBytes();\n    if(this._tag.length !== (this._tagLength / 8)) {\n      throw new Error('Authentication tag does not match tag length.');\n    }\n  }\n\n  // create tmp storage for hash calculation\n  this._hashBlock = new Array(this._ints);\n\n  // no tag generated yet\n  this.tag = null;\n\n  // generate hash subkey\n  // (apply block cipher to \"zero\" block)\n  this._hashSubkey = new Array(this._ints);\n  this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey);\n\n  // generate table M\n  // use 4-bit tables (32 component decomposition of a 16 byte value)\n  // 8-bit tables take more space and are known to have security\n  // vulnerabilities (in native implementations)\n  this.componentBits = 4;\n  this._m = this.generateHashTable(this._hashSubkey, this.componentBits);\n\n  // Note: support IV length different from 96 bits? (only supporting\n  // 96 bits is recommended by NIST SP-800-38D)\n  // generate J_0\n  var ivLength = iv.length();\n  if(ivLength === 12) {\n    // 96-bit IV\n    this._j0 = [iv.getInt32(), iv.getInt32(), iv.getInt32(), 1];\n  } else {\n    // IV is NOT 96-bits\n    this._j0 = [0, 0, 0, 0];\n    while(iv.length() > 0) {\n      this._j0 = this.ghash(\n        this._hashSubkey, this._j0,\n        [iv.getInt32(), iv.getInt32(), iv.getInt32(), iv.getInt32()]);\n    }\n    this._j0 = this.ghash(\n      this._hashSubkey, this._j0, [0, 0].concat(from64To32(ivLength * 8)));\n  }\n\n  // generate ICB (initial counter block)\n  this._inBlock = this._j0.slice(0);\n  inc32(this._inBlock);\n  this._partialBytes = 0;\n\n  // consume authentication data\n  additionalData = forge.util.createBuffer(additionalData);\n  // save additional data length as a BE 64-bit number\n  this._aDataLength = from64To32(additionalData.length() * 8);\n  // pad additional data to 128 bit (16 byte) block size\n  var overflow = additionalData.length() % this.blockSize;\n  if(overflow) {\n    additionalData.fillWithByte(0, this.blockSize - overflow);\n  }\n  this._s = [0, 0, 0, 0];\n  while(additionalData.length() > 0) {\n    this._s = this.ghash(this._hashSubkey, this._s, [\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32()\n    ]);\n  }\n};\n\nmodes.gcm.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(this._outBlock[i] ^= input.getInt32());\n    }\n    this._cipherLength += this.blockSize;\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes <= 0 || finish) {\n      // handle overflow prior to hashing\n      if(finish) {\n        // get block overflow\n        var overflow = inputLength % this.blockSize;\n        this._cipherLength += overflow;\n        // truncate for hash function\n        this._partialOutput.truncate(this.blockSize - overflow);\n      } else {\n        this._cipherLength += this.blockSize;\n      }\n\n      // get output block for hashing\n      for(var i = 0; i < this._ints; ++i) {\n        this._outBlock[i] = this._partialOutput.getInt32();\n      }\n      this._partialOutput.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      // block still incomplete, restore input buffer, get partial output,\n      // and return early\n      input.read -= this.blockSize;\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // update hash block S\n  this._s = this.ghash(this._hashSubkey, this._s, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.gcm.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength < this.blockSize && !(finish && inputLength > 0)) {\n    return true;\n  }\n\n  // encrypt block (GCM always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n\n  // update hash block S\n  this._hashBlock[0] = input.getInt32();\n  this._hashBlock[1] = input.getInt32();\n  this._hashBlock[2] = input.getInt32();\n  this._hashBlock[3] = input.getInt32();\n  this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);\n\n  // XOR hash input with output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i] ^ this._hashBlock[i]);\n  }\n\n  // increment cipher data length\n  if(inputLength < this.blockSize) {\n    this._cipherLength += inputLength % this.blockSize;\n  } else {\n    this._cipherLength += this.blockSize;\n  }\n};\n\nmodes.gcm.prototype.afterFinish = function(output, options) {\n  var rval = true;\n\n  // handle overflow\n  if(options.decrypt && options.overflow) {\n    output.truncate(this.blockSize - options.overflow);\n  }\n\n  // handle authentication tag\n  this.tag = forge.util.createBuffer();\n\n  // concatenate additional data length with cipher length\n  var lengths = this._aDataLength.concat(from64To32(this._cipherLength * 8));\n\n  // include lengths in hash\n  this._s = this.ghash(this._hashSubkey, this._s, lengths);\n\n  // do GCTR(J_0, S)\n  var tag = [];\n  this.cipher.encrypt(this._j0, tag);\n  for(var i = 0; i < this._ints; ++i) {\n    this.tag.putInt32(this._s[i] ^ tag[i]);\n  }\n\n  // trim tag to length\n  this.tag.truncate(this.tag.length() % (this._tagLength / 8));\n\n  // check authentication tag\n  if(options.decrypt && this.tag.bytes() !== this._tag) {\n    rval = false;\n  }\n\n  return rval;\n};\n\n/**\n * See NIST SP-800-38D 6.3 (Algorithm 1). This function performs Galois\n * field multiplication. The field, GF(2^128), is defined by the polynomial:\n *\n * x^128 + x^7 + x^2 + x + 1\n *\n * Which is represented in little-endian binary form as: 11100001 (0xe1). When\n * the value of a coefficient is 1, a bit is set. The value R, is the\n * concatenation of this value and 120 zero bits, yielding a 128-bit value\n * which matches the block size.\n *\n * This function will multiply two elements (vectors of bytes), X and Y, in\n * the field GF(2^128). The result is initialized to zero. For each bit of\n * X (out of 128), x_i, if x_i is set, then the result is multiplied (XOR'd)\n * by the current value of Y. For each bit, the value of Y will be raised by\n * a power of x (multiplied by the polynomial x). This can be achieved by\n * shifting Y once to the right. If the current value of Y, prior to being\n * multiplied by x, has 0 as its LSB, then it is a 127th degree polynomial.\n * Otherwise, we must divide by R after shifting to find the remainder.\n *\n * @param x the first block to multiply by the second.\n * @param y the second block to multiply by the first.\n *\n * @return the block result of the multiplication.\n */\nmodes.gcm.prototype.multiply = function(x, y) {\n  var z_i = [0, 0, 0, 0];\n  var v_i = y.slice(0);\n\n  // calculate Z_128 (block has 128 bits)\n  for(var i = 0; i < 128; ++i) {\n    // if x_i is 0, Z_{i+1} = Z_i (unchanged)\n    // else Z_{i+1} = Z_i ^ V_i\n    // get x_i by finding 32-bit int position, then left shift 1 by remainder\n    var x_i = x[(i / 32) | 0] & (1 << (31 - i % 32));\n    if(x_i) {\n      z_i[0] ^= v_i[0];\n      z_i[1] ^= v_i[1];\n      z_i[2] ^= v_i[2];\n      z_i[3] ^= v_i[3];\n    }\n\n    // if LSB(V_i) is 1, V_i = V_i >> 1\n    // else V_i = (V_i >> 1) ^ R\n    this.pow(v_i, v_i);\n  }\n\n  return z_i;\n};\n\nmodes.gcm.prototype.pow = function(x, out) {\n  // if LSB(x) is 1, x = x >>> 1\n  // else x = (x >>> 1) ^ R\n  var lsb = x[3] & 1;\n\n  // always do x >>> 1:\n  // starting with the rightmost integer, shift each integer to the right\n  // one bit, pulling in the bit from the integer to the left as its top\n  // most bit (do this for the last 3 integers)\n  for(var i = 3; i > 0; --i) {\n    out[i] = (x[i] >>> 1) | ((x[i - 1] & 1) << 31);\n  }\n  // shift the first integer normally\n  out[0] = x[0] >>> 1;\n\n  // if lsb was not set, then polynomial had a degree of 127 and doesn't\n  // need to divided; otherwise, XOR with R to find the remainder; we only\n  // need to XOR the first integer since R technically ends w/120 zero bits\n  if(lsb) {\n    out[0] ^= this._R;\n  }\n};\n\nmodes.gcm.prototype.tableMultiply = function(x) {\n  // assumes 4-bit tables are used\n  var z = [0, 0, 0, 0];\n  for(var i = 0; i < 32; ++i) {\n    var idx = (i / 8) | 0;\n    var x_i = (x[idx] >>> ((7 - (i % 8)) * 4)) & 0xF;\n    var ah = this._m[i][x_i];\n    z[0] ^= ah[0];\n    z[1] ^= ah[1];\n    z[2] ^= ah[2];\n    z[3] ^= ah[3];\n  }\n  return z;\n};\n\n/**\n * A continuing version of the GHASH algorithm that operates on a single\n * block. The hash block, last hash value (Ym) and the new block to hash\n * are given.\n *\n * @param h the hash block.\n * @param y the previous value for Ym, use [0, 0, 0, 0] for a new hash.\n * @param x the block to hash.\n *\n * @return the hashed value (Ym).\n */\nmodes.gcm.prototype.ghash = function(h, y, x) {\n  y[0] ^= x[0];\n  y[1] ^= x[1];\n  y[2] ^= x[2];\n  y[3] ^= x[3];\n  return this.tableMultiply(y);\n  //return this.multiply(y, h);\n};\n\n/**\n * Precomputes a table for multiplying against the hash subkey. This\n * mechanism provides a substantial speed increase over multiplication\n * performed without a table. The table-based multiplication this table is\n * for solves X * H by multiplying each component of X by H and then\n * composing the results together using XOR.\n *\n * This function can be used to generate tables with different bit sizes\n * for the components, however, this implementation assumes there are\n * 32 components of X (which is a 16 byte vector), therefore each component\n * takes 4-bits (so the table is constructed with bits=4).\n *\n * @param h the hash subkey.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateHashTable = function(h, bits) {\n  // TODO: There are further optimizations that would use only the\n  // first table M_0 (or some variant) along with a remainder table;\n  // this can be explored in the future\n  var multiplier = 8 / bits;\n  var perInt = 4 * multiplier;\n  var size = 16 * multiplier;\n  var m = new Array(size);\n  for(var i = 0; i < size; ++i) {\n    var tmp = [0, 0, 0, 0];\n    var idx = (i / perInt) | 0;\n    var shft = ((perInt - 1 - (i % perInt)) * bits);\n    tmp[idx] = (1 << (bits - 1)) << shft;\n    m[i] = this.generateSubHashTable(this.multiply(tmp, h), bits);\n  }\n  return m;\n};\n\n/**\n * Generates a table for multiplying against the hash subkey for one\n * particular component (out of all possible component values).\n *\n * @param mid the pre-multiplied value for the middle key of the table.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateSubHashTable = function(mid, bits) {\n  // compute the table quickly by minimizing the number of\n  // POW operations -- they only need to be performed for powers of 2,\n  // all other entries can be composed from those powers using XOR\n  var size = 1 << bits;\n  var half = size >>> 1;\n  var m = new Array(size);\n  m[half] = mid.slice(0);\n  var i = half >>> 1;\n  while(i > 0) {\n    // raise m0[2 * i] and store in m0[i]\n    this.pow(m[2 * i], m[i] = []);\n    i >>= 1;\n  }\n  i = 2;\n  while(i < half) {\n    for(var j = 1; j < i; ++j) {\n      var m_i = m[i];\n      var m_j = m[j];\n      m[i + j] = [\n        m_i[0] ^ m_j[0],\n        m_i[1] ^ m_j[1],\n        m_i[2] ^ m_j[2],\n        m_i[3] ^ m_j[3]\n      ];\n    }\n    i *= 2;\n  }\n  m[0] = [0, 0, 0, 0];\n  /* Note: We could avoid storing these by doing composition during multiply\n  calculate top half using composition by speed is preferred. */\n  for(i = half + 1; i < size; ++i) {\n    var c = m[i ^ half];\n    m[i] = [mid[0] ^ c[0], mid[1] ^ c[1], mid[2] ^ c[2], mid[3] ^ c[3]];\n  }\n  return m;\n};\n\n/** Utility functions */\n\nfunction transformIV(iv, blockSize) {\n  if(typeof iv === 'string') {\n    // convert iv string into byte buffer\n    iv = forge.util.createBuffer(iv);\n  }\n\n  if(forge.util.isArray(iv) && iv.length > 4) {\n    // convert iv byte array into byte buffer\n    var tmp = iv;\n    iv = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      iv.putByte(tmp[i]);\n    }\n  }\n\n  if(iv.length() < blockSize) {\n    throw new Error(\n      'Invalid IV length; got ' + iv.length() +\n      ' bytes and expected ' + blockSize + ' bytes.');\n  }\n\n  if(!forge.util.isArray(iv)) {\n    // convert iv byte buffer into 32-bit integer array\n    var ints = [];\n    var blocks = blockSize / 4;\n    for(var i = 0; i < blocks; ++i) {\n      ints.push(iv.getInt32());\n    }\n    iv = ints;\n  }\n\n  return iv;\n}\n\nfunction inc32(block) {\n  // increment last 32 bits of block only\n  block[block.length - 1] = (block[block.length - 1] + 1) & 0xFFFFFFFF;\n}\n\nfunction from64To32(num) {\n  // convert 64-bit number to two BE Int32s\n  return [(num / 0x100000000) | 0, num & 0xFFFFFFFF];\n}\n","/**\n * DES (Data Encryption Standard) implementation.\n *\n * This implementation supports DES as well as 3DES-EDE in ECB and CBC mode.\n * It is based on the BSD-licensed implementation by Paul Tero:\n *\n * Paul Tero, July 2001\n * http://www.tero.co.uk/des/\n *\n * Optimised for performance with large blocks by\n * Michael Hayworth, November 2001\n * http://www.netdealing.com\n *\n * THIS SOFTWARE IS PROVIDED \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* DES API */\nmodule.exports = forge.des = forge.des || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new DES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the DES algorithm object.\n */\nforge.des.Algorithm = function(name, mode) {\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 8,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this DES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.des.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = forge.util.createBuffer(options.key);\n  if(this.name.indexOf('3DES') === 0) {\n    if(key.length() !== 24) {\n      throw new Error('Invalid Triple-DES key size: ' + key.length() * 8);\n    }\n  }\n\n  // do key expansion to 16 or 48 subkeys (single or triple DES)\n  this._keys = _createKeys(key);\n  this._init = true;\n};\n\n/** Register DES algorithms **/\n\nregisterAlgorithm('DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('DES-CTR', forge.cipher.modes.ctr);\n\nregisterAlgorithm('3DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('3DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('3DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('3DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('3DES-CTR', forge.cipher.modes.ctr);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.des.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** DES implementation **/\n\nvar spfunction1 = [0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004];\nvar spfunction2 = [-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000];\nvar spfunction3 = [0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200];\nvar spfunction4 = [0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080];\nvar spfunction5 = [0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100];\nvar spfunction6 = [0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010];\nvar spfunction7 = [0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002];\nvar spfunction8 = [0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000];\n\n/**\n * Create necessary sub keys.\n *\n * @param key the 64-bit or 192-bit key.\n *\n * @return the expanded keys.\n */\nfunction _createKeys(key) {\n  var pc2bytes0  = [0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204],\n      pc2bytes1  = [0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101],\n      pc2bytes2  = [0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808],\n      pc2bytes3  = [0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000],\n      pc2bytes4  = [0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010],\n      pc2bytes5  = [0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420],\n      pc2bytes6  = [0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002],\n      pc2bytes7  = [0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800],\n      pc2bytes8  = [0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002],\n      pc2bytes9  = [0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408],\n      pc2bytes10 = [0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020],\n      pc2bytes11 = [0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200],\n      pc2bytes12 = [0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010],\n      pc2bytes13 = [0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105];\n\n  // how many iterations (1 for des, 3 for triple des)\n  // changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n  var iterations = key.length() > 8 ? 3 : 1;\n\n  // stores the return keys\n  var keys = [];\n\n  // now define the left shifts which need to be done\n  var shifts = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0];\n\n  var n = 0, tmp;\n  for(var j = 0; j < iterations; j++) {\n    var left = key.getInt32();\n    var right = key.getInt32();\n\n    tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n    right ^= tmp;\n    left ^= (tmp << 4);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 2) ^ right) & 0x33333333;\n    right ^= tmp;\n    left ^= (tmp << 2);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n    left ^= tmp;\n    right ^= (tmp << 8);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    // right needs to be shifted and OR'd with last four bits of left\n    tmp = (left << 8) | ((right >>> 20) & 0x000000f0);\n\n    // left needs to be put upside down\n    left = ((right << 24) | ((right << 8) & 0xff0000) |\n      ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0));\n    right = tmp;\n\n    // now go through and perform these shifts on the left and right keys\n    for(var i = 0; i < shifts.length; ++i) {\n      //shift the keys either one or two bits to the left\n      if(shifts[i]) {\n        left = (left << 2) | (left >>> 26);\n        right = (right << 2) | (right >>> 26);\n      } else {\n        left = (left << 1) | (left >>> 27);\n        right = (right << 1) | (right >>> 27);\n      }\n      left &= -0xf;\n      right &= -0xf;\n\n      // now apply PC-2, in such a way that E is easier when encrypting or\n      // decrypting this conversion will look like PC-2 except only the last 6\n      // bits of each byte are used rather than 48 consecutive bits and the\n      // order of lines will be according to how the S selection functions will\n      // be applied: S2, S4, S6, S8, S1, S3, S5, S7\n      var lefttmp = (\n        pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf] |\n        pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf] |\n        pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf] |\n        pc2bytes6[(left >>> 4) & 0xf]);\n      var righttmp = (\n        pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf] |\n        pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf] |\n        pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf] |\n        pc2bytes13[(right >>> 4) & 0xf]);\n      tmp = ((righttmp >>> 16) ^ lefttmp) & 0x0000ffff;\n      keys[n++] = lefttmp ^ tmp;\n      keys[n++] = righttmp ^ (tmp << 16);\n    }\n  }\n\n  return keys;\n}\n\n/**\n * Updates a single block (1 byte) using DES. The update will either\n * encrypt or decrypt the block.\n *\n * @param keys the expanded keys.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(keys, input, output, decrypt) {\n  // set up loops for single or triple DES\n  var iterations = keys.length === 32 ? 3 : 9;\n  var looping;\n  if(iterations === 3) {\n    looping = decrypt ? [30, -2, -2] : [0, 32, 2];\n  } else {\n    looping = (decrypt ?\n      [94, 62, -2, 32, 64, 2, 30, -2, -2] :\n      [0, 32, 2, 62, 30, -2, 64, 96, 2]);\n  }\n\n  var tmp;\n\n  var left = input[0];\n  var right = input[1];\n\n  // first each 64 bit chunk of the message must be permuted according to IP\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  // rotate left 1 bit\n  left = ((left << 1) | (left >>> 31));\n  right = ((right << 1) | (right >>> 31));\n\n  for(var j = 0; j < iterations; j += 3) {\n    var endloop = looping[j + 1];\n    var loopinc = looping[j + 2];\n\n    // now go through and perform the encryption or decryption\n    for(var i = looping[j]; i != endloop; i += loopinc) {\n      var right1 = right ^ keys[i];\n      var right2 = ((right >>> 4) | (right << 28)) ^ keys[i + 1];\n\n      // passing these bytes through the S selection functions\n      tmp = left;\n      left = right;\n      right = tmp ^ (\n        spfunction2[(right1 >>> 24) & 0x3f] |\n        spfunction4[(right1 >>> 16) & 0x3f] |\n        spfunction6[(right1 >>>  8) & 0x3f] |\n        spfunction8[right1 & 0x3f] |\n        spfunction1[(right2 >>> 24) & 0x3f] |\n        spfunction3[(right2 >>> 16) & 0x3f] |\n        spfunction5[(right2 >>>  8) & 0x3f] |\n        spfunction7[right2 & 0x3f]);\n    }\n    // unreverse left and right\n    tmp = left;\n    left = right;\n    right = tmp;\n  }\n\n  // rotate right 1 bit\n  left = ((left >>> 1) | (left << 31));\n  right = ((right >>> 1) | (right << 31));\n\n  // now perform IP-1, which is IP in the opposite direction\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  output[0] = left;\n  output[1] = right;\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('DES-<mode>', key);\n * forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates a deprecated DES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param options the options to use.\n *          key the symmetric key to use (64 or 192 bits).\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'DES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n","/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = {\n  // default options\n  options: {\n    usePureJavaScript: false\n  }\n};\n","/**\n * Hash-based Message Authentication Code implementation. Requires a message\n * digest object that can be obtained, for example, from forge.md.sha1 or\n * forge.md.md5.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2012 Digital Bazaar, Inc. All rights reserved.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\n/* HMAC API */\nvar hmac = module.exports = forge.hmac = forge.hmac || {};\n\n/**\n * Creates an HMAC object that uses the given message digest object.\n *\n * @return an HMAC object.\n */\nhmac.create = function() {\n  // the hmac key to use\n  var _key = null;\n\n  // the message digest to use\n  var _md = null;\n\n  // the inner padding\n  var _ipadding = null;\n\n  // the outer padding\n  var _opadding = null;\n\n  // hmac context\n  var ctx = {};\n\n  /**\n   * Starts or restarts the HMAC with the given key and message digest.\n   *\n   * @param md the message digest to use, null to reuse the previous one,\n   *           a string to use builtin 'sha1', 'md5', 'sha256'.\n   * @param key the key to use as a string, array of bytes, byte buffer,\n   *           or null to reuse the previous key.\n   */\n  ctx.start = function(md, key) {\n    if(md !== null) {\n      if(typeof md === 'string') {\n        // create builtin message digest\n        md = md.toLowerCase();\n        if(md in forge.md.algorithms) {\n          _md = forge.md.algorithms[md].create();\n        } else {\n          throw new Error('Unknown hash algorithm \"' + md + '\"');\n        }\n      } else {\n        // store message digest\n        _md = md;\n      }\n    }\n\n    if(key === null) {\n      // reuse previous key\n      key = _key;\n    } else {\n      if(typeof key === 'string') {\n        // convert string into byte buffer\n        key = forge.util.createBuffer(key);\n      } else if(forge.util.isArray(key)) {\n        // convert byte array into byte buffer\n        var tmp = key;\n        key = forge.util.createBuffer();\n        for(var i = 0; i < tmp.length; ++i) {\n          key.putByte(tmp[i]);\n        }\n      }\n\n      // if key is longer than blocksize, hash it\n      var keylen = key.length();\n      if(keylen > _md.blockLength) {\n        _md.start();\n        _md.update(key.bytes());\n        key = _md.digest();\n      }\n\n      // mix key into inner and outer padding\n      // ipadding = [0x36 * blocksize] ^ key\n      // opadding = [0x5C * blocksize] ^ key\n      _ipadding = forge.util.createBuffer();\n      _opadding = forge.util.createBuffer();\n      keylen = key.length();\n      for(var i = 0; i < keylen; ++i) {\n        var tmp = key.at(i);\n        _ipadding.putByte(0x36 ^ tmp);\n        _opadding.putByte(0x5C ^ tmp);\n      }\n\n      // if key is shorter than blocksize, add additional padding\n      if(keylen < _md.blockLength) {\n        var tmp = _md.blockLength - keylen;\n        for(var i = 0; i < tmp; ++i) {\n          _ipadding.putByte(0x36);\n          _opadding.putByte(0x5C);\n        }\n      }\n      _key = key;\n      _ipadding = _ipadding.bytes();\n      _opadding = _opadding.bytes();\n    }\n\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n\n    // prepare to do inner hash\n    // hash(ipadding | message)\n    _md.start();\n    _md.update(_ipadding);\n  };\n\n  /**\n   * Updates the HMAC with the given message bytes.\n   *\n   * @param bytes the bytes to update with.\n   */\n  ctx.update = function(bytes) {\n    _md.update(bytes);\n  };\n\n  /**\n   * Produces the Message Authentication Code (MAC).\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  ctx.getMac = function() {\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n    // here we do the outer hashing\n    var inner = _md.digest().bytes();\n    _md.start();\n    _md.update(_opadding);\n    _md.update(inner);\n    return _md.digest();\n  };\n  // alias for getMac\n  ctx.digest = ctx.getMac;\n\n  return ctx;\n};\n","// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n/*\nLicensing (LICENSE)\n-------------------\n\nThis software is covered under the following copyright:\n*/\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n/*\nAddress all questions regarding this license to:\n\n  Tom Wu\n  tjw@cs.Stanford.EDU\n*/\nvar forge = require('./forge');\n\nmodule.exports = forge.jsbn = forge.jsbn || {};\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  this.data = [];\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\nforge.jsbn.BigInteger = BigInteger;\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this.data[i++]+w.data[j]+c;\n    c = Math.floor(v/0x4000000);\n    w.data[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this.data[i]&0x7fff;\n    var h = this.data[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w.data[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w.data[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this.data[i]&0x3fff;\n    var h = this.data[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w.data[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w.data[j++] = l&0xfffffff;\n  }\n  return c;\n}\n\n// node.js (no browser)\nif(typeof(navigator) === 'undefined')\n{\n   BigInteger.prototype.am = am3;\n   dbits = 28;\n} else if(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r.data[i] = this.data[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this.data[0] = x;\n  else if(x < -1) this.data[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this.data[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this.data[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this.data[this.t++] = (x>>(this.DB-sh));\n    } else\n      this.data[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this.data[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this.data[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this.data[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this.data[i]&((1<<p)-1))<<(k-p);\n        d |= this.data[--i]>>(p+=this.DB-k);\n      } else {\n        d = (this.data[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this.data[i]-a.data[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this.data[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r.data[i+n] = this.data[i];\n  for(i = n-1; i >= 0; --i) r.data[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r.data[i-n] = this.data[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r.data[i+ds+1] = (this.data[i]>>cbs)|c;\n    c = (this.data[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r.data[i] = 0;\n  r.data[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r.data[0] = this.data[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r.data[i-ds-1] |= (this.data[i]&bm)<<cbs;\n    r.data[i-ds] = this.data[i]>>bs;\n  }\n  if(bs > 0) r.data[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this.data[i]-a.data[i];\n    r.data[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r.data[i++] = this.DV+c;\n  else if(c > 0) r.data[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < y.t; ++i) r.data[i+x.t] = x.am(0,y.data[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x.data[i],r,2*i,0,1);\n    if((r.data[i+x.t]+=x.am(i+1,2*x.data[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r.data[i+x.t] -= x.DV;\n      r.data[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r.data[r.t-1] += x.am(i,x.data[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm.data[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); } else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y.data[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y.data[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r.data[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y.data[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r.data[--i]==y0)?this.DM:Math.floor(r.data[i]*d1+(r.data[i-1]+e)*d2);\n    if((r.data[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r.data[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this.data[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x.data[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x.data[i]*mp mod DV\n    var j = x.data[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x.data[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x.data[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x.data[j] >= x.DV) { x.data[j] -= x.DV; x.data[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this.data[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n// jsbn2 lib\n\n//Copyright (c) 2005-2009  Tom Wu\n//All Rights Reserved.\n//See \"LICENSE\" for details (See jsbn.js for LICENSE).\n\n//Extended JavaScript BN functions, required for RSA private ops.\n\n//Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n\n//(public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n//(public) return value as integer\nfunction bnIntValue() {\nif(this.s < 0) {\n if(this.t == 1) return this.data[0]-this.DV;\n else if(this.t == 0) return -1;\n} else if(this.t == 1) return this.data[0];\nelse if(this.t == 0) return 0;\n// assumes 16 < DB < 32\nreturn ((this.data[1]&((1<<(32-this.DB))-1))<<this.DB)|this.data[0];\n}\n\n//(public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this.data[0]<<24)>>24; }\n\n//(public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this.data[0]<<16)>>16; }\n\n//(protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n//(public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\nif(this.s < 0) return -1;\nelse if(this.t <= 0 || (this.t == 1 && this.data[0] <= 0)) return 0;\nelse return 1;\n}\n\n//(protected) convert to radix string\nfunction bnpToRadix(b) {\nif(b == null) b = 10;\nif(this.signum() == 0 || b < 2 || b > 36) return \"0\";\nvar cs = this.chunkSize(b);\nvar a = Math.pow(b,cs);\nvar d = nbv(a), y = nbi(), z = nbi(), r = \"\";\nthis.divRemTo(d,y,z);\nwhile(y.signum() > 0) {\n r = (a+z.intValue()).toString(b).substr(1) + r;\n y.divRemTo(d,y,z);\n}\nreturn z.intValue().toString(b) + r;\n}\n\n//(protected) convert from radix string\nfunction bnpFromRadix(s,b) {\nthis.fromInt(0);\nif(b == null) b = 10;\nvar cs = this.chunkSize(b);\nvar d = Math.pow(b,cs), mi = false, j = 0, w = 0;\nfor(var i = 0; i < s.length; ++i) {\n var x = intAt(s,i);\n if(x < 0) {\n   if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n   continue;\n }\n w = b*w+x;\n if(++j >= cs) {\n   this.dMultiply(d);\n   this.dAddOffset(w,0);\n   j = 0;\n   w = 0;\n }\n}\nif(j > 0) {\n this.dMultiply(Math.pow(b,j));\n this.dAddOffset(w,0);\n}\nif(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n//(protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\nif(\"number\" == typeof b) {\n // new BigInteger(int,int,RNG)\n if(a < 2) this.fromInt(1);\n else {\n   this.fromNumber(a,c);\n   if(!this.testBit(a-1))  // force MSB set\n     this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n   if(this.isEven()) this.dAddOffset(1,0); // force odd\n   while(!this.isProbablePrime(b)) {\n     this.dAddOffset(2,0);\n     if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n   }\n }\n} else {\n // new BigInteger(int,RNG)\n var x = new Array(), t = a&7;\n x.length = (a>>3)+1;\n b.nextBytes(x);\n if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n this.fromString(x,256);\n}\n}\n\n//(public) convert to bigendian byte array\nfunction bnToByteArray() {\nvar i = this.t, r = new Array();\nr[0] = this.s;\nvar p = this.DB-(i*this.DB)%8, d, k = 0;\nif(i-- > 0) {\n if(p < this.DB && (d = this.data[i]>>p) != (this.s&this.DM)>>p)\n   r[k++] = d|(this.s<<(this.DB-p));\n while(i >= 0) {\n   if(p < 8) {\n     d = (this.data[i]&((1<<p)-1))<<(8-p);\n     d |= this.data[--i]>>(p+=this.DB-8);\n   } else {\n     d = (this.data[i]>>(p-=8))&0xff;\n     if(p <= 0) { p += this.DB; --i; }\n   }\n   if((d&0x80) != 0) d |= -256;\n   if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n   if(k > 0 || d != this.s) r[k++] = d;\n }\n}\nreturn r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n//(protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\nvar i, f, m = Math.min(a.t,this.t);\nfor(i = 0; i < m; ++i) r.data[i] = op(this.data[i],a.data[i]);\nif(a.t < this.t) {\n f = a.s&this.DM;\n for(i = m; i < this.t; ++i) r.data[i] = op(this.data[i],f);\n r.t = this.t;\n} else {\n f = this.s&this.DM;\n for(i = m; i < a.t; ++i) r.data[i] = op(f,a.data[i]);\n r.t = a.t;\n}\nr.s = op(this.s,a.s);\nr.clamp();\n}\n\n//(public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n//(public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n//(public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n//(public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n//(public) ~this\nfunction bnNot() {\nvar r = nbi();\nfor(var i = 0; i < this.t; ++i) r.data[i] = this.DM&~this.data[i];\nr.t = this.t;\nr.s = ~this.s;\nreturn r;\n}\n\n//(public) this << n\nfunction bnShiftLeft(n) {\nvar r = nbi();\nif(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\nreturn r;\n}\n\n//(public) this >> n\nfunction bnShiftRight(n) {\nvar r = nbi();\nif(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\nreturn r;\n}\n\n//return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\nif(x == 0) return -1;\nvar r = 0;\nif((x&0xffff) == 0) { x >>= 16; r += 16; }\nif((x&0xff) == 0) { x >>= 8; r += 8; }\nif((x&0xf) == 0) { x >>= 4; r += 4; }\nif((x&3) == 0) { x >>= 2; r += 2; }\nif((x&1) == 0) ++r;\nreturn r;\n}\n\n//(public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\nfor(var i = 0; i < this.t; ++i)\n if(this.data[i] != 0) return i*this.DB+lbit(this.data[i]);\nif(this.s < 0) return this.t*this.DB;\nreturn -1;\n}\n\n//return number of 1 bits in x\nfunction cbit(x) {\nvar r = 0;\nwhile(x != 0) { x &= x-1; ++r; }\nreturn r;\n}\n\n//(public) return number of set bits\nfunction bnBitCount() {\nvar r = 0, x = this.s&this.DM;\nfor(var i = 0; i < this.t; ++i) r += cbit(this.data[i]^x);\nreturn r;\n}\n\n//(public) true iff nth bit is set\nfunction bnTestBit(n) {\nvar j = Math.floor(n/this.DB);\nif(j >= this.t) return(this.s!=0);\nreturn((this.data[j]&(1<<(n%this.DB)))!=0);\n}\n\n//(protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\nvar r = BigInteger.ONE.shiftLeft(n);\nthis.bitwiseTo(r,op,r);\nreturn r;\n}\n\n//(public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n//(public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n//(public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n//(protected) r = this + a\nfunction bnpAddTo(a,r) {\nvar i = 0, c = 0, m = Math.min(a.t,this.t);\nwhile(i < m) {\n c += this.data[i]+a.data[i];\n r.data[i++] = c&this.DM;\n c >>= this.DB;\n}\nif(a.t < this.t) {\n c += a.s;\n while(i < this.t) {\n   c += this.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += this.s;\n} else {\n c += this.s;\n while(i < a.t) {\n   c += a.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += a.s;\n}\nr.s = (c<0)?-1:0;\nif(c > 0) r.data[i++] = c;\nelse if(c < -1) r.data[i++] = this.DV+c;\nr.t = i;\nr.clamp();\n}\n\n//(public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n//(public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n//(public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n//(public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n//(public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n//(public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\nvar q = nbi(), r = nbi();\nthis.divRemTo(a,q,r);\nreturn new Array(q,r);\n}\n\n//(protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\nthis.data[this.t] = this.am(0,n-1,this,0,0,this.t);\n++this.t;\nthis.clamp();\n}\n\n//(protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\nif(n == 0) return;\nwhile(this.t <= w) this.data[this.t++] = 0;\nthis.data[w] += n;\nwhile(this.data[w] >= this.DV) {\n this.data[w] -= this.DV;\n if(++w >= this.t) this.data[this.t++] = 0;\n ++this.data[w];\n}\n}\n\n//A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n//(public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n//(protected) r = lower n words of \"this * a\", a.t <= n\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\nvar i = Math.min(this.t+a.t,n);\nr.s = 0; // assumes a,this >= 0\nr.t = i;\nwhile(i > 0) r.data[--i] = 0;\nvar j;\nfor(j = r.t-this.t; i < j; ++i) r.data[i+this.t] = this.am(0,a.data[i],r,i,0,this.t);\nfor(j = Math.min(a.t,n); i < j; ++i) this.am(0,a.data[i],r,i,0,n-i);\nr.clamp();\n}\n\n//(protected) r = \"this * a\" without lower n words, n > 0\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n--n;\nvar i = r.t = this.t+a.t-n;\nr.s = 0; // assumes a,this >= 0\nwhile(--i >= 0) r.data[i] = 0;\nfor(i = Math.max(n-this.t,0); i < a.t; ++i)\n r.data[this.t+i-n] = this.am(n-i,a.data[i],r,0,0,this.t+i-n);\nr.clamp();\nr.drShiftTo(1,r);\n}\n\n//Barrett modular reduction\nfunction Barrett(m) {\n// setup Barrett\nthis.r2 = nbi();\nthis.q3 = nbi();\nBigInteger.ONE.dlShiftTo(2*m.t,this.r2);\nthis.mu = this.r2.divide(m);\nthis.m = m;\n}\n\nfunction barrettConvert(x) {\nif(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\nelse if(x.compareTo(this.m) < 0) return x;\nelse { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n//x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\nx.drShiftTo(this.m.t-1,this.r2);\nif(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\nthis.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\nthis.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\nwhile(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\nx.subTo(this.r2,x);\nwhile(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n//r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n//r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n//(public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\nvar i = e.bitLength(), k, r = nbv(1), z;\nif(i <= 0) return r;\nelse if(i < 18) k = 1;\nelse if(i < 48) k = 3;\nelse if(i < 144) k = 4;\nelse if(i < 768) k = 5;\nelse k = 6;\nif(i < 8)\n z = new Classic(m);\nelse if(m.isEven())\n z = new Barrett(m);\nelse\n z = new Montgomery(m);\n\n// precomputation\nvar g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\ng[1] = z.convert(this);\nif(k > 1) {\n var g2 = nbi();\n z.sqrTo(g[1],g2);\n while(n <= km) {\n   g[n] = nbi();\n   z.mulTo(g2,g[n-2],g[n]);\n   n += 2;\n }\n}\n\nvar j = e.t-1, w, is1 = true, r2 = nbi(), t;\ni = nbits(e.data[j])-1;\nwhile(j >= 0) {\n if(i >= k1) w = (e.data[j]>>(i-k1))&km;\n else {\n   w = (e.data[j]&((1<<(i+1))-1))<<(k1-i);\n   if(j > 0) w |= e.data[j-1]>>(this.DB+i-k1);\n }\n\n n = k;\n while((w&1) == 0) { w >>= 1; --n; }\n if((i -= n) < 0) { i += this.DB; --j; }\n if(is1) {  // ret == 1, don't bother squaring or multiplying it\n   g[w].copyTo(r);\n   is1 = false;\n } else {\n   while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n   if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n   z.mulTo(r2,g[w],r);\n }\n\n while(j >= 0 && (e.data[j]&(1<<i)) == 0) {\n   z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n   if(--i < 0) { i = this.DB-1; --j; }\n }\n}\nreturn z.revert(r);\n}\n\n//(public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\nvar x = (this.s<0)?this.negate():this.clone();\nvar y = (a.s<0)?a.negate():a.clone();\nif(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\nvar i = x.getLowestSetBit(), g = y.getLowestSetBit();\nif(g < 0) return x;\nif(i < g) g = i;\nif(g > 0) {\n x.rShiftTo(g,x);\n y.rShiftTo(g,y);\n}\nwhile(x.signum() > 0) {\n if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n if(x.compareTo(y) >= 0) {\n   x.subTo(y,x);\n   x.rShiftTo(1,x);\n } else {\n   y.subTo(x,y);\n   y.rShiftTo(1,y);\n }\n}\nif(g > 0) y.lShiftTo(g,y);\nreturn y;\n}\n\n//(protected) this % n, n < 2^26\nfunction bnpModInt(n) {\nif(n <= 0) return 0;\nvar d = this.DV%n, r = (this.s<0)?n-1:0;\nif(this.t > 0)\n if(d == 0) r = this.data[0]%n;\n else for(var i = this.t-1; i >= 0; --i) r = (d*r+this.data[i])%n;\nreturn r;\n}\n\n//(public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\nvar ac = m.isEven();\nif((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\nvar u = m.clone(), v = this.clone();\nvar a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\nwhile(u.signum() != 0) {\n while(u.isEven()) {\n   u.rShiftTo(1,u);\n   if(ac) {\n     if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n     a.rShiftTo(1,a);\n   } else if(!b.isEven()) b.subTo(m,b);\n   b.rShiftTo(1,b);\n }\n while(v.isEven()) {\n   v.rShiftTo(1,v);\n   if(ac) {\n     if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n     c.rShiftTo(1,c);\n   } else if(!d.isEven()) d.subTo(m,d);\n   d.rShiftTo(1,d);\n }\n if(u.compareTo(v) >= 0) {\n   u.subTo(v,u);\n   if(ac) a.subTo(c,a);\n   b.subTo(d,b);\n } else {\n   v.subTo(u,v);\n   if(ac) c.subTo(a,c);\n   d.subTo(b,d);\n }\n}\nif(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\nif(d.compareTo(m) >= 0) return d.subtract(m);\nif(d.signum() < 0) d.addTo(m,d); else return d;\nif(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n//(public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\nvar i, x = this.abs();\nif(x.t == 1 && x.data[0] <= lowprimes[lowprimes.length-1]) {\n for(i = 0; i < lowprimes.length; ++i)\n   if(x.data[0] == lowprimes[i]) return true;\n return false;\n}\nif(x.isEven()) return false;\ni = 1;\nwhile(i < lowprimes.length) {\n var m = lowprimes[i], j = i+1;\n while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n m = x.modInt(m);\n while(i < j) if(m%lowprimes[i++] == 0) return false;\n}\nreturn x.millerRabin(t);\n}\n\n//(protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\nvar n1 = this.subtract(BigInteger.ONE);\nvar k = n1.getLowestSetBit();\nif(k <= 0) return false;\nvar r = n1.shiftRight(k);\nvar prng = bnGetPrng();\nvar a;\nfor(var i = 0; i < t; ++i) {\n // select witness 'a' at random from between 1 and n1\n do {\n   a = new BigInteger(this.bitLength(), prng);\n }\n while(a.compareTo(BigInteger.ONE) <= 0 || a.compareTo(n1) >= 0);\n var y = a.modPow(r,this);\n if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n   var j = 1;\n   while(j++ < k && y.compareTo(n1) != 0) {\n     y = y.modPowInt(2,this);\n     if(y.compareTo(BigInteger.ONE) == 0) return false;\n   }\n   if(y.compareTo(n1) != 0) return false;\n }\n}\nreturn true;\n}\n\n// get pseudo random number generator\nfunction bnGetPrng() {\n  // create prng with api that matches BigInteger secure random\n  return {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = Math.floor(Math.random() * 0x0100);\n      }\n    }\n  };\n}\n\n//protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n//public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n//BigInteger interfaces not implemented in jsbn:\n\n//BigInteger(int signum, byte[] magnitude)\n//double doubleValue()\n//float floatValue()\n//int hashCode()\n//long longValue()\n//static BigInteger valueOf(long val)\n","/**\n * Node.js module for Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nmodule.exports = forge.md = forge.md || {};\nforge.md.algorithms = forge.md.algorithms || {};\n","/**\n * Node.js module for Forge mask generation functions.\n *\n * @author Stefan Siegl\n *\n * Copyright 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./mgf1');\n\nmodule.exports = forge.mgf = forge.mgf || {};\nforge.mgf.mgf1 = forge.mgf1;\n","/**\n * Javascript implementation of mask generation function MGF1.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.mgf = forge.mgf || {};\nvar mgf1 = module.exports = forge.mgf.mgf1 = forge.mgf1 = forge.mgf1 || {};\n\n/**\n * Creates a MGF1 mask generation function object.\n *\n * @param md the message digest API to use (eg: forge.md.sha1.create()).\n *\n * @return a mask generation function object.\n */\nmgf1.create = function(md) {\n  var mgf = {\n    /**\n     * Generate mask of specified length.\n     *\n     * @param {String} seed The seed for mask generation.\n     * @param maskLen Number of bytes to generate.\n     * @return {String} The generated mask.\n     */\n    generate: function(seed, maskLen) {\n      /* 2. Let T be the empty octet string. */\n      var t = new forge.util.ByteBuffer();\n\n      /* 3. For counter from 0 to ceil(maskLen / hLen), do the following: */\n      var len = Math.ceil(maskLen / md.digestLength);\n      for(var i = 0; i < len; i++) {\n        /* a. Convert counter to an octet string C of length 4 octets */\n        var c = new forge.util.ByteBuffer();\n        c.putInt32(i);\n\n        /* b. Concatenate the hash of the seed mgfSeed and C to the octet\n         * string T: */\n        md.start();\n        md.update(seed + c.getBytes());\n        t.putBuffer(md.digest());\n      }\n\n      /* Output the leading maskLen octets of T as the octet string mask. */\n      t.truncate(t.length() - maskLen);\n      return t.getBytes();\n    }\n  };\n\n  return mgf;\n};\n","/**\n * Object IDs for ASN.1.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nforge.pki = forge.pki || {};\nvar oids = module.exports = forge.pki.oids = forge.oids = forge.oids || {};\n\n// set id to name mapping and name to id mapping\nfunction _IN(id, name) {\n  oids[id] = name;\n  oids[name] = id;\n}\n// set id to name mapping only\nfunction _I_(id, name) {\n  oids[id] = name;\n}\n\n// algorithm OIDs\n_IN('1.2.840.113549.1.1.1', 'rsaEncryption');\n// Note: md2 & md4 not implemented\n//_IN('1.2.840.113549.1.1.2', 'md2WithRSAEncryption');\n//_IN('1.2.840.113549.1.1.3', 'md4WithRSAEncryption');\n_IN('1.2.840.113549.1.1.4', 'md5WithRSAEncryption');\n_IN('1.2.840.113549.1.1.5', 'sha1WithRSAEncryption');\n_IN('1.2.840.113549.1.1.7', 'RSAES-OAEP');\n_IN('1.2.840.113549.1.1.8', 'mgf1');\n_IN('1.2.840.113549.1.1.9', 'pSpecified');\n_IN('1.2.840.113549.1.1.10', 'RSASSA-PSS');\n_IN('1.2.840.113549.1.1.11', 'sha256WithRSAEncryption');\n_IN('1.2.840.113549.1.1.12', 'sha384WithRSAEncryption');\n_IN('1.2.840.113549.1.1.13', 'sha512WithRSAEncryption');\n// Edwards-curve Digital Signature Algorithm (EdDSA) Ed25519\n_IN('1.3.101.112', 'EdDSA25519');\n\n_IN('1.2.840.10040.4.3', 'dsa-with-sha1');\n\n_IN('1.3.14.3.2.7', 'desCBC');\n\n_IN('1.3.14.3.2.26', 'sha1');\n// Deprecated equivalent of sha1WithRSAEncryption\n_IN('1.3.14.3.2.29', 'sha1WithRSASignature');\n_IN('2.16.840.1.101.3.4.2.1', 'sha256');\n_IN('2.16.840.1.101.3.4.2.2', 'sha384');\n_IN('2.16.840.1.101.3.4.2.3', 'sha512');\n_IN('2.16.840.1.101.3.4.2.4', 'sha224');\n_IN('2.16.840.1.101.3.4.2.5', 'sha512-224');\n_IN('2.16.840.1.101.3.4.2.6', 'sha512-256');\n_IN('1.2.840.113549.2.2', 'md2');\n_IN('1.2.840.113549.2.5', 'md5');\n\n// pkcs#7 content types\n_IN('1.2.840.113549.1.7.1', 'data');\n_IN('1.2.840.113549.1.7.2', 'signedData');\n_IN('1.2.840.113549.1.7.3', 'envelopedData');\n_IN('1.2.840.113549.1.7.4', 'signedAndEnvelopedData');\n_IN('1.2.840.113549.1.7.5', 'digestedData');\n_IN('1.2.840.113549.1.7.6', 'encryptedData');\n\n// pkcs#9 oids\n_IN('1.2.840.113549.1.9.1', 'emailAddress');\n_IN('1.2.840.113549.1.9.2', 'unstructuredName');\n_IN('1.2.840.113549.1.9.3', 'contentType');\n_IN('1.2.840.113549.1.9.4', 'messageDigest');\n_IN('1.2.840.113549.1.9.5', 'signingTime');\n_IN('1.2.840.113549.1.9.6', 'counterSignature');\n_IN('1.2.840.113549.1.9.7', 'challengePassword');\n_IN('1.2.840.113549.1.9.8', 'unstructuredAddress');\n_IN('1.2.840.113549.1.9.14', 'extensionRequest');\n\n_IN('1.2.840.113549.1.9.20', 'friendlyName');\n_IN('1.2.840.113549.1.9.21', 'localKeyId');\n_IN('1.2.840.113549.1.9.22.1', 'x509Certificate');\n\n// pkcs#12 safe bags\n_IN('1.2.840.113549.1.12.10.1.1', 'keyBag');\n_IN('1.2.840.113549.1.12.10.1.2', 'pkcs8ShroudedKeyBag');\n_IN('1.2.840.113549.1.12.10.1.3', 'certBag');\n_IN('1.2.840.113549.1.12.10.1.4', 'crlBag');\n_IN('1.2.840.113549.1.12.10.1.5', 'secretBag');\n_IN('1.2.840.113549.1.12.10.1.6', 'safeContentsBag');\n\n// password-based-encryption for pkcs#12\n_IN('1.2.840.113549.1.5.13', 'pkcs5PBES2');\n_IN('1.2.840.113549.1.5.12', 'pkcs5PBKDF2');\n\n_IN('1.2.840.113549.1.12.1.1', 'pbeWithSHAAnd128BitRC4');\n_IN('1.2.840.113549.1.12.1.2', 'pbeWithSHAAnd40BitRC4');\n_IN('1.2.840.113549.1.12.1.3', 'pbeWithSHAAnd3-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.4', 'pbeWithSHAAnd2-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.5', 'pbeWithSHAAnd128BitRC2-CBC');\n_IN('1.2.840.113549.1.12.1.6', 'pbewithSHAAnd40BitRC2-CBC');\n\n// hmac OIDs\n_IN('1.2.840.113549.2.7', 'hmacWithSHA1');\n_IN('1.2.840.113549.2.8', 'hmacWithSHA224');\n_IN('1.2.840.113549.2.9', 'hmacWithSHA256');\n_IN('1.2.840.113549.2.10', 'hmacWithSHA384');\n_IN('1.2.840.113549.2.11', 'hmacWithSHA512');\n\n// symmetric key algorithm oids\n_IN('1.2.840.113549.3.7', 'des-EDE3-CBC');\n_IN('2.16.840.1.101.3.4.1.2', 'aes128-CBC');\n_IN('2.16.840.1.101.3.4.1.22', 'aes192-CBC');\n_IN('2.16.840.1.101.3.4.1.42', 'aes256-CBC');\n\n// certificate issuer/subject OIDs\n_IN('2.5.4.3', 'commonName');\n_IN('2.5.4.4', 'surname');\n_IN('2.5.4.5', 'serialNumber');\n_IN('2.5.4.6', 'countryName');\n_IN('2.5.4.7', 'localityName');\n_IN('2.5.4.8', 'stateOrProvinceName');\n_IN('2.5.4.9', 'streetAddress');\n_IN('2.5.4.10', 'organizationName');\n_IN('2.5.4.11', 'organizationalUnitName');\n_IN('2.5.4.12', 'title');\n_IN('2.5.4.13', 'description');\n_IN('2.5.4.15', 'businessCategory');\n_IN('2.5.4.17', 'postalCode');\n_IN('2.5.4.42', 'givenName');\n_IN('1.3.6.1.4.1.311.60.2.1.2', 'jurisdictionOfIncorporationStateOrProvinceName');\n_IN('1.3.6.1.4.1.311.60.2.1.3', 'jurisdictionOfIncorporationCountryName');\n\n// X.509 extension OIDs\n_IN('2.16.840.1.113730.1.1', 'nsCertType');\n_IN('2.16.840.1.113730.1.13', 'nsComment'); // deprecated in theory; still widely used\n_I_('2.5.29.1', 'authorityKeyIdentifier'); // deprecated, use .35\n_I_('2.5.29.2', 'keyAttributes'); // obsolete use .37 or .15\n_I_('2.5.29.3', 'certificatePolicies'); // deprecated, use .32\n_I_('2.5.29.4', 'keyUsageRestriction'); // obsolete use .37 or .15\n_I_('2.5.29.5', 'policyMapping'); // deprecated use .33\n_I_('2.5.29.6', 'subtreesConstraint'); // obsolete use .30\n_I_('2.5.29.7', 'subjectAltName'); // deprecated use .17\n_I_('2.5.29.8', 'issuerAltName'); // deprecated use .18\n_I_('2.5.29.9', 'subjectDirectoryAttributes');\n_I_('2.5.29.10', 'basicConstraints'); // deprecated use .19\n_I_('2.5.29.11', 'nameConstraints'); // deprecated use .30\n_I_('2.5.29.12', 'policyConstraints'); // deprecated use .36\n_I_('2.5.29.13', 'basicConstraints'); // deprecated use .19\n_IN('2.5.29.14', 'subjectKeyIdentifier');\n_IN('2.5.29.15', 'keyUsage');\n_I_('2.5.29.16', 'privateKeyUsagePeriod');\n_IN('2.5.29.17', 'subjectAltName');\n_IN('2.5.29.18', 'issuerAltName');\n_IN('2.5.29.19', 'basicConstraints');\n_I_('2.5.29.20', 'cRLNumber');\n_I_('2.5.29.21', 'cRLReason');\n_I_('2.5.29.22', 'expirationDate');\n_I_('2.5.29.23', 'instructionCode');\n_I_('2.5.29.24', 'invalidityDate');\n_I_('2.5.29.25', 'cRLDistributionPoints'); // deprecated use .31\n_I_('2.5.29.26', 'issuingDistributionPoint'); // deprecated use .28\n_I_('2.5.29.27', 'deltaCRLIndicator');\n_I_('2.5.29.28', 'issuingDistributionPoint');\n_I_('2.5.29.29', 'certificateIssuer');\n_I_('2.5.29.30', 'nameConstraints');\n_IN('2.5.29.31', 'cRLDistributionPoints');\n_IN('2.5.29.32', 'certificatePolicies');\n_I_('2.5.29.33', 'policyMappings');\n_I_('2.5.29.34', 'policyConstraints'); // deprecated use .36\n_IN('2.5.29.35', 'authorityKeyIdentifier');\n_I_('2.5.29.36', 'policyConstraints');\n_IN('2.5.29.37', 'extKeyUsage');\n_I_('2.5.29.46', 'freshestCRL');\n_I_('2.5.29.54', 'inhibitAnyPolicy');\n\n// extKeyUsage purposes\n_IN('1.3.6.1.4.1.11129.2.4.2', 'timestampList');\n_IN('1.3.6.1.5.5.7.1.1', 'authorityInfoAccess');\n_IN('1.3.6.1.5.5.7.3.1', 'serverAuth');\n_IN('1.3.6.1.5.5.7.3.2', 'clientAuth');\n_IN('1.3.6.1.5.5.7.3.3', 'codeSigning');\n_IN('1.3.6.1.5.5.7.3.4', 'emailProtection');\n_IN('1.3.6.1.5.5.7.3.8', 'timeStamping');\n","/**\n * Password-based encryption functions.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * An EncryptedPrivateKeyInfo:\n *\n * EncryptedPrivateKeyInfo ::= SEQUENCE {\n *   encryptionAlgorithm  EncryptionAlgorithmIdentifier,\n *   encryptedData        EncryptedData }\n *\n * EncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedData ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./oids');\nrequire('./pbkdf2');\nrequire('./pem');\nrequire('./random');\nrequire('./rc2');\nrequire('./rsa');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Password-based encryption implementation. */\nvar pki = forge.pki = forge.pki || {};\nmodule.exports = pki.pbe = forge.pbe = forge.pbe || {};\nvar oids = pki.oids;\n\n// validator for an EncryptedPrivateKeyInfo structure\n// Note: Currently only works w/algorithm params\nvar encryptedPrivateKeyValidator = {\n  name: 'EncryptedPrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedPrivateKeyInfo.encryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encryptionOid'\n    }, {\n      name: 'AlgorithmIdentifier.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'encryptionParams'\n    }]\n  }, {\n    // encryptedData\n    name: 'EncryptedPrivateKeyInfo.encryptedData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encryptedData'\n  }]\n};\n\n// validator for a PBES2Algorithms structure\n// Note: Currently only works w/PBKDF2 + AES encryption schemes\nvar PBES2AlgorithmsValidator = {\n  name: 'PBES2Algorithms',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PBES2Algorithms.keyDerivationFunc',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.keyDerivationFunc.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'kdfOid'\n    }, {\n      name: 'PBES2Algorithms.params',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'PBES2Algorithms.params.salt',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'kdfSalt'\n      }, {\n        name: 'PBES2Algorithms.params.iterationCount',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'kdfIterationCount'\n      }, {\n        name: 'PBES2Algorithms.params.keyLength',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        optional: true,\n        capture: 'keyLength'\n      }, {\n        // prf\n        name: 'PBES2Algorithms.params.prf',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        optional: true,\n        value: [{\n          name: 'PBES2Algorithms.params.prf.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'prfOid'\n        }]\n      }]\n    }]\n  }, {\n    name: 'PBES2Algorithms.encryptionScheme',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.encryptionScheme.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encOid'\n    }, {\n      name: 'PBES2Algorithms.encryptionScheme.iv',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'encIv'\n    }]\n  }]\n};\n\nvar pkcs12PbeParamsValidator = {\n  name: 'pkcs-12PbeParams',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'pkcs-12PbeParams.salt',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'salt'\n  }, {\n    name: 'pkcs-12PbeParams.iterations',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'iterations'\n  }]\n};\n\n/**\n * Encrypts a ASN.1 PrivateKeyInfo object, producing an EncryptedPrivateKeyInfo.\n *\n * PBES2Algorithms ALGORITHM-IDENTIFIER ::=\n *   { {PBES2-params IDENTIFIED BY id-PBES2}, ...}\n *\n * id-PBES2 OBJECT IDENTIFIER ::= {pkcs-5 13}\n *\n * PBES2-params ::= SEQUENCE {\n *   keyDerivationFunc AlgorithmIdentifier {{PBES2-KDFs}},\n *   encryptionScheme AlgorithmIdentifier {{PBES2-Encs}}\n * }\n *\n * PBES2-KDFs ALGORITHM-IDENTIFIER ::=\n *   { {PBKDF2-params IDENTIFIED BY id-PBKDF2}, ... }\n *\n * PBES2-Encs ALGORITHM-IDENTIFIER ::= { ... }\n *\n * PBKDF2-params ::= SEQUENCE {\n *   salt CHOICE {\n *     specified OCTET STRING,\n *     otherSource AlgorithmIdentifier {{PBKDF2-SaltSources}}\n *   },\n *   iterationCount INTEGER (1..MAX),\n *   keyLength INTEGER (1..MAX) OPTIONAL,\n *   prf AlgorithmIdentifier {{PBKDF2-PRFs}} DEFAULT algid-hmacWithSHA1\n * }\n *\n * @param obj the ASN.1 PrivateKeyInfo object.\n * @param password the password to encrypt with.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          prfAlgorithm the PRF message digest algorithm to use\n *            ('sha1', 'sha224', 'sha256', 'sha384', 'sha512')\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptPrivateKeyInfo = function(obj, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || 'aes128';\n  options.prfAlgorithm = options.prfAlgorithm || 'sha1';\n\n  // generate PBE params\n  var salt = forge.random.getBytesSync(options.saltSize);\n  var count = options.count;\n  var countBytes = asn1.integerToDer(count);\n  var dkLen;\n  var encryptionAlgorithm;\n  var encryptedData;\n  if(options.algorithm.indexOf('aes') === 0 || options.algorithm === 'des') {\n    // do PBES2\n    var ivLen, encOid, cipherFn;\n    switch(options.algorithm) {\n    case 'aes128':\n      dkLen = 16;\n      ivLen = 16;\n      encOid = oids['aes128-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes192':\n      dkLen = 24;\n      ivLen = 16;\n      encOid = oids['aes192-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes256':\n      dkLen = 32;\n      ivLen = 16;\n      encOid = oids['aes256-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'des':\n      dkLen = 8;\n      ivLen = 8;\n      encOid = oids['desCBC'];\n      cipherFn = forge.des.createEncryptionCipher;\n      break;\n    default:\n      var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n      error.algorithm = options.algorithm;\n      throw error;\n    }\n\n    // get PRF message digest\n    var prfAlgorithm = 'hmacWith' + options.prfAlgorithm.toUpperCase();\n    var md = prfAlgorithmToMessageDigest(prfAlgorithm);\n\n    // encrypt private key using pbe SHA-1 and AES/DES\n    var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n    var iv = forge.random.getBytesSync(ivLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    // get PBKDF2-params\n    var params = createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm);\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pkcs5PBES2']).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // keyDerivationFunc\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oids['pkcs5PBKDF2']).getBytes()),\n          // PBKDF2-params\n          params\n        ]),\n        // encryptionScheme\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(encOid).getBytes()),\n          // iv\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, iv)\n        ])\n      ])\n    ]);\n  } else if(options.algorithm === '3des') {\n    // Do PKCS12 PBE\n    dkLen = 24;\n\n    var saltBytes = new forge.util.ByteBuffer(salt);\n    var dk = pki.pbe.generatePkcs12Key(password, saltBytes, 1, count, dkLen);\n    var iv = pki.pbe.generatePkcs12Key(password, saltBytes, 2, count, dkLen);\n    var cipher = forge.des.createEncryptionCipher(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pbeWithSHAAnd3-KeyTripleDES-CBC']).getBytes()),\n      // pkcs-12PbeParams\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // salt\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n        // iteration count\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n          countBytes.getBytes())\n      ])\n    ]);\n  } else {\n    var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // EncryptedPrivateKeyInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // encryptionAlgorithm\n    encryptionAlgorithm,\n    // encryptedData\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, encryptedData)\n  ]);\n  return rval;\n};\n\n/**\n * Decrypts a ASN.1 PrivateKeyInfo object.\n *\n * @param obj the ASN.1 EncryptedPrivateKeyInfo object.\n * @param password the password to decrypt with.\n *\n * @return the ASN.1 PrivateKeyInfo on success, null on failure.\n */\npki.decryptPrivateKeyInfo = function(obj, password) {\n  var rval = null;\n\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, encryptedPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get cipher\n  var oid = asn1.derToOid(capture.encryptionOid);\n  var cipher = pki.pbe.getCipher(oid, capture.encryptionParams, password);\n\n  // get encrypted data\n  var encrypted = forge.util.createBuffer(capture.encryptedData);\n\n  cipher.update(encrypted);\n  if(cipher.finish()) {\n    rval = asn1.fromDer(cipher.output);\n  }\n\n  return rval;\n};\n\n/**\n * Converts a EncryptedPrivateKeyInfo to PEM format.\n *\n * @param epki the EncryptedPrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted encrypted private key.\n */\npki.encryptedPrivateKeyToPem = function(epki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'ENCRYPTED PRIVATE KEY',\n    body: asn1.toDer(epki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PEM-encoded EncryptedPrivateKeyInfo to ASN.1 format. Decryption\n * is not performed.\n *\n * @param pem the EncryptedPrivateKeyInfo in PEM-format.\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptedPrivateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY') {\n    var error = new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM header type is \"ENCRYPTED PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  return asn1.fromDer(msg.body);\n};\n\n/**\n * Encrypts an RSA private key. By default, the key will be wrapped in\n * a PrivateKeyInfo and encrypted to produce a PKCS#8 EncryptedPrivateKeyInfo.\n * This is the standard, preferred way to encrypt a private key.\n *\n * To produce a non-standard PEM-encrypted private key that uses encapsulated\n * headers to indicate the encryption algorithm (old-style non-PKCS#8 OpenSSL\n * private key encryption), set the 'legacy' option to true. Note: Using this\n * option will cause the iteration count to be forced to 1.\n *\n * Note: The 'des' algorithm is supported, but it is not considered to be\n * secure because it only uses a single 56-bit key. If possible, it is highly\n * recommended that a different algorithm be used.\n *\n * @param rsaKey the RSA key to encrypt.\n * @param password the password to use.\n * @param options:\n *          algorithm: the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des', 'des').\n *          count: the iteration count to use.\n *          saltSize: the salt size to use.\n *          legacy: output an old non-PKCS#8 PEM-encrypted+encapsulated\n *            headers (DEK-Info) private key.\n *\n * @return the PEM-encoded ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptRsaPrivateKey = function(rsaKey, password, options) {\n  // standard PKCS#8\n  options = options || {};\n  if(!options.legacy) {\n    // encrypt PrivateKeyInfo\n    var rval = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(rsaKey));\n    rval = pki.encryptPrivateKeyInfo(rval, password, options);\n    return pki.encryptedPrivateKeyToPem(rval);\n  }\n\n  // legacy non-PKCS#8\n  var algorithm;\n  var iv;\n  var dkLen;\n  var cipherFn;\n  switch(options.algorithm) {\n  case 'aes128':\n    algorithm = 'AES-128-CBC';\n    dkLen = 16;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes192':\n    algorithm = 'AES-192-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes256':\n    algorithm = 'AES-256-CBC';\n    dkLen = 32;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case '3des':\n    algorithm = 'DES-EDE3-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  case 'des':\n    algorithm = 'DES-CBC';\n    dkLen = 8;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  default:\n    var error = new Error('Could not encrypt RSA private key; unsupported ' +\n      'encryption algorithm \"' + options.algorithm + '\".');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // encrypt private key using OpenSSL legacy key derivation\n  var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n  cipher.update(asn1.toDer(pki.privateKeyToAsn1(rsaKey)));\n  cipher.finish();\n\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    procType: {\n      version: '4',\n      type: 'ENCRYPTED'\n    },\n    dekInfo: {\n      algorithm: algorithm,\n      parameters: forge.util.bytesToHex(iv).toUpperCase()\n    },\n    body: cipher.output.getBytes()\n  };\n  return forge.pem.encode(msg);\n};\n\n/**\n * Decrypts an RSA private key.\n *\n * @param pem the PEM-formatted EncryptedPrivateKeyInfo to decrypt.\n * @param password the password to use.\n *\n * @return the RSA key on success, null on failure.\n */\npki.decryptRsaPrivateKey = function(pem, password) {\n  var rval = null;\n\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY' &&\n    msg.type !== 'PRIVATE KEY' &&\n    msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM header type ' +\n      'is not \"ENCRYPTED PRIVATE KEY\", \"PRIVATE KEY\", or \"RSA PRIVATE KEY\".');\n    error.headerType = error;\n    throw error;\n  }\n\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    var dkLen;\n    var cipherFn;\n    switch(msg.dekInfo.algorithm) {\n    case 'DES-CBC':\n      dkLen = 8;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'DES-EDE3-CBC':\n      dkLen = 24;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'AES-128-CBC':\n      dkLen = 16;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-192-CBC':\n      dkLen = 24;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-256-CBC':\n      dkLen = 32;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'RC2-40-CBC':\n      dkLen = 5;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 40);\n      };\n      break;\n    case 'RC2-64-CBC':\n      dkLen = 8;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 64);\n      };\n      break;\n    case 'RC2-128-CBC':\n      dkLen = 16;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 128);\n      };\n      break;\n    default:\n      var error = new Error('Could not decrypt private key; unsupported ' +\n        'encryption algorithm \"' + msg.dekInfo.algorithm + '\".');\n      error.algorithm = msg.dekInfo.algorithm;\n      throw error;\n    }\n\n    // use OpenSSL legacy key derivation\n    var iv = forge.util.hexToBytes(msg.dekInfo.parameters);\n    var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(forge.util.createBuffer(msg.body));\n    if(cipher.finish()) {\n      rval = cipher.output.getBytes();\n    } else {\n      return rval;\n    }\n  } else {\n    rval = msg.body;\n  }\n\n  if(msg.type === 'ENCRYPTED PRIVATE KEY') {\n    rval = pki.decryptPrivateKeyInfo(asn1.fromDer(rval), password);\n  } else {\n    // decryption already performed above\n    rval = asn1.fromDer(rval);\n  }\n\n  if(rval !== null) {\n    rval = pki.privateKeyFromAsn1(rval);\n  }\n\n  return rval;\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\npki.pbe.generatePkcs12Key = function(password, salt, id, iter, n, md) {\n  var j, l;\n\n  if(typeof md === 'undefined' || md === null) {\n    if(!('sha1' in forge.md)) {\n      throw new Error('\"sha1\" hash algorithm unavailable.');\n    }\n    md = forge.md.sha1.create();\n  }\n\n  var u = md.digestLength;\n  var v = md.blockLength;\n  var result = new forge.util.ByteBuffer();\n\n  /* Convert password to Unicode byte buffer + trailing 0-byte. */\n  var passBuf = new forge.util.ByteBuffer();\n  if(password !== null && password !== undefined) {\n    for(l = 0; l < password.length; l++) {\n      passBuf.putInt16(password.charCodeAt(l));\n    }\n    passBuf.putInt16(0);\n  }\n\n  /* Length of salt and password in BYTES. */\n  var p = passBuf.length();\n  var s = salt.length();\n\n  /* 1. Construct a string, D (the \"diversifier\"), by concatenating\n        v copies of ID. */\n  var D = new forge.util.ByteBuffer();\n  D.fillWithByte(id, v);\n\n  /* 2. Concatenate copies of the salt together to create a string S of length\n        v * ceil(s / v) bytes (the final copy of the salt may be trunacted\n        to create S).\n        Note that if the salt is the empty string, then so is S. */\n  var Slen = v * Math.ceil(s / v);\n  var S = new forge.util.ByteBuffer();\n  for(l = 0; l < Slen; l++) {\n    S.putByte(salt.at(l % s));\n  }\n\n  /* 3. Concatenate copies of the password together to create a string P of\n        length v * ceil(p / v) bytes (the final copy of the password may be\n        truncated to create P).\n        Note that if the password is the empty string, then so is P. */\n  var Plen = v * Math.ceil(p / v);\n  var P = new forge.util.ByteBuffer();\n  for(l = 0; l < Plen; l++) {\n    P.putByte(passBuf.at(l % p));\n  }\n\n  /* 4. Set I=S||P to be the concatenation of S and P. */\n  var I = S;\n  I.putBuffer(P);\n\n  /* 5. Set c=ceil(n / u). */\n  var c = Math.ceil(n / u);\n\n  /* 6. For i=1, 2, ..., c, do the following: */\n  for(var i = 1; i <= c; i++) {\n    /* a) Set Ai=H^r(D||I). (l.e. the rth hash of D||I, H(H(H(...H(D||I)))) */\n    var buf = new forge.util.ByteBuffer();\n    buf.putBytes(D.bytes());\n    buf.putBytes(I.bytes());\n    for(var round = 0; round < iter; round++) {\n      md.start();\n      md.update(buf.getBytes());\n      buf = md.digest();\n    }\n\n    /* b) Concatenate copies of Ai to create a string B of length v bytes (the\n          final copy of Ai may be truncated to create B). */\n    var B = new forge.util.ByteBuffer();\n    for(l = 0; l < v; l++) {\n      B.putByte(buf.at(l % u));\n    }\n\n    /* c) Treating I as a concatenation I0, I1, ..., Ik-1 of v-byte blocks,\n          where k=ceil(s / v) + ceil(p / v), modify I by setting\n          Ij=(Ij+B+1) mod 2v for each j.  */\n    var k = Math.ceil(s / v) + Math.ceil(p / v);\n    var Inew = new forge.util.ByteBuffer();\n    for(j = 0; j < k; j++) {\n      var chunk = new forge.util.ByteBuffer(I.getBytes(v));\n      var x = 0x1ff;\n      for(l = B.length() - 1; l >= 0; l--) {\n        x = x >> 8;\n        x += B.at(l) + chunk.at(l);\n        chunk.setAt(l, x & 0xff);\n      }\n      Inew.putBuffer(chunk);\n    }\n    I = Inew;\n\n    /* Add Ai to A. */\n    result.putBuffer(buf);\n  }\n\n  result.truncate(result.length() - n);\n  return result;\n};\n\n/**\n * Get new Forge cipher object instance.\n *\n * @param oid the OID (in string notation).\n * @param params the ASN.1 params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipher = function(oid, params, password) {\n  switch(oid) {\n  case pki.oids['pkcs5PBES2']:\n    return pki.pbe.getCipherForPBES2(oid, params, password);\n\n  case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n  case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n    return pki.pbe.getCipherForPKCS12PBE(oid, params, password);\n\n  default:\n    var error = new Error('Cannot read encrypted PBE data block. Unsupported OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'pkcs5PBES2',\n      'pbeWithSHAAnd3-KeyTripleDES-CBC',\n      'pbewithSHAAnd40BitRC2-CBC'\n    ];\n    throw error;\n  }\n};\n\n/**\n * Get new Forge cipher object instance according to PBES2 params block.\n *\n * The returned cipher instance is already started using the IV\n * from PBES2 parameter block.\n *\n * @param oid the PKCS#5 PBKDF2 OID (in string notation).\n * @param params the ASN.1 PBES2-params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipherForPBES2 = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, PBES2AlgorithmsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // check oids\n  oid = asn1.derToOid(capture.kdfOid);\n  if(oid !== pki.oids['pkcs5PBKDF2']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported key derivation function OID.');\n    error.oid = oid;\n    error.supportedOids = ['pkcs5PBKDF2'];\n    throw error;\n  }\n  oid = asn1.derToOid(capture.encOid);\n  if(oid !== pki.oids['aes128-CBC'] &&\n    oid !== pki.oids['aes192-CBC'] &&\n    oid !== pki.oids['aes256-CBC'] &&\n    oid !== pki.oids['des-EDE3-CBC'] &&\n    oid !== pki.oids['desCBC']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported encryption scheme OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'aes128-CBC', 'aes192-CBC', 'aes256-CBC', 'des-EDE3-CBC', 'desCBC'];\n    throw error;\n  }\n\n  // set PBE params\n  var salt = capture.kdfSalt;\n  var count = forge.util.createBuffer(capture.kdfIterationCount);\n  count = count.getInt(count.length() << 3);\n  var dkLen;\n  var cipherFn;\n  switch(pki.oids[oid]) {\n  case 'aes128-CBC':\n    dkLen = 16;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes192-CBC':\n    dkLen = 24;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes256-CBC':\n    dkLen = 32;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'des-EDE3-CBC':\n    dkLen = 24;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  case 'desCBC':\n    dkLen = 8;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n\n  // decrypt private key using pbe with chosen PRF and AES/DES\n  var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n  var iv = capture.encIv;\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n\n  return cipher;\n};\n\n/**\n * Get new Forge cipher object instance for PKCS#12 PBE.\n *\n * The returned cipher instance is already started using the key & IV\n * derived from the provided password and PKCS#12 PBE salt.\n *\n * @param oid The PKCS#12 PBE OID (in string notation).\n * @param params The ASN.1 PKCS#12 PBE-params object.\n * @param password The password to decrypt with.\n *\n * @return the new cipher object instance.\n */\npki.pbe.getCipherForPKCS12PBE = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, pkcs12PbeParamsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var salt = forge.util.createBuffer(capture.salt);\n  var count = forge.util.createBuffer(capture.iterations);\n  count = count.getInt(count.length() << 3);\n\n  var dkLen, dIvLen, cipherFn;\n  switch(oid) {\n    case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n      dkLen = 24;\n      dIvLen = 8;\n      cipherFn = forge.des.startDecrypting;\n      break;\n\n    case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n      dkLen = 5;\n      dIvLen = 8;\n      cipherFn = function(key, iv) {\n        var cipher = forge.rc2.createDecryptionCipher(key, 40);\n        cipher.start(iv, null);\n        return cipher;\n      };\n      break;\n\n    default:\n      var error = new Error('Cannot read PKCS #12 PBE data block. Unsupported OID.');\n      error.oid = oid;\n      throw error;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n  var key = pki.pbe.generatePkcs12Key(password, salt, 1, count, dkLen, md);\n  md.start();\n  var iv = pki.pbe.generatePkcs12Key(password, salt, 2, count, dIvLen, md);\n\n  return cipherFn(key, iv);\n};\n\n/**\n * OpenSSL's legacy key derivation function.\n *\n * See: http://www.openssl.org/docs/crypto/EVP_BytesToKey.html\n *\n * @param password the password to derive the key from.\n * @param salt the salt to use, null for none.\n * @param dkLen the number of bytes needed for the derived key.\n * @param [options] the options to use:\n *          [md] an optional message digest object to use.\n */\npki.pbe.opensslDeriveBytes = function(password, salt, dkLen, md) {\n  if(typeof md === 'undefined' || md === null) {\n    if(!('md5' in forge.md)) {\n      throw new Error('\"md5\" hash algorithm unavailable.');\n    }\n    md = forge.md.md5.create();\n  }\n  if(salt === null) {\n    salt = '';\n  }\n  var digests = [hash(md, password + salt)];\n  for(var length = 16, i = 1; length < dkLen; ++i, length += 16) {\n    digests.push(hash(md, digests[i - 1] + password + salt));\n  }\n  return digests.join('').substr(0, dkLen);\n};\n\nfunction hash(md, bytes) {\n  return md.start().update(bytes).digest().getBytes();\n}\n\nfunction prfOidToMessageDigest(prfOid) {\n  // get PRF algorithm, default to SHA-1\n  var prfAlgorithm;\n  if(!prfOid) {\n    prfAlgorithm = 'hmacWithSHA1';\n  } else {\n    prfAlgorithm = pki.oids[asn1.derToOid(prfOid)];\n    if(!prfAlgorithm) {\n      var error = new Error('Unsupported PRF OID.');\n      error.oid = prfOid;\n      error.supported = [\n        'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n        'hmacWithSHA512'];\n      throw error;\n    }\n  }\n  return prfAlgorithmToMessageDigest(prfAlgorithm);\n}\n\nfunction prfAlgorithmToMessageDigest(prfAlgorithm) {\n  var factory = forge.md;\n  switch(prfAlgorithm) {\n  case 'hmacWithSHA224':\n    factory = forge.md.sha512;\n  case 'hmacWithSHA1':\n  case 'hmacWithSHA256':\n  case 'hmacWithSHA384':\n  case 'hmacWithSHA512':\n    prfAlgorithm = prfAlgorithm.substr(8).toLowerCase();\n    break;\n  default:\n    var error = new Error('Unsupported PRF algorithm.');\n    error.algorithm = prfAlgorithm;\n    error.supported = [\n      'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n      'hmacWithSHA512'];\n    throw error;\n  }\n  if(!factory || !(prfAlgorithm in factory)) {\n    throw new Error('Unknown hash algorithm: ' + prfAlgorithm);\n  }\n  return factory[prfAlgorithm].create();\n}\n\nfunction createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm) {\n  var params = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // salt\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n    // iteration count\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      countBytes.getBytes())\n  ]);\n  // when PRF algorithm is not SHA-1 default, add key length and PRF algorithm\n  if(prfAlgorithm !== 'hmacWithSHA1') {\n    params.value.push(\n      // key length\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(dkLen.toString(16))),\n      // AlgorithmIdentifier\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // algorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids[prfAlgorithm]).getBytes()),\n        // parameters (null)\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n      ]));\n  }\n  return params;\n}\n","/**\n * Password-Based Key-Derivation Function #2 implementation.\n *\n * See RFC 2898 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./hmac');\nrequire('./md');\nrequire('./util');\n\nvar pkcs5 = forge.pkcs5 = forge.pkcs5 || {};\n\nvar crypto;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript) {\n  crypto = require('crypto');\n}\n\n/**\n * Derives a key from a password.\n *\n * @param p the password as a binary-encoded string of bytes.\n * @param s the salt as a binary-encoded string of bytes.\n * @param c the iteration count, a positive integer.\n * @param dkLen the intended length, in bytes, of the derived key,\n *          (max: 2^32 - 1) * hash length of the PRF.\n * @param [md] the message digest (or algorithm identifier as a string) to use\n *          in the PRF, defaults to SHA-1.\n * @param [callback(err, key)] presence triggers asynchronous version, called\n *          once the operation completes.\n *\n * @return the derived key, as a binary-encoded string of bytes, for the\n *           synchronous version (if no callback is specified).\n */\nmodule.exports = forge.pbkdf2 = pkcs5.pbkdf2 = function(\n  p, s, c, dkLen, md, callback) {\n  if(typeof md === 'function') {\n    callback = md;\n    md = null;\n  }\n\n  // use native implementation if possible and not disabled, note that\n  // some node versions only support SHA-1, others allow digest to be changed\n  if(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n    crypto.pbkdf2 && (md === null || typeof md !== 'object') &&\n    (crypto.pbkdf2Sync.length > 4 || (!md || md === 'sha1'))) {\n    if(typeof md !== 'string') {\n      // default prf to SHA-1\n      md = 'sha1';\n    }\n    p = Buffer.from(p, 'binary');\n    s = Buffer.from(s, 'binary');\n    if(!callback) {\n      if(crypto.pbkdf2Sync.length === 4) {\n        return crypto.pbkdf2Sync(p, s, c, dkLen).toString('binary');\n      }\n      return crypto.pbkdf2Sync(p, s, c, dkLen, md).toString('binary');\n    }\n    if(crypto.pbkdf2Sync.length === 4) {\n      return crypto.pbkdf2(p, s, c, dkLen, function(err, key) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, key.toString('binary'));\n      });\n    }\n    return crypto.pbkdf2(p, s, c, dkLen, md, function(err, key) {\n      if(err) {\n        return callback(err);\n      }\n      callback(null, key.toString('binary'));\n    });\n  }\n\n  if(typeof md === 'undefined' || md === null) {\n    // default prf to SHA-1\n    md = 'sha1';\n  }\n  if(typeof md === 'string') {\n    if(!(md in forge.md.algorithms)) {\n      throw new Error('Unknown hash algorithm: ' + md);\n    }\n    md = forge.md[md].create();\n  }\n\n  var hLen = md.digestLength;\n\n  /* 1. If dkLen > (2^32 - 1) * hLen, output \"derived key too long\" and\n    stop. */\n  if(dkLen > (0xFFFFFFFF * hLen)) {\n    var err = new Error('Derived key is too long.');\n    if(callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  /* 2. Let len be the number of hLen-octet blocks in the derived key,\n    rounding up, and let r be the number of octets in the last\n    block:\n\n    len = CEIL(dkLen / hLen),\n    r = dkLen - (len - 1) * hLen. */\n  var len = Math.ceil(dkLen / hLen);\n  var r = dkLen - (len - 1) * hLen;\n\n  /* 3. For each block of the derived key apply the function F defined\n    below to the password P, the salt S, the iteration count c, and\n    the block index to compute the block:\n\n    T_1 = F(P, S, c, 1),\n    T_2 = F(P, S, c, 2),\n    ...\n    T_len = F(P, S, c, len),\n\n    where the function F is defined as the exclusive-or sum of the\n    first c iterates of the underlying pseudorandom function PRF\n    applied to the password P and the concatenation of the salt S\n    and the block index i:\n\n    F(P, S, c, i) = u_1 XOR u_2 XOR ... XOR u_c\n\n    where\n\n    u_1 = PRF(P, S || INT(i)),\n    u_2 = PRF(P, u_1),\n    ...\n    u_c = PRF(P, u_{c-1}).\n\n    Here, INT(i) is a four-octet encoding of the integer i, most\n    significant octet first. */\n  var prf = forge.hmac.create();\n  prf.start(md, p);\n  var dk = '';\n  var xor, u_c, u_c1;\n\n  // sync version\n  if(!callback) {\n    for(var i = 1; i <= len; ++i) {\n      // PRF(P, S || INT(i)) (first iteration)\n      prf.start(null, null);\n      prf.update(s);\n      prf.update(forge.util.int32ToBytes(i));\n      xor = u_c1 = prf.digest().getBytes();\n\n      // PRF(P, u_{c-1}) (other iterations)\n      for(var j = 2; j <= c; ++j) {\n        prf.start(null, null);\n        prf.update(u_c1);\n        u_c = prf.digest().getBytes();\n        // F(p, s, c, i)\n        xor = forge.util.xorBytes(xor, u_c, hLen);\n        u_c1 = u_c;\n      }\n\n      /* 4. Concatenate the blocks and extract the first dkLen octets to\n        produce a derived key DK:\n\n        DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n      dk += (i < len) ? xor : xor.substr(0, r);\n    }\n    /* 5. Output the derived key DK. */\n    return dk;\n  }\n\n  // async version\n  var i = 1, j;\n  function outer() {\n    if(i > len) {\n      // done\n      return callback(null, dk);\n    }\n\n    // PRF(P, S || INT(i)) (first iteration)\n    prf.start(null, null);\n    prf.update(s);\n    prf.update(forge.util.int32ToBytes(i));\n    xor = u_c1 = prf.digest().getBytes();\n\n    // PRF(P, u_{c-1}) (other iterations)\n    j = 2;\n    inner();\n  }\n\n  function inner() {\n    if(j <= c) {\n      prf.start(null, null);\n      prf.update(u_c1);\n      u_c = prf.digest().getBytes();\n      // F(p, s, c, i)\n      xor = forge.util.xorBytes(xor, u_c, hLen);\n      u_c1 = u_c;\n      ++j;\n      return forge.util.setImmediate(inner);\n    }\n\n    /* 4. Concatenate the blocks and extract the first dkLen octets to\n      produce a derived key DK:\n\n      DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n    dk += (i < len) ? xor : xor.substr(0, r);\n\n    ++i;\n    outer();\n  }\n\n  outer();\n};\n","/**\n * Javascript implementation of basic PEM (Privacy Enhanced Mail) algorithms.\n *\n * See: RFC 1421.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n *\n * A Forge PEM object has the following fields:\n *\n * type: identifies the type of message (eg: \"RSA PRIVATE KEY\").\n *\n * procType: identifies the type of processing performed on the message,\n *   it has two subfields: version and type, eg: 4,ENCRYPTED.\n *\n * contentDomain: identifies the type of content in the message, typically\n *   only uses the value: \"RFC822\".\n *\n * dekInfo: identifies the message encryption algorithm and mode and includes\n *   any parameters for the algorithm, it has two subfields: algorithm and\n *   parameters, eg: DES-CBC,F8143EDE5960C597.\n *\n * headers: contains all other PEM encapsulated headers -- where order is\n *   significant (for pairing data like recipient ID + key info).\n *\n * body: the binary-encoded body.\n */\nvar forge = require('./forge');\nrequire('./util');\n\n// shortcut for pem API\nvar pem = module.exports = forge.pem = forge.pem || {};\n\n/**\n * Encodes (serializes) the given PEM object.\n *\n * @param msg the PEM message object to encode.\n * @param options the options to use:\n *          maxline the maximum characters per line for the body, (default: 64).\n *\n * @return the PEM-formatted string.\n */\npem.encode = function(msg, options) {\n  options = options || {};\n  var rval = '-----BEGIN ' + msg.type + '-----\\r\\n';\n\n  // encode special headers\n  var header;\n  if(msg.procType) {\n    header = {\n      name: 'Proc-Type',\n      values: [String(msg.procType.version), msg.procType.type]\n    };\n    rval += foldHeader(header);\n  }\n  if(msg.contentDomain) {\n    header = {name: 'Content-Domain', values: [msg.contentDomain]};\n    rval += foldHeader(header);\n  }\n  if(msg.dekInfo) {\n    header = {name: 'DEK-Info', values: [msg.dekInfo.algorithm]};\n    if(msg.dekInfo.parameters) {\n      header.values.push(msg.dekInfo.parameters);\n    }\n    rval += foldHeader(header);\n  }\n\n  if(msg.headers) {\n    // encode all other headers\n    for(var i = 0; i < msg.headers.length; ++i) {\n      rval += foldHeader(msg.headers[i]);\n    }\n  }\n\n  // terminate header\n  if(msg.procType) {\n    rval += '\\r\\n';\n  }\n\n  // add body\n  rval += forge.util.encode64(msg.body, options.maxline || 64) + '\\r\\n';\n\n  rval += '-----END ' + msg.type + '-----\\r\\n';\n  return rval;\n};\n\n/**\n * Decodes (deserializes) all PEM messages found in the given string.\n *\n * @param str the PEM-formatted string to decode.\n *\n * @return the PEM message objects in an array.\n */\npem.decode = function(str) {\n  var rval = [];\n\n  // split string into PEM messages (be lenient w/EOF on BEGIN line)\n  var rMessage = /\\s*-----BEGIN ([A-Z0-9- ]+)-----\\r?\\n?([\\x21-\\x7e\\s]+?(?:\\r?\\n\\r?\\n))?([:A-Za-z0-9+\\/=\\s]+?)-----END \\1-----/g;\n  var rHeader = /([\\x21-\\x7e]+):\\s*([\\x21-\\x7e\\s^:]+)/;\n  var rCRLF = /\\r?\\n/;\n  var match;\n  while(true) {\n    match = rMessage.exec(str);\n    if(!match) {\n      break;\n    }\n\n    // accept \"NEW CERTIFICATE REQUEST\" as \"CERTIFICATE REQUEST\"\n    // https://datatracker.ietf.org/doc/html/rfc7468#section-7\n    var type = match[1];\n    if(type === 'NEW CERTIFICATE REQUEST') {\n      type = 'CERTIFICATE REQUEST';\n    }\n\n    var msg = {\n      type: type,\n      procType: null,\n      contentDomain: null,\n      dekInfo: null,\n      headers: [],\n      body: forge.util.decode64(match[3])\n    };\n    rval.push(msg);\n\n    // no headers\n    if(!match[2]) {\n      continue;\n    }\n\n    // parse headers\n    var lines = match[2].split(rCRLF);\n    var li = 0;\n    while(match && li < lines.length) {\n      // get line, trim any rhs whitespace\n      var line = lines[li].replace(/\\s+$/, '');\n\n      // RFC2822 unfold any following folded lines\n      for(var nl = li + 1; nl < lines.length; ++nl) {\n        var next = lines[nl];\n        if(!/\\s/.test(next[0])) {\n          break;\n        }\n        line += next;\n        li = nl;\n      }\n\n      // parse header\n      match = line.match(rHeader);\n      if(match) {\n        var header = {name: match[1], values: []};\n        var values = match[2].split(',');\n        for(var vi = 0; vi < values.length; ++vi) {\n          header.values.push(ltrim(values[vi]));\n        }\n\n        // Proc-Type must be the first header\n        if(!msg.procType) {\n          if(header.name !== 'Proc-Type') {\n            throw new Error('Invalid PEM formatted message. The first ' +\n              'encapsulated header must be \"Proc-Type\".');\n          } else if(header.values.length !== 2) {\n            throw new Error('Invalid PEM formatted message. The \"Proc-Type\" ' +\n              'header must have two subfields.');\n          }\n          msg.procType = {version: values[0], type: values[1]};\n        } else if(!msg.contentDomain && header.name === 'Content-Domain') {\n          // special-case Content-Domain\n          msg.contentDomain = values[0] || '';\n        } else if(!msg.dekInfo && header.name === 'DEK-Info') {\n          // special-case DEK-Info\n          if(header.values.length === 0) {\n            throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n              'header must have at least one subfield.');\n          }\n          msg.dekInfo = {algorithm: values[0], parameters: values[1] || null};\n        } else {\n          msg.headers.push(header);\n        }\n      }\n\n      ++li;\n    }\n\n    if(msg.procType === 'ENCRYPTED' && !msg.dekInfo) {\n      throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n        'header must be present if \"Proc-Type\" is \"ENCRYPTED\".');\n    }\n  }\n\n  if(rval.length === 0) {\n    throw new Error('Invalid PEM formatted message.');\n  }\n\n  return rval;\n};\n\nfunction foldHeader(header) {\n  var rval = header.name + ': ';\n\n  // ensure values with CRLF are folded\n  var values = [];\n  var insertSpace = function(match, $1) {\n    return ' ' + $1;\n  };\n  for(var i = 0; i < header.values.length; ++i) {\n    values.push(header.values[i].replace(/^(\\S+\\r\\n)/, insertSpace));\n  }\n  rval += values.join(',') + '\\r\\n';\n\n  // do folding\n  var length = 0;\n  var candidate = -1;\n  for(var i = 0; i < rval.length; ++i, ++length) {\n    if(length > 65 && candidate !== -1) {\n      var insert = rval[candidate];\n      if(insert === ',') {\n        ++candidate;\n        rval = rval.substr(0, candidate) + '\\r\\n ' + rval.substr(candidate);\n      } else {\n        rval = rval.substr(0, candidate) +\n          '\\r\\n' + insert + rval.substr(candidate + 1);\n      }\n      length = (i - candidate - 1);\n      candidate = -1;\n      ++i;\n    } else if(rval[i] === ' ' || rval[i] === '\\t' || rval[i] === ',') {\n      candidate = i;\n    }\n  }\n\n  return rval;\n}\n\nfunction ltrim(str) {\n  return str.replace(/^\\s+/, '');\n}\n","/**\n * Partial implementation of PKCS#1 v2.2: RSA-OEAP\n *\n * Modified but based on the following MIT and BSD licensed code:\n *\n * https://github.com/kjur/jsjws/blob/master/rsa.js:\n *\n * The 'jsjws'(JSON Web Signature JavaScript Library) License\n *\n * Copyright (c) 2012 Kenji Urushima\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * http://webrsa.cvs.sourceforge.net/viewvc/webrsa/Client/RSAES-OAEP.js?content-type=text%2Fplain:\n *\n * RSAES-OAEP.js\n * $Id: RSAES-OAEP.js,v 1.1.1.1 2003/03/19 15:37:20 ellispritchard Exp $\n * JavaScript Implementation of PKCS #1 v2.1 RSA CRYPTOGRAPHY STANDARD (RSA Laboratories, June 14, 2002)\n * Copyright (C) Ellis Pritchard, Guardian Unlimited 2003.\n * Contact: ellis@nukinetics.com\n * Distributed under the BSD License.\n *\n * Official documentation: http://www.rsa.com/rsalabs/node.asp?id=2125\n *\n * @author Evan Jones (http://evanjones.ca/)\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./random');\nrequire('./sha1');\n\n// shortcut for PKCS#1 API\nvar pkcs1 = module.exports = forge.pkcs1 = forge.pkcs1 || {};\n\n/**\n * Encode the given RSAES-OAEP message (M) using key, with optional label (L)\n * and seed.\n *\n * This method does not perform RSA encryption, it only encodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param message the message to encode.\n * @param options the options to use:\n *          label an optional label to use.\n *          seed the seed to use.\n *          md the message digest object to use, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the encoded message bytes.\n */\npkcs1.encode_rsa_oaep = function(key, message, options) {\n  // parse arguments\n  var label;\n  var seed;\n  var md;\n  var mgf1Md;\n  // legacy args (label, seed, md)\n  if(typeof options === 'string') {\n    label = options;\n    seed = arguments[3] || undefined;\n    md = arguments[4] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    seed = options.seed || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(!md) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  // compute length in bytes and check output\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n  var maxLength = keyLength - 2 * md.digestLength - 2;\n  if(message.length > maxLength) {\n    var error = new Error('RSAES-OAEP input message length is too long.');\n    error.length = message.length;\n    error.maxLength = maxLength;\n    throw error;\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest();\n\n  var PS = '';\n  var PS_length = maxLength - message.length;\n  for(var i = 0; i < PS_length; i++) {\n    PS += '\\x00';\n  }\n\n  var DB = lHash.getBytes() + PS + '\\x01' + message;\n\n  if(!seed) {\n    seed = forge.random.getBytes(md.digestLength);\n  } else if(seed.length !== md.digestLength) {\n    var error = new Error('Invalid RSAES-OAEP seed. The seed length must ' +\n      'match the digest length.');\n    error.seedLength = seed.length;\n    error.digestLength = md.digestLength;\n    throw error;\n  }\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var maskedDB = forge.util.xorBytes(DB, dbMask, DB.length);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var maskedSeed = forge.util.xorBytes(seed, seedMask, seed.length);\n\n  // return encoded message\n  return '\\x00' + maskedSeed + maskedDB;\n};\n\n/**\n * Decode the given RSAES-OAEP encoded message (EM) using key, with optional\n * label (L).\n *\n * This method does not perform RSA decryption, it only decodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param em the encoded message to decode.\n * @param options the options to use:\n *          label an optional label to use.\n *          md the message digest object to use for OAEP, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the decoded message bytes.\n */\npkcs1.decode_rsa_oaep = function(key, em, options) {\n  // parse args\n  var label;\n  var md;\n  var mgf1Md;\n  // legacy args\n  if(typeof options === 'string') {\n    label = options;\n    md = arguments[3] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // compute length in bytes\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n\n  if(em.length !== keyLength) {\n    var error = new Error('RSAES-OAEP encoded message length is invalid.');\n    error.length = em.length;\n    error.expectedLength = keyLength;\n    throw error;\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(md === undefined) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  if(keyLength < 2 * md.digestLength + 2) {\n    throw new Error('RSAES-OAEP key is too short for the hash function.');\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest().getBytes();\n\n  // split the message into its parts\n  var y = em.charAt(0);\n  var maskedSeed = em.substring(1, md.digestLength + 1);\n  var maskedDB = em.substring(1 + md.digestLength);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var seed = forge.util.xorBytes(maskedSeed, seedMask, maskedSeed.length);\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var db = forge.util.xorBytes(maskedDB, dbMask, maskedDB.length);\n\n  var lHashPrime = db.substring(0, md.digestLength);\n\n  // constant time check that all values match what is expected\n  var error = (y !== '\\x00');\n\n  // constant time check lHash vs lHashPrime\n  for(var i = 0; i < md.digestLength; ++i) {\n    error |= (lHash.charAt(i) !== lHashPrime.charAt(i));\n  }\n\n  // \"constant time\" find the 0x1 byte separating the padding (zeros) from the\n  // message\n  // TODO: It must be possible to do this in a better/smarter way?\n  var in_ps = 1;\n  var index = md.digestLength;\n  for(var j = md.digestLength; j < db.length; j++) {\n    var code = db.charCodeAt(j);\n\n    var is_0 = (code & 0x1) ^ 0x1;\n\n    // non-zero if not 0 or 1 in the ps section\n    var error_mask = in_ps ? 0xfffe : 0x0000;\n    error |= (code & error_mask);\n\n    // latch in_ps to zero after we find 0x1\n    in_ps = in_ps & is_0;\n    index += in_ps;\n  }\n\n  if(error || db.charCodeAt(index) !== 0x1) {\n    throw new Error('Invalid RSAES-OAEP padding.');\n  }\n\n  return db.substring(index + 1);\n};\n\nfunction rsa_mgf1(seed, maskLength, hash) {\n  // default to SHA-1 message digest\n  if(!hash) {\n    hash = forge.md.sha1.create();\n  }\n  var t = '';\n  var count = Math.ceil(maskLength / hash.digestLength);\n  for(var i = 0; i < count; ++i) {\n    var c = String.fromCharCode(\n      (i >> 24) & 0xFF, (i >> 16) & 0xFF, (i >> 8) & 0xFF, i & 0xFF);\n    hash.start();\n    hash.update(seed + c);\n    t += hash.digest().getBytes();\n  }\n  return t.substring(0, maskLength);\n}\n","/**\n * Javascript implementation of PKCS#7 v1.5.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n *\n * Currently this implementation only supports ContentType of EnvelopedData,\n * EncryptedData, or SignedData at the root level. The top level elements may\n * contain only a ContentInfo of ContentType Data, i.e. plain data. Further\n * nesting is not (yet) supported.\n *\n * The Forge validators for PKCS #7's ASN.1 structures are available from\n * a separate file pkcs7asn1.js, since those are referenced from other\n * PKCS standards like PKCS #12.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./oids');\nrequire('./pem');\nrequire('./pkcs7asn1');\nrequire('./random');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7 = module.exports = forge.pkcs7 = forge.pkcs7 || {};\n\n/**\n * Converts a PKCS#7 message from PEM format.\n *\n * @param pem the PEM-formatted PKCS#7 message.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PKCS7') {\n    var error = new Error('Could not convert PKCS#7 message from PEM; PEM ' +\n      'header type is not \"PKCS#7\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PKCS#7 message from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return p7.messageFromAsn1(obj);\n};\n\n/**\n * Converts a PKCS#7 message to PEM format.\n *\n * @param msg The PKCS#7 message object\n * @param maxline The maximum characters per line, defaults to 64.\n *\n * @return The PEM-formatted PKCS#7 message.\n */\np7.messageToPem = function(msg, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var pemObj = {\n    type: 'PKCS7',\n    body: asn1.toDer(msg.toAsn1()).getBytes()\n  };\n  return forge.pem.encode(pemObj, {maxline: maxline});\n};\n\n/**\n * Converts a PKCS#7 message from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a ContentInfo.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromAsn1 = function(obj) {\n  // validate root level ContentInfo and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.contentInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not an PKCS#7 ContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var contentType = asn1.derToOid(capture.contentType);\n  var msg;\n\n  switch(contentType) {\n    case forge.pki.oids.envelopedData:\n      msg = p7.createEnvelopedData();\n      break;\n\n    case forge.pki.oids.encryptedData:\n      msg = p7.createEncryptedData();\n      break;\n\n    case forge.pki.oids.signedData:\n      msg = p7.createSignedData();\n      break;\n\n    default:\n      throw new Error('Cannot read PKCS#7 message. ContentType with OID ' +\n        contentType + ' is not (yet) supported.');\n  }\n\n  msg.fromAsn1(capture.content.value[0]);\n  return msg;\n};\n\np7.createSignedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.signedData,\n    version: 1,\n    certificates: [],\n    crls: [],\n    // TODO: add json-formatted signer stuff here?\n    signers: [],\n    // populated during sign()\n    digestAlgorithmIdentifiers: [],\n    contentInfo: null,\n    signerInfos: [],\n\n    fromAsn1: function(obj) {\n      // validate SignedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.signedDataValidator);\n      msg.certificates = [];\n      msg.crls = [];\n      msg.digestAlgorithmIdentifiers = [];\n      msg.contentInfo = null;\n      msg.signerInfos = [];\n\n      if(msg.rawCapture.certificates) {\n        var certs = msg.rawCapture.certificates.value;\n        for(var i = 0; i < certs.length; ++i) {\n          msg.certificates.push(forge.pki.certificateFromAsn1(certs[i]));\n        }\n      }\n\n      // TODO: parse crls\n    },\n\n    toAsn1: function() {\n      // degenerate case with no content\n      if(!msg.contentInfo) {\n        msg.sign();\n      }\n\n      var certs = [];\n      for(var i = 0; i < msg.certificates.length; ++i) {\n        certs.push(forge.pki.certificateToAsn1(msg.certificates[i]));\n      }\n\n      var crls = [];\n      // TODO: implement CRLs\n\n      // [0] SignedData\n      var signedData = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // Version\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(msg.version).getBytes()),\n          // DigestAlgorithmIdentifiers\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n            msg.digestAlgorithmIdentifiers),\n          // ContentInfo\n          msg.contentInfo\n        ])\n      ]);\n      if(certs.length > 0) {\n        // [0] IMPLICIT ExtendedCertificatesAndCertificates OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, certs));\n      }\n      if(crls.length > 0) {\n        // [1] IMPLICIT CertificateRevocationLists OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, crls));\n      }\n      // SignerInfos\n      signedData.value[0].value.push(\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n          msg.signerInfos));\n\n      // ContentInfo\n      return asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // ContentType\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(msg.type).getBytes()),\n          // [0] SignedData\n          signedData\n        ]);\n    },\n\n    /**\n     * Add (another) entity to list of signers.\n     *\n     * Note: If authenticatedAttributes are provided, then, per RFC 2315,\n     * they must include at least two attributes: content type and\n     * message digest. The message digest attribute value will be\n     * auto-calculated during signing and will be ignored if provided.\n     *\n     * Here's an example of providing these two attributes:\n     *\n     * forge.pkcs7.createSignedData();\n     * p7.addSigner({\n     *   issuer: cert.issuer.attributes,\n     *   serialNumber: cert.serialNumber,\n     *   key: privateKey,\n     *   digestAlgorithm: forge.pki.oids.sha1,\n     *   authenticatedAttributes: [{\n     *     type: forge.pki.oids.contentType,\n     *     value: forge.pki.oids.data\n     *   }, {\n     *     type: forge.pki.oids.messageDigest\n     *   }]\n     * });\n     *\n     * TODO: Support [subjectKeyIdentifier] as signer's ID.\n     *\n     * @param signer the signer information:\n     *          key the signer's private key.\n     *          [certificate] a certificate containing the public key\n     *            associated with the signer's private key; use this option as\n     *            an alternative to specifying signer.issuer and\n     *            signer.serialNumber.\n     *          [issuer] the issuer attributes (eg: cert.issuer.attributes).\n     *          [serialNumber] the signer's certificate's serial number in\n     *           hexadecimal (eg: cert.serialNumber).\n     *          [digestAlgorithm] the message digest OID, as a string, to use\n     *            (eg: forge.pki.oids.sha1).\n     *          [authenticatedAttributes] an optional array of attributes\n     *            to also sign along with the content.\n     */\n    addSigner: function(signer) {\n      var issuer = signer.issuer;\n      var serialNumber = signer.serialNumber;\n      if(signer.certificate) {\n        var cert = signer.certificate;\n        if(typeof cert === 'string') {\n          cert = forge.pki.certificateFromPem(cert);\n        }\n        issuer = cert.issuer.attributes;\n        serialNumber = cert.serialNumber;\n      }\n      var key = signer.key;\n      if(!key) {\n        throw new Error(\n          'Could not add PKCS#7 signer; no private key specified.');\n      }\n      if(typeof key === 'string') {\n        key = forge.pki.privateKeyFromPem(key);\n      }\n\n      // ensure OID known for digest algorithm\n      var digestAlgorithm = signer.digestAlgorithm || forge.pki.oids.sha1;\n      switch(digestAlgorithm) {\n      case forge.pki.oids.sha1:\n      case forge.pki.oids.sha256:\n      case forge.pki.oids.sha384:\n      case forge.pki.oids.sha512:\n      case forge.pki.oids.md5:\n        break;\n      default:\n        throw new Error(\n          'Could not add PKCS#7 signer; unknown message digest algorithm: ' +\n          digestAlgorithm);\n      }\n\n      // if authenticatedAttributes is present, then the attributes\n      // must contain at least PKCS #9 content-type and message-digest\n      var authenticatedAttributes = signer.authenticatedAttributes || [];\n      if(authenticatedAttributes.length > 0) {\n        var contentType = false;\n        var messageDigest = false;\n        for(var i = 0; i < authenticatedAttributes.length; ++i) {\n          var attr = authenticatedAttributes[i];\n          if(!contentType && attr.type === forge.pki.oids.contentType) {\n            contentType = true;\n            if(messageDigest) {\n              break;\n            }\n            continue;\n          }\n          if(!messageDigest && attr.type === forge.pki.oids.messageDigest) {\n            messageDigest = true;\n            if(contentType) {\n              break;\n            }\n            continue;\n          }\n        }\n\n        if(!contentType || !messageDigest) {\n          throw new Error('Invalid signer.authenticatedAttributes. If ' +\n            'signer.authenticatedAttributes is specified, then it must ' +\n            'contain at least two attributes, PKCS #9 content-type and ' +\n            'PKCS #9 message-digest.');\n        }\n      }\n\n      msg.signers.push({\n        key: key,\n        version: 1,\n        issuer: issuer,\n        serialNumber: serialNumber,\n        digestAlgorithm: digestAlgorithm,\n        signatureAlgorithm: forge.pki.oids.rsaEncryption,\n        signature: null,\n        authenticatedAttributes: authenticatedAttributes,\n        unauthenticatedAttributes: []\n      });\n    },\n\n    /**\n     * Signs the content.\n     * @param options Options to apply when signing:\n     *    [detached] boolean. If signing should be done in detached mode. Defaults to false.\n     */\n    sign: function(options) {\n      options = options || {};\n      // auto-generate content info\n      if(typeof msg.content !== 'object' || msg.contentInfo === null) {\n        // use Data ContentInfo\n        msg.contentInfo = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // ContentType\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(forge.pki.oids.data).getBytes())\n          ]);\n\n        // add actual content, if present\n        if('content' in msg) {\n          var content;\n          if(msg.content instanceof forge.util.ByteBuffer) {\n            content = msg.content.bytes();\n          } else if(typeof msg.content === 'string') {\n            content = forge.util.encodeUtf8(msg.content);\n          }\n\n          if (options.detached) {\n            msg.detachedContent = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, content);\n          } else {\n            msg.contentInfo.value.push(\n              // [0] EXPLICIT content\n              asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n                asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                  content)\n              ]));\n          }\n        }\n      }\n\n      // no signers, return early (degenerate case for certificate container)\n      if(msg.signers.length === 0) {\n        return;\n      }\n\n      // generate digest algorithm identifiers\n      var mds = addDigestAlgorithmIds();\n\n      // generate signerInfos\n      addSignerInfos(mds);\n    },\n\n    verify: function() {\n      throw new Error('PKCS#7 signature verification not yet implemented.');\n    },\n\n    /**\n     * Add a certificate.\n     *\n     * @param cert the certificate to add.\n     */\n    addCertificate: function(cert) {\n      // convert from PEM\n      if(typeof cert === 'string') {\n        cert = forge.pki.certificateFromPem(cert);\n      }\n      msg.certificates.push(cert);\n    },\n\n    /**\n     * Add a certificate revokation list.\n     *\n     * @param crl the certificate revokation list to add.\n     */\n    addCertificateRevokationList: function(crl) {\n      throw new Error('PKCS#7 CRL support not yet implemented.');\n    }\n  };\n  return msg;\n\n  function addDigestAlgorithmIds() {\n    var mds = {};\n\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n      var oid = signer.digestAlgorithm;\n      if(!(oid in mds)) {\n        // content digest\n        mds[oid] = forge.md[forge.pki.oids[oid]].create();\n      }\n      if(signer.authenticatedAttributes.length === 0) {\n        // no custom attributes to digest; use content message digest\n        signer.md = mds[oid];\n      } else {\n        // custom attributes to be digested; use own message digest\n        // TODO: optimize to just copy message digest state if that\n        // feature is ever supported with message digests\n        signer.md = forge.md[forge.pki.oids[oid]].create();\n      }\n    }\n\n    // add unique digest algorithm identifiers\n    msg.digestAlgorithmIdentifiers = [];\n    for(var oid in mds) {\n      msg.digestAlgorithmIdentifiers.push(\n        // AlgorithmIdentifier\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oid).getBytes()),\n          // parameters (null)\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]));\n    }\n\n    return mds;\n  }\n\n  function addSignerInfos(mds) {\n    var content;\n\n    if (msg.detachedContent) {\n      // Signature has been made in detached mode.\n      content = msg.detachedContent;\n    } else {\n      // Note: ContentInfo is a SEQUENCE with 2 values, second value is\n      // the content field and is optional for a ContentInfo but required here\n      // since signers are present\n      // get ContentInfo content\n      content = msg.contentInfo.value[1];\n      // skip [0] EXPLICIT content wrapper\n      content = content.value[0];\n    }\n\n    if(!content) {\n      throw new Error(\n        'Could not sign PKCS#7 message; there is no content to sign.');\n    }\n\n    // get ContentInfo content type\n    var contentType = asn1.derToOid(msg.contentInfo.value[0].value);\n\n    // serialize content\n    var bytes = asn1.toDer(content);\n\n    // skip identifier and length per RFC 2315 9.3\n    // skip identifier (1 byte)\n    bytes.getByte();\n    // read and discard length bytes\n    asn1.getBerValueLength(bytes);\n    bytes = bytes.getBytes();\n\n    // digest content DER value bytes\n    for(var oid in mds) {\n      mds[oid].start().update(bytes);\n    }\n\n    // sign content\n    var signingTime = new Date();\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n\n      if(signer.authenticatedAttributes.length === 0) {\n        // if ContentInfo content type is not \"Data\", then\n        // authenticatedAttributes must be present per RFC 2315\n        if(contentType !== forge.pki.oids.data) {\n          throw new Error(\n            'Invalid signer; authenticatedAttributes must be present ' +\n            'when the ContentInfo content type is not PKCS#7 Data.');\n        }\n      } else {\n        // process authenticated attributes\n        // [0] IMPLICIT\n        signer.authenticatedAttributesAsn1 = asn1.create(\n          asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n        // per RFC 2315, attributes are to be digested using a SET container\n        // not the above [0] IMPLICIT container\n        var attrsAsn1 = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SET, true, []);\n\n        for(var ai = 0; ai < signer.authenticatedAttributes.length; ++ai) {\n          var attr = signer.authenticatedAttributes[ai];\n          if(attr.type === forge.pki.oids.messageDigest) {\n            // use content message digest as value\n            attr.value = mds[signer.digestAlgorithm].digest();\n          } else if(attr.type === forge.pki.oids.signingTime) {\n            // auto-populate signing time if not already set\n            if(!attr.value) {\n              attr.value = signingTime;\n            }\n          }\n\n          // convert to ASN.1 and push onto Attributes SET (for signing) and\n          // onto authenticatedAttributesAsn1 to complete SignedData ASN.1\n          // TODO: optimize away duplication\n          attrsAsn1.value.push(_attributeToAsn1(attr));\n          signer.authenticatedAttributesAsn1.value.push(_attributeToAsn1(attr));\n        }\n\n        // DER-serialize and digest SET OF attributes only\n        bytes = asn1.toDer(attrsAsn1).getBytes();\n        signer.md.start().update(bytes);\n      }\n\n      // sign digest\n      signer.signature = signer.key.sign(signer.md, 'RSASSA-PKCS1-V1_5');\n    }\n\n    // add signer info\n    msg.signerInfos = _signersToAsn1(msg.signers);\n  }\n};\n\n/**\n * Creates an empty PKCS#7 message of type EncryptedData.\n *\n * @return the message.\n */\np7.createEncryptedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.encryptedData,\n    version: 0,\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EncryptedData content block (in ASN.1 format)\n     *\n     * @param obj The ASN.1 representation of the EncryptedData content block\n     */\n    fromAsn1: function(obj) {\n      // Validate EncryptedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.encryptedDataValidator);\n    },\n\n    /**\n     * Decrypt encrypted content\n     *\n     * @param key The (symmetric) key as a byte buffer\n     */\n    decrypt: function(key) {\n      if(key !== undefined) {\n        msg.encryptedContent.key = key;\n      }\n      _decryptContent(msg);\n    }\n  };\n  return msg;\n};\n\n/**\n * Creates an empty PKCS#7 message of type EnvelopedData.\n *\n * @return the message.\n */\np7.createEnvelopedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.envelopedData,\n    version: 0,\n    recipients: [],\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EnvelopedData content block (in ASN.1 format)\n     *\n     * @param obj the ASN.1 representation of the EnvelopedData content block.\n     */\n    fromAsn1: function(obj) {\n      // validate EnvelopedData content block and capture data\n      var capture = _fromAsn1(msg, obj, p7.asn1.envelopedDataValidator);\n      msg.recipients = _recipientsFromAsn1(capture.recipientInfos.value);\n    },\n\n    toAsn1: function() {\n      // ContentInfo\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // ContentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(msg.type).getBytes()),\n        // [0] EnvelopedData\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // Version\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n              asn1.integerToDer(msg.version).getBytes()),\n            // RecipientInfos\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n              _recipientsToAsn1(msg.recipients)),\n            // EncryptedContentInfo\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true,\n              _encryptedContentToAsn1(msg.encryptedContent))\n          ])\n        ])\n      ]);\n    },\n\n    /**\n     * Find recipient by X.509 certificate's issuer.\n     *\n     * @param cert the certificate with the issuer to look for.\n     *\n     * @return the recipient object.\n     */\n    findRecipient: function(cert) {\n      var sAttr = cert.issuer.attributes;\n\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var r = msg.recipients[i];\n        var rAttr = r.issuer;\n\n        if(r.serialNumber !== cert.serialNumber) {\n          continue;\n        }\n\n        if(rAttr.length !== sAttr.length) {\n          continue;\n        }\n\n        var match = true;\n        for(var j = 0; j < sAttr.length; ++j) {\n          if(rAttr[j].type !== sAttr[j].type ||\n            rAttr[j].value !== sAttr[j].value) {\n            match = false;\n            break;\n          }\n        }\n\n        if(match) {\n          return r;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Decrypt enveloped content\n     *\n     * @param recipient The recipient object related to the private key\n     * @param privKey The (RSA) private key object\n     */\n    decrypt: function(recipient, privKey) {\n      if(msg.encryptedContent.key === undefined && recipient !== undefined &&\n        privKey !== undefined) {\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n          case forge.pki.oids.desCBC:\n            var key = privKey.decrypt(recipient.encryptedContent.content);\n            msg.encryptedContent.key = forge.util.createBuffer(key);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, ' +\n              'OID ' + recipient.encryptedContent.algorithm);\n        }\n      }\n\n      _decryptContent(msg);\n    },\n\n    /**\n     * Add (another) entity to list of recipients.\n     *\n     * @param cert The certificate of the entity to add.\n     */\n    addRecipient: function(cert) {\n      msg.recipients.push({\n        version: 0,\n        issuer: cert.issuer.attributes,\n        serialNumber: cert.serialNumber,\n        encryptedContent: {\n          // We simply assume rsaEncryption here, since forge.pki only\n          // supports RSA so far.  If the PKI module supports other\n          // ciphers one day, we need to modify this one as well.\n          algorithm: forge.pki.oids.rsaEncryption,\n          key: cert.publicKey\n        }\n      });\n    },\n\n    /**\n     * Encrypt enveloped content.\n     *\n     * This function supports two optional arguments, cipher and key, which\n     * can be used to influence symmetric encryption.  Unless cipher is\n     * provided, the cipher specified in encryptedContent.algorithm is used\n     * (defaults to AES-256-CBC).  If no key is provided, encryptedContent.key\n     * is (re-)used.  If that one's not set, a random key will be generated\n     * automatically.\n     *\n     * @param [key] The key to be used for symmetric encryption.\n     * @param [cipher] The OID of the symmetric cipher to use.\n     */\n    encrypt: function(key, cipher) {\n      // Part 1: Symmetric encryption\n      if(msg.encryptedContent.content === undefined) {\n        cipher = cipher || msg.encryptedContent.algorithm;\n        key = key || msg.encryptedContent.key;\n\n        var keyLen, ivLen, ciphFn;\n        switch(cipher) {\n          case forge.pki.oids['aes128-CBC']:\n            keyLen = 16;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes192-CBC']:\n            keyLen = 24;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes256-CBC']:\n            keyLen = 32;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['des-EDE3-CBC']:\n            keyLen = 24;\n            ivLen = 8;\n            ciphFn = forge.des.createEncryptionCipher;\n            break;\n\n          default:\n            throw new Error('Unsupported symmetric cipher, OID ' + cipher);\n        }\n\n        if(key === undefined) {\n          key = forge.util.createBuffer(forge.random.getBytes(keyLen));\n        } else if(key.length() != keyLen) {\n          throw new Error('Symmetric key has wrong length; ' +\n            'got ' + key.length() + ' bytes, expected ' + keyLen + '.');\n        }\n\n        // Keep a copy of the key & IV in the object, so the caller can\n        // use it for whatever reason.\n        msg.encryptedContent.algorithm = cipher;\n        msg.encryptedContent.key = key;\n        msg.encryptedContent.parameter = forge.util.createBuffer(\n          forge.random.getBytes(ivLen));\n\n        var ciph = ciphFn(key);\n        ciph.start(msg.encryptedContent.parameter.copy());\n        ciph.update(msg.content);\n\n        // The finish function does PKCS#7 padding by default, therefore\n        // no action required by us.\n        if(!ciph.finish()) {\n          throw new Error('Symmetric encryption failed.');\n        }\n\n        msg.encryptedContent.content = ciph.output;\n      }\n\n      // Part 2: asymmetric encryption for each recipient\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var recipient = msg.recipients[i];\n\n        // Nothing to do, encryption already done.\n        if(recipient.encryptedContent.content !== undefined) {\n          continue;\n        }\n\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n            recipient.encryptedContent.content =\n              recipient.encryptedContent.key.encrypt(\n                msg.encryptedContent.key.data);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, OID ' +\n              recipient.encryptedContent.algorithm);\n        }\n      }\n    }\n  };\n  return msg;\n};\n\n/**\n * Converts a single recipient from an ASN.1 object.\n *\n * @param obj the ASN.1 RecipientInfo.\n *\n * @return the recipient object.\n */\nfunction _recipientFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.recipientInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 RecipientInfo. ' +\n      'ASN.1 object is not an PKCS#7 RecipientInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  return {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    encryptedContent: {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: capture.encParameter ? capture.encParameter.value : undefined,\n      content: capture.encKey\n    }\n  };\n}\n\n/**\n * Converts a single recipient object to an ASN.1 object.\n *\n * @param obj the recipient object.\n *\n * @return the ASN.1 RecipientInfo.\n */\nfunction _recipientToAsn1(obj) {\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // Version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // IssuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // Serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // KeyEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.encryptedContent.algorithm).getBytes()),\n      // Parameter, force NULL, only RSA supported for now.\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // EncryptedKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      obj.encryptedContent.content)\n  ]);\n}\n\n/**\n * Map a set of RecipientInfo ASN.1 objects to recipient objects.\n *\n * @param infos an array of ASN.1 representations RecipientInfo (i.e. SET OF).\n *\n * @return an array of recipient objects.\n */\nfunction _recipientsFromAsn1(infos) {\n  var ret = [];\n  for(var i = 0; i < infos.length; ++i) {\n    ret.push(_recipientFromAsn1(infos[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of recipient objects to ASN.1 RecipientInfo objects.\n *\n * @param recipients an array of recipientInfo objects.\n *\n * @return an array of ASN.1 RecipientInfos.\n */\nfunction _recipientsToAsn1(recipients) {\n  var ret = [];\n  for(var i = 0; i < recipients.length; ++i) {\n    ret.push(_recipientToAsn1(recipients[i]));\n  }\n  return ret;\n}\n\n/**\n * Converts a single signer from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a SignerInfo.\n *\n * @return the signer object.\n */\nfunction _signerFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.signerInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 SignerInfo. ' +\n      'ASN.1 object is not an PKCS#7 SignerInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var rval = {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    digestAlgorithm: asn1.derToOid(capture.digestAlgorithm),\n    signatureAlgorithm: asn1.derToOid(capture.signatureAlgorithm),\n    signature: capture.signature,\n    authenticatedAttributes: [],\n    unauthenticatedAttributes: []\n  };\n\n  // TODO: convert attributes\n  var authenticatedAttributes = capture.authenticatedAttributes || [];\n  var unauthenticatedAttributes = capture.unauthenticatedAttributes || [];\n\n  return rval;\n}\n\n/**\n * Converts a single signerInfo object to an ASN.1 object.\n *\n * @param obj the signerInfo object.\n *\n * @return the ASN.1 representation of a SignerInfo.\n */\nfunction _signerToAsn1(obj) {\n  // SignerInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // issuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // digestAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.digestAlgorithm).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ])\n  ]);\n\n  // authenticatedAttributes (OPTIONAL)\n  if(obj.authenticatedAttributesAsn1) {\n    // add ASN.1 previously generated during signing\n    rval.value.push(obj.authenticatedAttributesAsn1);\n  }\n\n  // digestEncryptionAlgorithm\n  rval.value.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // algorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(obj.signatureAlgorithm).getBytes()),\n    // parameters (null)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n  ]));\n\n  // encryptedDigest\n  rval.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, obj.signature));\n\n  // unauthenticatedAttributes (OPTIONAL)\n  if(obj.unauthenticatedAttributes.length > 0) {\n    // [1] IMPLICIT\n    var attrsAsn1 = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, []);\n    for(var i = 0; i < obj.unauthenticatedAttributes.length; ++i) {\n      var attr = obj.unauthenticatedAttributes[i];\n      attrsAsn1.values.push(_attributeToAsn1(attr));\n    }\n    rval.value.push(attrsAsn1);\n  }\n\n  return rval;\n}\n\n/**\n * Map a set of SignerInfo ASN.1 objects to an array of signer objects.\n *\n * @param signerInfoAsn1s an array of ASN.1 SignerInfos (i.e. SET OF).\n *\n * @return an array of signers objects.\n */\nfunction _signersFromAsn1(signerInfoAsn1s) {\n  var ret = [];\n  for(var i = 0; i < signerInfoAsn1s.length; ++i) {\n    ret.push(_signerFromAsn1(signerInfoAsn1s[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of signer objects to ASN.1 objects.\n *\n * @param signers an array of signer objects.\n *\n * @return an array of ASN.1 SignerInfos.\n */\nfunction _signersToAsn1(signers) {\n  var ret = [];\n  for(var i = 0; i < signers.length; ++i) {\n    ret.push(_signerToAsn1(signers[i]));\n  }\n  return ret;\n}\n\n/**\n * Convert an attribute object to an ASN.1 Attribute.\n *\n * @param attr the attribute object.\n *\n * @return the ASN.1 Attribute.\n */\nfunction _attributeToAsn1(attr) {\n  var value;\n\n  // TODO: generalize to support more attributes\n  if(attr.type === forge.pki.oids.contentType) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.value).getBytes());\n  } else if(attr.type === forge.pki.oids.messageDigest) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      attr.value.bytes());\n  } else if(attr.type === forge.pki.oids.signingTime) {\n    /* Note per RFC 2985: Dates between 1 January 1950 and 31 December 2049\n      (inclusive) MUST be encoded as UTCTime. Any dates with year values\n      before 1950 or after 2049 MUST be encoded as GeneralizedTime. [Further,]\n      UTCTime values MUST be expressed in Greenwich Mean Time (Zulu) and MUST\n      include seconds (i.e., times are YYMMDDHHMMSSZ), even where the\n      number of seconds is zero.  Midnight (GMT) must be represented as\n      \"YYMMDD000000Z\". */\n    // TODO: make these module-level constants\n    var jan_1_1950 = new Date('1950-01-01T00:00:00Z');\n    var jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n    var date = attr.value;\n    if(typeof date === 'string') {\n      // try to parse date\n      var timestamp = Date.parse(date);\n      if(!isNaN(timestamp)) {\n        date = new Date(timestamp);\n      } else if(date.length === 13) {\n        // YYMMDDHHMMSSZ (13 chars for UTCTime)\n        date = asn1.utcTimeToDate(date);\n      } else {\n        // assume generalized time\n        date = asn1.generalizedTimeToDate(date);\n      }\n    }\n\n    if(date >= jan_1_1950 && date < jan_1_2050) {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n        asn1.dateToUtcTime(date));\n    } else {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n        asn1.dateToGeneralizedTime(date));\n    }\n  }\n\n  // TODO: expose as common API call\n  // create a RelativeDistinguishedName set\n  // each value in the set is an AttributeTypeAndValue first\n  // containing the type (an OID) and second the value\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AttributeType\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.type).getBytes()),\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      // AttributeValue\n      value\n    ])\n  ]);\n}\n\n/**\n * Map messages encrypted content to ASN.1 objects.\n *\n * @param ec The encryptedContent object of the message.\n *\n * @return ASN.1 representation of the encryptedContent object (SEQUENCE).\n */\nfunction _encryptedContentToAsn1(ec) {\n  return [\n    // ContentType, always Data for the moment\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(forge.pki.oids.data).getBytes()),\n    // ContentEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(ec.algorithm).getBytes()),\n      // Parameters (IV)\n      !ec.parameter ?\n        undefined :\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          ec.parameter.getBytes())\n    ]),\n    // [0] EncryptedContent\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n        ec.content.getBytes())\n    ])\n  ];\n}\n\n/**\n * Reads the \"common part\" of an PKCS#7 content block (in ASN.1 format)\n *\n * This function reads the \"common part\" of the PKCS#7 content blocks\n * EncryptedData and EnvelopedData, i.e. version number and symmetrically\n * encrypted content block.\n *\n * The result of the ASN.1 validate and capture process is returned\n * to allow the caller to extract further data, e.g. the list of recipients\n * in case of a EnvelopedData object.\n *\n * @param msg the PKCS#7 object to read the data to.\n * @param obj the ASN.1 representation of the content block.\n * @param validator the ASN.1 structure validator object to use.\n *\n * @return the value map captured by validator object.\n */\nfunction _fromAsn1(msg, obj, validator) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, validator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not a supported PKCS#7 message.');\n    error.errors = error;\n    throw error;\n  }\n\n  // Check contentType, so far we only support (raw) Data.\n  var contentType = asn1.derToOid(capture.contentType);\n  if(contentType !== forge.pki.oids.data) {\n    throw new Error('Unsupported PKCS#7 message. ' +\n      'Only wrapped ContentType Data supported.');\n  }\n\n  if(capture.encryptedContent) {\n    var content = '';\n    if(forge.util.isArray(capture.encryptedContent)) {\n      for(var i = 0; i < capture.encryptedContent.length; ++i) {\n        if(capture.encryptedContent[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting encrypted ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.encryptedContent[i].value;\n      }\n    } else {\n      content = capture.encryptedContent;\n    }\n    msg.encryptedContent = {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: forge.util.createBuffer(capture.encParameter.value),\n      content: forge.util.createBuffer(content)\n    };\n  }\n\n  if(capture.content) {\n    var content = '';\n    if(forge.util.isArray(capture.content)) {\n      for(var i = 0; i < capture.content.length; ++i) {\n        if(capture.content[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.content[i].value;\n      }\n    } else {\n      content = capture.content;\n    }\n    msg.content = forge.util.createBuffer(content);\n  }\n\n  msg.version = capture.version.charCodeAt(0);\n  msg.rawCapture = capture;\n\n  return capture;\n}\n\n/**\n * Decrypt the symmetrically encrypted content block of the PKCS#7 message.\n *\n * Decryption is skipped in case the PKCS#7 message object already has a\n * (decrypted) content attribute.  The algorithm, key and cipher parameters\n * (probably the iv) are taken from the encryptedContent attribute of the\n * message object.\n *\n * @param The PKCS#7 message object.\n */\nfunction _decryptContent(msg) {\n  if(msg.encryptedContent.key === undefined) {\n    throw new Error('Symmetric key not available.');\n  }\n\n  if(msg.content === undefined) {\n    var ciph;\n\n    switch(msg.encryptedContent.algorithm) {\n      case forge.pki.oids['aes128-CBC']:\n      case forge.pki.oids['aes192-CBC']:\n      case forge.pki.oids['aes256-CBC']:\n        ciph = forge.aes.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      case forge.pki.oids['desCBC']:\n      case forge.pki.oids['des-EDE3-CBC']:\n        ciph = forge.des.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      default:\n        throw new Error('Unsupported symmetric cipher, OID ' +\n          msg.encryptedContent.algorithm);\n    }\n    ciph.start(msg.encryptedContent.parameter);\n    ciph.update(msg.encryptedContent.content);\n\n    if(!ciph.finish()) {\n      throw new Error('Symmetric decryption failed.');\n    }\n\n    msg.content = ciph.output;\n  }\n}\n","/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./util');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = module.exports = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\n\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\n\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\n\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\n\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\n\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  },\n  contentInfoValidator,\n  {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\n\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter',\n      optional: true\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};\n","/**\n * Prime number generation API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./jsbn');\nrequire('./random');\n\n(function() {\n\n// forge.prime already defined\nif(forge.prime) {\n  module.exports = forge.prime;\n  return;\n}\n\n/* PRIME API */\nvar prime = module.exports = forge.prime = forge.prime || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n// primes are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\nvar THIRTY = new BigInteger(null);\nTHIRTY.fromInt(30);\nvar op_or = function(x, y) {return x|y;};\n\n/**\n * Generates a random probable prime with the given number of bits.\n *\n * Alternative algorithms can be specified by name as a string or as an\n * object with custom options like so:\n *\n * {\n *   name: 'PRIMEINC',\n *   options: {\n *     maxBlockTime: <the maximum amount of time to block the main\n *       thread before allowing I/O other JS to run>,\n *     millerRabinTests: <the number of miller-rabin tests to run>,\n *     workerScript: <the worker script URL>,\n *     workers: <the number of web workers (if supported) to use,\n *       -1 to use estimated cores minus one>.\n *     workLoad: the size of the work load, ie: number of possible prime\n *       numbers for each web worker to check per work assignment,\n *       (default: 100).\n *   }\n * }\n *\n * @param bits the number of bits for the prime number.\n * @param options the options to use.\n *          [algorithm] the algorithm to use (default: 'PRIMEINC').\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *\n * @return callback(err, num) called once the operation completes.\n */\nprime.generateProbablePrime = function(bits, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // default to PRIMEINC algorithm\n  var algorithm = options.algorithm || 'PRIMEINC';\n  if(typeof algorithm === 'string') {\n    algorithm = {name: algorithm};\n  }\n  algorithm.options = algorithm.options || {};\n\n  // create prng with api that matches BigInteger secure random\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  if(algorithm.name === 'PRIMEINC') {\n    return primeincFindPrime(bits, rng, algorithm.options, callback);\n  }\n\n  throw new Error('Invalid prime generation algorithm: ' + algorithm.name);\n};\n\nfunction primeincFindPrime(bits, rng, options, callback) {\n  if('workers' in options) {\n    return primeincFindPrimeWithWorkers(bits, rng, options, callback);\n  }\n  return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n}\n\nfunction primeincFindPrimeWithoutWorkers(bits, rng, options, callback) {\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  /* Note: All primes are of the form 30k+i for i < 30 and gcd(30, i)=1. The\n  number we are given is always aligned at 30k + 1. Each time the number is\n  determined not to be prime we add to get to the next 'i', eg: if the number\n  was at 30k + 1 we add 6. */\n  var deltaIdx = 0;\n\n  // get required number of MR tests\n  var mrTests = getMillerRabinTests(num.bitLength());\n  if('millerRabinTests' in options) {\n    mrTests = options.millerRabinTests;\n  }\n\n  // find prime nearest to 'num' for maxBlockTime ms\n  // 10 ms gives 5ms of leeway for other calculations before dropping\n  // below 60fps (1000/60 == 16.67), but in reality, the number will\n  // likely be higher due to an 'atomic' big int modPow\n  var maxBlockTime = 10;\n  if('maxBlockTime' in options) {\n    maxBlockTime = options.maxBlockTime;\n  }\n\n  _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n}\n\nfunction _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback) {\n  var start = +new Date();\n  do {\n    // overflow, regenerate random number\n    if(num.bitLength() > bits) {\n      num = generateRandom(bits, rng);\n    }\n    // do primality test\n    if(num.isProbablePrime(mrTests)) {\n      return callback(null, num);\n    }\n    // get next potential prime\n    num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n  } while(maxBlockTime < 0 || (+new Date() - start < maxBlockTime));\n\n  // keep trying later\n  forge.util.setImmediate(function() {\n    _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n  });\n}\n\n// NOTE: This algorithm is indeterminate in nature because workers\n// run in parallel looking at different segments of numbers. Even if this\n// algorithm is run twice with the same input from a predictable RNG, it\n// may produce different outputs.\nfunction primeincFindPrimeWithWorkers(bits, rng, options, callback) {\n  // web workers unavailable\n  if(typeof Worker === 'undefined') {\n    return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n  }\n\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  // use web workers to generate keys\n  var numWorkers = options.workers;\n  var workLoad = options.workLoad || 100;\n  var range = workLoad * 30 / 8;\n  var workerScript = options.workerScript || 'forge/prime.worker.js';\n  if(numWorkers === -1) {\n    return forge.util.estimateCores(function(err, cores) {\n      if(err) {\n        // default to 2\n        cores = 2;\n      }\n      numWorkers = cores - 1;\n      generate();\n    });\n  }\n  generate();\n\n  function generate() {\n    // require at least 1 worker\n    numWorkers = Math.max(1, numWorkers);\n\n    // TODO: consider optimizing by starting workers outside getPrime() ...\n    // note that in order to clean up they will have to be made internally\n    // asynchronous which may actually be slower\n\n    // start workers immediately\n    var workers = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      // FIXME: fix path or use blob URLs\n      workers[i] = new Worker(workerScript);\n    }\n    var running = numWorkers;\n\n    // listen for requests from workers and assign ranges to find prime\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].addEventListener('message', workerMessage);\n    }\n\n    /* Note: The distribution of random numbers is unknown. Therefore, each\n    web worker is continuously allocated a range of numbers to check for a\n    random number until one is found.\n\n    Every 30 numbers will be checked just 8 times, because prime numbers\n    have the form:\n\n    30k+i, for i < 30 and gcd(30, i)=1 (there are 8 values of i for this)\n\n    Therefore, if we want a web worker to run N checks before asking for\n    a new range of numbers, each range must contain N*30/8 numbers.\n\n    For 100 checks (workLoad), this is a range of 375. */\n\n    var found = false;\n    function workerMessage(e) {\n      // ignore message, prime already found\n      if(found) {\n        return;\n      }\n\n      --running;\n      var data = e.data;\n      if(data.found) {\n        // terminate all workers\n        for(var i = 0; i < workers.length; ++i) {\n          workers[i].terminate();\n        }\n        found = true;\n        return callback(null, new BigInteger(data.prime, 16));\n      }\n\n      // overflow, regenerate random number\n      if(num.bitLength() > bits) {\n        num = generateRandom(bits, rng);\n      }\n\n      // assign new range to check\n      var hex = num.toString(16);\n\n      // start prime search\n      e.target.postMessage({\n        hex: hex,\n        workLoad: workLoad\n      });\n\n      num.dAddOffset(range, 0);\n    }\n  }\n}\n\n/**\n * Generates a random number using the given number of bits and RNG.\n *\n * @param bits the number of bits for the number.\n * @param rng the random number generator to use.\n *\n * @return the random number.\n */\nfunction generateRandom(bits, rng) {\n  var num = new BigInteger(bits, rng);\n  // force MSB set\n  var bits1 = bits - 1;\n  if(!num.testBit(bits1)) {\n    num.bitwiseTo(BigInteger.ONE.shiftLeft(bits1), op_or, num);\n  }\n  // align number on 30k+1 boundary\n  num.dAddOffset(31 - num.mod(THIRTY).byteValue(), 0);\n  return num;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n})();\n","/**\n * A javascript implementation of a cryptographically-secure\n * Pseudo Random Number Generator (PRNG). The Fortuna algorithm is followed\n * here though the use of SHA-256 is not enforced; when generating an\n * a PRNG context, the hashing algorithm and block cipher used for\n * the generator are specified via a plugin.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar _crypto = null;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n  !process.versions['node-webkit']) {\n  _crypto = require('crypto');\n}\n\n/* PRNG API */\nvar prng = module.exports = forge.prng = forge.prng || {};\n\n/**\n * Creates a new PRNG context.\n *\n * A PRNG plugin must be passed in that will provide:\n *\n * 1. A function that initializes the key and seed of a PRNG context. It\n *   will be given a 16 byte key and a 16 byte seed. Any key expansion\n *   or transformation of the seed from a byte string into an array of\n *   integers (or similar) should be performed.\n * 2. The cryptographic function used by the generator. It takes a key and\n *   a seed.\n * 3. A seed increment function. It takes the seed and returns seed + 1.\n * 4. An api to create a message digest.\n *\n * For an example, see random.js.\n *\n * @param plugin the PRNG plugin to use.\n */\nprng.create = function(plugin) {\n  var ctx = {\n    plugin: plugin,\n    key: null,\n    seed: null,\n    time: null,\n    // number of reseeds so far\n    reseeds: 0,\n    // amount of data generated so far\n    generated: 0,\n    // no initial key bytes\n    keyBytes: ''\n  };\n\n  // create 32 entropy pools (each is a message digest)\n  var md = plugin.md;\n  var pools = new Array(32);\n  for(var i = 0; i < 32; ++i) {\n    pools[i] = md.create();\n  }\n  ctx.pools = pools;\n\n  // entropy pools are written to cyclically, starting at index 0\n  ctx.pool = 0;\n\n  /**\n   * Generates random bytes. The bytes may be generated synchronously or\n   * asynchronously. Web workers must use the asynchronous interface or\n   * else the behavior is undefined.\n   *\n   * @param count the number of random bytes to generate.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generate = function(count, callback) {\n    // do synchronously\n    if(!callback) {\n      return ctx.generateSync(count);\n    }\n\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n    var b = forge.util.createBuffer();\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generate` call\n    ctx.key = null;\n\n    generate();\n\n    function generate(err) {\n      if(err) {\n        return callback(err);\n      }\n\n      // sufficient bytes generated\n      if(b.length() >= count) {\n        return callback(null, b.getBytes(count));\n      }\n\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        // prevent stack overflow\n        return forge.util.nextTick(function() {\n          _reseed(generate);\n        });\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n\n      forge.util.setImmediate(generate);\n    }\n  };\n\n  /**\n   * Generates random bytes synchronously.\n   *\n   * @param count the number of random bytes to generate.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generateSync = function(count) {\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generateSync` call\n    ctx.key = null;\n\n    var b = forge.util.createBuffer();\n    while(b.length() < count) {\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        _reseedSync();\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n    }\n\n    return b.getBytes(count);\n  };\n\n  /**\n   * Private function that asynchronously reseeds a generator.\n   *\n   * @param callback(err) called once the operation completes.\n   */\n  function _reseed(callback) {\n    if(ctx.pools[0].messageLength >= 32) {\n      _seed();\n      return callback();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.seedFile(needed, function(err, bytes) {\n      if(err) {\n        return callback(err);\n      }\n      ctx.collect(bytes);\n      _seed();\n      callback();\n    });\n  }\n\n  /**\n   * Private function that synchronously reseeds a generator.\n   */\n  function _reseedSync() {\n    if(ctx.pools[0].messageLength >= 32) {\n      return _seed();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.collect(ctx.seedFileSync(needed));\n    _seed();\n  }\n\n  /**\n   * Private function that seeds a generator once enough bytes are available.\n   */\n  function _seed() {\n    // update reseed count\n    ctx.reseeds = (ctx.reseeds === 0xffffffff) ? 0 : ctx.reseeds + 1;\n\n    // goal is to update `key` via:\n    // key = hash(key + s)\n    //   where 's' is all collected entropy from selected pools, then...\n\n    // create a plugin-based message digest\n    var md = ctx.plugin.md.create();\n\n    // consume current key bytes\n    md.update(ctx.keyBytes);\n\n    // digest the entropy of pools whose index k meet the\n    // condition 'n mod 2^k == 0' where n is the number of reseeds\n    var _2powK = 1;\n    for(var k = 0; k < 32; ++k) {\n      if(ctx.reseeds % _2powK === 0) {\n        md.update(ctx.pools[k].digest().getBytes());\n        ctx.pools[k].start();\n      }\n      _2powK = _2powK << 1;\n    }\n\n    // get digest for key bytes\n    ctx.keyBytes = md.digest().getBytes();\n\n    // paranoid deviation from Fortuna:\n    // update `seed` via `seed = hash(key)`\n    // instead of initializing to zero once and only\n    // ever incrementing it\n    md.start();\n    md.update(ctx.keyBytes);\n    var seedBytes = md.digest().getBytes();\n\n    // update state\n    ctx.key = ctx.plugin.formatKey(ctx.keyBytes);\n    ctx.seed = ctx.plugin.formatSeed(seedBytes);\n    ctx.generated = 0;\n  }\n\n  /**\n   * The built-in default seedFile. This seedFile is used when entropy\n   * is needed immediately.\n   *\n   * @param needed the number of bytes that are needed.\n   *\n   * @return the random bytes.\n   */\n  function defaultSeedFile(needed) {\n    // use window.crypto.getRandomValues strong source of entropy if available\n    var getRandomValues = null;\n    var globalScope = forge.util.globalScope;\n    var _crypto = globalScope.crypto || globalScope.msCrypto;\n    if(_crypto && _crypto.getRandomValues) {\n      getRandomValues = function(arr) {\n        return _crypto.getRandomValues(arr);\n      };\n    }\n\n    var b = forge.util.createBuffer();\n    if(getRandomValues) {\n      while(b.length() < needed) {\n        // max byte length is 65536 before QuotaExceededError is thrown\n        // http://www.w3.org/TR/WebCryptoAPI/#RandomSource-method-getRandomValues\n        var count = Math.max(1, Math.min(needed - b.length(), 65536) / 4);\n        var entropy = new Uint32Array(Math.floor(count));\n        try {\n          getRandomValues(entropy);\n          for(var i = 0; i < entropy.length; ++i) {\n            b.putInt32(entropy[i]);\n          }\n        } catch(e) {\n          /* only ignore QuotaExceededError */\n          if(!(typeof QuotaExceededError !== 'undefined' &&\n            e instanceof QuotaExceededError)) {\n            throw e;\n          }\n        }\n      }\n    }\n\n    // be sad and add some weak random data\n    if(b.length() < needed) {\n      /* Draws from Park-Miller \"minimal standard\" 31 bit PRNG,\n      implemented with David G. Carta's optimization: with 32 bit math\n      and without division (Public Domain). */\n      var hi, lo, next;\n      var seed = Math.floor(Math.random() * 0x010000);\n      while(b.length() < needed) {\n        lo = 16807 * (seed & 0xFFFF);\n        hi = 16807 * (seed >> 16);\n        lo += (hi & 0x7FFF) << 16;\n        lo += hi >> 15;\n        lo = (lo & 0x7FFFFFFF) + (lo >> 31);\n        seed = lo & 0xFFFFFFFF;\n\n        // consume lower 3 bytes of seed\n        for(var i = 0; i < 3; ++i) {\n          // throw in more pseudo random\n          next = seed >>> (i << 3);\n          next ^= Math.floor(Math.random() * 0x0100);\n          b.putByte(next & 0xFF);\n        }\n      }\n    }\n\n    return b.getBytes(needed);\n  }\n  // initialize seed file APIs\n  if(_crypto) {\n    // use nodejs async API\n    ctx.seedFile = function(needed, callback) {\n      _crypto.randomBytes(needed, function(err, bytes) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, bytes.toString());\n      });\n    };\n    // use nodejs sync API\n    ctx.seedFileSync = function(needed) {\n      return _crypto.randomBytes(needed).toString();\n    };\n  } else {\n    ctx.seedFile = function(needed, callback) {\n      try {\n        callback(null, defaultSeedFile(needed));\n      } catch(e) {\n        callback(e);\n      }\n    };\n    ctx.seedFileSync = defaultSeedFile;\n  }\n\n  /**\n   * Adds entropy to a prng ctx's accumulator.\n   *\n   * @param bytes the bytes of entropy as a string.\n   */\n  ctx.collect = function(bytes) {\n    // iterate over pools distributing entropy cyclically\n    var count = bytes.length;\n    for(var i = 0; i < count; ++i) {\n      ctx.pools[ctx.pool].update(bytes.substr(i, 1));\n      ctx.pool = (ctx.pool === 31) ? 0 : ctx.pool + 1;\n    }\n  };\n\n  /**\n   * Collects an integer of n bits.\n   *\n   * @param i the integer entropy.\n   * @param n the number of bits in the integer.\n   */\n  ctx.collectInt = function(i, n) {\n    var bytes = '';\n    for(var x = 0; x < n; x += 8) {\n      bytes += String.fromCharCode((i >> x) & 0xFF);\n    }\n    ctx.collect(bytes);\n  };\n\n  /**\n   * Registers a Web Worker to receive immediate entropy from the main thread.\n   * This method is required until Web Workers can access the native crypto\n   * API. This method should be called twice for each created worker, once in\n   * the main thread, and once in the worker itself.\n   *\n   * @param worker the worker to register.\n   */\n  ctx.registerWorker = function(worker) {\n    // worker receives random bytes\n    if(worker === self) {\n      ctx.seedFile = function(needed, callback) {\n        function listener(e) {\n          var data = e.data;\n          if(data.forge && data.forge.prng) {\n            self.removeEventListener('message', listener);\n            callback(data.forge.prng.err, data.forge.prng.bytes);\n          }\n        }\n        self.addEventListener('message', listener);\n        self.postMessage({forge: {prng: {needed: needed}}});\n      };\n    } else {\n      // main thread sends random bytes upon request\n      var listener = function(e) {\n        var data = e.data;\n        if(data.forge && data.forge.prng) {\n          ctx.seedFile(data.forge.prng.needed, function(err, bytes) {\n            worker.postMessage({forge: {prng: {err: err, bytes: bytes}}});\n          });\n        }\n      };\n      // TODO: do we need to remove the event listener when the worker dies?\n      worker.addEventListener('message', listener);\n    }\n  };\n\n  return ctx;\n};\n","/**\n * Javascript implementation of PKCS#1 PSS signature padding.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./random');\nrequire('./util');\n\n// shortcut for PSS API\nvar pss = module.exports = forge.pss = forge.pss || {};\n\n/**\n * Creates a PSS signature scheme object.\n *\n * There are several ways to provide a salt for encoding:\n *\n * 1. Specify the saltLength only and the built-in PRNG will generate it.\n * 2. Specify the saltLength and a custom PRNG with 'getBytesSync' defined that\n *   will be used.\n * 3. Specify the salt itself as a forge.util.ByteBuffer.\n *\n * @param options the options to use:\n *          md the message digest object to use, a forge md instance.\n *          mgf the mask generation function to use, a forge mgf instance.\n *          [saltLength] the length of the salt in octets.\n *          [prng] the pseudo-random number generator to use to produce a salt.\n *          [salt] the salt to use when encoding.\n *\n * @return a signature scheme object.\n */\npss.create = function(options) {\n  // backwards compatibility w/legacy args: hash, mgf, sLen\n  if(arguments.length === 3) {\n    options = {\n      md: arguments[0],\n      mgf: arguments[1],\n      saltLength: arguments[2]\n    };\n  }\n\n  var hash = options.md;\n  var mgf = options.mgf;\n  var hLen = hash.digestLength;\n\n  var salt_ = options.salt || null;\n  if(typeof salt_ === 'string') {\n    // assume binary-encoded string\n    salt_ = forge.util.createBuffer(salt_);\n  }\n\n  var sLen;\n  if('saltLength' in options) {\n    sLen = options.saltLength;\n  } else if(salt_ !== null) {\n    sLen = salt_.length();\n  } else {\n    throw new Error('Salt length not specified or specific salt not given.');\n  }\n\n  if(salt_ !== null && salt_.length() !== sLen) {\n    throw new Error('Given salt length does not match length of given salt.');\n  }\n\n  var prng = options.prng || forge.random;\n\n  var pssobj = {};\n\n  /**\n   * Encodes a PSS signature.\n   *\n   * This function implements EMSA-PSS-ENCODE as per RFC 3447, section 9.1.1.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return the encoded message as a binary-encoded string of length\n   *           ceil((modBits - 1) / 8).\n   */\n  pssobj.encode = function(md, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* 2. Let mHash = Hash(M), an octet string of length hLen. */\n    var mHash = md.digest().getBytes();\n\n    /* 3. If emLen < hLen + sLen + 2, output \"encoding error\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Message is too long to encrypt.');\n    }\n\n    /* 4. Generate a random octet string salt of length sLen; if sLen = 0,\n     *    then salt is the empty string. */\n    var salt;\n    if(salt_ === null) {\n      salt = prng.getBytesSync(sLen);\n    } else {\n      salt = salt_.bytes();\n    }\n\n    /* 5. Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt; */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 6. Let H = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h = hash.digest().getBytes();\n\n    /* 7. Generate an octet string PS consisting of emLen - sLen - hLen - 2\n     *    zero octets.  The length of PS may be 0. */\n    var ps = new forge.util.ByteBuffer();\n    ps.fillWithByte(0, emLen - sLen - hLen - 2);\n\n    /* 8. Let DB = PS || 0x01 || salt; DB is an octet string of length\n     *    emLen - hLen - 1. */\n    ps.putByte(0x01);\n    ps.putBytes(salt);\n    var db = ps.getBytes();\n\n    /* 9. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var maskLen = emLen - hLen - 1;\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 10. Let maskedDB = DB \\xor dbMask. */\n    var maskedDB = '';\n    for(i = 0; i < maskLen; i++) {\n      maskedDB += String.fromCharCode(db.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 11. Set the leftmost 8emLen - emBits bits of the leftmost octet in\n     *     maskedDB to zero. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    maskedDB = String.fromCharCode(maskedDB.charCodeAt(0) & ~mask) +\n      maskedDB.substr(1);\n\n    /* 12. Let EM = maskedDB || H || 0xbc.\n     * 13. Output EM. */\n    return maskedDB + h + String.fromCharCode(0xbc);\n  };\n\n  /**\n   * Verifies a PSS signature.\n   *\n   * This function implements EMSA-PSS-VERIFY as per RFC 3447, section 9.1.2.\n   *\n   * @param mHash the message digest hash, as a binary-encoded string, to\n   *         compare against the signature.\n   * @param em the encoded message, as a binary-encoded string\n   *          (RSA decryption result).\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  pssobj.verify = function(mHash, em, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* c. Convert the message representative m to an encoded message EM\n     *    of length emLen = ceil((modBits - 1) / 8) octets, where modBits\n     *    is the length in bits of the RSA modulus n */\n    em = em.substr(-emLen);\n\n    /* 3. If emLen < hLen + sLen + 2, output \"inconsistent\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Inconsistent parameters to PSS signature verification.');\n    }\n\n    /* 4. If the rightmost octet of EM does not have hexadecimal value\n     *    0xbc, output \"inconsistent\" and stop. */\n    if(em.charCodeAt(emLen - 1) !== 0xbc) {\n      throw new Error('Encoded message does not end in 0xBC.');\n    }\n\n    /* 5. Let maskedDB be the leftmost emLen - hLen - 1 octets of EM, and\n     *    let H be the next hLen octets. */\n    var maskLen = emLen - hLen - 1;\n    var maskedDB = em.substr(0, maskLen);\n    var h = em.substr(maskLen, hLen);\n\n    /* 6. If the leftmost 8emLen - emBits bits of the leftmost octet in\n     *    maskedDB are not all equal to zero, output \"inconsistent\" and stop. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    if((maskedDB.charCodeAt(0) & mask) !== 0) {\n      throw new Error('Bits beyond keysize not zero as expected.');\n    }\n\n    /* 7. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 8. Let DB = maskedDB \\xor dbMask. */\n    var db = '';\n    for(i = 0; i < maskLen; i++) {\n      db += String.fromCharCode(maskedDB.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 9. Set the leftmost 8emLen - emBits bits of the leftmost octet\n     * in DB to zero. */\n    db = String.fromCharCode(db.charCodeAt(0) & ~mask) + db.substr(1);\n\n    /* 10. If the emLen - hLen - sLen - 2 leftmost octets of DB are not zero\n     * or if the octet at position emLen - hLen - sLen - 1 (the leftmost\n     * position is \"position 1\") does not have hexadecimal value 0x01,\n     * output \"inconsistent\" and stop. */\n    var checkLen = emLen - hLen - sLen - 2;\n    for(i = 0; i < checkLen; i++) {\n      if(db.charCodeAt(i) !== 0x00) {\n        throw new Error('Leftmost octets not zero as expected');\n      }\n    }\n\n    if(db.charCodeAt(checkLen) !== 0x01) {\n      throw new Error('Inconsistent PSS signature, 0x01 marker not found');\n    }\n\n    /* 11. Let salt be the last sLen octets of DB. */\n    var salt = db.substr(-sLen);\n\n    /* 12.  Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 13. Let H' = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h_ = hash.digest().getBytes();\n\n    /* 14. If H = H', output \"consistent.\" Otherwise, output \"inconsistent.\" */\n    return h === h_;\n  };\n\n  return pssobj;\n};\n","/**\n * An API for getting cryptographically-secure random bytes. The bytes are\n * generated using the Fortuna algorithm devised by Bruce Schneier and\n * Niels Ferguson.\n *\n * Getting strong random bytes is not yet easy to do in javascript. The only\n * truish random entropy that can be collected is from the mouse, keyboard, or\n * from timing with respect to page loads, etc. This generator makes a poor\n * attempt at providing random bytes when those sources haven't yet provided\n * enough entropy to initially seed or to reseed the PRNG.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./sha256');\nrequire('./prng');\nrequire('./util');\n\n(function() {\n\n// forge.random already defined\nif(forge.random && forge.random.getBytes) {\n  module.exports = forge.random;\n  return;\n}\n\n(function(jQuery) {\n\n// the default prng plugin, uses AES-128\nvar prng_aes = {};\nvar _prng_aes_output = new Array(4);\nvar _prng_aes_buffer = forge.util.createBuffer();\nprng_aes.formatKey = function(key) {\n  // convert the key into 32-bit integers\n  var tmp = forge.util.createBuffer(key);\n  key = new Array(4);\n  key[0] = tmp.getInt32();\n  key[1] = tmp.getInt32();\n  key[2] = tmp.getInt32();\n  key[3] = tmp.getInt32();\n\n  // return the expanded key\n  return forge.aes._expandKey(key, false);\n};\nprng_aes.formatSeed = function(seed) {\n  // convert seed into 32-bit integers\n  var tmp = forge.util.createBuffer(seed);\n  seed = new Array(4);\n  seed[0] = tmp.getInt32();\n  seed[1] = tmp.getInt32();\n  seed[2] = tmp.getInt32();\n  seed[3] = tmp.getInt32();\n  return seed;\n};\nprng_aes.cipher = function(key, seed) {\n  forge.aes._updateBlock(key, seed, _prng_aes_output, false);\n  _prng_aes_buffer.putInt32(_prng_aes_output[0]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[1]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[2]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[3]);\n  return _prng_aes_buffer.getBytes();\n};\nprng_aes.increment = function(seed) {\n  // FIXME: do we care about carry or signed issues?\n  ++seed[3];\n  return seed;\n};\nprng_aes.md = forge.md.sha256;\n\n/**\n * Creates a new PRNG.\n */\nfunction spawnPrng() {\n  var ctx = forge.prng.create(prng_aes);\n\n  /**\n   * Gets random bytes. If a native secure crypto API is unavailable, this\n   * method tries to make the bytes more unpredictable by drawing from data that\n   * can be collected from the user of the browser, eg: mouse movement.\n   *\n   * If a callback is given, this method will be called asynchronously.\n   *\n   * @param count the number of random bytes to get.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytes = function(count, callback) {\n    return ctx.generate(count, callback);\n  };\n\n  /**\n   * Gets random bytes asynchronously. If a native secure crypto API is\n   * unavailable, this method tries to make the bytes more unpredictable by\n   * drawing from data that can be collected from the user of the browser,\n   * eg: mouse movement.\n   *\n   * @param count the number of random bytes to get.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytesSync = function(count) {\n    return ctx.generate(count);\n  };\n\n  return ctx;\n}\n\n// create default prng context\nvar _ctx = spawnPrng();\n\n// add other sources of entropy only if window.crypto.getRandomValues is not\n// available -- otherwise this source will be automatically used by the prng\nvar getRandomValues = null;\nvar globalScope = forge.util.globalScope;\nvar _crypto = globalScope.crypto || globalScope.msCrypto;\nif(_crypto && _crypto.getRandomValues) {\n  getRandomValues = function(arr) {\n    return _crypto.getRandomValues(arr);\n  };\n}\n\nif(forge.options.usePureJavaScript ||\n  (!forge.util.isNodejs && !getRandomValues)) {\n  // if this is a web worker, do not use weak entropy, instead register to\n  // receive strong entropy asynchronously from the main thread\n  if(typeof window === 'undefined' || window.document === undefined) {\n    // FIXME:\n  }\n\n  // get load time entropy\n  _ctx.collectInt(+new Date(), 32);\n\n  // add some entropy from navigator object\n  if(typeof(navigator) !== 'undefined') {\n    var _navBytes = '';\n    for(var key in navigator) {\n      try {\n        if(typeof(navigator[key]) == 'string') {\n          _navBytes += navigator[key];\n        }\n      } catch(e) {\n        /* Some navigator keys might not be accessible, e.g. the geolocation\n          attribute throws an exception if touched in Mozilla chrome://\n          context.\n\n          Silently ignore this and just don't use this as a source of\n          entropy. */\n      }\n    }\n    _ctx.collect(_navBytes);\n    _navBytes = null;\n  }\n\n  // add mouse and keyboard collectors if jquery is available\n  if(jQuery) {\n    // set up mouse entropy capture\n    jQuery().mousemove(function(e) {\n      // add mouse coords\n      _ctx.collectInt(e.clientX, 16);\n      _ctx.collectInt(e.clientY, 16);\n    });\n\n    // set up keyboard entropy capture\n    jQuery().keypress(function(e) {\n      _ctx.collectInt(e.charCode, 8);\n    });\n  }\n}\n\n/* Random API */\nif(!forge.random) {\n  forge.random = _ctx;\n} else {\n  // extend forge.random with _ctx\n  for(var key in _ctx) {\n    forge.random[key] = _ctx[key];\n  }\n}\n\n// expose spawn PRNG\nforge.random.createInstance = spawnPrng;\n\nmodule.exports = forge.random;\n\n})(typeof(jQuery) !== 'undefined' ? jQuery : null);\n\n})();\n","/**\n * RC2 implementation.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * Information on the RC2 cipher is available from RFC #2268,\n * http://www.ietf.org/rfc/rfc2268.txt\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar piTable = [\n  0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed, 0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\n  0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e, 0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\n  0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13, 0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\n  0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b, 0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\n  0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c, 0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\n  0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1, 0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\n  0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57, 0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\n  0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7, 0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\n  0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7, 0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\n  0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74, 0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\n  0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc, 0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\n  0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a, 0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\n  0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae, 0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\n  0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c, 0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\n  0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0, 0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\n  0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77, 0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\n];\n\nvar s = [1, 2, 3, 5];\n\n/**\n * Rotate a word left by given number of bits.\n *\n * Bits that are shifted out on the left are put back in on the right\n * hand side.\n *\n * @param word The word to shift left.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar rol = function(word, bits) {\n  return ((word << bits) & 0xffff) | ((word & 0xffff) >> (16 - bits));\n};\n\n/**\n * Rotate a word right by given number of bits.\n *\n * Bits that are shifted out on the right are put back in on the left\n * hand side.\n *\n * @param word The word to shift right.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar ror = function(word, bits) {\n  return ((word & 0xffff) >> bits) | ((word << (16 - bits)) & 0xffff);\n};\n\n/* RC2 API */\nmodule.exports = forge.rc2 = forge.rc2 || {};\n\n/**\n * Perform RC2 key expansion as per RFC #2268, section 2.\n *\n * @param key variable-length user key (between 1 and 128 bytes)\n * @param effKeyBits number of effective key bits (default: 128)\n * @return the expanded RC2 key (ByteBuffer of 128 bytes)\n */\nforge.rc2.expandKey = function(key, effKeyBits) {\n  if(typeof key === 'string') {\n    key = forge.util.createBuffer(key);\n  }\n  effKeyBits = effKeyBits || 128;\n\n  /* introduce variables that match the names used in RFC #2268 */\n  var L = key;\n  var T = key.length();\n  var T1 = effKeyBits;\n  var T8 = Math.ceil(T1 / 8);\n  var TM = 0xff >> (T1 & 0x07);\n  var i;\n\n  for(i = T; i < 128; i++) {\n    L.putByte(piTable[(L.at(i - 1) + L.at(i - T)) & 0xff]);\n  }\n\n  L.setAt(128 - T8, piTable[L.at(128 - T8) & TM]);\n\n  for(i = 127 - T8; i >= 0; i--) {\n    L.setAt(i, piTable[L.at(i + 1) ^ L.at(i + T8)]);\n  }\n\n  return L;\n};\n\n/**\n * Creates a RC2 cipher object.\n *\n * @param key the symmetric key to use (as base for key generation).\n * @param bits the number of effective key bits.\n * @param encrypt false for decryption, true for encryption.\n *\n * @return the cipher.\n */\nvar createCipher = function(key, bits, encrypt) {\n  var _finish = false, _input = null, _output = null, _iv = null;\n  var mixRound, mashRound;\n  var i, j, K = [];\n\n  /* Expand key and fill into K[] Array */\n  key = forge.rc2.expandKey(key, bits);\n  for(i = 0; i < 64; i++) {\n    K.push(key.getInt16Le());\n  }\n\n  if(encrypt) {\n    /**\n     * Perform one mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        R[i] = rol(R[i], s[i]);\n        j++;\n      }\n    };\n\n    /**\n     * Perform one mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[R[(i + 3) % 4] & 63];\n      }\n    };\n  } else {\n    /**\n     * Perform one r-mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] = ror(R[i], s[i]);\n        R[i] -= K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        j--;\n      }\n    };\n\n    /**\n     * Perform one r-mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] -= K[R[(i + 3) % 4] & 63];\n      }\n    };\n  }\n\n  /**\n   * Run the specified cipher execution plan.\n   *\n   * This function takes four words from the input buffer, applies the IV on\n   * it (if requested) and runs the provided execution plan.\n   *\n   * The plan must be put together in form of a array of arrays.  Where the\n   * outer one is simply a list of steps to perform and the inner one needs\n   * to have two elements: the first one telling how many rounds to perform,\n   * the second one telling what to do (i.e. the function to call).\n   *\n   * @param {Array} plan The plan to execute.\n   */\n  var runPlan = function(plan) {\n    var R = [];\n\n    /* Get data from input buffer and fill the four words into R */\n    for(i = 0; i < 4; i++) {\n      var val = _input.getInt16Le();\n\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting, apply the IV first. */\n          val ^= _iv.getInt16Le();\n        } else {\n          /* We're decryption, keep cipher text for next block. */\n          _iv.putInt16Le(val);\n        }\n      }\n\n      R.push(val & 0xffff);\n    }\n\n    /* Reset global \"j\" variable as per spec. */\n    j = encrypt ? 0 : 63;\n\n    /* Run execution plan. */\n    for(var ptr = 0; ptr < plan.length; ptr++) {\n      for(var ctr = 0; ctr < plan[ptr][0]; ctr++) {\n        plan[ptr][1](R);\n      }\n    }\n\n    /* Write back result to output buffer. */\n    for(i = 0; i < 4; i++) {\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting in CBC-mode, feed back encrypted bytes into\n             IV buffer to carry it forward to next block. */\n          _iv.putInt16Le(R[i]);\n        } else {\n          R[i] ^= _iv.getInt16Le();\n        }\n      }\n\n      _output.putInt16Le(R[i]);\n    }\n  };\n\n  /* Create cipher object */\n  var cipher = null;\n  cipher = {\n    /**\n     * Starts or restarts the encryption or decryption process, whichever\n     * was previously configured.\n     *\n     * To use the cipher in CBC mode, iv may be given either as a string\n     * of bytes, or as a byte buffer.  For ECB mode, give null as iv.\n     *\n     * @param iv the initialization vector to use, null for ECB mode.\n     * @param output the output the buffer to write to, null to create one.\n     */\n    start: function(iv, output) {\n      if(iv) {\n        /* CBC mode */\n        if(typeof iv === 'string') {\n          iv = forge.util.createBuffer(iv);\n        }\n      }\n\n      _finish = false;\n      _input = forge.util.createBuffer();\n      _output = output || new forge.util.createBuffer();\n      _iv = iv;\n\n      cipher.output = _output;\n    },\n\n    /**\n     * Updates the next block.\n     *\n     * @param input the buffer to read from.\n     */\n    update: function(input) {\n      if(!_finish) {\n        // not finishing, so fill the input buffer with more input\n        _input.putBuffer(input);\n      }\n\n      while(_input.length() >= 8) {\n        runPlan([\n            [ 5, mixRound ],\n            [ 1, mashRound ],\n            [ 6, mixRound ],\n            [ 1, mashRound ],\n            [ 5, mixRound ]\n          ]);\n      }\n    },\n\n    /**\n     * Finishes encrypting or decrypting.\n     *\n     * @param pad a padding function to use, null for PKCS#7 padding,\n     *           signature(blockSize, buffer, decrypt).\n     *\n     * @return true if successful, false on error.\n     */\n    finish: function(pad) {\n      var rval = true;\n\n      if(encrypt) {\n        if(pad) {\n          rval = pad(8, _input, !encrypt);\n        } else {\n          // add PKCS#7 padding to block (each pad byte is the\n          // value of the number of pad bytes)\n          var padding = (_input.length() === 8) ? 8 : (8 - _input.length());\n          _input.fillWithByte(padding, padding);\n        }\n      }\n\n      if(rval) {\n        // do final update\n        _finish = true;\n        cipher.update();\n      }\n\n      if(!encrypt) {\n        // check for error: input data not a multiple of block size\n        rval = (_input.length() === 0);\n        if(rval) {\n          if(pad) {\n            rval = pad(8, _output, !encrypt);\n          } else {\n            // ensure padding byte count is valid\n            var len = _output.length();\n            var count = _output.at(len - 1);\n\n            if(count > len) {\n              rval = false;\n            } else {\n              // trim off padding bytes\n              _output.truncate(count);\n            }\n          }\n        }\n      }\n\n      return rval;\n    }\n  };\n\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startEncrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createEncryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start encrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createEncryptionCipher = function(key, bits) {\n  return createCipher(key, bits, true);\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startDecrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createDecryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start decrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createDecryptionCipher = function(key, bits) {\n  return createCipher(key, bits, false);\n};\n","/**\n * Javascript implementation of basic RSA algorithms.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The only algorithm currently supported for PKI is RSA.\n *\n * An RSA key is often stored in ASN.1 DER format. The SubjectPublicKeyInfo\n * ASN.1 structure is composed of an algorithm of type AlgorithmIdentifier\n * and a subjectPublicKey of type bit string.\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of RSA, there aren't any.\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm AlgorithmIdentifier,\n *   subjectPublicKey BIT STRING\n * }\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * For an RSA public key, the subjectPublicKey is:\n *\n * RSAPublicKey ::= SEQUENCE {\n *   modulus            INTEGER,    -- n\n *   publicExponent     INTEGER     -- e\n * }\n *\n * PrivateKeyInfo ::= SEQUENCE {\n *   version                   Version,\n *   privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,\n *   privateKey                PrivateKey,\n *   attributes           [0]  IMPLICIT Attributes OPTIONAL\n * }\n *\n * Version ::= INTEGER\n * PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier\n * PrivateKey ::= OCTET STRING\n * Attributes ::= SET OF Attribute\n *\n * An RSA private key as the following structure:\n *\n * RSAPrivateKey ::= SEQUENCE {\n *   version Version,\n *   modulus INTEGER, -- n\n *   publicExponent INTEGER, -- e\n *   privateExponent INTEGER, -- d\n *   prime1 INTEGER, -- p\n *   prime2 INTEGER, -- q\n *   exponent1 INTEGER, -- d mod (p-1)\n *   exponent2 INTEGER, -- d mod (q-1)\n *   coefficient INTEGER -- (inverse of q) mod p\n * }\n *\n * Version ::= INTEGER\n *\n * The OID for the RSA key algorithm is: 1.2.840.113549.1.1.1\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./jsbn');\nrequire('./oids');\nrequire('./pkcs1');\nrequire('./prime');\nrequire('./random');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar _crypto = forge.util.isNodejs ? require('crypto') : null;\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for util API\nvar util = forge.util;\n\n/*\n * RSA encryption and decryption, see RFC 2313.\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.rsa = forge.rsa = forge.rsa || {};\nvar pki = forge.pki;\n\n// for finding primes, which are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\n\n// validator for a PrivateKeyInfo structure\nvar privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\n// validator for an RSA private key\nvar rsaPrivateKeyValidator = {\n  // RSAPrivateKey\n  name: 'RSAPrivateKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'RSAPrivateKey.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // modulus (n)\n    name: 'RSAPrivateKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPrivateKey.publicExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPublicExponent'\n  }, {\n    // privateExponent (d)\n    name: 'RSAPrivateKey.privateExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrivateExponent'\n  }, {\n    // prime1 (p)\n    name: 'RSAPrivateKey.prime1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime1'\n  }, {\n    // prime2 (q)\n    name: 'RSAPrivateKey.prime2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime2'\n  }, {\n    // exponent1 (d mod (p-1))\n    name: 'RSAPrivateKey.exponent1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent1'\n  }, {\n    // exponent2 (d mod (q-1))\n    name: 'RSAPrivateKey.exponent2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent2'\n  }, {\n    // coefficient ((inverse of q) mod p)\n    name: 'RSAPrivateKey.coefficient',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyCoefficient'\n  }]\n};\n\n// validator for an RSA public key\nvar rsaPublicKeyValidator = {\n  // RSAPublicKey\n  name: 'RSAPublicKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // modulus (n)\n    name: 'RSAPublicKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPublicKey.exponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyExponent'\n  }]\n};\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  }, {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  }]\n};\n\n// validator for a DigestInfo structure\nvar digestInfoValidator = {\n  name: 'DigestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'DigestInfo.DigestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'DigestInfo.DigestAlgorithm.algorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'algorithmIdentifier'\n    }, {\n      // NULL paramters\n      name: 'DigestInfo.DigestAlgorithm.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.NULL,\n      // captured only to check existence for md2 and md5\n      capture: 'parameters',\n      optional: true,\n      constructed: false\n    }]\n  }, {\n    // digest\n    name: 'DigestInfo.digest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'digest'\n  }]\n};\n\n/**\n * Wrap digest in DigestInfo object.\n *\n * This function implements EMSA-PKCS1-v1_5-ENCODE as per RFC 3447.\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n * Digest ::= OCTET STRING\n *\n * @param md the message digest object with the hash to sign.\n *\n * @return the encoded message (ready for RSA encrytion)\n */\nvar emsaPkcs1v15encode = function(md) {\n  // get the oid for the algorithm\n  var oid;\n  if(md.algorithm in pki.oids) {\n    oid = pki.oids[md.algorithm];\n  } else {\n    var error = new Error('Unknown message digest algorithm.');\n    error.algorithm = md.algorithm;\n    throw error;\n  }\n  var oidBytes = asn1.oidToDer(oid).getBytes();\n\n  // create the digest info\n  var digestInfo = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  var digestAlgorithm = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false, oidBytes));\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.NULL, false, ''));\n  var digest = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n    false, md.digest().getBytes());\n  digestInfo.value.push(digestAlgorithm);\n  digestInfo.value.push(digest);\n\n  // encode digest info\n  return asn1.toDer(digestInfo).getBytes();\n};\n\n/**\n * Performs x^c mod n (RSA encryption or decryption operation).\n *\n * @param x the number to raise and mod.\n * @param key the key to use.\n * @param pub true if the key is public, false if private.\n *\n * @return the result of x^c mod n.\n */\nvar _modPow = function(x, key, pub) {\n  if(pub) {\n    return x.modPow(key.e, key.n);\n  }\n\n  if(!key.p || !key.q) {\n    // allow calculation without CRT params (slow)\n    return x.modPow(key.d, key.n);\n  }\n\n  // pre-compute dP, dQ, and qInv if necessary\n  if(!key.dP) {\n    key.dP = key.d.mod(key.p.subtract(BigInteger.ONE));\n  }\n  if(!key.dQ) {\n    key.dQ = key.d.mod(key.q.subtract(BigInteger.ONE));\n  }\n  if(!key.qInv) {\n    key.qInv = key.q.modInverse(key.p);\n  }\n\n  /* Chinese remainder theorem (CRT) states:\n\n    Suppose n1, n2, ..., nk are positive integers which are pairwise\n    coprime (n1 and n2 have no common factors other than 1). For any\n    integers x1, x2, ..., xk there exists an integer x solving the\n    system of simultaneous congruences (where ~= means modularly\n    congruent so a ~= b mod n means a mod n = b mod n):\n\n    x ~= x1 mod n1\n    x ~= x2 mod n2\n    ...\n    x ~= xk mod nk\n\n    This system of congruences has a single simultaneous solution x\n    between 0 and n - 1. Furthermore, each xk solution and x itself\n    is congruent modulo the product n = n1*n2*...*nk.\n    So x1 mod n = x2 mod n = xk mod n = x mod n.\n\n    The single simultaneous solution x can be solved with the following\n    equation:\n\n    x = sum(xi*ri*si) mod n where ri = n/ni and si = ri^-1 mod ni.\n\n    Where x is less than n, xi = x mod ni.\n\n    For RSA we are only concerned with k = 2. The modulus n = pq, where\n    p and q are coprime. The RSA decryption algorithm is:\n\n    y = x^d mod n\n\n    Given the above:\n\n    x1 = x^d mod p\n    r1 = n/p = q\n    s1 = q^-1 mod p\n    x2 = x^d mod q\n    r2 = n/q = p\n    s2 = p^-1 mod q\n\n    So y = (x1r1s1 + x2r2s2) mod n\n         = ((x^d mod p)q(q^-1 mod p) + (x^d mod q)p(p^-1 mod q)) mod n\n\n    According to Fermat's Little Theorem, if the modulus P is prime,\n    for any integer A not evenly divisible by P, A^(P-1) ~= 1 mod P.\n    Since A is not divisible by P it follows that if:\n    N ~= M mod (P - 1), then A^N mod P = A^M mod P. Therefore:\n\n    A^N mod P = A^(M mod (P - 1)) mod P. (The latter takes less effort\n    to calculate). In order to calculate x^d mod p more quickly the\n    exponent d mod (p - 1) is stored in the RSA private key (the same\n    is done for x^d mod q). These values are referred to as dP and dQ\n    respectively. Therefore we now have:\n\n    y = ((x^dP mod p)q(q^-1 mod p) + (x^dQ mod q)p(p^-1 mod q)) mod n\n\n    Since we'll be reducing x^dP by modulo p (same for q) we can also\n    reduce x by p (and q respectively) before hand. Therefore, let\n\n    xp = ((x mod p)^dP mod p), and\n    xq = ((x mod q)^dQ mod q), yielding:\n\n    y = (xp*q*(q^-1 mod p) + xq*p*(p^-1 mod q)) mod n\n\n    This can be further reduced to a simple algorithm that only\n    requires 1 inverse (the q inverse is used) to be used and stored.\n    The algorithm is called Garner's algorithm. If qInv is the\n    inverse of q, we simply calculate:\n\n    y = (qInv*(xp - xq) mod p) * q + xq\n\n    However, there are two further complications. First, we need to\n    ensure that xp > xq to prevent signed BigIntegers from being used\n    so we add p until this is true (since we will be mod'ing with\n    p anyway). Then, there is a known timing attack on algorithms\n    using the CRT. To mitigate this risk, \"cryptographic blinding\"\n    should be used. This requires simply generating a random number r\n    between 0 and n-1 and its inverse and multiplying x by r^e before\n    calculating y and then multiplying y by r^-1 afterwards. Note that\n    r must be coprime with n (gcd(r, n) === 1) in order to have an\n    inverse.\n  */\n\n  // cryptographic blinding\n  var r;\n  do {\n    r = new BigInteger(\n      forge.util.bytesToHex(forge.random.getBytes(key.n.bitLength() / 8)),\n      16);\n  } while(r.compareTo(key.n) >= 0 || !r.gcd(key.n).equals(BigInteger.ONE));\n  x = x.multiply(r.modPow(key.e, key.n)).mod(key.n);\n\n  // calculate xp and xq\n  var xp = x.mod(key.p).modPow(key.dP, key.p);\n  var xq = x.mod(key.q).modPow(key.dQ, key.q);\n\n  // xp must be larger than xq to avoid signed bit usage\n  while(xp.compareTo(xq) < 0) {\n    xp = xp.add(key.p);\n  }\n\n  // do last step\n  var y = xp.subtract(xq)\n    .multiply(key.qInv).mod(key.p)\n    .multiply(key.q).add(xq);\n\n  // remove effect of random for cryptographic blinding\n  y = y.multiply(r.modInverse(key.n)).mod(key.n);\n\n  return y;\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'sign' on a private key object or\n * 'encrypt' on a public key object instead.\n *\n * Performs RSA encryption.\n *\n * The parameter bt controls whether to put padding bytes before the\n * message passed in. Set bt to either true or false to disable padding\n * completely (in order to handle e.g. EMSA-PSS encoding seperately before),\n * signaling whether the encryption operation is a public key operation\n * (i.e. encrypting data) or not, i.e. private key operation (data signing).\n *\n * For PKCS#1 v1.5 padding pass in the block type to use, i.e. either 0x01\n * (for signing) or 0x02 (for encryption). The key operation mode (private\n * or public) is derived from this flag in that case).\n *\n * @param m the message to encrypt as a byte string.\n * @param key the RSA key to use.\n * @param bt for PKCS#1 v1.5 padding, the block type to use\n *   (0x01 for private key, 0x02 for public),\n *   to disable padding: true = public key, false = private key.\n *\n * @return the encrypted bytes as a string.\n */\npki.rsa.encrypt = function(m, key, bt) {\n  var pub = bt;\n  var eb;\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  if(bt !== false && bt !== true) {\n    // legacy, default to PKCS#1 v1.5 padding\n    pub = (bt === 0x02);\n    eb = _encodePkcs1_v1_5(m, key, bt);\n  } else {\n    eb = forge.util.createBuffer();\n    eb.putBytes(m);\n  }\n\n  // load encryption block as big integer 'x'\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var x = new BigInteger(eb.toHex(), 16);\n\n  // do RSA encryption\n  var y = _modPow(x, key, pub);\n\n  // convert y into the encrypted data byte string, if y is shorter in\n  // bytes than k, then prepend zero bytes to fill up ed\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var yhex = y.toString(16);\n  var ed = forge.util.createBuffer();\n  var zeros = k - Math.ceil(yhex.length / 2);\n  while(zeros > 0) {\n    ed.putByte(0x00);\n    --zeros;\n  }\n  ed.putBytes(forge.util.hexToBytes(yhex));\n  return ed.getBytes();\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'decrypt' on a private key object or\n * 'verify' on a public key object instead.\n *\n * Performs RSA decryption.\n *\n * The parameter ml controls whether to apply PKCS#1 v1.5 padding\n * or not.  Set ml = false to disable padding removal completely\n * (in order to handle e.g. EMSA-PSS later on) and simply pass back\n * the RSA encryption block.\n *\n * @param ed the encrypted data to decrypt in as a byte string.\n * @param key the RSA key to use.\n * @param pub true for a public key operation, false for private.\n * @param ml the message length, if known, false to disable padding.\n *\n * @return the decrypted message as a byte string.\n */\npki.rsa.decrypt = function(ed, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  // error if the length of the encrypted data ED is not k\n  if(ed.length !== k) {\n    var error = new Error('Encrypted message length is invalid.');\n    error.length = ed.length;\n    error.expected = k;\n    throw error;\n  }\n\n  // convert encrypted data into a big integer\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var y = new BigInteger(forge.util.createBuffer(ed).toHex(), 16);\n\n  // y must be less than the modulus or it wasn't the result of\n  // a previous mod operation (encryption) using that modulus\n  if(y.compareTo(key.n) >= 0) {\n    throw new Error('Encrypted message is invalid.');\n  }\n\n  // do RSA decryption\n  var x = _modPow(y, key, pub);\n\n  // create the encryption block, if x is shorter in bytes than k, then\n  // prepend zero bytes to fill up eb\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var xhex = x.toString(16);\n  var eb = forge.util.createBuffer();\n  var zeros = k - Math.ceil(xhex.length / 2);\n  while(zeros > 0) {\n    eb.putByte(0x00);\n    --zeros;\n  }\n  eb.putBytes(forge.util.hexToBytes(xhex));\n\n  if(ml !== false) {\n    // legacy, default to PKCS#1 v1.5 padding\n    return _decodePkcs1_v1_5(eb.getBytes(), key, pub);\n  }\n\n  // return message\n  return eb.getBytes();\n};\n\n/**\n * Creates an RSA key-pair generation state object. It is used to allow\n * key-generation to be performed in steps. It also allows for a UI to\n * display progress updates.\n *\n * @param bits the size for the private key in bits, defaults to 2048.\n * @param e the public exponent to use, defaults to 65537 (0x10001).\n * @param [options] the options to use.\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n *\n * @return the state object to use to generate the key-pair.\n */\npki.rsa.createKeyPairGenerationState = function(bits, e, options) {\n  // TODO: migrate step-based prime generation code to forge.prime\n\n  // set default bits\n  if(typeof(bits) === 'string') {\n    bits = parseInt(bits, 10);\n  }\n  bits = bits || 2048;\n\n  // create prng with api that matches BigInteger secure random\n  options = options || {};\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  var algorithm = options.algorithm || 'PRIMEINC';\n\n  // create PRIMEINC algorithm state\n  var rval;\n  if(algorithm === 'PRIMEINC') {\n    rval = {\n      algorithm: algorithm,\n      state: 0,\n      bits: bits,\n      rng: rng,\n      eInt: e || 65537,\n      e: new BigInteger(null),\n      p: null,\n      q: null,\n      qBits: bits >> 1,\n      pBits: bits - (bits >> 1),\n      pqState: 0,\n      num: null,\n      keys: null\n    };\n    rval.e.fromInt(rval.eInt);\n  } else {\n    throw new Error('Invalid key generation algorithm: ' + algorithm);\n  }\n\n  return rval;\n};\n\n/**\n * Attempts to runs the key-generation algorithm for at most n seconds\n * (approximately) using the given state. When key-generation has completed,\n * the keys will be stored in state.keys.\n *\n * To use this function to update a UI while generating a key or to prevent\n * causing browser lockups/warnings, set \"n\" to a value other than 0. A\n * simple pattern for generating a key and showing a progress indicator is:\n *\n * var state = pki.rsa.createKeyPairGenerationState(2048);\n * var step = function() {\n *   // step key-generation, run algorithm for 100 ms, repeat\n *   if(!forge.pki.rsa.stepKeyPairGenerationState(state, 100)) {\n *     setTimeout(step, 1);\n *   } else {\n *     // key-generation complete\n *     // TODO: turn off progress indicator here\n *     // TODO: use the generated key-pair in \"state.keys\"\n *   }\n * };\n * // TODO: turn on progress indicator here\n * setTimeout(step, 0);\n *\n * @param state the state to use.\n * @param n the maximum number of milliseconds to run the algorithm for, 0\n *          to run the algorithm to completion.\n *\n * @return true if the key-generation completed, false if not.\n */\npki.rsa.stepKeyPairGenerationState = function(state, n) {\n  // set default algorithm if not set\n  if(!('algorithm' in state)) {\n    state.algorithm = 'PRIMEINC';\n  }\n\n  // TODO: migrate step-based prime generation code to forge.prime\n  // TODO: abstract as PRIMEINC algorithm\n\n  // do key generation (based on Tom Wu's rsa.js, see jsbn.js license)\n  // with some minor optimizations and designed to run in steps\n\n  // local state vars\n  var THIRTY = new BigInteger(null);\n  THIRTY.fromInt(30);\n  var deltaIdx = 0;\n  var op_or = function(x, y) {return x | y;};\n\n  // keep stepping until time limit is reached or done\n  var t1 = +new Date();\n  var t2;\n  var total = 0;\n  while(state.keys === null && (n <= 0 || total < n)) {\n    // generate p or q\n    if(state.state === 0) {\n      /* Note: All primes are of the form:\n\n        30k+i, for i < 30 and gcd(30, i)=1, where there are 8 values for i\n\n        When we generate a random number, we always align it at 30k + 1. Each\n        time the number is determined not to be prime we add to get to the\n        next 'i', eg: if the number was at 30k + 1 we add 6. */\n      var bits = (state.p === null) ? state.pBits : state.qBits;\n      var bits1 = bits - 1;\n\n      // get a random number\n      if(state.pqState === 0) {\n        state.num = new BigInteger(bits, state.rng);\n        // force MSB set\n        if(!state.num.testBit(bits1)) {\n          state.num.bitwiseTo(\n            BigInteger.ONE.shiftLeft(bits1), op_or, state.num);\n        }\n        // align number on 30k+1 boundary\n        state.num.dAddOffset(31 - state.num.mod(THIRTY).byteValue(), 0);\n        deltaIdx = 0;\n\n        ++state.pqState;\n      } else if(state.pqState === 1) {\n        // try to make the number a prime\n        if(state.num.bitLength() > bits) {\n          // overflow, try again\n          state.pqState = 0;\n          // do primality test\n        } else if(state.num.isProbablePrime(\n          _getMillerRabinTests(state.num.bitLength()))) {\n          ++state.pqState;\n        } else {\n          // get next potential prime\n          state.num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n        }\n      } else if(state.pqState === 2) {\n        // ensure number is coprime with e\n        state.pqState =\n          (state.num.subtract(BigInteger.ONE).gcd(state.e)\n            .compareTo(BigInteger.ONE) === 0) ? 3 : 0;\n      } else if(state.pqState === 3) {\n        // store p or q\n        state.pqState = 0;\n        if(state.p === null) {\n          state.p = state.num;\n        } else {\n          state.q = state.num;\n        }\n\n        // advance state if both p and q are ready\n        if(state.p !== null && state.q !== null) {\n          ++state.state;\n        }\n        state.num = null;\n      }\n    } else if(state.state === 1) {\n      // ensure p is larger than q (swap them if not)\n      if(state.p.compareTo(state.q) < 0) {\n        state.num = state.p;\n        state.p = state.q;\n        state.q = state.num;\n      }\n      ++state.state;\n    } else if(state.state === 2) {\n      // compute phi: (p - 1)(q - 1) (Euler's totient function)\n      state.p1 = state.p.subtract(BigInteger.ONE);\n      state.q1 = state.q.subtract(BigInteger.ONE);\n      state.phi = state.p1.multiply(state.q1);\n      ++state.state;\n    } else if(state.state === 3) {\n      // ensure e and phi are coprime\n      if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) === 0) {\n        // phi and e are coprime, advance\n        ++state.state;\n      } else {\n        // phi and e aren't coprime, so generate a new p and q\n        state.p = null;\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 4) {\n      // create n, ensure n is has the right number of bits\n      state.n = state.p.multiply(state.q);\n\n      // ensure n is right number of bits\n      if(state.n.bitLength() === state.bits) {\n        // success, advance\n        ++state.state;\n      } else {\n        // failed, get new q\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 5) {\n      // set keys\n      var d = state.e.modInverse(state.phi);\n      state.keys = {\n        privateKey: pki.rsa.setPrivateKey(\n          state.n, state.e, d, state.p, state.q,\n          d.mod(state.p1), d.mod(state.q1),\n          state.q.modInverse(state.p)),\n        publicKey: pki.rsa.setPublicKey(state.n, state.e)\n      };\n    }\n\n    // update timing\n    t2 = +new Date();\n    total += t2 - t1;\n    t1 = t2;\n  }\n\n  return state.keys !== null;\n};\n\n/**\n * Generates an RSA public-private key pair in a single call.\n *\n * To generate a key-pair in steps (to allow for progress updates and to\n * prevent blocking or warnings in slow browsers) then use the key-pair\n * generation state functions.\n *\n * To generate a key-pair asynchronously (either through web-workers, if\n * available, or by breaking up the work on the main thread), pass a\n * callback function.\n *\n * @param [bits] the size for the private key in bits, defaults to 2048.\n * @param [e] the public exponent to use, defaults to 65537.\n * @param [options] options for key-pair generation, if given then 'bits'\n *            and 'e' must *not* be given:\n *          bits the size for the private key in bits, (default: 2048).\n *          e the public exponent to use, (default: 65537 (0x10001)).\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\". Disables use of native APIs.\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n * @param [callback(err, keypair)] called once the operation completes.\n *\n * @return an object with privateKey and publicKey properties.\n */\npki.rsa.generateKeyPair = function(bits, e, options, callback) {\n  // (bits), (options), (callback)\n  if(arguments.length === 1) {\n    if(typeof bits === 'object') {\n      options = bits;\n      bits = undefined;\n    } else if(typeof bits === 'function') {\n      callback = bits;\n      bits = undefined;\n    }\n  } else if(arguments.length === 2) {\n    // (bits, e), (bits, options), (bits, callback), (options, callback)\n    if(typeof bits === 'number') {\n      if(typeof e === 'function') {\n        callback = e;\n        e = undefined;\n      } else if(typeof e !== 'number') {\n        options = e;\n        e = undefined;\n      }\n    } else {\n      options = bits;\n      callback = e;\n      bits = undefined;\n      e = undefined;\n    }\n  } else if(arguments.length === 3) {\n    // (bits, e, options), (bits, e, callback), (bits, options, callback)\n    if(typeof e === 'number') {\n      if(typeof options === 'function') {\n        callback = options;\n        options = undefined;\n      }\n    } else {\n      callback = options;\n      options = e;\n      e = undefined;\n    }\n  }\n  options = options || {};\n  if(bits === undefined) {\n    bits = options.bits || 2048;\n  }\n  if(e === undefined) {\n    e = options.e || 0x10001;\n  }\n\n  // use native code if permitted, available, and parameters are acceptable\n  if(!forge.options.usePureJavaScript && !options.prng &&\n    bits >= 256 && bits <= 16384 && (e === 0x10001 || e === 3)) {\n    if(callback) {\n      // try native async\n      if(_detectNodeCrypto('generateKeyPair')) {\n        return _crypto.generateKeyPair('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        }, function(err, pub, priv) {\n          if(err) {\n            return callback(err);\n          }\n          callback(null, {\n            privateKey: pki.privateKeyFromPem(priv),\n            publicKey: pki.publicKeyFromPem(pub)\n          });\n        });\n      }\n      if(_detectSubtleCrypto('generateKey') &&\n        _detectSubtleCrypto('exportKey')) {\n        // use standard native generateKey\n        return util.globalScope.crypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify'])\n        .then(function(pair) {\n          return util.globalScope.crypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n        // avoiding catch(function(err) {...}) to support IE <= 8\n        }).then(undefined, function(err) {\n          callback(err);\n        }).then(function(pkcs8) {\n          if(pkcs8) {\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          }\n        });\n      }\n      if(_detectSubtleMsCrypto('generateKey') &&\n        _detectSubtleMsCrypto('exportKey')) {\n        var genOp = util.globalScope.msCrypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify']);\n        genOp.oncomplete = function(e) {\n          var pair = e.target.result;\n          var exportOp = util.globalScope.msCrypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n          exportOp.oncomplete = function(e) {\n            var pkcs8 = e.target.result;\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          };\n          exportOp.onerror = function(err) {\n            callback(err);\n          };\n        };\n        genOp.onerror = function(err) {\n          callback(err);\n        };\n        return;\n      }\n    } else {\n      // try native sync\n      if(_detectNodeCrypto('generateKeyPairSync')) {\n        var keypair = _crypto.generateKeyPairSync('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        });\n        return {\n          privateKey: pki.privateKeyFromPem(keypair.privateKey),\n          publicKey: pki.publicKeyFromPem(keypair.publicKey)\n        };\n      }\n    }\n  }\n\n  // use JavaScript implementation\n  var state = pki.rsa.createKeyPairGenerationState(bits, e, options);\n  if(!callback) {\n    pki.rsa.stepKeyPairGenerationState(state, 0);\n    return state.keys;\n  }\n  _generateKeyPair(state, options, callback);\n};\n\n/**\n * Sets an RSA public key from BigIntegers modulus and exponent.\n *\n * @param n the modulus.\n * @param e the exponent.\n *\n * @return the public key.\n */\npki.setRsaPublicKey = pki.rsa.setPublicKey = function(n, e) {\n  var key = {\n    n: n,\n    e: e\n  };\n\n  /**\n   * Encrypts the given data with this public key. Newer applications\n   * should use the 'RSA-OAEP' decryption scheme, 'RSAES-PKCS1-V1_5' is for\n   * legacy applications.\n   *\n   * @param data the byte string to encrypt.\n   * @param scheme the encryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA encryption,\n   *          an object with an 'encode' property set to a function\n   *          with the signature 'function(data, key)' that returns\n   *          a binary-encoded string representing the encoded data.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the encrypted byte string.\n   */\n  key.encrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {\n        encode: function(m, key, pub) {\n          return _encodePkcs1_v1_5(m, key, 0x02).getBytes();\n        }\n      };\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        encode: function(m, key) {\n          return forge.pkcs1.encode_rsa_oaep(key, m, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {encode: function(e) {return e;}};\n    } else if(typeof scheme === 'string') {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // do scheme-based encoding then rsa encryption\n    var e = scheme.encode(data, key, true);\n    return pki.rsa.encrypt(e, key, true);\n  };\n\n  /**\n   * Verifies the given signature against the given digest.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5, in which case once RSA-decrypted, the\n   * signature is an OCTET STRING that holds a DigestInfo.\n   *\n   * DigestInfo ::= SEQUENCE {\n   *   digestAlgorithm DigestAlgorithmIdentifier,\n   *   digest Digest\n   * }\n   * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n   * Digest ::= OCTET STRING\n   *\n   * To perform PSS signature verification, provide an instance\n   * of Forge PSS object as the scheme parameter.\n   *\n   * @param digest the message digest hash to compare against the signature,\n   *          as a binary-encoded string.\n   * @param signature the signature to verify, as a binary-encoded string.\n   * @param scheme signature verification scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be expected, but\n   *            PKCS#1 v1.5 padding will still be used.\n   * @param options optional verify options\n   *          _parseAllDigestBytes testing flag to control parsing of all\n   *            digest bytes. Unsupported and not for general usage.\n   *            (default: true)\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  key.verify = function(digest, signature, scheme, options) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSASSA-PKCS1-V1_5';\n    }\n    if(options === undefined) {\n      options = {\n        _parseAllDigestBytes: true\n      };\n    }\n    if(!('_parseAllDigestBytes' in options)) {\n      options._parseAllDigestBytes = true;\n    }\n\n    if(scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          // d is ASN.1 BER-encoded DigestInfo\n          var obj = asn1.fromDer(d, {\n            parseAllBytes: options._parseAllDigestBytes\n          });\n\n          // validate DigestInfo\n          var capture = {};\n          var errors = [];\n          if(!asn1.validate(obj, digestInfoValidator, capture, errors)) {\n            var error = new Error(\n              'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n              'DigestInfo value.');\n            error.errors = errors;\n            throw error;\n          }\n          // check hash algorithm identifier\n          // see PKCS1-v1-5DigestAlgorithms in RFC 8017\n          // FIXME: add support to vaidator for strict value choices\n          var oid = asn1.derToOid(capture.algorithmIdentifier);\n          if(!(oid === forge.oids.md2 ||\n            oid === forge.oids.md5 ||\n            oid === forge.oids.sha1 ||\n            oid === forge.oids.sha224 ||\n            oid === forge.oids.sha256 ||\n            oid === forge.oids.sha384 ||\n            oid === forge.oids.sha512 ||\n            oid === forge.oids['sha512-224'] ||\n            oid === forge.oids['sha512-256'])) {\n            var error = new Error(\n              'Unknown RSASSA-PKCS1-v1_5 DigestAlgorithm identifier.');\n            error.oid = oid;\n            throw error;\n          }\n\n          // special check for md2 and md5 that NULL parameters exist\n          if(oid === forge.oids.md2 || oid === forge.oids.md5) {\n            if(!('parameters' in capture)) {\n              throw new Error(\n                'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n                'DigestInfo value. ' +\n                'Missing algorithm identifer NULL parameters.');\n            }\n          }\n\n          // compare the given digest to the decrypted one\n          return digest === capture.digest;\n        }\n      };\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          return digest === d;\n        }\n      };\n    }\n\n    // do rsa decryption w/o any decoding, then verify -- which does decoding\n    var d = pki.rsa.decrypt(signature, key, true, false);\n    return scheme.verify(digest, d, key.n.bitLength());\n  };\n\n  return key;\n};\n\n/**\n * Sets an RSA private key from BigIntegers modulus, exponent, primes,\n * prime exponents, and modular multiplicative inverse.\n *\n * @param n the modulus.\n * @param e the public exponent.\n * @param d the private exponent ((inverse of e) mod n).\n * @param p the first prime.\n * @param q the second prime.\n * @param dP exponent1 (d mod (p-1)).\n * @param dQ exponent2 (d mod (q-1)).\n * @param qInv ((inverse of q) mod p)\n *\n * @return the private key.\n */\npki.setRsaPrivateKey = pki.rsa.setPrivateKey = function(\n  n, e, d, p, q, dP, dQ, qInv) {\n  var key = {\n    n: n,\n    e: e,\n    d: d,\n    p: p,\n    q: q,\n    dP: dP,\n    dQ: dQ,\n    qInv: qInv\n  };\n\n  /**\n   * Decrypts the given data with this private key. The decryption scheme\n   * must match the one used to encrypt the data.\n   *\n   * @param data the byte string to decrypt.\n   * @param scheme the decryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA decryption.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the decrypted byte string.\n   */\n  key.decrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    // do rsa decryption w/o any decoding\n    var d = pki.rsa.decrypt(data, key, false, false);\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {decode: _decodePkcs1_v1_5};\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        decode: function(d, key) {\n          return forge.pkcs1.decode_rsa_oaep(key, d, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {decode: function(d) {return d;}};\n    } else {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // decode according to scheme\n    return scheme.decode(d, key, false);\n  };\n\n  /**\n   * Signs the given digest, producing a signature.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5. In order to generate a PSS signature, provide\n   * an instance of Forge PSS object as the scheme parameter.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param scheme the signature scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be used but\n   *            PKCS#1 v1.5 padding will still be used.\n   *\n   * @return the signature as a byte string.\n   */\n  key.sign = function(md, scheme) {\n    /* Note: The internal implementation of RSA operations is being\n      transitioned away from a PKCS#1 v1.5 hard-coded scheme. Some legacy\n      code like the use of an encoding block identifier 'bt' will eventually\n      be removed. */\n\n    // private key operation\n    var bt = false;\n\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    }\n\n    if(scheme === undefined || scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {encode: emsaPkcs1v15encode};\n      bt = 0x01;\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {encode: function() {return md;}};\n      bt = 0x01;\n    }\n\n    // encode and then encrypt\n    var d = scheme.encode(md, key.n.bitLength());\n    return pki.rsa.encrypt(d, key, bt);\n  };\n\n  return key;\n};\n\n/**\n * Wraps an RSAPrivateKey ASN.1 object in an ASN.1 PrivateKeyInfo object.\n *\n * @param rsaKey the ASN.1 RSAPrivateKey.\n *\n * @return the ASN.1 PrivateKeyInfo.\n */\npki.wrapRsaPrivateKey = function(rsaKey) {\n  // PrivateKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // privateKeyAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // PrivateKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      asn1.toDer(rsaKey).getBytes())\n  ]);\n};\n\n/**\n * Converts a private key from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a PrivateKeyInfo containing an\n *          RSAPrivateKey or an RSAPrivateKey.\n *\n * @return the private key.\n */\npki.privateKeyFromAsn1 = function(obj) {\n  // get PrivateKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, privateKeyValidator, capture, errors)) {\n    obj = asn1.fromDer(forge.util.createBuffer(capture.privateKey));\n  }\n\n  // get RSAPrivateKey\n  capture = {};\n  errors = [];\n  if(!asn1.validate(obj, rsaPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read private key. ' +\n      'ASN.1 object does not contain an RSAPrivateKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // Note: Version is currently ignored.\n  // capture.privateKeyVersion\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n, e, d, p, q, dP, dQ, qInv;\n  n = forge.util.createBuffer(capture.privateKeyModulus).toHex();\n  e = forge.util.createBuffer(capture.privateKeyPublicExponent).toHex();\n  d = forge.util.createBuffer(capture.privateKeyPrivateExponent).toHex();\n  p = forge.util.createBuffer(capture.privateKeyPrime1).toHex();\n  q = forge.util.createBuffer(capture.privateKeyPrime2).toHex();\n  dP = forge.util.createBuffer(capture.privateKeyExponent1).toHex();\n  dQ = forge.util.createBuffer(capture.privateKeyExponent2).toHex();\n  qInv = forge.util.createBuffer(capture.privateKeyCoefficient).toHex();\n\n  // set private key\n  return pki.setRsaPrivateKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16),\n    new BigInteger(d, 16),\n    new BigInteger(p, 16),\n    new BigInteger(q, 16),\n    new BigInteger(dP, 16),\n    new BigInteger(dQ, 16),\n    new BigInteger(qInv, 16));\n};\n\n/**\n * Converts a private key to an ASN.1 RSAPrivateKey.\n *\n * @param key the private key.\n *\n * @return the ASN.1 representation of an RSAPrivateKey.\n */\npki.privateKeyToAsn1 = pki.privateKeyToRSAPrivateKey = function(key) {\n  // RSAPrivateKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0 = only 2 primes, 1 multiple primes)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e)),\n    // privateExponent (d)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.d)),\n    // privateKeyPrime1 (p)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.p)),\n    // privateKeyPrime2 (q)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.q)),\n    // privateKeyExponent1 (dP)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dP)),\n    // privateKeyExponent2 (dQ)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dQ)),\n    // coefficient (qInv)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.qInv))\n  ]);\n};\n\n/**\n * Converts a public key from an ASN.1 SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @param obj the asn1 representation of a SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @return the public key.\n */\npki.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, publicKeyValidator, capture, errors)) {\n    // get oid\n    var oid = asn1.derToOid(capture.publicKeyOid);\n    if(oid !== pki.oids.rsaEncryption) {\n      var error = new Error('Cannot read public key. Unknown OID.');\n      error.oid = oid;\n      throw error;\n    }\n    obj = capture.rsaPublicKey;\n  }\n\n  // get RSA params\n  errors = [];\n  if(!asn1.validate(obj, rsaPublicKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read public key. ' +\n      'ASN.1 object does not contain an RSAPublicKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n = forge.util.createBuffer(capture.publicKeyModulus).toHex();\n  var e = forge.util.createBuffer(capture.publicKeyExponent).toHex();\n\n  // set public key\n  return pki.setRsaPublicKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16));\n};\n\n/**\n * Converts a public key to an ASN.1 SubjectPublicKeyInfo.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a SubjectPublicKeyInfo.\n */\npki.publicKeyToAsn1 = pki.publicKeyToSubjectPublicKeyInfo = function(key) {\n  // SubjectPublicKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // subjectPublicKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, [\n      pki.publicKeyToRSAPublicKey(key)\n    ])\n  ]);\n};\n\n/**\n * Converts a public key to an ASN.1 RSAPublicKey.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a RSAPublicKey.\n */\npki.publicKeyToRSAPublicKey = function(key) {\n  // RSAPublicKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e))\n  ]);\n};\n\n/**\n * Encodes a message using PKCS#1 v1.5 padding.\n *\n * @param m the message to encode.\n * @param key the RSA key to use.\n * @param bt the block type to use, i.e. either 0x01 (for signing) or 0x02\n *          (for encryption).\n *\n * @return the padded byte buffer.\n */\nfunction _encodePkcs1_v1_5(m, key, bt) {\n  var eb = forge.util.createBuffer();\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* use PKCS#1 v1.5 padding */\n  if(m.length > (k - 11)) {\n    var error = new Error('Message is too long for PKCS#1 v1.5 padding.');\n    error.length = m.length;\n    error.max = k - 11;\n    throw error;\n  }\n\n  /* A block type BT, a padding string PS, and the data D shall be\n    formatted into an octet string EB, the encryption block:\n\n    EB = 00 || BT || PS || 00 || D\n\n    The block type BT shall be a single octet indicating the structure of\n    the encryption block. For this version of the document it shall have\n    value 00, 01, or 02. For a private-key operation, the block type\n    shall be 00 or 01. For a public-key operation, it shall be 02.\n\n    The padding string PS shall consist of k-3-||D|| octets. For block\n    type 00, the octets shall have value 00; for block type 01, they\n    shall have value FF; and for block type 02, they shall be\n    pseudorandomly generated and nonzero. This makes the length of the\n    encryption block EB equal to k. */\n\n  // build the encryption block\n  eb.putByte(0x00);\n  eb.putByte(bt);\n\n  // create the padding\n  var padNum = k - 3 - m.length;\n  var padByte;\n  // private key op\n  if(bt === 0x00 || bt === 0x01) {\n    padByte = (bt === 0x00) ? 0x00 : 0xFF;\n    for(var i = 0; i < padNum; ++i) {\n      eb.putByte(padByte);\n    }\n  } else {\n    // public key op\n    // pad with random non-zero values\n    while(padNum > 0) {\n      var numZeros = 0;\n      var padBytes = forge.random.getBytes(padNum);\n      for(var i = 0; i < padNum; ++i) {\n        padByte = padBytes.charCodeAt(i);\n        if(padByte === 0) {\n          ++numZeros;\n        } else {\n          eb.putByte(padByte);\n        }\n      }\n      padNum = numZeros;\n    }\n  }\n\n  // zero followed by message\n  eb.putByte(0x00);\n  eb.putBytes(m);\n\n  return eb;\n}\n\n/**\n * Decodes a message using PKCS#1 v1.5 padding.\n *\n * @param em the message to decode.\n * @param key the RSA key to use.\n * @param pub true if the key is a public key, false if it is private.\n * @param ml the message length, if specified.\n *\n * @return the decoded bytes.\n */\nfunction _decodePkcs1_v1_5(em, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* It is an error if any of the following conditions occurs:\n\n    1. The encryption block EB cannot be parsed unambiguously.\n    2. The padding string PS consists of fewer than eight octets\n      or is inconsisent with the block type BT.\n    3. The decryption process is a public-key operation and the block\n      type BT is not 00 or 01, or the decryption process is a\n      private-key operation and the block type is not 02.\n   */\n\n  // parse the encryption block\n  var eb = forge.util.createBuffer(em);\n  var first = eb.getByte();\n  var bt = eb.getByte();\n  if(first !== 0x00 ||\n    (pub && bt !== 0x00 && bt !== 0x01) ||\n    (!pub && bt != 0x02) ||\n    (pub && bt === 0x00 && typeof(ml) === 'undefined')) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  var padNum = 0;\n  if(bt === 0x00) {\n    // check all padding bytes for 0x00\n    padNum = k - 3 - ml;\n    for(var i = 0; i < padNum; ++i) {\n      if(eb.getByte() !== 0x00) {\n        throw new Error('Encryption block is invalid.');\n      }\n    }\n  } else if(bt === 0x01) {\n    // find the first byte that isn't 0xFF, should be after all padding\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() !== 0xFF) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  } else if(bt === 0x02) {\n    // look for 0x00 byte\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() === 0x00) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  }\n\n  // zero must be 0x00 and padNum must be (k - 3 - message length)\n  var zero = eb.getByte();\n  if(zero !== 0x00 || padNum !== (k - 3 - eb.length())) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  return eb.getBytes();\n}\n\n/**\n * Runs the key-generation algorithm asynchronously, either in the background\n * via Web Workers, or using the main thread and setImmediate.\n *\n * @param state the key-pair generation state.\n * @param [options] options for key-pair generation:\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2, -1 to use estimated cores minus one).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n * @param callback(err, keypair) called once the operation completes.\n */\nfunction _generateKeyPair(state, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  var opts = {\n    algorithm: {\n      name: options.algorithm || 'PRIMEINC',\n      options: {\n        workers: options.workers || 2,\n        workLoad: options.workLoad || 100,\n        workerScript: options.workerScript\n      }\n    }\n  };\n  if('prng' in options) {\n    opts.prng = options.prng;\n  }\n\n  generate();\n\n  function generate() {\n    // find p and then q (done in series to simplify)\n    getPrime(state.pBits, function(err, num) {\n      if(err) {\n        return callback(err);\n      }\n      state.p = num;\n      if(state.q !== null) {\n        return finish(err, state.q);\n      }\n      getPrime(state.qBits, finish);\n    });\n  }\n\n  function getPrime(bits, callback) {\n    forge.prime.generateProbablePrime(bits, opts, callback);\n  }\n\n  function finish(err, num) {\n    if(err) {\n      return callback(err);\n    }\n\n    // set q\n    state.q = num;\n\n    // ensure p is larger than q (swap them if not)\n    if(state.p.compareTo(state.q) < 0) {\n      var tmp = state.p;\n      state.p = state.q;\n      state.q = tmp;\n    }\n\n    // ensure p is coprime with e\n    if(state.p.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.p = null;\n      generate();\n      return;\n    }\n\n    // ensure q is coprime with e\n    if(state.q.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // compute phi: (p - 1)(q - 1) (Euler's totient function)\n    state.p1 = state.p.subtract(BigInteger.ONE);\n    state.q1 = state.q.subtract(BigInteger.ONE);\n    state.phi = state.p1.multiply(state.q1);\n\n    // ensure e and phi are coprime\n    if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) !== 0) {\n      // phi and e aren't coprime, so generate a new p and q\n      state.p = state.q = null;\n      generate();\n      return;\n    }\n\n    // create n, ensure n is has the right number of bits\n    state.n = state.p.multiply(state.q);\n    if(state.n.bitLength() !== state.bits) {\n      // failed, get new q\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // set keys\n    var d = state.e.modInverse(state.phi);\n    state.keys = {\n      privateKey: pki.rsa.setPrivateKey(\n        state.n, state.e, d, state.p, state.q,\n        d.mod(state.p1), d.mod(state.q1),\n        state.q.modInverse(state.p)),\n      publicKey: pki.rsa.setPublicKey(state.n, state.e)\n    };\n\n    callback(null, state.keys);\n  }\n}\n\n/**\n * Converts a positive BigInteger into 2's-complement big-endian bytes.\n *\n * @param b the big integer to convert.\n *\n * @return the bytes.\n */\nfunction _bnToBytes(b) {\n  // prepend 0x00 if first byte >= 0x80\n  var hex = b.toString(16);\n  if(hex[0] >= '8') {\n    hex = '00' + hex;\n  }\n  var bytes = forge.util.hexToBytes(hex);\n\n  // ensure integer is minimally-encoded\n  if(bytes.length > 1 &&\n    // leading 0x00 for positive integer\n    ((bytes.charCodeAt(0) === 0 &&\n    (bytes.charCodeAt(1) & 0x80) === 0) ||\n    // leading 0xFF for negative integer\n    (bytes.charCodeAt(0) === 0xFF &&\n    (bytes.charCodeAt(1) & 0x80) === 0x80))) {\n    return bytes.substr(1);\n  }\n  return bytes;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction _getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n/**\n * Performs feature detection on the Node crypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectNodeCrypto(fn) {\n  return forge.util.isNodejs && typeof _crypto[fn] === 'function';\n}\n\n/**\n * Performs feature detection on the SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.crypto === 'object' &&\n    typeof util.globalScope.crypto.subtle === 'object' &&\n    typeof util.globalScope.crypto.subtle[fn] === 'function');\n}\n\n/**\n * Performs feature detection on the deprecated Microsoft Internet Explorer\n * outdated SubtleCrypto interface. This function should only be used after\n * checking for the modern, standard SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleMsCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.msCrypto === 'object' &&\n    typeof util.globalScope.msCrypto.subtle === 'object' &&\n    typeof util.globalScope.msCrypto.subtle[fn] === 'function');\n}\n\nfunction _intToUint8Array(x) {\n  var bytes = forge.util.hexToBytes(x.toString(16));\n  var buffer = new Uint8Array(bytes.length);\n  for(var i = 0; i < bytes.length; ++i) {\n    buffer[i] = bytes.charCodeAt(i);\n  }\n  return buffer;\n}\n\nfunction _privateKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error(\n      'Unsupported key algorithm \"' + jwk.kty + '\"; algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPrivateKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e),\n    _base64ToBigInt(jwk.d),\n    _base64ToBigInt(jwk.p),\n    _base64ToBigInt(jwk.q),\n    _base64ToBigInt(jwk.dp),\n    _base64ToBigInt(jwk.dq),\n    _base64ToBigInt(jwk.qi));\n}\n\nfunction _publicKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error('Key algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPublicKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e));\n}\n\nfunction _base64ToBigInt(b64) {\n  return new BigInteger(forge.util.bytesToHex(forge.util.decode64(b64)), 16);\n}\n","/**\n * Secure Hash Algorithm with 160-bit digest (SHA-1) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha1 = module.exports = forge.sha1 = forge.sha1 || {};\nforge.md.sha1 = forge.md.algorithms.sha1 = sha1;\n\n/**\n * Creates a SHA-1 message digest object.\n *\n * @return a message digest object.\n */\nsha1.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-1 state contains five 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(80);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha1',\n    blockLength: 64,\n    digestLength: 20,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476,\n      h4: 0xC3D2E1F0\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-1 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-1 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-1 state with the given byte buffer.\n *\n * @param s the SHA-1 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = bytes.getInt32();\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n\n    len -= 64;\n  }\n}\n","/**\n * Secure Hash Algorithm with 256-bit digest (SHA-256) implementation.\n *\n * See FIPS 180-2 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha256 = module.exports = forge.sha256 = forge.sha256 || {};\nforge.md.sha256 = forge.md.algorithms.sha256 = sha256;\n\n/**\n * Creates a SHA-256 message digest object.\n *\n * @return a message digest object.\n */\nsha256.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-256 state contains eight 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(64);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha256',\n    blockLength: 64,\n    digestLength: 32,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x6A09E667,\n      h1: 0xBB67AE85,\n      h2: 0x3C6EF372,\n      h3: 0xA54FF53A,\n      h4: 0x510E527F,\n      h5: 0x9B05688C,\n      h6: 0x1F83D9AB,\n      h7: 0x5BE0CD19\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-256 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4,\n      h5: _state.h5,\n      h6: _state.h6,\n      h7: _state.h7\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    rval.putInt32(s2.h5);\n    rval.putInt32(s2.h6);\n    rval.putInt32(s2.h7);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-256 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // create K table for SHA-256\n  _k = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-256 state with the given byte buffer.\n *\n * @param s the SHA-256 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 64 32-bit words according to SHA-256\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32();\n    }\n    for(; i < 64; ++i) {\n      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n      t1 = w[i - 2];\n      t1 =\n        ((t1 >>> 17) | (t1 << 15)) ^\n        ((t1 >>> 19) | (t1 << 13)) ^\n        (t1 >>> 10);\n      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n      t2 = w[i - 15];\n      t2 =\n        ((t2 >>> 7) | (t2 << 25)) ^\n        ((t2 >>> 18) | (t2 << 14)) ^\n        (t2 >>> 3);\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n      w[i] = (t1 + w[i - 7] + t2 + w[i - 16]) | 0;\n    }\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n    f = s.h5;\n    g = s.h6;\n    h = s.h7;\n\n    // round function\n    for(i = 0; i < 64; ++i) {\n      // Sum1(e)\n      s1 =\n        ((e >>> 6) | (e << 26)) ^\n        ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch = g ^ (e & (f ^ g));\n      // Sum0(a)\n      s0 =\n        ((a >>> 2) | (a << 30)) ^\n        ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj = (a & b) | (c & (a ^ b));\n\n      // main algorithm\n      t1 = h + s1 + ch + _k[i] + w[i];\n      t2 = s0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      e = (d + t1) >>> 0;\n      d = c;\n      c = b;\n      b = a;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      a = (t1 + t2) >>> 0;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n    s.h5 = (s.h5 + f) | 0;\n    s.h6 = (s.h6 + g) | 0;\n    s.h7 = (s.h7 + h) | 0;\n    len -= 64;\n  }\n}\n","/**\n * Secure Hash Algorithm with a 1024-bit block size implementation.\n *\n * This includes: SHA-512, SHA-384, SHA-512/224, and SHA-512/256. For\n * SHA-256 (block size 512 bits), see sha256.js.\n *\n * See FIPS 180-4 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha512 = module.exports = forge.sha512 = forge.sha512 || {};\n\n// SHA-512\nforge.md.sha512 = forge.md.algorithms.sha512 = sha512;\n\n// SHA-384\nvar sha384 = forge.sha384 = forge.sha512.sha384 = forge.sha512.sha384 || {};\nsha384.create = function() {\n  return sha512.create('SHA-384');\n};\nforge.md.sha384 = forge.md.algorithms.sha384 = sha384;\n\n// SHA-512/256\nforge.sha512.sha256 = forge.sha512.sha256 || {\n  create: function() {\n    return sha512.create('SHA-512/256');\n  }\n};\nforge.md['sha512/256'] = forge.md.algorithms['sha512/256'] =\n  forge.sha512.sha256;\n\n// SHA-512/224\nforge.sha512.sha224 = forge.sha512.sha224 || {\n  create: function() {\n    return sha512.create('SHA-512/224');\n  }\n};\nforge.md['sha512/224'] = forge.md.algorithms['sha512/224'] =\n  forge.sha512.sha224;\n\n/**\n * Creates a SHA-2 message digest object.\n *\n * @param algorithm the algorithm to use (SHA-512, SHA-384, SHA-512/224,\n *          SHA-512/256).\n *\n * @return a message digest object.\n */\nsha512.create = function(algorithm) {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  if(typeof algorithm === 'undefined') {\n    algorithm = 'SHA-512';\n  }\n\n  if(!(algorithm in _states)) {\n    throw new Error('Invalid SHA-512 algorithm: ' + algorithm);\n  }\n\n  // SHA-512 state contains eight 64-bit integers (each as two 32-bit ints)\n  var _state = _states[algorithm];\n  var _h = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for 64-bit word storage\n  var _w = new Array(80);\n  for(var wi = 0; wi < 80; ++wi) {\n    _w[wi] = new Array(2);\n  }\n\n  // determine digest length by algorithm name (default)\n  var digestLength = 64;\n  switch(algorithm) {\n    case 'SHA-384':\n      digestLength = 48;\n      break;\n    case 'SHA-512/256':\n      digestLength = 32;\n      break;\n    case 'SHA-512/224':\n      digestLength = 28;\n      break;\n  }\n\n  // message digest object\n  var md = {\n    // SHA-512 => sha512\n    algorithm: algorithm.replace('-', '').toLowerCase(),\n    blockLength: 128,\n    digestLength: digestLength,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 16\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength128 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength128 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _h = new Array(_state.length);\n    for(var i = 0; i < _state.length; ++i) {\n      _h[i] = _state[i].slice(0);\n    }\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_h, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-512 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 896 mod 1024. In other words,\n    the data to be digested must be a multiple of 1024 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 16 bytes (128\n    bits), that means that the last segment of the data must have 112 bytes\n    (896 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 896 mod 1024 because\n    1024 - 128 = 896.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 896 mod 1024, then 1024 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var h = new Array(_h.length);\n    for(var i = 0; i < _h.length; ++i) {\n      h[i] = _h[i].slice(0);\n    }\n    _update(h, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    var hlen;\n    if(algorithm === 'SHA-512') {\n      hlen = h.length;\n    } else if(algorithm === 'SHA-384') {\n      hlen = h.length - 2;\n    } else {\n      hlen = h.length - 4;\n    }\n    for(var i = 0; i < hlen; ++i) {\n      rval.putInt32(h[i][0]);\n      if(i !== hlen - 1 || algorithm !== 'SHA-512/224') {\n        rval.putInt32(h[i][1]);\n      }\n    }\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-512 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n// initial hash states\nvar _states = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 128);\n\n  // create K table for SHA-512\n  _k = [\n    [0x428a2f98, 0xd728ae22], [0x71374491, 0x23ef65cd],\n    [0xb5c0fbcf, 0xec4d3b2f], [0xe9b5dba5, 0x8189dbbc],\n    [0x3956c25b, 0xf348b538], [0x59f111f1, 0xb605d019],\n    [0x923f82a4, 0xaf194f9b], [0xab1c5ed5, 0xda6d8118],\n    [0xd807aa98, 0xa3030242], [0x12835b01, 0x45706fbe],\n    [0x243185be, 0x4ee4b28c], [0x550c7dc3, 0xd5ffb4e2],\n    [0x72be5d74, 0xf27b896f], [0x80deb1fe, 0x3b1696b1],\n    [0x9bdc06a7, 0x25c71235], [0xc19bf174, 0xcf692694],\n    [0xe49b69c1, 0x9ef14ad2], [0xefbe4786, 0x384f25e3],\n    [0x0fc19dc6, 0x8b8cd5b5], [0x240ca1cc, 0x77ac9c65],\n    [0x2de92c6f, 0x592b0275], [0x4a7484aa, 0x6ea6e483],\n    [0x5cb0a9dc, 0xbd41fbd4], [0x76f988da, 0x831153b5],\n    [0x983e5152, 0xee66dfab], [0xa831c66d, 0x2db43210],\n    [0xb00327c8, 0x98fb213f], [0xbf597fc7, 0xbeef0ee4],\n    [0xc6e00bf3, 0x3da88fc2], [0xd5a79147, 0x930aa725],\n    [0x06ca6351, 0xe003826f], [0x14292967, 0x0a0e6e70],\n    [0x27b70a85, 0x46d22ffc], [0x2e1b2138, 0x5c26c926],\n    [0x4d2c6dfc, 0x5ac42aed], [0x53380d13, 0x9d95b3df],\n    [0x650a7354, 0x8baf63de], [0x766a0abb, 0x3c77b2a8],\n    [0x81c2c92e, 0x47edaee6], [0x92722c85, 0x1482353b],\n    [0xa2bfe8a1, 0x4cf10364], [0xa81a664b, 0xbc423001],\n    [0xc24b8b70, 0xd0f89791], [0xc76c51a3, 0x0654be30],\n    [0xd192e819, 0xd6ef5218], [0xd6990624, 0x5565a910],\n    [0xf40e3585, 0x5771202a], [0x106aa070, 0x32bbd1b8],\n    [0x19a4c116, 0xb8d2d0c8], [0x1e376c08, 0x5141ab53],\n    [0x2748774c, 0xdf8eeb99], [0x34b0bcb5, 0xe19b48a8],\n    [0x391c0cb3, 0xc5c95a63], [0x4ed8aa4a, 0xe3418acb],\n    [0x5b9cca4f, 0x7763e373], [0x682e6ff3, 0xd6b2b8a3],\n    [0x748f82ee, 0x5defb2fc], [0x78a5636f, 0x43172f60],\n    [0x84c87814, 0xa1f0ab72], [0x8cc70208, 0x1a6439ec],\n    [0x90befffa, 0x23631e28], [0xa4506ceb, 0xde82bde9],\n    [0xbef9a3f7, 0xb2c67915], [0xc67178f2, 0xe372532b],\n    [0xca273ece, 0xea26619c], [0xd186b8c7, 0x21c0c207],\n    [0xeada7dd6, 0xcde0eb1e], [0xf57d4f7f, 0xee6ed178],\n    [0x06f067aa, 0x72176fba], [0x0a637dc5, 0xa2c898a6],\n    [0x113f9804, 0xbef90dae], [0x1b710b35, 0x131c471b],\n    [0x28db77f5, 0x23047d84], [0x32caab7b, 0x40c72493],\n    [0x3c9ebe0a, 0x15c9bebc], [0x431d67c4, 0x9c100d4c],\n    [0x4cc5d4be, 0xcb3e42b6], [0x597f299c, 0xfc657e2a],\n    [0x5fcb6fab, 0x3ad6faec], [0x6c44198c, 0x4a475817]\n  ];\n\n  // initial hash states\n  _states = {};\n  _states['SHA-512'] = [\n    [0x6a09e667, 0xf3bcc908],\n    [0xbb67ae85, 0x84caa73b],\n    [0x3c6ef372, 0xfe94f82b],\n    [0xa54ff53a, 0x5f1d36f1],\n    [0x510e527f, 0xade682d1],\n    [0x9b05688c, 0x2b3e6c1f],\n    [0x1f83d9ab, 0xfb41bd6b],\n    [0x5be0cd19, 0x137e2179]\n  ];\n  _states['SHA-384'] = [\n    [0xcbbb9d5d, 0xc1059ed8],\n    [0x629a292a, 0x367cd507],\n    [0x9159015a, 0x3070dd17],\n    [0x152fecd8, 0xf70e5939],\n    [0x67332667, 0xffc00b31],\n    [0x8eb44a87, 0x68581511],\n    [0xdb0c2e0d, 0x64f98fa7],\n    [0x47b5481d, 0xbefa4fa4]\n  ];\n  _states['SHA-512/256'] = [\n    [0x22312194, 0xFC2BF72C],\n    [0x9F555FA3, 0xC84C64C2],\n    [0x2393B86B, 0x6F53B151],\n    [0x96387719, 0x5940EABD],\n    [0x96283EE2, 0xA88EFFE3],\n    [0xBE5E1E25, 0x53863992],\n    [0x2B0199FC, 0x2C85B8AA],\n    [0x0EB72DDC, 0x81C52CA2]\n  ];\n  _states['SHA-512/224'] = [\n    [0x8C3D37C8, 0x19544DA2],\n    [0x73E19966, 0x89DCD4D6],\n    [0x1DFAB7AE, 0x32FF9C82],\n    [0x679DD514, 0x582F9FCF],\n    [0x0F6D2B69, 0x7BD44DA8],\n    [0x77E36F73, 0x04C48942],\n    [0x3F9D85A8, 0x6A1D36C8],\n    [0x1112E6AD, 0x91D692A1]\n  ];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-512 state with the given byte buffer.\n *\n * @param s the SHA-512 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (128 byte) chunks\n  var t1_hi, t1_lo;\n  var t2_hi, t2_lo;\n  var s0_hi, s0_lo;\n  var s1_hi, s1_lo;\n  var ch_hi, ch_lo;\n  var maj_hi, maj_lo;\n  var a_hi, a_lo;\n  var b_hi, b_lo;\n  var c_hi, c_lo;\n  var d_hi, d_lo;\n  var e_hi, e_lo;\n  var f_hi, f_lo;\n  var g_hi, g_lo;\n  var h_hi, h_lo;\n  var i, hi, lo, w2, w7, w15, w16;\n  var len = bytes.length();\n  while(len >= 128) {\n    // the w array will be populated with sixteen 64-bit big-endian words\n    // and then extended into 64 64-bit words according to SHA-512\n    for(i = 0; i < 16; ++i) {\n      w[i][0] = bytes.getInt32() >>> 0;\n      w[i][1] = bytes.getInt32() >>> 0;\n    }\n    for(; i < 80; ++i) {\n      // for word 2 words ago: ROTR 19(x) ^ ROTR 61(x) ^ SHR 6(x)\n      w2 = w[i - 2];\n      hi = w2[0];\n      lo = w2[1];\n\n      // high bits\n      t1_hi = (\n        ((hi >>> 19) | (lo << 13)) ^ // ROTR 19\n        ((lo >>> 29) | (hi << 3)) ^ // ROTR 61/(swap + ROTR 29)\n        (hi >>> 6)) >>> 0; // SHR 6\n      // low bits\n      t1_lo = (\n        ((hi << 13) | (lo >>> 19)) ^ // ROTR 19\n        ((lo << 3) | (hi >>> 29)) ^ // ROTR 61/(swap + ROTR 29)\n        ((hi << 26) | (lo >>> 6))) >>> 0; // SHR 6\n\n      // for word 15 words ago: ROTR 1(x) ^ ROTR 8(x) ^ SHR 7(x)\n      w15 = w[i - 15];\n      hi = w15[0];\n      lo = w15[1];\n\n      // high bits\n      t2_hi = (\n        ((hi >>> 1) | (lo << 31)) ^ // ROTR 1\n        ((hi >>> 8) | (lo << 24)) ^ // ROTR 8\n        (hi >>> 7)) >>> 0; // SHR 7\n      // low bits\n      t2_lo = (\n        ((hi << 31) | (lo >>> 1)) ^ // ROTR 1\n        ((hi << 24) | (lo >>> 8)) ^ // ROTR 8\n        ((hi << 25) | (lo >>> 7))) >>> 0; // SHR 7\n\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^64 (carry lo overflow)\n      w7 = w[i - 7];\n      w16 = w[i - 16];\n      lo = (t1_lo + w7[1] + t2_lo + w16[1]);\n      w[i][0] = (t1_hi + w7[0] + t2_hi + w16[0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      w[i][1] = lo >>> 0;\n    }\n\n    // initialize hash value for this chunk\n    a_hi = s[0][0];\n    a_lo = s[0][1];\n    b_hi = s[1][0];\n    b_lo = s[1][1];\n    c_hi = s[2][0];\n    c_lo = s[2][1];\n    d_hi = s[3][0];\n    d_lo = s[3][1];\n    e_hi = s[4][0];\n    e_lo = s[4][1];\n    f_hi = s[5][0];\n    f_lo = s[5][1];\n    g_hi = s[6][0];\n    g_lo = s[6][1];\n    h_hi = s[7][0];\n    h_lo = s[7][1];\n\n    // round function\n    for(i = 0; i < 80; ++i) {\n      // Sum1(e) = ROTR 14(e) ^ ROTR 18(e) ^ ROTR 41(e)\n      s1_hi = (\n        ((e_hi >>> 14) | (e_lo << 18)) ^ // ROTR 14\n        ((e_hi >>> 18) | (e_lo << 14)) ^ // ROTR 18\n        ((e_lo >>> 9) | (e_hi << 23))) >>> 0; // ROTR 41/(swap + ROTR 9)\n      s1_lo = (\n        ((e_hi << 18) | (e_lo >>> 14)) ^ // ROTR 14\n        ((e_hi << 14) | (e_lo >>> 18)) ^ // ROTR 18\n        ((e_lo << 23) | (e_hi >>> 9))) >>> 0; // ROTR 41/(swap + ROTR 9)\n\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch_hi = (g_hi ^ (e_hi & (f_hi ^ g_hi))) >>> 0;\n      ch_lo = (g_lo ^ (e_lo & (f_lo ^ g_lo))) >>> 0;\n\n      // Sum0(a) = ROTR 28(a) ^ ROTR 34(a) ^ ROTR 39(a)\n      s0_hi = (\n        ((a_hi >>> 28) | (a_lo << 4)) ^ // ROTR 28\n        ((a_lo >>> 2) | (a_hi << 30)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo >>> 7) | (a_hi << 25))) >>> 0; // ROTR 39/(swap + ROTR 7)\n      s0_lo = (\n        ((a_hi << 4) | (a_lo >>> 28)) ^ // ROTR 28\n        ((a_lo << 30) | (a_hi >>> 2)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo << 25) | (a_hi >>> 7))) >>> 0; // ROTR 39/(swap + ROTR 7)\n\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj_hi = ((a_hi & b_hi) | (c_hi & (a_hi ^ b_hi))) >>> 0;\n      maj_lo = ((a_lo & b_lo) | (c_lo & (a_lo ^ b_lo))) >>> 0;\n\n      // main algorithm\n      // t1 = (h + s1 + ch + _k[i] + _w[i]) modulo 2^64 (carry lo overflow)\n      lo = (h_lo + s1_lo + ch_lo + _k[i][1] + w[i][1]);\n      t1_hi = (h_hi + s1_hi + ch_hi + _k[i][0] + w[i][0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      t1_lo = lo >>> 0;\n\n      // t2 = s0 + maj modulo 2^64 (carry lo overflow)\n      lo = s0_lo + maj_lo;\n      t2_hi = (s0_hi + maj_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      t2_lo = lo >>> 0;\n\n      h_hi = g_hi;\n      h_lo = g_lo;\n\n      g_hi = f_hi;\n      g_lo = f_lo;\n\n      f_hi = e_hi;\n      f_lo = e_lo;\n\n      // e = (d + t1) modulo 2^64 (carry lo overflow)\n      lo = d_lo + t1_lo;\n      e_hi = (d_hi + t1_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      e_lo = lo >>> 0;\n\n      d_hi = c_hi;\n      d_lo = c_lo;\n\n      c_hi = b_hi;\n      c_lo = b_lo;\n\n      b_hi = a_hi;\n      b_lo = a_lo;\n\n      // a = (t1 + t2) modulo 2^64 (carry lo overflow)\n      lo = t1_lo + t2_lo;\n      a_hi = (t1_hi + t2_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      a_lo = lo >>> 0;\n    }\n\n    // update hash state (additional modulo 2^64)\n    lo = s[0][1] + a_lo;\n    s[0][0] = (s[0][0] + a_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[0][1] = lo >>> 0;\n\n    lo = s[1][1] + b_lo;\n    s[1][0] = (s[1][0] + b_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[1][1] = lo >>> 0;\n\n    lo = s[2][1] + c_lo;\n    s[2][0] = (s[2][0] + c_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[2][1] = lo >>> 0;\n\n    lo = s[3][1] + d_lo;\n    s[3][0] = (s[3][0] + d_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[3][1] = lo >>> 0;\n\n    lo = s[4][1] + e_lo;\n    s[4][0] = (s[4][0] + e_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[4][1] = lo >>> 0;\n\n    lo = s[5][1] + f_lo;\n    s[5][0] = (s[5][0] + f_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[5][1] = lo >>> 0;\n\n    lo = s[6][1] + g_lo;\n    s[6][0] = (s[6][0] + g_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[6][1] = lo >>> 0;\n\n    lo = s[7][1] + h_lo;\n    s[7][0] = (s[7][0] + h_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[7][1] = lo >>> 0;\n\n    len -= 128;\n  }\n}\n","/**\n * Utility functions for web applications.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2018 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nvar baseN = require('./baseN');\n\n/* Utilities API */\nvar util = module.exports = forge.util = forge.util || {};\n\n// define setImmediate and nextTick\n(function() {\n  // use native nextTick (unless we're in webpack)\n  // webpack (or better node-libs-browser polyfill) sets process.browser.\n  // this way we can detect webpack properly\n  if(typeof process !== 'undefined' && process.nextTick && !process.browser) {\n    util.nextTick = process.nextTick;\n    if(typeof setImmediate === 'function') {\n      util.setImmediate = setImmediate;\n    } else {\n      // polyfill setImmediate with nextTick, older versions of node\n      // (those w/o setImmediate) won't totally starve IO\n      util.setImmediate = util.nextTick;\n    }\n    return;\n  }\n\n  // polyfill nextTick with native setImmediate\n  if(typeof setImmediate === 'function') {\n    util.setImmediate = function() { return setImmediate.apply(undefined, arguments); };\n    util.nextTick = function(callback) {\n      return setImmediate(callback);\n    };\n    return;\n  }\n\n  /* Note: A polyfill upgrade pattern is used here to allow combining\n  polyfills. For example, MutationObserver is fast, but blocks UI updates,\n  so it needs to allow UI updates periodically, so it falls back on\n  postMessage or setTimeout. */\n\n  // polyfill with setTimeout\n  util.setImmediate = function(callback) {\n    setTimeout(callback, 0);\n  };\n\n  // upgrade polyfill to use postMessage\n  if(typeof window !== 'undefined' &&\n    typeof window.postMessage === 'function') {\n    var msg = 'forge.setImmediate';\n    var callbacks = [];\n    util.setImmediate = function(callback) {\n      callbacks.push(callback);\n      // only send message when one hasn't been sent in\n      // the current turn of the event loop\n      if(callbacks.length === 1) {\n        window.postMessage(msg, '*');\n      }\n    };\n    function handler(event) {\n      if(event.source === window && event.data === msg) {\n        event.stopPropagation();\n        var copy = callbacks.slice();\n        callbacks.length = 0;\n        copy.forEach(function(callback) {\n          callback();\n        });\n      }\n    }\n    window.addEventListener('message', handler, true);\n  }\n\n  // upgrade polyfill to use MutationObserver\n  if(typeof MutationObserver !== 'undefined') {\n    // polyfill with MutationObserver\n    var now = Date.now();\n    var attr = true;\n    var div = document.createElement('div');\n    var callbacks = [];\n    new MutationObserver(function() {\n      var copy = callbacks.slice();\n      callbacks.length = 0;\n      copy.forEach(function(callback) {\n        callback();\n      });\n    }).observe(div, {attributes: true});\n    var oldSetImmediate = util.setImmediate;\n    util.setImmediate = function(callback) {\n      if(Date.now() - now > 15) {\n        now = Date.now();\n        oldSetImmediate(callback);\n      } else {\n        callbacks.push(callback);\n        // only trigger observer when it hasn't been triggered in\n        // the current turn of the event loop\n        if(callbacks.length === 1) {\n          div.setAttribute('a', attr = !attr);\n        }\n      }\n    };\n  }\n\n  util.nextTick = util.setImmediate;\n})();\n\n// check if running under Node.js\nutil.isNodejs =\n  typeof process !== 'undefined' && process.versions && process.versions.node;\n\n\n// 'self' will also work in Web Workers (instance of WorkerGlobalScope) while\n// it will point to `window` in the main thread.\n// To remain compatible with older browsers, we fall back to 'window' if 'self'\n// is not available.\nutil.globalScope = (function() {\n  if(util.isNodejs) {\n    return global;\n  }\n\n  return typeof self === 'undefined' ? window : self;\n})();\n\n// define isArray\nutil.isArray = Array.isArray || function(x) {\n  return Object.prototype.toString.call(x) === '[object Array]';\n};\n\n// define isArrayBuffer\nutil.isArrayBuffer = function(x) {\n  return typeof ArrayBuffer !== 'undefined' && x instanceof ArrayBuffer;\n};\n\n// define isArrayBufferView\nutil.isArrayBufferView = function(x) {\n  return x && util.isArrayBuffer(x.buffer) && x.byteLength !== undefined;\n};\n\n/**\n * Ensure a bits param is 8, 16, 24, or 32. Used to validate input for\n * algorithms where bit manipulation, JavaScript limitations, and/or algorithm\n * design only allow for byte operations of a limited size.\n *\n * @param n number of bits.\n *\n * Throw Error if n invalid.\n */\nfunction _checkBitsParam(n) {\n  if(!(n === 8 || n === 16 || n === 24 || n === 32)) {\n    throw new Error('Only 8, 16, 24, or 32 bits supported: ' + n);\n  }\n}\n\n// TODO: set ByteBuffer to best available backing\nutil.ByteBuffer = ByteStringBuffer;\n\n/** Buffer w/BinaryString backing */\n\n/**\n * Constructor for a binary string backed byte buffer.\n *\n * @param [b] the bytes to wrap (either encoded as string, one byte per\n *          character, or as an ArrayBuffer or Typed Array).\n */\nfunction ByteStringBuffer(b) {\n  // TODO: update to match DataBuffer API\n\n  // the data in this buffer\n  this.data = '';\n  // the pointer for reading from this buffer\n  this.read = 0;\n\n  if(typeof b === 'string') {\n    this.data = b;\n  } else if(util.isArrayBuffer(b) || util.isArrayBufferView(b)) {\n    if(typeof Buffer !== 'undefined' && b instanceof Buffer) {\n      this.data = b.toString('binary');\n    } else {\n      // convert native buffer to forge buffer\n      // FIXME: support native buffers internally instead\n      var arr = new Uint8Array(b);\n      try {\n        this.data = String.fromCharCode.apply(null, arr);\n      } catch(e) {\n        for(var i = 0; i < arr.length; ++i) {\n          this.putByte(arr[i]);\n        }\n      }\n    }\n  } else if(b instanceof ByteStringBuffer ||\n    (typeof b === 'object' && typeof b.data === 'string' &&\n    typeof b.read === 'number')) {\n    // copy existing buffer\n    this.data = b.data;\n    this.read = b.read;\n  }\n\n  // used for v8 optimization\n  this._constructedStringLength = 0;\n}\nutil.ByteStringBuffer = ByteStringBuffer;\n\n/* Note: This is an optimization for V8-based browsers. When V8 concatenates\n  a string, the strings are only joined logically using a \"cons string\" or\n  \"constructed/concatenated string\". These containers keep references to one\n  another and can result in very large memory usage. For example, if a 2MB\n  string is constructed by concatenating 4 bytes together at a time, the\n  memory usage will be ~44MB; so ~22x increase. The strings are only joined\n  together when an operation requiring their joining takes place, such as\n  substr(). This function is called when adding data to this buffer to ensure\n  these types of strings are periodically joined to reduce the memory\n  footprint. */\nvar _MAX_CONSTRUCTED_STRING_LENGTH = 4096;\nutil.ByteStringBuffer.prototype._optimizeConstructedString = function(x) {\n  this._constructedStringLength += x;\n  if(this._constructedStringLength > _MAX_CONSTRUCTED_STRING_LENGTH) {\n    // this substr() should cause the constructed string to join\n    this.data.substr(0, 1);\n    this._constructedStringLength = 0;\n  }\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.ByteStringBuffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.ByteStringBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putByte = function(b) {\n  return this.putBytes(String.fromCharCode(b));\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.fillWithByte = function(b, n) {\n  b = String.fromCharCode(b);\n  var d = this.data;\n  while(n > 0) {\n    if(n & 1) {\n      d += b;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      b += b;\n    }\n  }\n  this.data = d;\n  this._optimizeConstructedString(n);\n  return this;\n};\n\n/**\n * Puts bytes in this buffer.\n *\n * @param bytes the bytes (as a binary encoded string) to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBytes = function(bytes) {\n  this.data += bytes;\n  this._optimizeConstructedString(bytes.length);\n  return this;\n};\n\n/**\n * Puts a UTF-16 encoded string into this buffer.\n *\n * @param str the string to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putString = function(str) {\n  return this.putBytes(util.encodeUtf8(str));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 24 & 0xFF));\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  var bytes = '';\n  do {\n    n -= 8;\n    bytes += String.fromCharCode((i >> n) & 0xFF);\n  } while(n > 0);\n  return this.putBytes(bytes);\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putSignedInt = function(i, n) {\n  // putInt checks n\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBuffer = function(buffer) {\n  return this.putBytes(buffer.getBytes());\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.getByte = function() {\n  return this.data.charCodeAt(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 8 ^\n    this.data.charCodeAt(this.read + 1));\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 16 ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16 ^\n    this.data.charCodeAt(this.read + 3) << 24);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by ceil(n/8).\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.charCodeAt(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer. Note that the resulting string is binary encoded (in node.js this\n * encoding is referred to as `binary`, it is *not* `utf8`).\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.ByteStringBuffer.prototype.getBytes = function(count) {\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.ByteStringBuffer.prototype.bytes = function(count) {\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.at = function(i) {\n  return this.data.charCodeAt(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.setAt = function(i, b) {\n  this.data = this.data.substr(0, this.read + i) +\n    String.fromCharCode(b) +\n    this.data.substr(this.read + i + 1);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.ByteStringBuffer.prototype.last = function() {\n  return this.data.charCodeAt(this.data.length - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.ByteStringBuffer.prototype.copy = function() {\n  var c = util.createBuffer(this.data);\n  c.read = this.read;\n  return c;\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    this.data = this.data.slice(this.read);\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.clear = function() {\n  this.data = '';\n  this.read = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.truncate = function(count) {\n  var len = Math.max(0, this.length() - count);\n  this.data = this.data.substr(this.read, len);\n  this.read = 0;\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.ByteStringBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a UTF-16 string (standard JavaScript string).\n *\n * @return a UTF-16 string.\n */\nutil.ByteStringBuffer.prototype.toString = function() {\n  return util.decodeUtf8(this.bytes());\n};\n\n/** End Buffer w/BinaryString backing */\n\n/** Buffer w/UInt8Array backing */\n\n/**\n * FIXME: Experimental. Do not use yet.\n *\n * Constructor for an ArrayBuffer-backed byte buffer.\n *\n * The buffer may be constructed from a string, an ArrayBuffer, DataView, or a\n * TypedArray.\n *\n * If a string is given, its encoding should be provided as an option,\n * otherwise it will default to 'binary'. A 'binary' string is encoded such\n * that each character is one byte in length and size.\n *\n * If an ArrayBuffer, DataView, or TypedArray is given, it will be used\n * *directly* without any copying. Note that, if a write to the buffer requires\n * more space, the buffer will allocate a new backing ArrayBuffer to\n * accommodate. The starting read and write offsets for the buffer may be\n * given as options.\n *\n * @param [b] the initial bytes for this buffer.\n * @param options the options to use:\n *          [readOffset] the starting read offset to use (default: 0).\n *          [writeOffset] the starting write offset to use (default: the\n *            length of the first parameter).\n *          [growSize] the minimum amount, in bytes, to grow the buffer by to\n *            accommodate writes (default: 1024).\n *          [encoding] the encoding ('binary', 'utf8', 'utf16', 'hex') for the\n *            first parameter, if it is a string (default: 'binary').\n */\nfunction DataBuffer(b, options) {\n  // default options\n  options = options || {};\n\n  // pointers for read from/write to buffer\n  this.read = options.readOffset || 0;\n  this.growSize = options.growSize || 1024;\n\n  var isArrayBuffer = util.isArrayBuffer(b);\n  var isArrayBufferView = util.isArrayBufferView(b);\n  if(isArrayBuffer || isArrayBufferView) {\n    // use ArrayBuffer directly\n    if(isArrayBuffer) {\n      this.data = new DataView(b);\n    } else {\n      // TODO: adjust read/write offset based on the type of view\n      // or specify that this must be done in the options ... that the\n      // offsets are byte-based\n      this.data = new DataView(b.buffer, b.byteOffset, b.byteLength);\n    }\n    this.write = ('writeOffset' in options ?\n      options.writeOffset : this.data.byteLength);\n    return;\n  }\n\n  // initialize to empty array buffer and add any given bytes using putBytes\n  this.data = new DataView(new ArrayBuffer(0));\n  this.write = 0;\n\n  if(b !== null && b !== undefined) {\n    this.putBytes(b);\n  }\n\n  if('writeOffset' in options) {\n    this.write = options.writeOffset;\n  }\n}\nutil.DataBuffer = DataBuffer;\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.DataBuffer.prototype.length = function() {\n  return this.write - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.DataBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Ensures this buffer has enough empty space to accommodate the given number\n * of bytes. An optional parameter may be given that indicates a minimum\n * amount to grow the buffer if necessary. If the parameter is not given,\n * the buffer will be grown by some previously-specified default amount\n * or heuristic.\n *\n * @param amount the number of bytes to accommodate.\n * @param [growSize] the minimum amount, in bytes, to grow the buffer by if\n *          necessary.\n */\nutil.DataBuffer.prototype.accommodate = function(amount, growSize) {\n  if(this.length() >= amount) {\n    return this;\n  }\n  growSize = Math.max(growSize || this.growSize, amount);\n\n  // grow buffer\n  var src = new Uint8Array(\n    this.data.buffer, this.data.byteOffset, this.data.byteLength);\n  var dst = new Uint8Array(this.length() + growSize);\n  dst.set(src);\n  this.data = new DataView(dst.buffer);\n\n  return this;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putByte = function(b) {\n  this.accommodate(1);\n  this.data.setUint8(this.write++, b);\n  return this;\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.fillWithByte = function(b, n) {\n  this.accommodate(n);\n  for(var i = 0; i < n; ++i) {\n    this.data.setUint8(b);\n  }\n  return this;\n};\n\n/**\n * Puts bytes in this buffer. The bytes may be given as a string, an\n * ArrayBuffer, a DataView, or a TypedArray.\n *\n * @param bytes the bytes to put.\n * @param [encoding] the encoding for the first parameter ('binary', 'utf8',\n *          'utf16', 'hex'), if it is a string (default: 'binary').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBytes = function(bytes, encoding) {\n  if(util.isArrayBufferView(bytes)) {\n    var src = new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    var len = src.byteLength - src.byteOffset;\n    this.accommodate(len);\n    var dst = new Uint8Array(this.data.buffer, this.write);\n    dst.set(src);\n    this.write += len;\n    return this;\n  }\n\n  if(util.isArrayBuffer(bytes)) {\n    var src = new Uint8Array(bytes);\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(this.data.buffer);\n    dst.set(src, this.write);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  // bytes is a util.DataBuffer or equivalent\n  if(bytes instanceof util.DataBuffer ||\n    (typeof bytes === 'object' &&\n    typeof bytes.read === 'number' && typeof bytes.write === 'number' &&\n    util.isArrayBufferView(bytes.data))) {\n    var src = new Uint8Array(bytes.data.byteLength, bytes.read, bytes.length());\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(bytes.data.byteLength, this.write);\n    dst.set(src);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  if(bytes instanceof util.ByteStringBuffer) {\n    // copy binary string and process as the same as a string parameter below\n    bytes = bytes.data;\n    encoding = 'binary';\n  }\n\n  // string conversion\n  encoding = encoding || 'binary';\n  if(typeof bytes === 'string') {\n    var view;\n\n    // decode from string\n    if(encoding === 'hex') {\n      this.accommodate(Math.ceil(bytes.length / 2));\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.hex.decode(bytes, view, this.write);\n      return this;\n    }\n    if(encoding === 'base64') {\n      this.accommodate(Math.ceil(bytes.length / 4) * 3);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.base64.decode(bytes, view, this.write);\n      return this;\n    }\n\n    // encode text as UTF-8 bytes\n    if(encoding === 'utf8') {\n      // encode as UTF-8 then decode string as raw binary\n      bytes = util.encodeUtf8(bytes);\n      encoding = 'binary';\n    }\n\n    // decode string as raw binary\n    if(encoding === 'binary' || encoding === 'raw') {\n      // one byte per character\n      this.accommodate(bytes.length);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.raw.decode(view);\n      return this;\n    }\n\n    // encode text as UTF-16 bytes\n    if(encoding === 'utf16') {\n      // two bytes per character\n      this.accommodate(bytes.length * 2);\n      view = new Uint16Array(this.data.buffer, this.write);\n      this.write += util.text.utf16.encode(view);\n      return this;\n    }\n\n    throw new Error('Invalid encoding: ' + encoding);\n  }\n\n  throw Error('Invalid parameter: ' + bytes);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBuffer = function(buffer) {\n  this.putBytes(buffer);\n  buffer.clear();\n  return this;\n};\n\n/**\n * Puts a string into this buffer.\n *\n * @param str the string to put.\n * @param [encoding] the encoding for the string (default: 'utf16').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putString = function(str) {\n  return this.putBytes(str, 'utf16');\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16 = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24 = function(i) {\n  this.accommodate(3);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32 = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16Le = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i, true);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24Le = function(i) {\n  this.accommodate(3);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF, true);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32Le = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i, true);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  do {\n    n -= 8;\n    this.data.setInt8(this.write++, (i >> n) & 0xFF);\n  } while(n > 0);\n  return this;\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putSignedInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.getByte = function() {\n  return this.data.getInt8(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16 = function() {\n  var rval = this.data.getInt16(this.read);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.getInt16(this.read) << 8 ^\n    this.data.getInt8(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32 = function() {\n  var rval = this.data.getInt32(this.read);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16Le = function() {\n  var rval = this.data.getInt16(this.read, true);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.getInt8(this.read) ^\n    this.data.getInt16(this.read + 1, true) << 8);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32Le = function() {\n  var rval = this.data.getInt32(this.read, true);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.getInt8(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer.\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.DataBuffer.prototype.getBytes = function(count) {\n  // TODO: deprecate this method, it is poorly named and\n  // this.toString('binary') replaces it\n  // add a toTypedArray()/toArrayBuffer() function\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.DataBuffer.prototype.bytes = function(count) {\n  // TODO: deprecate this method, it is poorly named, add \"getString()\"\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.at = function(i) {\n  return this.data.getUint8(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.setAt = function(i, b) {\n  this.data.setUint8(i, b);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.DataBuffer.prototype.last = function() {\n  return this.data.getUint8(this.write - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.DataBuffer.prototype.copy = function() {\n  return new util.DataBuffer(this);\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    var src = new Uint8Array(this.data.buffer, this.read);\n    var dst = new Uint8Array(src.byteLength);\n    dst.set(src);\n    this.data = new DataView(dst);\n    this.write -= this.read;\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.clear = function() {\n  this.data = new DataView(new ArrayBuffer(0));\n  this.read = this.write = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.truncate = function(count) {\n  this.write = Math.max(0, this.length() - count);\n  this.read = Math.min(this.read, this.write);\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.DataBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.byteLength; ++i) {\n    var b = this.data.getUint8(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a string, using the given encoding. If no\n * encoding is given, 'utf8' (UTF-8) is used.\n *\n * @param [encoding] the encoding to use: 'binary', 'utf8', 'utf16', 'hex',\n *          'base64' (default: 'utf8').\n *\n * @return a string representation of the bytes in this buffer.\n */\nutil.DataBuffer.prototype.toString = function(encoding) {\n  var view = new Uint8Array(this.data, this.read, this.length());\n  encoding = encoding || 'utf8';\n\n  // encode to string\n  if(encoding === 'binary' || encoding === 'raw') {\n    return util.binary.raw.encode(view);\n  }\n  if(encoding === 'hex') {\n    return util.binary.hex.encode(view);\n  }\n  if(encoding === 'base64') {\n    return util.binary.base64.encode(view);\n  }\n\n  // decode to text\n  if(encoding === 'utf8') {\n    return util.text.utf8.decode(view);\n  }\n  if(encoding === 'utf16') {\n    return util.text.utf16.decode(view);\n  }\n\n  throw new Error('Invalid encoding: ' + encoding);\n};\n\n/** End Buffer w/UInt8Array backing */\n\n/**\n * Creates a buffer that stores bytes. A value may be given to populate the\n * buffer with data. This value can either be string of encoded bytes or a\n * regular string of characters. When passing a string of binary encoded\n * bytes, the encoding `raw` should be given. This is also the default. When\n * passing a string of characters, the encoding `utf8` should be given.\n *\n * @param [input] a string with encoded bytes to store in the buffer.\n * @param [encoding] (default: 'raw', other: 'utf8').\n */\nutil.createBuffer = function(input, encoding) {\n  // TODO: deprecate, use new ByteBuffer() instead\n  encoding = encoding || 'raw';\n  if(input !== undefined && encoding === 'utf8') {\n    input = util.encodeUtf8(input);\n  }\n  return new util.ByteBuffer(input);\n};\n\n/**\n * Fills a string with a particular value. If you want the string to be a byte\n * string, pass in String.fromCharCode(theByte).\n *\n * @param c the character to fill the string with, use String.fromCharCode\n *          to fill the string with a byte value.\n * @param n the number of characters of value c to fill with.\n *\n * @return the filled string.\n */\nutil.fillString = function(c, n) {\n  var s = '';\n  while(n > 0) {\n    if(n & 1) {\n      s += c;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      c += c;\n    }\n  }\n  return s;\n};\n\n/**\n * Performs a per byte XOR between two byte strings and returns the result as a\n * string of bytes.\n *\n * @param s1 first string of bytes.\n * @param s2 second string of bytes.\n * @param n the number of bytes to XOR.\n *\n * @return the XOR'd result.\n */\nutil.xorBytes = function(s1, s2, n) {\n  var s3 = '';\n  var b = '';\n  var t = '';\n  var i = 0;\n  var c = 0;\n  for(; n > 0; --n, ++i) {\n    b = s1.charCodeAt(i) ^ s2.charCodeAt(i);\n    if(c >= 10) {\n      s3 += t;\n      t = '';\n      c = 0;\n    }\n    t += String.fromCharCode(b);\n    ++c;\n  }\n  s3 += t;\n  return s3;\n};\n\n/**\n * Converts a hex string into a 'binary' encoded string of bytes.\n *\n * @param hex the hexadecimal string to convert.\n *\n * @return the binary-encoded string of bytes.\n */\nutil.hexToBytes = function(hex) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.decode instead.\"\n  var rval = '';\n  var i = 0;\n  if(hex.length & 1 == 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    rval += String.fromCharCode(parseInt(hex[0], 16));\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    rval += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  }\n  return rval;\n};\n\n/**\n * Converts a 'binary' encoded string of bytes to hex.\n *\n * @param bytes the byte string to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.bytesToHex = function(bytes) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.encode instead.\"\n  return util.createBuffer(bytes).toHex();\n};\n\n/**\n * Converts an 32-bit integer to 4-big-endian byte string.\n *\n * @param i the integer.\n *\n * @return the byte string.\n */\nutil.int32ToBytes = function(i) {\n  return (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n// base64 characters, reverse mapping\nvar _base64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nvar _base64Idx = [\n/*43 -43 = 0*/\n/*'+',  1,  2,  3,'/' */\n   62, -1, -1, -1, 63,\n\n/*'0','1','2','3','4','5','6','7','8','9' */\n   52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\n\n/*15, 16, 17,'=', 19, 20, 21 */\n  -1, -1, -1, 64, -1, -1, -1,\n\n/*65 - 43 = 22*/\n/*'A','B','C','D','E','F','G','H','I','J','K','L','M', */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n\n/*'N','O','P','Q','R','S','T','U','V','W','X','Y','Z' */\n   13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n\n/*91 - 43 = 48 */\n/*48, 49, 50, 51, 52, 53 */\n  -1, -1, -1, -1, -1, -1,\n\n/*97 - 43 = 54*/\n/*'a','b','c','d','e','f','g','h','i','j','k','l','m' */\n   26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n\n/*'n','o','p','q','r','s','t','u','v','w','x','y','z' */\n   39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51\n];\n\n// base58 characters (Bitcoin alphabet)\nvar _base58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\n/**\n * Base64 encodes a 'binary' encoded string of bytes.\n *\n * @param input the binary encoded string of bytes to base64-encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output.\n */\nutil.encode64 = function(input, maxline) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.encode instead.\"\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Base64 decodes a string into a 'binary' encoded string of bytes.\n *\n * @param input the base64-encoded input.\n *\n * @return the binary encoded string.\n */\nutil.decode64 = function(input) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.decode instead.\"\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  var output = '';\n  var enc1, enc2, enc3, enc4;\n  var i = 0;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    output += String.fromCharCode((enc1 << 2) | (enc2 >> 4));\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      output += String.fromCharCode(((enc2 & 15) << 4) | (enc3 >> 2));\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        output += String.fromCharCode(((enc3 & 3) << 6) | enc4);\n      }\n    }\n  }\n\n  return output;\n};\n\n/**\n * Encodes the given string of characters (a standard JavaScript\n * string) as a binary encoded string where the bytes represent\n * a UTF-8 encoded string of characters. Non-ASCII characters will be\n * encoded as multiple bytes according to UTF-8.\n *\n * @param str a standard string of characters to encode.\n *\n * @return the binary encoded string.\n */\nutil.encodeUtf8 = function(str) {\n  return unescape(encodeURIComponent(str));\n};\n\n/**\n * Decodes a binary encoded string that contains bytes that\n * represent a UTF-8 encoded string of characters -- into a\n * string of characters (a standard JavaScript string).\n *\n * @param str the binary encoded string to decode.\n *\n * @return the resulting standard string of characters.\n */\nutil.decodeUtf8 = function(str) {\n  return decodeURIComponent(escape(str));\n};\n\n// binary encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.binary = {\n  raw: {},\n  hex: {},\n  base64: {},\n  base58: {},\n  baseN : {\n    encode: baseN.encode,\n    decode: baseN.decode\n  }\n};\n\n/**\n * Encodes a Uint8Array as a binary-encoded string. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param bytes the Uint8Array to encode.\n *\n * @return the binary-encoded string.\n */\nutil.binary.raw.encode = function(bytes) {\n  return String.fromCharCode.apply(null, bytes);\n};\n\n/**\n * Decodes a binary-encoded string to a Uint8Array. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param str the binary-encoded string to decode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.raw.decode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Encodes a 'binary' string, ArrayBuffer, DataView, TypedArray, or\n * ByteBuffer as a string of hexadecimal characters.\n *\n * @param bytes the bytes to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.binary.hex.encode = util.bytesToHex;\n\n/**\n * Decodes a hex-encoded string to a Uint8Array.\n *\n * @param hex the hexadecimal string to convert.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.hex.decode = function(hex, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(hex.length / 2));\n  }\n  offset = offset || 0;\n  var i = 0, j = offset;\n  if(hex.length & 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    out[j++] = parseInt(hex[0], 16);\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    out[j++] = parseInt(hex.substr(i, 2), 16);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Base64-encodes a Uint8Array.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output string.\n */\nutil.binary.base64.encode = function(input, maxline) {\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.byteLength) {\n    chr1 = input[i++];\n    chr2 = input[i++];\n    chr3 = input[i++];\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Decodes a base64-encoded string to a Uint8Array.\n *\n * @param input the base64-encoded input string.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.base64.decode = function(input, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(input.length / 4) * 3);\n  }\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  offset = offset || 0;\n  var enc1, enc2, enc3, enc4;\n  var i = 0, j = offset;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    out[j++] = (enc1 << 2) | (enc2 >> 4);\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      out[j++] = ((enc2 & 15) << 4) | (enc3 >> 2);\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        out[j++] = ((enc3 & 3) << 6) | enc4;\n      }\n    }\n  }\n\n  // make sure result is the exact decoded length\n  return output ? (j - offset) : out.subarray(0, j);\n};\n\n// add support for base58 encoding/decoding with Bitcoin alphabet\nutil.binary.base58.encode = function(input, maxline) {\n  return util.binary.baseN.encode(input, _base58, maxline);\n};\nutil.binary.base58.decode = function(input, maxline) {\n  return util.binary.baseN.decode(input, _base58, maxline);\n};\n\n// text encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.text = {\n  utf8: {},\n  utf16: {}\n};\n\n/**\n * Encodes the given string as UTF-8 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf8.encode = function(str, output, offset) {\n  str = util.encodeUtf8(str);\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-8 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf8.decode = function(bytes) {\n  return util.decodeUtf8(String.fromCharCode.apply(null, bytes));\n};\n\n/**\n * Encodes the given string as UTF-16 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf16.encode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length * 2);\n  }\n  var view = new Uint16Array(out.buffer);\n  offset = offset || 0;\n  var j = offset;\n  var k = offset;\n  for(var i = 0; i < str.length; ++i) {\n    view[k++] = str.charCodeAt(i);\n    j += 2;\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-16 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf16.decode = function(bytes) {\n  return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n};\n\n/**\n * Deflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true to return only raw deflate data, false to include zlib\n *          header and trailer.\n *\n * @return the deflated data as a string.\n */\nutil.deflate = function(api, bytes, raw) {\n  bytes = util.decode64(api.deflate(util.encode64(bytes)).rval);\n\n  // strip zlib header and trailer if necessary\n  if(raw) {\n    // zlib header is 2 bytes (CMF,FLG) where FLG indicates that\n    // there is a 4-byte DICT (alder-32) block before the data if\n    // its 5th bit is set\n    var start = 2;\n    var flg = bytes.charCodeAt(1);\n    if(flg & 0x20) {\n      start = 6;\n    }\n    // zlib trailer is 4 bytes of adler-32\n    bytes = bytes.substring(start, bytes.length - 4);\n  }\n\n  return bytes;\n};\n\n/**\n * Inflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true if the incoming data has no zlib header or trailer and is\n *          raw DEFLATE data.\n *\n * @return the inflated data as a string, null on error.\n */\nutil.inflate = function(api, bytes, raw) {\n  // TODO: add zlib header and trailer if necessary/possible\n  var rval = api.inflate(util.encode64(bytes)).rval;\n  return (rval === null) ? null : util.decode64(rval);\n};\n\n/**\n * Sets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param obj the storage object, null to remove.\n */\nvar _setStorageObject = function(api, id, obj) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  var rval;\n  if(obj === null) {\n    rval = api.removeItem(id);\n  } else {\n    // json-encode and base64-encode object\n    obj = util.encode64(JSON.stringify(obj));\n    rval = api.setItem(id, obj);\n  }\n\n  // handle potential flash error\n  if(typeof(rval) !== 'undefined' && rval.rval !== true) {\n    var error = new Error(rval.error.message);\n    error.id = rval.error.id;\n    error.name = rval.error.name;\n    throw error;\n  }\n};\n\n/**\n * Gets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n *\n * @return the storage object entry or null if none exists.\n */\nvar _getStorageObject = function(api, id) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  // get the existing entry\n  var rval = api.getItem(id);\n\n  /* Note: We check api.init because we can't do (api == localStorage)\n    on IE because of \"Class doesn't support Automation\" exception. Only\n    the flash api has an init method so this works too, but we need a\n    better solution in the future. */\n\n  // flash returns item wrapped in an object, handle special case\n  if(api.init) {\n    if(rval.rval === null) {\n      if(rval.error) {\n        var error = new Error(rval.error.message);\n        error.id = rval.error.id;\n        error.name = rval.error.name;\n        throw error;\n      }\n      // no error, but also no item\n      rval = null;\n    } else {\n      rval = rval.rval;\n    }\n  }\n\n  // handle decoding\n  if(rval !== null) {\n    // base64-decode and json-decode data\n    rval = JSON.parse(util.decode64(rval));\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item in local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n */\nvar _setItem = function(api, id, key, data) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj === null) {\n    // create a new storage object\n    obj = {};\n  }\n  // update key\n  obj[key] = data;\n\n  // set storage object\n  _setStorageObject(api, id, obj);\n};\n\n/**\n * Gets an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n *\n * @return the item.\n */\nvar _getItem = function(api, id, key) {\n  // get storage object\n  var rval = _getStorageObject(api, id);\n  if(rval !== null) {\n    // return data at key\n    rval = (key in rval) ? rval[key] : null;\n  }\n\n  return rval;\n};\n\n/**\n * Removes an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n */\nvar _removeItem = function(api, id, key) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj !== null && key in obj) {\n    // remove key\n    delete obj[key];\n\n    // see if entry has no keys remaining\n    var empty = true;\n    for(var prop in obj) {\n      empty = false;\n      break;\n    }\n    if(empty) {\n      // remove entry entirely if no keys are left\n      obj = null;\n    }\n\n    // set storage object\n    _setStorageObject(api, id, obj);\n  }\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n */\nvar _clearItems = function(api, id) {\n  _setStorageObject(api, id, null);\n};\n\n/**\n * Calls a storage function.\n *\n * @param func the function to call.\n * @param args the arguments for the function.\n * @param location the location argument.\n *\n * @return the return value from the function.\n */\nvar _callStorageFunction = function(func, args, location) {\n  var rval = null;\n\n  // default storage types\n  if(typeof(location) === 'undefined') {\n    location = ['web', 'flash'];\n  }\n\n  // apply storage types in order of preference\n  var type;\n  var done = false;\n  var exception = null;\n  for(var idx in location) {\n    type = location[idx];\n    try {\n      if(type === 'flash' || type === 'both') {\n        if(args[0] === null) {\n          throw new Error('Flash local storage not available.');\n        }\n        rval = func.apply(this, args);\n        done = (type === 'flash');\n      }\n      if(type === 'web' || type === 'both') {\n        args[0] = localStorage;\n        rval = func.apply(this, args);\n        done = true;\n      }\n    } catch(ex) {\n      exception = ex;\n    }\n    if(done) {\n      break;\n    }\n  }\n\n  if(!done) {\n    throw exception;\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item on local disk.\n *\n * The available types of local storage include 'flash', 'web', and 'both'.\n *\n * The type 'flash' refers to flash local storage (SharedObject). In order\n * to use flash local storage, the 'api' parameter must be valid. The type\n * 'web' refers to WebStorage, if supported by the browser. The type 'both'\n * refers to storing using both 'flash' and 'web', not just one or the\n * other.\n *\n * The location array should list the storage types to use in order of\n * preference:\n *\n * ['flash']: flash only storage\n * ['web']: web only storage\n * ['both']: try to store in both\n * ['flash','web']: store in flash first, but if not available, 'web'\n * ['web','flash']: store in web first, but if not available, 'flash'\n *\n * The location array defaults to: ['web', 'flash']\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n * @param location an array with the preferred types of storage to use.\n */\nutil.setItem = function(api, id, key, data, location) {\n  _callStorageFunction(_setItem, arguments, location);\n};\n\n/**\n * Gets an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n *\n * @return the item.\n */\nutil.getItem = function(api, id, key, location) {\n  return _callStorageFunction(_getItem, arguments, location);\n};\n\n/**\n * Removes an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n */\nutil.removeItem = function(api, id, key, location) {\n  _callStorageFunction(_removeItem, arguments, location);\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface if flash is available.\n * @param id the storage ID to use.\n * @param location an array with the preferred types of storage to use.\n */\nutil.clearItems = function(api, id, location) {\n  _callStorageFunction(_clearItems, arguments, location);\n};\n\n/**\n * Check if an object is empty.\n *\n * Taken from:\n * http://stackoverflow.com/questions/679915/how-do-i-test-for-an-empty-javascript-object-from-json/679937#679937\n *\n * @param object the object to check.\n */\nutil.isEmpty = function(obj) {\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Format with simple printf-style interpolation.\n *\n * %%: literal '%'\n * %s,%o: convert next argument into a string.\n *\n * @param format the string to format.\n * @param ... arguments to interpolate into the format string.\n */\nutil.format = function(format) {\n  var re = /%./g;\n  // current match\n  var match;\n  // current part\n  var part;\n  // current arg index\n  var argi = 0;\n  // collected parts to recombine later\n  var parts = [];\n  // last index found\n  var last = 0;\n  // loop while matches remain\n  while((match = re.exec(format))) {\n    part = format.substring(last, re.lastIndex - 2);\n    // don't add empty strings (ie, parts between %s%s)\n    if(part.length > 0) {\n      parts.push(part);\n    }\n    last = re.lastIndex;\n    // switch on % code\n    var code = match[0][1];\n    switch(code) {\n    case 's':\n    case 'o':\n      // check if enough arguments were given\n      if(argi < arguments.length) {\n        parts.push(arguments[argi++ + 1]);\n      } else {\n        parts.push('<?>');\n      }\n      break;\n    // FIXME: do proper formating for numbers, etc\n    //case 'f':\n    //case 'd':\n    case '%':\n      parts.push('%');\n      break;\n    default:\n      parts.push('<%' + code + '?>');\n    }\n  }\n  // add trailing part of format string\n  parts.push(format.substring(last));\n  return parts.join('');\n};\n\n/**\n * Formats a number.\n *\n * http://snipplr.com/view/5945/javascript-numberformat--ported-from-php/\n */\nutil.formatNumber = function(number, decimals, dec_point, thousands_sep) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +     bugfix by: Michael White (http://crestidg.com)\n  // +     bugfix by: Benjamin Lupton\n  // +     bugfix by: Allan Jensen (http://www.winternet.no)\n  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // *     example 1: number_format(1234.5678, 2, '.', '');\n  // *     returns 1: 1234.57\n\n  var n = number, c = isNaN(decimals = Math.abs(decimals)) ? 2 : decimals;\n  var d = dec_point === undefined ? ',' : dec_point;\n  var t = thousands_sep === undefined ?\n   '.' : thousands_sep, s = n < 0 ? '-' : '';\n  var i = parseInt((n = Math.abs(+n || 0).toFixed(c)), 10) + '';\n  var j = (i.length > 3) ? i.length % 3 : 0;\n  return s + (j ? i.substr(0, j) + t : '') +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + t) +\n    (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');\n};\n\n/**\n * Formats a byte size.\n *\n * http://snipplr.com/view/5949/format-humanize-file-byte-size-presentation-in-javascript/\n */\nutil.formatSize = function(size) {\n  if(size >= 1073741824) {\n    size = util.formatNumber(size / 1073741824, 2, '.', '') + ' GiB';\n  } else if(size >= 1048576) {\n    size = util.formatNumber(size / 1048576, 2, '.', '') + ' MiB';\n  } else if(size >= 1024) {\n    size = util.formatNumber(size / 1024, 0) + ' KiB';\n  } else {\n    size = util.formatNumber(size, 0) + ' bytes';\n  }\n  return size;\n};\n\n/**\n * Converts an IPv4 or IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv4 or IPv6 address to convert.\n *\n * @return the 4-byte IPv6 or 16-byte IPv6 address or null if the address can't\n *         be parsed.\n */\nutil.bytesFromIP = function(ip) {\n  if(ip.indexOf('.') !== -1) {\n    return util.bytesFromIPv4(ip);\n  }\n  if(ip.indexOf(':') !== -1) {\n    return util.bytesFromIPv6(ip);\n  }\n  return null;\n};\n\n/**\n * Converts an IPv4 string representation into bytes (in network order).\n *\n * @param ip the IPv4 address to convert.\n *\n * @return the 4-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv4 = function(ip) {\n  ip = ip.split('.');\n  if(ip.length !== 4) {\n    return null;\n  }\n  var b = util.createBuffer();\n  for(var i = 0; i < ip.length; ++i) {\n    var num = parseInt(ip[i], 10);\n    if(isNaN(num)) {\n      return null;\n    }\n    b.putByte(num);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts an IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv6 address to convert.\n *\n * @return the 16-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv6 = function(ip) {\n  var blanks = 0;\n  ip = ip.split(':').filter(function(e) {\n    if(e.length === 0) ++blanks;\n    return true;\n  });\n  var zeros = (8 - ip.length + blanks) * 2;\n  var b = util.createBuffer();\n  for(var i = 0; i < 8; ++i) {\n    if(!ip[i] || ip[i].length === 0) {\n      b.fillWithByte(0, zeros);\n      zeros = 0;\n      continue;\n    }\n    var bytes = util.hexToBytes(ip[i]);\n    if(bytes.length < 2) {\n      b.putByte(0);\n    }\n    b.putBytes(bytes);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation or 16-bytes into\n * an IPv6 string representation. The bytes must be in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 or IPv6 string representation if 4 or 16 bytes,\n *         respectively, are given, otherwise null.\n */\nutil.bytesToIP = function(bytes) {\n  if(bytes.length === 4) {\n    return util.bytesToIPv4(bytes);\n  }\n  if(bytes.length === 16) {\n    return util.bytesToIPv6(bytes);\n  }\n  return null;\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv4 = function(bytes) {\n  if(bytes.length !== 4) {\n    return null;\n  }\n  var ip = [];\n  for(var i = 0; i < bytes.length; ++i) {\n    ip.push(bytes.charCodeAt(i));\n  }\n  return ip.join('.');\n};\n\n/**\n * Converts 16-bytes into an IPv16 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv16 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv6 = function(bytes) {\n  if(bytes.length !== 16) {\n    return null;\n  }\n  var ip = [];\n  var zeroGroups = [];\n  var zeroMaxGroup = 0;\n  for(var i = 0; i < bytes.length; i += 2) {\n    var hex = util.bytesToHex(bytes[i] + bytes[i + 1]);\n    // canonicalize zero representation\n    while(hex[0] === '0' && hex !== '0') {\n      hex = hex.substr(1);\n    }\n    if(hex === '0') {\n      var last = zeroGroups[zeroGroups.length - 1];\n      var idx = ip.length;\n      if(!last || idx !== last.end + 1) {\n        zeroGroups.push({start: idx, end: idx});\n      } else {\n        last.end = idx;\n        if((last.end - last.start) >\n          (zeroGroups[zeroMaxGroup].end - zeroGroups[zeroMaxGroup].start)) {\n          zeroMaxGroup = zeroGroups.length - 1;\n        }\n      }\n    }\n    ip.push(hex);\n  }\n  if(zeroGroups.length > 0) {\n    var group = zeroGroups[zeroMaxGroup];\n    // only shorten group of length > 0\n    if(group.end - group.start > 0) {\n      ip.splice(group.start, group.end - group.start + 1, '');\n      if(group.start === 0) {\n        ip.unshift('');\n      }\n      if(group.end === 7) {\n        ip.push('');\n      }\n    }\n  }\n  return ip.join(':');\n};\n\n/**\n * Estimates the number of processes that can be run concurrently. If\n * creating Web Workers, keep in mind that the main JavaScript process needs\n * its own core.\n *\n * @param options the options to use:\n *          update true to force an update (not use the cached value).\n * @param callback(err, max) called once the operation completes.\n */\nutil.estimateCores = function(options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  if('cores' in util && !options.update) {\n    return callback(null, util.cores);\n  }\n  if(typeof navigator !== 'undefined' &&\n    'hardwareConcurrency' in navigator &&\n    navigator.hardwareConcurrency > 0) {\n    util.cores = navigator.hardwareConcurrency;\n    return callback(null, util.cores);\n  }\n  if(typeof Worker === 'undefined') {\n    // workers not available\n    util.cores = 1;\n    return callback(null, util.cores);\n  }\n  if(typeof Blob === 'undefined') {\n    // can't estimate, default to 2\n    util.cores = 2;\n    return callback(null, util.cores);\n  }\n\n  // create worker concurrency estimation code as blob\n  var blobUrl = URL.createObjectURL(new Blob(['(',\n    function() {\n      self.addEventListener('message', function(e) {\n        // run worker for 4 ms\n        var st = Date.now();\n        var et = st + 4;\n        while(Date.now() < et);\n        self.postMessage({st: st, et: et});\n      });\n    }.toString(),\n  ')()'], {type: 'application/javascript'}));\n\n  // take 5 samples using 16 workers\n  sample([], 5, 16);\n\n  function sample(max, samples, numWorkers) {\n    if(samples === 0) {\n      // get overlap average\n      var avg = Math.floor(max.reduce(function(avg, x) {\n        return avg + x;\n      }, 0) / max.length);\n      util.cores = Math.max(1, avg);\n      URL.revokeObjectURL(blobUrl);\n      return callback(null, util.cores);\n    }\n    map(numWorkers, function(err, results) {\n      max.push(reduce(numWorkers, results));\n      sample(max, samples - 1, numWorkers);\n    });\n  }\n\n  function map(numWorkers, callback) {\n    var workers = [];\n    var results = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      var worker = new Worker(blobUrl);\n      worker.addEventListener('message', function(e) {\n        results.push(e.data);\n        if(results.length === numWorkers) {\n          for(var i = 0; i < numWorkers; ++i) {\n            workers[i].terminate();\n          }\n          callback(null, results);\n        }\n      });\n      workers.push(worker);\n    }\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].postMessage(i);\n    }\n  }\n\n  function reduce(numWorkers, results) {\n    // find overlapping time windows\n    var overlaps = [];\n    for(var n = 0; n < numWorkers; ++n) {\n      var r1 = results[n];\n      var overlap = overlaps[n] = [];\n      for(var i = 0; i < numWorkers; ++i) {\n        if(n === i) {\n          continue;\n        }\n        var r2 = results[i];\n        if((r1.st > r2.st && r1.st < r2.et) ||\n          (r2.st > r1.st && r2.st < r1.et)) {\n          overlap.push(i);\n        }\n      }\n    }\n    // get maximum overlaps ... don't include overlapping worker itself\n    // as the main JS process was also being scheduled during the work and\n    // would have to be subtracted from the estimate anyway\n    return overlaps.reduce(function(max, overlap) {\n      return Math.max(max, overlap.length);\n    }, 0);\n  }\n};\n","/**\n * Javascript implementation of X.509 and related components (such as\n * Certification Signing Requests) of a Public Key Infrastructure.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The ASN.1 representation of an X.509v3 certificate is as follows\n * (see RFC 2459):\n *\n * Certificate ::= SEQUENCE {\n *   tbsCertificate       TBSCertificate,\n *   signatureAlgorithm   AlgorithmIdentifier,\n *   signatureValue       BIT STRING\n * }\n *\n * TBSCertificate ::= SEQUENCE {\n *   version         [0]  EXPLICIT Version DEFAULT v1,\n *   serialNumber         CertificateSerialNumber,\n *   signature            AlgorithmIdentifier,\n *   issuer               Name,\n *   validity             Validity,\n *   subject              Name,\n *   subjectPublicKeyInfo SubjectPublicKeyInfo,\n *   issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   extensions      [3]  EXPLICIT Extensions OPTIONAL\n *                        -- If present, version shall be v3\n * }\n *\n * Version ::= INTEGER  { v1(0), v2(1), v3(2) }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * Name ::= CHOICE {\n *   // only one possible choice for now\n *   RDNSequence\n * }\n *\n * RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n *\n * RelativeDistinguishedName ::= SET OF AttributeTypeAndValue\n *\n * AttributeTypeAndValue ::= SEQUENCE {\n *   type     AttributeType,\n *   value    AttributeValue\n * }\n * AttributeType ::= OBJECT IDENTIFIER\n * AttributeValue ::= ANY DEFINED BY AttributeType\n *\n * Validity ::= SEQUENCE {\n *   notBefore      Time,\n *   notAfter       Time\n * }\n *\n * Time ::= CHOICE {\n *   utcTime        UTCTime,\n *   generalTime    GeneralizedTime\n * }\n *\n * UniqueIdentifier ::= BIT STRING\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm            AlgorithmIdentifier,\n *   subjectPublicKey     BIT STRING\n * }\n *\n * Extensions ::= SEQUENCE SIZE (1..MAX) OF Extension\n *\n * Extension ::= SEQUENCE {\n *   extnID      OBJECT IDENTIFIER,\n *   critical    BOOLEAN DEFAULT FALSE,\n *   extnValue   OCTET STRING\n * }\n *\n * The only key algorithm currently supported for PKI is RSA.\n *\n * RSASSA-PSS signatures are described in RFC 3447 and RFC 4055.\n *\n * PKCS#10 v1.7 describes certificate signing requests:\n *\n * CertificationRequestInfo:\n *\n * CertificationRequestInfo ::= SEQUENCE {\n *   version       INTEGER { v1(0) } (v1,...),\n *   subject       Name,\n *   subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n *   attributes    [0] Attributes{{ CRIAttributes }}\n * }\n *\n * Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n *\n * CRIAttributes  ATTRIBUTE  ::= {\n *   ... -- add any locally defined attributes here -- }\n *\n * Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n *   type   ATTRIBUTE.&id({IOSet}),\n *   values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n * }\n *\n * CertificationRequest ::= SEQUENCE {\n *   certificationRequestInfo CertificationRequestInfo,\n *   signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n *   signature          BIT STRING\n * }\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./mgf');\nrequire('./oids');\nrequire('./pem');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\nvar oids = pki.oids;\n\n// short name OID mappings\nvar _shortNames = {};\n_shortNames['CN'] = oids['commonName'];\n_shortNames['commonName'] = 'CN';\n_shortNames['C'] = oids['countryName'];\n_shortNames['countryName'] = 'C';\n_shortNames['L'] = oids['localityName'];\n_shortNames['localityName'] = 'L';\n_shortNames['ST'] = oids['stateOrProvinceName'];\n_shortNames['stateOrProvinceName'] = 'ST';\n_shortNames['O'] = oids['organizationName'];\n_shortNames['organizationName'] = 'O';\n_shortNames['OU'] = oids['organizationalUnitName'];\n_shortNames['organizationalUnitName'] = 'OU';\n_shortNames['E'] = oids['emailAddress'];\n_shortNames['emailAddress'] = 'E';\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator;\n\n// validator for an X.509v3 certificate\nvar x509CertificateValidator = {\n  name: 'Certificate',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Certificate.TBSCertificate',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'tbsCertificate',\n    value: [{\n      name: 'Certificate.TBSCertificate.version',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 0,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.version.integer',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'certVersion'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'certSerialNumber'\n    }, {\n      name: 'Certificate.TBSCertificate.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.signature.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'certinfoSignatureOid'\n      }, {\n        name: 'Certificate.TBSCertificate.signature.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'certinfoSignatureParams'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certIssuer'\n    }, {\n      name: 'Certificate.TBSCertificate.validity',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      // Note: UTC and generalized times may both appear so the capture\n      // names are based on their detected order, the names used below\n      // are only for the common case, which validity time really means\n      // \"notBefore\" and which means \"notAfter\" will be determined by order\n      value: [{\n        // notBefore (Time) (UTC time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity1UTCTime'\n      }, {\n        // notBefore (Time) (generalized time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity2GeneralizedTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity3UTCTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity4GeneralizedTime'\n      }]\n    }, {\n      // Name (subject) (RDNSequence)\n      name: 'Certificate.TBSCertificate.subject',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certSubject'\n    },\n    // SubjectPublicKeyInfo\n    publicKeyValidator,\n    {\n      // issuerUniqueID (optional)\n      name: 'Certificate.TBSCertificate.issuerUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 1,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.issuerUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certIssuerUniqueId'\n      }]\n    }, {\n      // subjectUniqueID (optional)\n      name: 'Certificate.TBSCertificate.subjectUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 2,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.subjectUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certSubjectUniqueId'\n      }]\n    }, {\n      // Extensions (optional)\n      name: 'Certificate.TBSCertificate.extensions',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 3,\n      constructed: true,\n      captureAsn1: 'certExtensions',\n      optional: true\n    }]\n  }, {\n    // AlgorithmIdentifier (signature algorithm)\n    name: 'Certificate.signatureAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      // algorithm\n      name: 'Certificate.signatureAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'certSignatureOid'\n    }, {\n      name: 'Certificate.TBSCertificate.signature.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      optional: true,\n      captureAsn1: 'certSignatureParams'\n    }]\n  }, {\n    // SignatureValue\n    name: 'Certificate.signatureValue',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    captureBitStringValue: 'certSignature'\n  }]\n};\n\nvar rsassaPssParameterValidator = {\n  name: 'rsapss',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'rsapss.hashAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    value: [{\n      name: 'rsapss.hashAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'hashOid'\n        /* parameter block omitted, for SHA1 NULL anyhow. */\n      }]\n    }]\n  }, {\n    name: 'rsapss.maskGenAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    value: [{\n      name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'maskGenOid'\n      }, {\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        value: [{\n          name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'maskGenHashOid'\n          /* parameter block omitted, for SHA1 NULL anyhow. */\n        }]\n      }]\n    }]\n  }, {\n    name: 'rsapss.saltLength',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 2,\n    optional: true,\n    value: [{\n      name: 'rsapss.saltLength.saltLength',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'saltLength'\n    }]\n  }, {\n    name: 'rsapss.trailerField',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 3,\n    optional: true,\n    value: [{\n      name: 'rsapss.trailer.trailer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'trailer'\n    }]\n  }]\n};\n\n// validator for a CertificationRequestInfo structure\nvar certificationRequestInfoValidator = {\n  name: 'CertificationRequestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'certificationRequestInfo',\n  value: [{\n    name: 'CertificationRequestInfo.integer',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'certificationRequestInfoVersion'\n  }, {\n    // Name (subject) (RDNSequence)\n    name: 'CertificationRequestInfo.subject',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'certificationRequestInfoSubject'\n  },\n  // SubjectPublicKeyInfo\n  publicKeyValidator,\n  {\n    name: 'CertificationRequestInfo.attributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'certificationRequestInfoAttributes',\n    value: [{\n      name: 'CertificationRequestInfo.attributes',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'CertificationRequestInfo.attributes.type',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false\n      }, {\n        name: 'CertificationRequestInfo.attributes.value',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SET,\n        constructed: true\n      }]\n    }]\n  }]\n};\n\n// validator for a CertificationRequest structure\nvar certificationRequestValidator = {\n  name: 'CertificationRequest',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'csr',\n  value: [\n    certificationRequestInfoValidator, {\n      // AlgorithmIdentifier (signature algorithm)\n      name: 'CertificationRequest.signatureAlgorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        // algorithm\n        name: 'CertificationRequest.signatureAlgorithm.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'csrSignatureOid'\n      }, {\n        name: 'CertificationRequest.signatureAlgorithm.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'csrSignatureParams'\n      }]\n    }, {\n      // signature\n      name: 'CertificationRequest.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.BITSTRING,\n      constructed: false,\n      captureBitStringValue: 'csrSignature'\n    }\n  ]\n};\n\n/**\n * Converts an RDNSequence of ASN.1 DER-encoded RelativeDistinguishedName\n * sets into an array with objects that have type and value properties.\n *\n * @param rdn the RDNSequence to convert.\n * @param md a message digest to append type and value to if provided.\n */\npki.RDNAttributesAsArray = function(rdn, md) {\n  var rval = [];\n\n  // each value in 'rdn' in is a SET of RelativeDistinguishedName\n  var set, attr, obj;\n  for(var si = 0; si < rdn.value.length; ++si) {\n    // get the RelativeDistinguishedName set\n    set = rdn.value[si];\n\n    // each value in the SET is an AttributeTypeAndValue sequence\n    // containing first a type (an OID) and second a value (defined by\n    // the OID)\n    for(var i = 0; i < set.value.length; ++i) {\n      obj = {};\n      attr = set.value[i];\n      obj.type = asn1.derToOid(attr.value[0].value);\n      obj.value = attr.value[1].value;\n      obj.valueTagClass = attr.value[1].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      if(md) {\n        md.update(obj.type);\n        md.update(obj.value);\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Converts ASN.1 CRIAttributes into an array with objects that have type and\n * value properties.\n *\n * @param attributes the CRIAttributes to convert.\n */\npki.CRIAttributesAsArray = function(attributes) {\n  var rval = [];\n\n  // each value in 'attributes' in is a SEQUENCE with an OID and a SET\n  for(var si = 0; si < attributes.length; ++si) {\n    // get the attribute sequence\n    var seq = attributes[si];\n\n    // each value in the SEQUENCE containing first a type (an OID) and\n    // second a set of values (defined by the OID)\n    var type = asn1.derToOid(seq.value[0].value);\n    var values = seq.value[1].value;\n    for(var vi = 0; vi < values.length; ++vi) {\n      var obj = {};\n      obj.type = type;\n      obj.value = values[vi].value;\n      obj.valueTagClass = values[vi].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      // parse extensions\n      if(obj.type === oids.extensionRequest) {\n        obj.extensions = [];\n        for(var ei = 0; ei < obj.value.length; ++ei) {\n          obj.extensions.push(pki.certificateExtensionFromAsn1(obj.value[ei]));\n        }\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Gets an issuer or subject attribute from its name, type, or short name.\n *\n * @param obj the issuer or subject object.\n * @param options a short name string or an object with:\n *          shortName the short name for the attribute.\n *          name the name for the attribute.\n *          type the type for the attribute.\n *\n * @return the attribute.\n */\nfunction _getAttribute(obj, options) {\n  if(typeof options === 'string') {\n    options = {shortName: options};\n  }\n\n  var rval = null;\n  var attr;\n  for(var i = 0; rval === null && i < obj.attributes.length; ++i) {\n    attr = obj.attributes[i];\n    if(options.type && options.type === attr.type) {\n      rval = attr;\n    } else if(options.name && options.name === attr.name) {\n      rval = attr;\n    } else if(options.shortName && options.shortName === attr.shortName) {\n      rval = attr;\n    }\n  }\n  return rval;\n}\n\n/**\n * Converts signature parameters from ASN.1 structure.\n *\n * Currently only RSASSA-PSS supported.  The PKCS#1 v1.5 signature scheme had\n * no parameters.\n *\n * RSASSA-PSS-params  ::=  SEQUENCE  {\n *   hashAlgorithm      [0] HashAlgorithm DEFAULT\n *                             sha1Identifier,\n *   maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT\n *                             mgf1SHA1Identifier,\n *   saltLength         [2] INTEGER DEFAULT 20,\n *   trailerField       [3] INTEGER DEFAULT 1\n * }\n *\n * HashAlgorithm  ::=  AlgorithmIdentifier\n *\n * MaskGenAlgorithm  ::=  AlgorithmIdentifier\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * @param oid The OID specifying the signature algorithm\n * @param obj The ASN.1 structure holding the parameters\n * @param fillDefaults Whether to use return default values where omitted\n * @return signature parameter object\n */\nvar _readSignatureParameters = function(oid, obj, fillDefaults) {\n  var params = {};\n\n  if(oid !== oids['RSASSA-PSS']) {\n    return params;\n  }\n\n  if(fillDefaults) {\n    params = {\n      hash: {\n        algorithmOid: oids['sha1']\n      },\n      mgf: {\n        algorithmOid: oids['mgf1'],\n        hash: {\n          algorithmOid: oids['sha1']\n        }\n      },\n      saltLength: 20\n    };\n  }\n\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, rsassaPssParameterValidator, capture, errors)) {\n    var error = new Error('Cannot read RSASSA-PSS parameter block.');\n    error.errors = errors;\n    throw error;\n  }\n\n  if(capture.hashOid !== undefined) {\n    params.hash = params.hash || {};\n    params.hash.algorithmOid = asn1.derToOid(capture.hashOid);\n  }\n\n  if(capture.maskGenOid !== undefined) {\n    params.mgf = params.mgf || {};\n    params.mgf.algorithmOid = asn1.derToOid(capture.maskGenOid);\n    params.mgf.hash = params.mgf.hash || {};\n    params.mgf.hash.algorithmOid = asn1.derToOid(capture.maskGenHashOid);\n  }\n\n  if(capture.saltLength !== undefined) {\n    params.saltLength = capture.saltLength.charCodeAt(0);\n  }\n\n  return params;\n};\n\n/**\n * Create signature digest for OID.\n *\n * @param options\n *   signatureOid: the OID specifying the signature algorithm.\n *   type: a human readable type for error messages\n * @return a created md instance. throws if unknown oid.\n */\nvar _createSignatureDigest = function(options) {\n  switch(oids[options.signatureOid]) {\n    case 'sha1WithRSAEncryption':\n    // deprecated alias\n    case 'sha1WithRSASignature':\n      return forge.md.sha1.create();\n    case 'md5WithRSAEncryption':\n      return forge.md.md5.create();\n    case 'sha256WithRSAEncryption':\n      return forge.md.sha256.create();\n    case 'sha384WithRSAEncryption':\n      return forge.md.sha384.create();\n    case 'sha512WithRSAEncryption':\n      return forge.md.sha512.create();\n    case 'RSASSA-PSS':\n      return forge.md.sha256.create();\n    default:\n      var error = new Error(\n        'Could not compute ' + options.type + ' digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = options.signatureOid;\n      throw error;\n  }\n};\n\n/**\n * Verify signature on certificate or CSR.\n *\n * @param options:\n *   certificate the certificate or CSR to verify.\n *   md the signature digest.\n *   signature the signature\n * @return a created md instance. throws if unknown oid.\n */\nvar _verifySignature = function(options) {\n  var cert = options.certificate;\n  var scheme;\n\n  switch(cert.signatureOid) {\n    case oids.sha1WithRSAEncryption:\n    // deprecated alias\n    case oids.sha1WithRSASignature:\n      /* use PKCS#1 v1.5 padding scheme */\n      break;\n    case oids['RSASSA-PSS']:\n      var hash, mgf;\n\n      /* initialize mgf */\n      hash = oids[cert.signatureParameters.mgf.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported MGF hash function.');\n        error.oid = cert.signatureParameters.mgf.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      mgf = oids[cert.signatureParameters.mgf.algorithmOid];\n      if(mgf === undefined || forge.mgf[mgf] === undefined) {\n        var error = new Error('Unsupported MGF function.');\n        error.oid = cert.signatureParameters.mgf.algorithmOid;\n        error.name = mgf;\n        throw error;\n      }\n\n      mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n      /* initialize hash function */\n      hash = oids[cert.signatureParameters.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported RSASSA-PSS hash function.');\n        error.oid = cert.signatureParameters.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      scheme = forge.pss.create(\n        forge.md[hash].create(), mgf, cert.signatureParameters.saltLength\n      );\n      break;\n  }\n\n  // verify signature on cert using public key\n  return cert.publicKey.verify(\n    options.md.digest().getBytes(), options.signature, scheme\n  );\n};\n\n/**\n * Converts an X.509 certificate from PEM format.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. This will scan the TBSCertificate part of the ASN.1\n * object while it is converted so it doesn't need to be converted back\n * to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certificate.\n */\npki.certificateFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE' &&\n    msg.type !== 'X509 CERTIFICATE' &&\n    msg.type !== 'TRUSTED CERTIFICATE') {\n    var error = new Error(\n      'Could not convert certificate from PEM; PEM header type ' +\n      'is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or \"TRUSTED CERTIFICATE\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error(\n      'Could not convert certificate from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificateFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts an X.509 certificate to PEM format.\n *\n * @param cert the certificate.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certificate.\n */\npki.certificateToPem = function(cert, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE',\n    body: asn1.toDer(pki.certificateToAsn1(cert)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key from PEM format.\n *\n * @param pem the PEM-formatted public key.\n *\n * @return the public key.\n */\npki.publicKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PUBLIC KEY' && msg.type !== 'RSA PUBLIC KEY') {\n    var error = new Error('Could not convert public key from PEM; PEM header ' +\n      'type is not \"PUBLIC KEY\" or \"RSA PUBLIC KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert public key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.publicKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA public key to PEM format (using a SubjectPublicKeyInfo).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key to PEM format (using an RSAPublicKey).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToRSAPublicKeyPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Gets a fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.sha1).\n *          [type] the type of fingerprint, such as 'RSAPublicKey',\n *            'SubjectPublicKeyInfo' (defaults to 'RSAPublicKey').\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\npki.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.sha1.create();\n  var type = options.type || 'RSAPublicKey';\n\n  var bytes;\n  switch(type) {\n    case 'RSAPublicKey':\n      bytes = asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes();\n      break;\n    case 'SubjectPublicKeyInfo':\n      bytes = asn1.toDer(pki.publicKeyToAsn1(key)).getBytes();\n      break;\n    default:\n      throw new Error('Unknown fingerprint type \"' + options.type + '\".');\n  }\n\n  // hash public key bytes\n  md.start();\n  md.update(bytes);\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from PEM format.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. This will scan the CertificationRequestInfo part of\n * the ASN.1 object while it is converted so it doesn't need to be converted\n * back to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE REQUEST') {\n    var error = new Error('Could not convert certification request from PEM; ' +\n      'PEM header type is not \"CERTIFICATE REQUEST\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert certification request from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificationRequestFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) to PEM format.\n *\n * @param csr the certification request.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certification request.\n */\npki.certificationRequestToPem = function(csr, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE REQUEST',\n    body: asn1.toDer(pki.certificationRequestToAsn1(csr)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Creates an empty X.509v3 RSA certificate.\n *\n * @return the certificate.\n */\npki.createCertificate = function() {\n  var cert = {};\n  cert.version = 0x02;\n  cert.serialNumber = '00';\n  cert.signatureOid = null;\n  cert.signature = null;\n  cert.siginfo = {};\n  cert.siginfo.algorithmOid = null;\n  cert.validity = {};\n  cert.validity.notBefore = new Date();\n  cert.validity.notAfter = new Date();\n\n  cert.issuer = {};\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = [];\n  cert.issuer.hash = null;\n\n  cert.subject = {};\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = [];\n  cert.subject.hash = null;\n\n  cert.extensions = [];\n  cert.publicKey = null;\n  cert.md = null;\n\n  /**\n   * Sets the subject of this certificate.\n   *\n   * @param attrs the array of subject attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setSubject = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.subject.attributes = attrs;\n    delete cert.subject.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.subject.uniqueId = uniqueId;\n    }\n    cert.subject.hash = null;\n  };\n\n  /**\n   * Sets the issuer of this certificate.\n   *\n   * @param attrs the array of issuer attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setIssuer = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.issuer.attributes = attrs;\n    delete cert.issuer.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.issuer.uniqueId = uniqueId;\n    }\n    cert.issuer.hash = null;\n  };\n\n  /**\n   * Sets the extensions of this certificate.\n   *\n   * @param exts the array of extensions to use.\n   */\n  cert.setExtensions = function(exts) {\n    for(var i = 0; i < exts.length; ++i) {\n      _fillMissingExtensionFields(exts[i], {cert: cert});\n    }\n    // set new extensions\n    cert.extensions = exts;\n  };\n\n  /**\n   * Gets an extension by its name or id.\n   *\n   * @param options the name to use or an object with:\n   *          name the name to use.\n   *          id the id to use.\n   *\n   * @return the extension or null if not found.\n   */\n  cert.getExtension = function(options) {\n    if(typeof options === 'string') {\n      options = {name: options};\n    }\n\n    var rval = null;\n    var ext;\n    for(var i = 0; rval === null && i < cert.extensions.length; ++i) {\n      ext = cert.extensions[i];\n      if(options.id && ext.id === options.id) {\n        rval = ext;\n      } else if(options.name && ext.name === options.name) {\n        rval = ext;\n      }\n    }\n    return rval;\n  };\n\n  /**\n   * Signs this certificate using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  cert.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    cert.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[cert.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = cert.md.algorithm;\n      throw error;\n    }\n    cert.signatureOid = cert.siginfo.algorithmOid = algorithmOid;\n\n    // get TBSCertificate, convert to DER\n    cert.tbsCertificate = pki.getTBSCertificate(cert);\n    var bytes = asn1.toDer(cert.tbsCertificate);\n\n    // digest and sign\n    cert.md.update(bytes.getBytes());\n    cert.signature = key.sign(cert.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certificate using this\n   * certificate's public key.\n   *\n   * @param child the certificate to verify.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verify = function(child) {\n    var rval = false;\n\n    if(!cert.issued(child)) {\n      var issuer = child.issuer;\n      var subject = cert.subject;\n      var error = new Error(\n        'The parent certificate did not issue the given child ' +\n        'certificate; the child certificate\\'s issuer does not match the ' +\n        'parent\\'s subject.');\n      error.expectedIssuer = subject.attributes;\n      error.actualIssuer = issuer.attributes;\n      throw error;\n    }\n\n    var md = child.md;\n    if(md === null) {\n      // create digest for OID signature types\n      md = _createSignatureDigest({\n        signatureOid: child.signatureOid,\n        type: 'certificate'\n      });\n\n      // produce DER formatted TBSCertificate and digest it\n      var tbsCertificate = child.tbsCertificate || pki.getTBSCertificate(child);\n      var bytes = asn1.toDer(tbsCertificate);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: cert, md: md, signature: child.signature\n      });\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's issuer matches the passed\n   * certificate's subject. Note that no signature check is performed.\n   *\n   * @param parent the certificate to check.\n   *\n   * @return true if this certificate's issuer matches the passed certificate's\n   *         subject.\n   */\n  cert.isIssuer = function(parent) {\n    var rval = false;\n\n    var i = cert.issuer;\n    var s = parent.subject;\n\n    // compare hashes if present\n    if(i.hash && s.hash) {\n      rval = (i.hash === s.hash);\n    } else if(i.attributes.length === s.attributes.length) {\n      // all attributes are the same so issuer matches subject\n      rval = true;\n      var iattr, sattr;\n      for(var n = 0; rval && n < i.attributes.length; ++n) {\n        iattr = i.attributes[n];\n        sattr = s.attributes[n];\n        if(iattr.type !== sattr.type || iattr.value !== sattr.value) {\n          // attribute mismatch\n          rval = false;\n        }\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's subject matches the issuer of the\n   * given certificate). Note that not signature check is performed.\n   *\n   * @param child the certificate to check.\n   *\n   * @return true if this certificate's subject matches the passed\n   *         certificate's issuer.\n   */\n  cert.issued = function(child) {\n    return child.isIssuer(cert);\n  };\n\n  /**\n   * Generates the subjectKeyIdentifier for this certificate as byte buffer.\n   *\n   * @return the subjectKeyIdentifier for this certificate as byte buffer.\n   */\n  cert.generateSubjectKeyIdentifier = function() {\n    /* See: 4.2.1.2 section of the the RFC3280, keyIdentifier is either:\n\n      (1) The keyIdentifier is composed of the 160-bit SHA-1 hash of the\n        value of the BIT STRING subjectPublicKey (excluding the tag,\n        length, and number of unused bits).\n\n      (2) The keyIdentifier is composed of a four bit type field with\n        the value 0100 followed by the least significant 60 bits of the\n        SHA-1 hash of the value of the BIT STRING subjectPublicKey\n        (excluding the tag, length, and number of unused bit string bits).\n    */\n\n    // skipping the tag, length, and number of unused bits is the same\n    // as just using the RSAPublicKey (for RSA keys, which are the\n    // only ones supported)\n    return pki.getPublicKeyFingerprint(cert.publicKey, {type: 'RSAPublicKey'});\n  };\n\n  /**\n   * Verifies the subjectKeyIdentifier extension value for this certificate\n   * against its public key. If no extension is found, false will be\n   * returned.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verifySubjectKeyIdentifier = function() {\n    var oid = oids['subjectKeyIdentifier'];\n    for(var i = 0; i < cert.extensions.length; ++i) {\n      var ext = cert.extensions[i];\n      if(ext.id === oid) {\n        var ski = cert.generateSubjectKeyIdentifier().getBytes();\n        return (forge.util.hexToBytes(ext.subjectKeyIdentifier) === ski);\n      }\n    }\n    return false;\n  };\n\n  return cert;\n};\n\n/**\n * Converts an X.509v3 RSA certificate from an ASN.1 object.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the TBSCertificate part of the ASN.1\n * object needs to be scanned before the cert object is created.\n *\n * @param obj the asn1 representation of an X.509v3 RSA certificate.\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certificate.\n */\npki.certificateFromAsn1 = function(obj, computeHash) {\n  // validate certificate and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, x509CertificateValidator, capture, errors)) {\n    var error = new Error('Cannot read X.509 certificate. ' +\n      'ASN.1 object is not an X509v3 Certificate.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certificate\n  var cert = pki.createCertificate();\n  cert.version = capture.certVersion ?\n    capture.certVersion.charCodeAt(0) : 0;\n  var serial = forge.util.createBuffer(capture.certSerialNumber);\n  cert.serialNumber = serial.toHex();\n  cert.signatureOid = forge.asn1.derToOid(capture.certSignatureOid);\n  cert.signatureParameters = _readSignatureParameters(\n    cert.signatureOid, capture.certSignatureParams, true);\n  cert.siginfo.algorithmOid = forge.asn1.derToOid(capture.certinfoSignatureOid);\n  cert.siginfo.parameters = _readSignatureParameters(cert.siginfo.algorithmOid,\n    capture.certinfoSignatureParams, false);\n  cert.signature = capture.certSignature;\n\n  var validity = [];\n  if(capture.certValidity1UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity1UTCTime));\n  }\n  if(capture.certValidity2GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity2GeneralizedTime));\n  }\n  if(capture.certValidity3UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity3UTCTime));\n  }\n  if(capture.certValidity4GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity4GeneralizedTime));\n  }\n  if(validity.length > 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; more ' +\n      'than two times were provided in the certificate.');\n  }\n  if(validity.length < 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; they ' +\n      'were not provided as either UTCTime or GeneralizedTime.');\n  }\n  cert.validity.notBefore = validity[0];\n  cert.validity.notAfter = validity[1];\n\n  // keep TBSCertificate to preserve signature when exporting\n  cert.tbsCertificate = capture.tbsCertificate;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    cert.md = _createSignatureDigest({\n      signatureOid: cert.signatureOid,\n      type: 'certificate'\n    });\n\n    // produce DER formatted TBSCertificate and digest it\n    var bytes = asn1.toDer(cert.tbsCertificate);\n    cert.md.update(bytes.getBytes());\n  }\n\n  // handle issuer, build issuer message digest\n  var imd = forge.md.sha1.create();\n  var ibytes = asn1.toDer(capture.certIssuer);\n  imd.update(ibytes.getBytes());\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = pki.RDNAttributesAsArray(capture.certIssuer);\n  if(capture.certIssuerUniqueId) {\n    cert.issuer.uniqueId = capture.certIssuerUniqueId;\n  }\n  cert.issuer.hash = imd.digest().toHex();\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  var sbytes = asn1.toDer(capture.certSubject);\n  smd.update(sbytes.getBytes());\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = pki.RDNAttributesAsArray(capture.certSubject);\n  if(capture.certSubjectUniqueId) {\n    cert.subject.uniqueId = capture.certSubjectUniqueId;\n  }\n  cert.subject.hash = smd.digest().toHex();\n\n  // handle extensions\n  if(capture.certExtensions) {\n    cert.extensions = pki.certificateExtensionsFromAsn1(capture.certExtensions);\n  } else {\n    cert.extensions = [];\n  }\n\n  // convert RSA public key from ASN.1\n  cert.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  return cert;\n};\n\n/**\n * Converts an ASN.1 extensions object (with extension sequences as its\n * values) into an array of extension objects with types and values.\n *\n * Supported extensions:\n *\n * id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n * KeyUsage ::= BIT STRING {\n *   digitalSignature        (0),\n *   nonRepudiation          (1),\n *   keyEncipherment         (2),\n *   dataEncipherment        (3),\n *   keyAgreement            (4),\n *   keyCertSign             (5),\n *   cRLSign                 (6),\n *   encipherOnly            (7),\n *   decipherOnly            (8)\n * }\n *\n * id-ce-basicConstraints OBJECT IDENTIFIER ::=  { id-ce 19 }\n * BasicConstraints ::= SEQUENCE {\n *   cA                      BOOLEAN DEFAULT FALSE,\n *   pathLenConstraint       INTEGER (0..MAX) OPTIONAL\n * }\n *\n * subjectAltName EXTENSION ::= {\n *   SYNTAX GeneralNames\n *   IDENTIFIED BY id-ce-subjectAltName\n * }\n *\n * GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\n *\n * GeneralName ::= CHOICE {\n *   otherName      [0] INSTANCE OF OTHER-NAME,\n *   rfc822Name     [1] IA5String,\n *   dNSName        [2] IA5String,\n *   x400Address    [3] ORAddress,\n *   directoryName  [4] Name,\n *   ediPartyName   [5] EDIPartyName,\n *   uniformResourceIdentifier [6] IA5String,\n *   IPAddress      [7] OCTET STRING,\n *   registeredID   [8] OBJECT IDENTIFIER\n * }\n *\n * OTHER-NAME ::= TYPE-IDENTIFIER\n *\n * EDIPartyName ::= SEQUENCE {\n *   nameAssigner [0] DirectoryString {ub-name} OPTIONAL,\n *   partyName    [1] DirectoryString {ub-name}\n * }\n *\n * @param exts the extensions ASN.1 with extension sequences to parse.\n *\n * @return the array.\n */\npki.certificateExtensionsFromAsn1 = function(exts) {\n  var rval = [];\n  for(var i = 0; i < exts.value.length; ++i) {\n    // get extension sequence\n    var extseq = exts.value[i];\n    for(var ei = 0; ei < extseq.value.length; ++ei) {\n      rval.push(pki.certificateExtensionFromAsn1(extseq.value[ei]));\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Parses a single certificate extension from ASN.1.\n *\n * @param ext the extension in ASN.1 format.\n *\n * @return the parsed extension as an object.\n */\npki.certificateExtensionFromAsn1 = function(ext) {\n  // an extension has:\n  // [0] extnID      OBJECT IDENTIFIER\n  // [1] critical    BOOLEAN DEFAULT FALSE\n  // [2] extnValue   OCTET STRING\n  var e = {};\n  e.id = asn1.derToOid(ext.value[0].value);\n  e.critical = false;\n  if(ext.value[1].type === asn1.Type.BOOLEAN) {\n    e.critical = (ext.value[1].value.charCodeAt(0) !== 0x00);\n    e.value = ext.value[2].value;\n  } else {\n    e.value = ext.value[1].value;\n  }\n  // if the oid is known, get its name\n  if(e.id in oids) {\n    e.name = oids[e.id];\n\n    // handle key usage\n    if(e.name === 'keyUsage') {\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      var b3 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n        b3 = ev.value.length > 2 ? ev.value.charCodeAt(2) : 0;\n      }\n      // set flags\n      e.digitalSignature = (b2 & 0x80) === 0x80;\n      e.nonRepudiation = (b2 & 0x40) === 0x40;\n      e.keyEncipherment = (b2 & 0x20) === 0x20;\n      e.dataEncipherment = (b2 & 0x10) === 0x10;\n      e.keyAgreement = (b2 & 0x08) === 0x08;\n      e.keyCertSign = (b2 & 0x04) === 0x04;\n      e.cRLSign = (b2 & 0x02) === 0x02;\n      e.encipherOnly = (b2 & 0x01) === 0x01;\n      e.decipherOnly = (b3 & 0x80) === 0x80;\n    } else if(e.name === 'basicConstraints') {\n      // handle basic constraints\n      // get value as SEQUENCE\n      var ev = asn1.fromDer(e.value);\n      // get cA BOOLEAN flag (defaults to false)\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.BOOLEAN) {\n        e.cA = (ev.value[0].value.charCodeAt(0) !== 0x00);\n      } else {\n        e.cA = false;\n      }\n      // get path length constraint\n      var value = null;\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.INTEGER) {\n        value = ev.value[0].value;\n      } else if(ev.value.length > 1) {\n        value = ev.value[1].value;\n      }\n      if(value !== null) {\n        e.pathLenConstraint = asn1.derToInteger(value);\n      }\n    } else if(e.name === 'extKeyUsage') {\n      // handle extKeyUsage\n      // value is a SEQUENCE of OIDs\n      var ev = asn1.fromDer(e.value);\n      for(var vi = 0; vi < ev.value.length; ++vi) {\n        var oid = asn1.derToOid(ev.value[vi].value);\n        if(oid in oids) {\n          e[oids[oid]] = true;\n        } else {\n          e[oid] = true;\n        }\n      }\n    } else if(e.name === 'nsCertType') {\n      // handle nsCertType\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n      }\n      // set flags\n      e.client = (b2 & 0x80) === 0x80;\n      e.server = (b2 & 0x40) === 0x40;\n      e.email = (b2 & 0x20) === 0x20;\n      e.objsign = (b2 & 0x10) === 0x10;\n      e.reserved = (b2 & 0x08) === 0x08;\n      e.sslCA = (b2 & 0x04) === 0x04;\n      e.emailCA = (b2 & 0x02) === 0x02;\n      e.objCA = (b2 & 0x01) === 0x01;\n    } else if(\n      e.name === 'subjectAltName' ||\n      e.name === 'issuerAltName') {\n      // handle subjectAltName/issuerAltName\n      e.altNames = [];\n\n      // ev is a SYNTAX SEQUENCE\n      var gn;\n      var ev = asn1.fromDer(e.value);\n      for(var n = 0; n < ev.value.length; ++n) {\n        // get GeneralName\n        gn = ev.value[n];\n\n        var altName = {\n          type: gn.type,\n          value: gn.value\n        };\n        e.altNames.push(altName);\n\n        // Note: Support for types 1,2,6,7,8\n        switch(gn.type) {\n          // rfc822Name\n          case 1:\n          // dNSName\n          case 2:\n          // uniformResourceIdentifier (URI)\n          case 6:\n            break;\n          // IPAddress\n          case 7:\n            // convert to IPv4/IPv6 string representation\n            altName.ip = forge.util.bytesToIP(gn.value);\n            break;\n          // registeredID\n          case 8:\n            altName.oid = asn1.derToOid(gn.value);\n            break;\n          default:\n            // unsupported\n        }\n      }\n    } else if(e.name === 'subjectKeyIdentifier') {\n      // value is an OCTETSTRING w/the hash of the key-type specific\n      // public key structure (eg: RSAPublicKey)\n      var ev = asn1.fromDer(e.value);\n      e.subjectKeyIdentifier = forge.util.bytesToHex(ev.value);\n    }\n  }\n  return e;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from an ASN.1 object.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the CertificationRequestInfo part of the\n * ASN.1 object needs to be scanned before the csr object is created.\n *\n * @param obj the asn1 representation of a PKCS#10 certification request (CSR).\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromAsn1 = function(obj, computeHash) {\n  // validate certification request and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, certificationRequestValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#10 certificate request. ' +\n      'ASN.1 object is not a PKCS#10 CertificationRequest.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certification request\n  var csr = pki.createCertificationRequest();\n  csr.version = capture.csrVersion ? capture.csrVersion.charCodeAt(0) : 0;\n  csr.signatureOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.signatureParameters = _readSignatureParameters(\n    csr.signatureOid, capture.csrSignatureParams, true);\n  csr.siginfo.algorithmOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.siginfo.parameters = _readSignatureParameters(\n    csr.siginfo.algorithmOid, capture.csrSignatureParams, false);\n  csr.signature = capture.csrSignature;\n\n  // keep CertificationRequestInfo to preserve signature when exporting\n  csr.certificationRequestInfo = capture.certificationRequestInfo;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    csr.md = _createSignatureDigest({\n      signatureOid: csr.signatureOid,\n      type: 'certification request'\n    });\n\n    // produce DER formatted CertificationRequestInfo and digest it\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n    csr.md.update(bytes.getBytes());\n  }\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = pki.RDNAttributesAsArray(\n    capture.certificationRequestInfoSubject, smd);\n  csr.subject.hash = smd.digest().toHex();\n\n  // convert RSA public key from ASN.1\n  csr.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  // convert attributes from ASN.1\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.attributes = pki.CRIAttributesAsArray(\n    capture.certificationRequestInfoAttributes || []);\n\n  return csr;\n};\n\n/**\n * Creates an empty certification request (a CSR or certificate signing\n * request). Once created, its public key and attributes can be set and then\n * it can be signed.\n *\n * @return the empty certification request.\n */\npki.createCertificationRequest = function() {\n  var csr = {};\n  csr.version = 0x00;\n  csr.signatureOid = null;\n  csr.signature = null;\n  csr.siginfo = {};\n  csr.siginfo.algorithmOid = null;\n\n  csr.subject = {};\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = [];\n  csr.subject.hash = null;\n\n  csr.publicKey = null;\n  csr.attributes = [];\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.md = null;\n\n  /**\n   * Sets the subject of this certification request.\n   *\n   * @param attrs the array of subject attributes to use.\n   */\n  csr.setSubject = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.subject.attributes = attrs;\n    csr.subject.hash = null;\n  };\n\n  /**\n   * Sets the attributes of this certification request.\n   *\n   * @param attrs the array of attributes to use.\n   */\n  csr.setAttributes = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.attributes = attrs;\n  };\n\n  /**\n   * Signs this certification request using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  csr.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    csr.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[csr.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = csr.md.algorithm;\n      throw error;\n    }\n    csr.signatureOid = csr.siginfo.algorithmOid = algorithmOid;\n\n    // get CertificationRequestInfo, convert to DER\n    csr.certificationRequestInfo = pki.getCertificationRequestInfo(csr);\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n\n    // digest and sign\n    csr.md.update(bytes.getBytes());\n    csr.signature = key.sign(csr.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certification request using\n   * its public key.\n   *\n   * A CSR that has been exported to a file in PEM format can be verified using\n   * OpenSSL using this command:\n   *\n   * openssl req -in <the-csr-pem-file> -verify -noout -text\n   *\n   * @return true if verified, false if not.\n   */\n  csr.verify = function() {\n    var rval = false;\n\n    var md = csr.md;\n    if(md === null) {\n      md = _createSignatureDigest({\n        signatureOid: csr.signatureOid,\n        type: 'certification request'\n      });\n\n      // produce DER formatted CertificationRequestInfo and digest it\n      var cri = csr.certificationRequestInfo ||\n        pki.getCertificationRequestInfo(csr);\n      var bytes = asn1.toDer(cri);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: csr, md: md, signature: csr.signature\n      });\n    }\n\n    return rval;\n  };\n\n  return csr;\n};\n\n/**\n * Converts an X.509 subject or issuer to an ASN.1 RDNSequence.\n *\n * @param obj the subject or issuer (distinguished name).\n *\n * @return the ASN.1 RDNSequence.\n */\nfunction _dnToAsn1(obj) {\n  // create an empty RDNSequence\n  var rval = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // iterate over attributes\n  var attr, set;\n  var attrs = obj.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.PRINTABLESTRING;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n\n      if(valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(value);\n      }\n      // FIXME: handle more encodings\n    }\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    set = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // AttributeType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(attr.type).getBytes()),\n        // AttributeValue\n        asn1.create(asn1.Class.UNIVERSAL, valueTagClass, false, value)\n      ])\n    ]);\n    rval.value.push(set);\n  }\n\n  return rval;\n}\n\n/**\n * Gets all printable attributes (typically of an issuer or subject) in a\n * simplified JSON format for display.\n *\n * @param attrs the attributes.\n *\n * @return the JSON for display.\n */\nfunction _getAttributesAsJson(attrs) {\n  var rval = {};\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(attr.shortName && (\n      attr.valueTagClass === asn1.Type.UTF8 ||\n      attr.valueTagClass === asn1.Type.PRINTABLESTRING ||\n      attr.valueTagClass === asn1.Type.IA5STRING)) {\n      var value = attr.value;\n      if(attr.valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(attr.value);\n      }\n      if(!(attr.shortName in rval)) {\n        rval[attr.shortName] = value;\n      } else if(forge.util.isArray(rval[attr.shortName])) {\n        rval[attr.shortName].push(value);\n      } else {\n        rval[attr.shortName] = [rval[attr.shortName], value];\n      }\n    }\n  }\n  return rval;\n}\n\n/**\n * Fills in missing fields in attributes.\n *\n * @param attrs the attributes to fill missing fields in.\n */\nfunction _fillMissingFields(attrs) {\n  var attr;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n\n    // populate missing name\n    if(typeof attr.name === 'undefined') {\n      if(attr.type && attr.type in pki.oids) {\n        attr.name = pki.oids[attr.type];\n      } else if(attr.shortName && attr.shortName in _shortNames) {\n        attr.name = pki.oids[_shortNames[attr.shortName]];\n      }\n    }\n\n    // populate missing type (OID)\n    if(typeof attr.type === 'undefined') {\n      if(attr.name && attr.name in pki.oids) {\n        attr.type = pki.oids[attr.name];\n      } else {\n        var error = new Error('Attribute type not specified.');\n        error.attribute = attr;\n        throw error;\n      }\n    }\n\n    // populate missing shortname\n    if(typeof attr.shortName === 'undefined') {\n      if(attr.name && attr.name in _shortNames) {\n        attr.shortName = _shortNames[attr.name];\n      }\n    }\n\n    // convert extensions to value\n    if(attr.type === oids.extensionRequest) {\n      attr.valueConstructed = true;\n      attr.valueTagClass = asn1.Type.SEQUENCE;\n      if(!attr.value && attr.extensions) {\n        attr.value = [];\n        for(var ei = 0; ei < attr.extensions.length; ++ei) {\n          attr.value.push(pki.certificateExtensionToAsn1(\n            _fillMissingExtensionFields(attr.extensions[ei])));\n        }\n      }\n    }\n\n    if(typeof attr.value === 'undefined') {\n      var error = new Error('Attribute value not specified.');\n      error.attribute = attr;\n      throw error;\n    }\n  }\n}\n\n/**\n * Fills in missing fields in certificate extensions.\n *\n * @param e the extension.\n * @param [options] the options to use.\n *          [cert] the certificate the extensions are for.\n *\n * @return the extension.\n */\nfunction _fillMissingExtensionFields(e, options) {\n  options = options || {};\n\n  // populate missing name\n  if(typeof e.name === 'undefined') {\n    if(e.id && e.id in pki.oids) {\n      e.name = pki.oids[e.id];\n    }\n  }\n\n  // populate missing id\n  if(typeof e.id === 'undefined') {\n    if(e.name && e.name in pki.oids) {\n      e.id = pki.oids[e.name];\n    } else {\n      var error = new Error('Extension ID not specified.');\n      error.extension = e;\n      throw error;\n    }\n  }\n\n  if(typeof e.value !== 'undefined') {\n    return e;\n  }\n\n  // handle missing value:\n\n  // value is a BIT STRING\n  if(e.name === 'keyUsage') {\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n    var b3 = 0x00;\n    if(e.digitalSignature) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.nonRepudiation) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.keyEncipherment) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.dataEncipherment) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.keyAgreement) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.keyCertSign) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.cRLSign) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.encipherOnly) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n    if(e.decipherOnly) {\n      b3 |= 0x80;\n      unused = 7;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b3 !== 0) {\n      value += String.fromCharCode(b2) + String.fromCharCode(b3);\n    } else if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'basicConstraints') {\n    // basicConstraints is a SEQUENCE\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    // cA BOOLEAN flag defaults to false\n    if(e.cA) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n        String.fromCharCode(0xFF)));\n    }\n    if('pathLenConstraint' in e) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(e.pathLenConstraint).getBytes()));\n    }\n  } else if(e.name === 'extKeyUsage') {\n    // extKeyUsage is a SEQUENCE of OIDs\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n    for(var key in e) {\n      if(e[key] !== true) {\n        continue;\n      }\n      // key is name in OID map\n      if(key in oids) {\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(oids[key]).getBytes()));\n      } else if(key.indexOf('.') !== -1) {\n        // assume key is an OID\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(key).getBytes()));\n      }\n    }\n  } else if(e.name === 'nsCertType') {\n    // nsCertType is a BIT STRING\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n\n    if(e.client) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.server) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.email) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.objsign) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.reserved) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.sslCA) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.emailCA) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.objCA) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'subjectAltName' || e.name === 'issuerAltName') {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      e.value.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n  } else if(e.name === 'nsComment' && options.cert) {\n    // sanity check value is ASCII (req'd) and not too big\n    if(!(/^[\\x00-\\x7F]*$/.test(e.comment)) ||\n      (e.comment.length < 1) || (e.comment.length > 128)) {\n      throw new Error('Invalid \"nsComment\" content.');\n    }\n    // IA5STRING opaque comment\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.IA5STRING, false, e.comment);\n  } else if(e.name === 'subjectKeyIdentifier' && options.cert) {\n    var ski = options.cert.generateSubjectKeyIdentifier();\n    e.subjectKeyIdentifier = ski.toHex();\n    // OCTETSTRING w/digest\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, ski.getBytes());\n  } else if(e.name === 'authorityKeyIdentifier' && options.cert) {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    if(e.keyIdentifier) {\n      var keyIdentifier = (e.keyIdentifier === true ?\n        options.cert.generateSubjectKeyIdentifier().getBytes() :\n        e.keyIdentifier);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, false, keyIdentifier));\n    }\n\n    if(e.authorityCertIssuer) {\n      var authorityCertIssuer = [\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 4, true, [\n          _dnToAsn1(e.authorityCertIssuer === true ?\n            options.cert.issuer : e.authorityCertIssuer)\n        ])\n      ];\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, authorityCertIssuer));\n    }\n\n    if(e.serialNumber) {\n      var serialNumber = forge.util.hexToBytes(e.serialNumber === true ?\n        options.cert.serialNumber : e.serialNumber);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, false, serialNumber));\n    }\n  } else if(e.name === 'cRLDistributionPoints') {\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    // Create sub SEQUENCE of DistributionPointName\n    var subSeq = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    // Create fullName CHOICE\n    var fullNameGeneralNames = asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      fullNameGeneralNames.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n\n    // Add to the parent SEQUENCE\n    subSeq.value.push(asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, [fullNameGeneralNames]));\n    seq.push(subSeq);\n  }\n\n  // ensure value has been defined by now\n  if(typeof e.value === 'undefined') {\n    var error = new Error('Extension value not specified.');\n    error.extension = e;\n    throw error;\n  }\n\n  return e;\n}\n\n/**\n * Convert signature parameters object to ASN.1\n *\n * @param {String} oid Signature algorithm OID\n * @param params The signature parametrs object\n * @return ASN.1 object representing signature parameters\n */\nfunction _signatureParametersToAsn1(oid, params) {\n  switch(oid) {\n    case oids['RSASSA-PSS']:\n      var parts = [];\n\n      if(params.hash.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.hash.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n          ])\n        ]));\n      }\n\n      if(params.mgf.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.mgf.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n                asn1.oidToDer(params.mgf.hash.algorithmOid).getBytes()),\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n            ])\n          ])\n        ]));\n      }\n\n      if(params.saltLength !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(params.saltLength).getBytes())\n        ]));\n      }\n\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, parts);\n\n    default:\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '');\n  }\n}\n\n/**\n * Converts a certification request's attributes to an ASN.1 set of\n * CRIAttributes.\n *\n * @param csr certification request.\n *\n * @return the ASN.1 set of CRIAttributes.\n */\nfunction _CRIAttributesToAsn1(csr) {\n  // create an empty context-specific container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n  // no attributes, return empty container\n  if(csr.attributes.length === 0) {\n    return rval;\n  }\n\n  // each attribute has a sequence with a type and a set of values\n  var attrs = csr.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.UTF8;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n    }\n    if(valueTagClass === asn1.Type.UTF8) {\n      value = forge.util.encodeUtf8(value);\n    }\n    var valueConstructed = false;\n    if('valueConstructed' in attr) {\n      valueConstructed = attr.valueConstructed;\n    }\n    // FIXME: handle more encodings\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // AttributeType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(attr.type).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n        // AttributeValue\n        asn1.create(\n          asn1.Class.UNIVERSAL, valueTagClass, valueConstructed, value)\n      ])\n    ]);\n    rval.value.push(seq);\n  }\n\n  return rval;\n}\n\nvar jan_1_1950 = new Date('1950-01-01T00:00:00Z');\nvar jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n\n/**\n * Converts a Date object to ASN.1\n * Handles the different format before and after 1st January 2050\n *\n * @param date date object.\n *\n * @return the ASN.1 object representing the date.\n */\nfunction _dateToAsn1(date) {\n  if(date >= jan_1_1950 && date < jan_1_2050) {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n      asn1.dateToUtcTime(date));\n  } else {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n      asn1.dateToGeneralizedTime(date));\n  }\n}\n\n/**\n * Gets the ASN.1 TBSCertificate part of an X.509v3 certificate.\n *\n * @param cert the certificate.\n *\n * @return the asn1 TBSCertificate.\n */\npki.getTBSCertificate = function(cert) {\n  // TBSCertificate\n  var notBefore = _dateToAsn1(cert.validity.notBefore);\n  var notAfter = _dateToAsn1(cert.validity.notAfter);\n  var tbs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      // integer\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(cert.version).getBytes())\n    ]),\n    // serialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      forge.util.hexToBytes(cert.serialNumber)),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.siginfo.algorithmOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(\n        cert.siginfo.algorithmOid, cert.siginfo.parameters)\n    ]),\n    // issuer\n    _dnToAsn1(cert.issuer),\n    // validity\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      notBefore,\n      notAfter\n    ]),\n    // subject\n    _dnToAsn1(cert.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(cert.publicKey)\n  ]);\n\n  if(cert.issuer.uniqueId) {\n    // issuerUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.issuer.uniqueId\n        )\n      ])\n    );\n  }\n  if(cert.subject.uniqueId) {\n    // subjectUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.subject.uniqueId\n        )\n      ])\n    );\n  }\n\n  if(cert.extensions.length > 0) {\n    // extensions (optional)\n    tbs.value.push(pki.certificateExtensionsToAsn1(cert.extensions));\n  }\n\n  return tbs;\n};\n\n/**\n * Gets the ASN.1 CertificationRequestInfo part of a\n * PKCS#10 CertificationRequest.\n *\n * @param csr the certification request.\n *\n * @return the asn1 CertificationRequestInfo.\n */\npki.getCertificationRequestInfo = function(csr) {\n  // CertificationRequestInfo\n  var cri = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(csr.version).getBytes()),\n    // subject\n    _dnToAsn1(csr.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(csr.publicKey),\n    // attributes\n    _CRIAttributesToAsn1(csr)\n  ]);\n\n  return cri;\n};\n\n/**\n * Converts a DistinguishedName (subject or issuer) to an ASN.1 object.\n *\n * @param dn the DistinguishedName.\n *\n * @return the asn1 representation of a DistinguishedName.\n */\npki.distinguishedNameToAsn1 = function(dn) {\n  return _dnToAsn1(dn);\n};\n\n/**\n * Converts an X.509v3 RSA certificate to an ASN.1 object.\n *\n * @param cert the certificate.\n *\n * @return the asn1 representation of an X.509v3 RSA certificate.\n */\npki.certificateToAsn1 = function(cert) {\n  // prefer cached TBSCertificate over generating one\n  var tbsCertificate = cert.tbsCertificate || pki.getTBSCertificate(cert);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // TBSCertificate\n    tbsCertificate,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(cert.signatureOid, cert.signatureParameters)\n    ]),\n    // SignatureValue\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + cert.signature)\n  ]);\n};\n\n/**\n * Converts X.509v3 certificate extensions to ASN.1.\n *\n * @param exts the extensions to convert.\n *\n * @return the extensions in ASN.1 format.\n */\npki.certificateExtensionsToAsn1 = function(exts) {\n  // create top-level extension container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 3, true, []);\n\n  // create extension sequence (stores a sequence for each extension)\n  var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  rval.value.push(seq);\n\n  for(var i = 0; i < exts.length; ++i) {\n    seq.value.push(pki.certificateExtensionToAsn1(exts[i]));\n  }\n\n  return rval;\n};\n\n/**\n * Converts a single certificate extension to ASN.1.\n *\n * @param ext the extension to convert.\n *\n * @return the extension in ASN.1 format.\n */\npki.certificateExtensionToAsn1 = function(ext) {\n  // create a sequence for each extension\n  var extseq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // extnID (OID)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n    asn1.oidToDer(ext.id).getBytes()));\n\n  // critical defaults to false\n  if(ext.critical) {\n    // critical BOOLEAN DEFAULT FALSE\n    extseq.value.push(asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n      String.fromCharCode(0xFF)));\n  }\n\n  var value = ext.value;\n  if(typeof ext.value !== 'string') {\n    // value is asn.1\n    value = asn1.toDer(value).getBytes();\n  }\n\n  // extnValue (OCTET STRING)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, value));\n\n  return extseq;\n};\n\n/**\n * Converts a PKCS#10 certification request to an ASN.1 object.\n *\n * @param csr the certification request.\n *\n * @return the asn1 representation of a certification request.\n */\npki.certificationRequestToAsn1 = function(csr) {\n  // prefer cached CertificationRequestInfo over generating one\n  var cri = csr.certificationRequestInfo ||\n    pki.getCertificationRequestInfo(csr);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // CertificationRequestInfo\n    cri,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(csr.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(csr.signatureOid, csr.signatureParameters)\n    ]),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + csr.signature)\n  ]);\n};\n\n/**\n * Creates a CA store.\n *\n * @param certs an optional array of certificate objects or PEM-formatted\n *          certificate strings to add to the CA store.\n *\n * @return the CA store.\n */\npki.createCaStore = function(certs) {\n  // create CA store\n  var caStore = {\n    // stored certificates\n    certs: {}\n  };\n\n  /**\n   * Gets the certificate that issued the passed certificate or its\n   * 'parent'.\n   *\n   * @param cert the certificate to get the parent for.\n   *\n   * @return the parent certificate or null if none was found.\n   */\n  caStore.getIssuer = function(cert) {\n    var rval = getBySubject(cert.issuer);\n\n    // see if there are multiple matches\n    /*if(forge.util.isArray(rval)) {\n      // TODO: resolve multiple matches by checking\n      // authorityKey/subjectKey/issuerUniqueID/other identifiers, etc.\n      // FIXME: or alternatively do authority key mapping\n      // if possible (X.509v1 certs can't work?)\n      throw new Error('Resolving multiple issuer matches not implemented yet.');\n    }*/\n\n    return rval;\n  };\n\n  /**\n   * Adds a trusted certificate to the store.\n   *\n   * @param cert the certificate to add as a trusted certificate (either a\n   *          pki.certificate object or a PEM-formatted certificate).\n   */\n  caStore.addCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    ensureSubjectHasHash(cert.subject);\n\n    if(!caStore.hasCertificate(cert)) { // avoid duplicate certificates in store\n      if(cert.subject.hash in caStore.certs) {\n        // subject hash already exists, append to array\n        var tmp = caStore.certs[cert.subject.hash];\n        if(!forge.util.isArray(tmp)) {\n          tmp = [tmp];\n        }\n        tmp.push(cert);\n        caStore.certs[cert.subject.hash] = tmp;\n      } else {\n        caStore.certs[cert.subject.hash] = cert;\n      }\n    }\n  };\n\n  /**\n   * Checks to see if the given certificate is in the store.\n   *\n   * @param cert the certificate to check (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return true if the certificate is in the store, false if not.\n   */\n  caStore.hasCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    var match = getBySubject(cert.subject);\n    if(!match) {\n      return false;\n    }\n    if(!forge.util.isArray(match)) {\n      match = [match];\n    }\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Lists all of the certificates kept in the store.\n   *\n   * @return an array of all of the pki.certificate objects in the store.\n   */\n  caStore.listAllCertificates = function() {\n    var certList = [];\n\n    for(var hash in caStore.certs) {\n      if(caStore.certs.hasOwnProperty(hash)) {\n        var value = caStore.certs[hash];\n        if(!forge.util.isArray(value)) {\n          certList.push(value);\n        } else {\n          for(var i = 0; i < value.length; ++i) {\n            certList.push(value[i]);\n          }\n        }\n      }\n    }\n\n    return certList;\n  };\n\n  /**\n   * Removes a certificate from the store.\n   *\n   * @param cert the certificate to remove (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return the certificate that was removed or null if the certificate\n   *           wasn't in store.\n   */\n  caStore.removeCertificate = function(cert) {\n    var result;\n\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n    ensureSubjectHasHash(cert.subject);\n    if(!caStore.hasCertificate(cert)) {\n      return null;\n    }\n\n    var match = getBySubject(cert.subject);\n\n    if(!forge.util.isArray(match)) {\n      result = caStore.certs[cert.subject.hash];\n      delete caStore.certs[cert.subject.hash];\n      return result;\n    }\n\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        result = match[i];\n        match.splice(i, 1);\n      }\n    }\n    if(match.length === 0) {\n      delete caStore.certs[cert.subject.hash];\n    }\n\n    return result;\n  };\n\n  function getBySubject(subject) {\n    ensureSubjectHasHash(subject);\n    return caStore.certs[subject.hash] || null;\n  }\n\n  function ensureSubjectHasHash(subject) {\n    // produce subject hash if it doesn't exist\n    if(!subject.hash) {\n      var md = forge.md.sha1.create();\n      subject.attributes = pki.RDNAttributesAsArray(_dnToAsn1(subject), md);\n      subject.hash = md.digest().toHex();\n    }\n  }\n\n  // auto-add passed in certs\n  if(certs) {\n    // parse PEM-formatted certificates as necessary\n    for(var i = 0; i < certs.length; ++i) {\n      var cert = certs[i];\n      caStore.addCertificate(cert);\n    }\n  }\n\n  return caStore;\n};\n\n/**\n * Certificate verification errors, based on TLS.\n */\npki.certificateError = {\n  bad_certificate: 'forge.pki.BadCertificate',\n  unsupported_certificate: 'forge.pki.UnsupportedCertificate',\n  certificate_revoked: 'forge.pki.CertificateRevoked',\n  certificate_expired: 'forge.pki.CertificateExpired',\n  certificate_unknown: 'forge.pki.CertificateUnknown',\n  unknown_ca: 'forge.pki.UnknownCertificateAuthority'\n};\n\n/**\n * Verifies a certificate chain against the given Certificate Authority store\n * with an optional custom verify callback.\n *\n * @param caStore a certificate store to verify against.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end (an array of certificates).\n * @param options a callback to be called for every certificate in the chain or\n *                  an object with:\n *                  verify a callback to be called for every certificate in the\n *                    chain\n *                  validityCheckDate the date against which the certificate\n *                    validity period should be checked. Pass null to not check\n *                    the validity period. By default, the current date is used.\n *\n * The verify callback has the following signature:\n *\n * verified - Set to true if certificate was verified, otherwise the\n *   pki.certificateError for why the certificate failed.\n * depth - The current index in the chain, where 0 is the end point's cert.\n * certs - The certificate chain, *NOTE* an empty chain indicates an anonymous\n *   end point.\n *\n * The function returns true on success and on failure either the appropriate\n * pki.certificateError or an object with 'error' set to the appropriate\n * pki.certificateError and 'message' set to a custom error message.\n *\n * @return true if successful, error thrown if not.\n */\npki.verifyCertificateChain = function(caStore, chain, options) {\n  /* From: RFC3280 - Internet X.509 Public Key Infrastructure Certificate\n    Section 6: Certification Path Validation\n    See inline parentheticals related to this particular implementation.\n\n    The primary goal of path validation is to verify the binding between\n    a subject distinguished name or a subject alternative name and subject\n    public key, as represented in the end entity certificate, based on the\n    public key of the trust anchor. This requires obtaining a sequence of\n    certificates that support that binding. That sequence should be provided\n    in the passed 'chain'. The trust anchor should be in the given CA\n    store. The 'end entity' certificate is the certificate provided by the\n    end point (typically a server) and is the first in the chain.\n\n    To meet this goal, the path validation process verifies, among other\n    things, that a prospective certification path (a sequence of n\n    certificates or a 'chain') satisfies the following conditions:\n\n    (a) for all x in {1, ..., n-1}, the subject of certificate x is\n          the issuer of certificate x+1;\n\n    (b) certificate 1 is issued by the trust anchor;\n\n    (c) certificate n is the certificate to be validated; and\n\n    (d) for all x in {1, ..., n}, the certificate was valid at the\n          time in question.\n\n    Note that here 'n' is index 0 in the chain and 1 is the last certificate\n    in the chain and it must be signed by a certificate in the connection's\n    CA store.\n\n    The path validation process also determines the set of certificate\n    policies that are valid for this path, based on the certificate policies\n    extension, policy mapping extension, policy constraints extension, and\n    inhibit any-policy extension.\n\n    Note: Policy mapping extension not supported (Not Required).\n\n    Note: If the certificate has an unsupported critical extension, then it\n    must be rejected.\n\n    Note: A certificate is self-issued if the DNs that appear in the subject\n    and issuer fields are identical and are not empty.\n\n    The path validation algorithm assumes the following seven inputs are\n    provided to the path processing logic. What this specific implementation\n    will use is provided parenthetically:\n\n    (a) a prospective certification path of length n (the 'chain')\n    (b) the current date/time: ('now').\n    (c) user-initial-policy-set: A set of certificate policy identifiers\n          naming the policies that are acceptable to the certificate user.\n          The user-initial-policy-set contains the special value any-policy\n          if the user is not concerned about certificate policy\n          (Not implemented. Any policy is accepted).\n    (d) trust anchor information, describing a CA that serves as a trust\n          anchor for the certification path. The trust anchor information\n          includes:\n\n      (1)  the trusted issuer name,\n      (2)  the trusted public key algorithm,\n      (3)  the trusted public key, and\n      (4)  optionally, the trusted public key parameters associated\n             with the public key.\n\n      (Trust anchors are provided via certificates in the CA store).\n\n      The trust anchor information may be provided to the path processing\n      procedure in the form of a self-signed certificate. The trusted anchor\n      information is trusted because it was delivered to the path processing\n      procedure by some trustworthy out-of-band procedure. If the trusted\n      public key algorithm requires parameters, then the parameters are\n      provided along with the trusted public key (No parameters used in this\n      implementation).\n\n    (e) initial-policy-mapping-inhibit, which indicates if policy mapping is\n          allowed in the certification path.\n          (Not implemented, no policy checking)\n\n    (f) initial-explicit-policy, which indicates if the path must be valid\n          for at least one of the certificate policies in the user-initial-\n          policy-set.\n          (Not implemented, no policy checking)\n\n    (g) initial-any-policy-inhibit, which indicates whether the\n          anyPolicy OID should be processed if it is included in a\n          certificate.\n          (Not implemented, so any policy is valid provided that it is\n          not marked as critical) */\n\n  /* Basic Path Processing:\n\n    For each certificate in the 'chain', the following is checked:\n\n    1. The certificate validity period includes the current time.\n    2. The certificate was signed by its parent (where the parent is either\n       the next in the chain or from the CA store). Allow processing to\n       continue to the next step if no parent is found but the certificate is\n       in the CA store.\n    3. TODO: The certificate has not been revoked.\n    4. The certificate issuer name matches the parent's subject name.\n    5. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is within one of the permitted subtrees of X.500 distinguished names\n       and that each of the alternative names in the subjectAltName extension\n       (critical or non-critical) is within one of the permitted subtrees for\n       that name type.\n    6. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is not within one of the excluded subtrees for X.500 distinguished\n       names and none of the subjectAltName extension names are excluded for\n       that name type.\n    7. The other steps in the algorithm for basic path processing involve\n       handling the policy extension which is not presently supported in this\n       implementation. Instead, if a critical policy extension is found, the\n       certificate is rejected as not supported.\n    8. If the certificate is not the first or if its the only certificate in\n       the chain (having no parent from the CA store or is self-signed) and it\n       has a critical key usage extension, verify that the keyCertSign bit is\n       set. If the key usage extension exists, verify that the basic\n       constraints extension exists. If the basic constraints extension exists,\n       verify that the cA flag is set. If pathLenConstraint is set, ensure that\n       the number of certificates that precede in the chain (come earlier\n       in the chain as implemented below), excluding the very first in the\n       chain (typically the end-entity one), isn't greater than the\n       pathLenConstraint. This constraint limits the number of intermediate\n       CAs that may appear below a CA before only end-entity certificates\n       may be issued. */\n\n  // if a verify callback is passed as the third parameter, package it within\n  // the options object. This is to support a legacy function signature that\n  // expected the verify callback as the third parameter.\n  if(typeof options === 'function') {\n    options = {verify: options};\n  }\n  options = options || {};\n\n  // copy cert chain references to another array to protect against changes\n  // in verify callback\n  chain = chain.slice(0);\n  var certs = chain.slice(0);\n\n  var validityCheckDate = options.validityCheckDate;\n  // if no validityCheckDate is specified, default to the current date. Make\n  // sure to maintain the value null because it indicates that the validity\n  // period should not be checked.\n  if(typeof validityCheckDate === 'undefined') {\n    validityCheckDate = new Date();\n  }\n\n  // verify each cert in the chain using its parent, where the parent\n  // is either the next in the chain or from the CA store\n  var first = true;\n  var error = null;\n  var depth = 0;\n  do {\n    var cert = chain.shift();\n    var parent = null;\n    var selfSigned = false;\n\n    if(validityCheckDate) {\n      // 1. check valid time\n      if(validityCheckDate < cert.validity.notBefore ||\n         validityCheckDate > cert.validity.notAfter) {\n        error = {\n          message: 'Certificate is not valid yet or has expired.',\n          error: pki.certificateError.certificate_expired,\n          notBefore: cert.validity.notBefore,\n          notAfter: cert.validity.notAfter,\n          // TODO: we might want to reconsider renaming 'now' to\n          // 'validityCheckDate' should this API be changed in the future.\n          now: validityCheckDate\n        };\n      }\n    }\n\n    // 2. verify with parent from chain or CA store\n    if(error === null) {\n      parent = chain[0] || caStore.getIssuer(cert);\n      if(parent === null) {\n        // check for self-signed cert\n        if(cert.isIssuer(cert)) {\n          selfSigned = true;\n          parent = cert;\n        }\n      }\n\n      if(parent) {\n        // FIXME: current CA store implementation might have multiple\n        // certificates where the issuer can't be determined from the\n        // certificate (happens rarely with, eg: old certificates) so normalize\n        // by always putting parents into an array\n        // TODO: there's may be an extreme degenerate case currently uncovered\n        // where an old intermediate certificate seems to have a matching parent\n        // but none of the parents actually verify ... but the intermediate\n        // is in the CA and it should pass this check; needs investigation\n        var parents = parent;\n        if(!forge.util.isArray(parents)) {\n          parents = [parents];\n        }\n\n        // try to verify with each possible parent (typically only one)\n        var verified = false;\n        while(!verified && parents.length > 0) {\n          parent = parents.shift();\n          try {\n            verified = parent.verify(cert);\n          } catch(ex) {\n            // failure to verify, don't care why, try next one\n          }\n        }\n\n        if(!verified) {\n          error = {\n            message: 'Certificate signature is invalid.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n\n      if(error === null && (!parent || selfSigned) &&\n        !caStore.hasCertificate(cert)) {\n        // no parent issuer and certificate itself is not trusted\n        error = {\n          message: 'Certificate is not trusted.',\n          error: pki.certificateError.unknown_ca\n        };\n      }\n    }\n\n    // TODO: 3. check revoked\n\n    // 4. check for matching issuer/subject\n    if(error === null && parent && !cert.isIssuer(parent)) {\n      // parent is not issuer\n      error = {\n        message: 'Certificate issuer is invalid.',\n        error: pki.certificateError.bad_certificate\n      };\n    }\n\n    // 5. TODO: check names with permitted names tree\n\n    // 6. TODO: check names against excluded names tree\n\n    // 7. check for unsupported critical extensions\n    if(error === null) {\n      // supported extensions\n      var se = {\n        keyUsage: true,\n        basicConstraints: true\n      };\n      for(var i = 0; error === null && i < cert.extensions.length; ++i) {\n        var ext = cert.extensions[i];\n        if(ext.critical && !(ext.name in se)) {\n          error = {\n            message:\n              'Certificate has an unsupported critical extension.',\n            error: pki.certificateError.unsupported_certificate\n          };\n        }\n      }\n    }\n\n    // 8. check for CA if cert is not first or is the only certificate\n    // remaining in chain with no parent or is self-signed\n    if(error === null &&\n      (!first || (chain.length === 0 && (!parent || selfSigned)))) {\n      // first check keyUsage extension and then basic constraints\n      var bcExt = cert.getExtension('basicConstraints');\n      var keyUsageExt = cert.getExtension('keyUsage');\n      if(keyUsageExt !== null) {\n        // keyCertSign must be true and there must be a basic\n        // constraints extension\n        if(!keyUsageExt.keyCertSign || bcExt === null) {\n          // bad certificate\n          error = {\n            message:\n              'Certificate keyUsage or basicConstraints conflict ' +\n              'or indicate that the certificate is not a CA. ' +\n              'If the certificate is the only one in the chain or ' +\n              'isn\\'t the first then the certificate must be a ' +\n              'valid CA.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n      // basic constraints cA flag must be set\n      if(error === null && bcExt !== null && !bcExt.cA) {\n        // bad certificate\n        error = {\n          message:\n            'Certificate basicConstraints indicates the certificate ' +\n            'is not a CA.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n      // if error is not null and keyUsage is available, then we know it\n      // has keyCertSign and there is a basic constraints extension too,\n      // which means we can check pathLenConstraint (if it exists)\n      if(error === null && keyUsageExt !== null &&\n        'pathLenConstraint' in bcExt) {\n        // pathLen is the maximum # of intermediate CA certs that can be\n        // found between the current certificate and the end-entity (depth 0)\n        // certificate; this number does not include the end-entity (depth 0,\n        // last in the chain) even if it happens to be a CA certificate itself\n        var pathLen = depth - 1;\n        if(pathLen > bcExt.pathLenConstraint) {\n          // pathLenConstraint violated, bad certificate\n          error = {\n            message:\n              'Certificate basicConstraints pathLenConstraint violated.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n    }\n\n    // call application callback\n    var vfd = (error === null) ? true : error.error;\n    var ret = options.verify ? options.verify(vfd, depth, certs) : vfd;\n    if(ret === true) {\n      // clear any set error\n      error = null;\n    } else {\n      // if passed basic tests, set default message and alert\n      if(vfd === true) {\n        error = {\n          message: 'The application rejected the certificate.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n\n      // check for custom error info\n      if(ret || ret === 0) {\n        // set custom message and error\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.error) {\n            error.error = ret.error;\n          }\n        } else if(typeof ret === 'string') {\n          // set custom error\n          error.error = ret;\n        }\n      }\n\n      // throw error\n      throw error;\n    }\n\n    // no longer first cert in chain\n    first = false;\n    ++depth;\n  } while(chain.length > 0);\n\n  return true;\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","var Promise = require('promise');\nvar isPromise = require('is-promise');\n\nvar nextTick;\nif (typeof setImmediate === 'function') nextTick = setImmediate\nelse if (typeof process === 'object' && process && process.nextTick) nextTick = process.nextTick\nelse nextTick = function (cb) { setTimeout(cb, 0) }\n\nmodule.exports = nodeify;\nfunction nodeify(promise, cb) {\n  if (typeof cb !== 'function') return promise;\n  return promise\n    .then(function (res) {\n      nextTick(function () {\n        cb(null, res);\n      });\n    }, function (err) {\n      nextTick(function () {\n        cb(err);\n      });\n    });\n}\nfunction nodeifyThis(cb) {\n  return nodeify(this, cb);\n}\n\nnodeify.extend = extend;\nnodeify.Promise = NodeifyPromise;\n\nfunction extend(prom) {\n  if (prom && isPromise(prom)) {\n    prom.nodeify = nodeifyThis;\n    var then = prom.then;\n    prom.then = function () {\n      return extend(then.apply(this, arguments));\n    };\n    return prom;\n  } else if (typeof prom === 'function') {\n    prom.prototype.nodeify = nodeifyThis;\n  } else {\n    Promise.prototype.nodeify = nodeifyThis;\n  }\n}\n\nfunction NodeifyPromise(fn) {\n  if (!(this instanceof NodeifyPromise)) {\n    return new NodeifyPromise(fn);\n  }\n  Promise.call(this, fn);\n  extend(this);\n}\n\nNodeifyPromise.prototype = Object.create(Promise.prototype);\nNodeifyPromise.prototype.constructor = NodeifyPromise;","var isPromise = require('is-promise')\r\n\r\nvar nextTick;\r\nif (typeof setImediate === 'function') nextTick = setImediate\r\nelse if (typeof process === 'object' && process && process.nextTick) nextTick = process.nextTick\r\nelse nextTick = function (cb) { setTimeout(cb, 0) }\r\n\r\nvar extensions = [];\r\n\r\nmodule.exports = Promise\r\nfunction Promise(fn) {\r\n  if (!(this instanceof Promise)) {\r\n    return typeof fn === 'function' ? new Promise(fn) : defer()\r\n  }\r\n  var isResolved = false\r\n  var isFulfilled = false\r\n  var value\r\n  var waiting = []\r\n  var running = false\r\n\r\n  function next(skipTimeout) {\r\n    if (waiting.length) {\r\n      running = true\r\n      waiting.shift()(skipTimeout || false)\r\n    } else {\r\n      running = false\r\n    }\r\n  }\r\n  this.then = then;\r\n  function then(cb, eb) {\r\n    return new Promise(function (resolver) {\r\n      function done(skipTimeout) {\r\n        var callback = isFulfilled ? cb : eb\r\n        if (typeof callback === 'function') {\r\n          function timeoutDone() {\r\n            var val;\r\n            try {\r\n              val = callback(value)\r\n            } catch (ex) {\r\n              resolver.reject(ex)\r\n              return next()\r\n            }\r\n            resolver.fulfill(val);\r\n            next(true);\r\n          }\r\n          if (skipTimeout) timeoutDone()\r\n          else nextTick(timeoutDone)\r\n        } else if (isFulfilled) {\r\n          resolver.fulfill(value)\r\n          next(skipTimeout)\r\n        } else {\r\n          resolver.reject(value)\r\n          next(skipTimeout)\r\n        }\r\n      }\r\n      waiting.push(done)\r\n      if (isResolved && !running) next()\r\n    });\r\n  }\r\n  \r\n  (function () {\r\n    function fulfill(val) {\r\n      if (isResolved) return\r\n      if (isPromise(val)) val.then(fulfill, reject)\r\n      else {\r\n        isResolved = isFulfilled = true\r\n        value = val\r\n        next()\r\n      }\r\n    }\r\n    function reject(err) {\r\n      if (isResolved) return\r\n      isResolved = true\r\n      isFulfilled = false\r\n      value = err\r\n      next()\r\n    }\r\n    var resolver = {fulfill: fulfill, reject: reject};\r\n    for (var i = 0; i < extensions.length; i++) {\r\n      extensions[i](this, resolver);\r\n    }\r\n    if (typeof fn === 'function') {\r\n      try {\r\n        fn(resolver)\r\n      } catch (ex) {\r\n        resolver.reject(ex);\r\n      }\r\n    }\r\n  }());\r\n}\r\nfunction defer() {\r\n  var resolver\r\n  var promise = new Promise(function (res) { resolver = res })\r\n  return {resolver: resolver, promise: promise}\r\n}\r\nPromise.use = function (extension) {\r\n  extensions.push(extension);\r\n};","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var BN = require('bn.js');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Returns a BN object, converts a number value to a BN\n * @param {String|Number|Object} `arg` input a string number, hex string number, number, BigNumber or BN object\n * @return {Object} `output` BN object of the number\n * @throws if the argument is not an array, object that isn't a bignumber, not a string number or number\n */\nmodule.exports = function numberToBN(arg) {\n  if (typeof arg === 'string' || typeof arg === 'number') {\n    var multiplier = new BN(1); // eslint-disable-line\n    var formattedString = String(arg).toLowerCase().trim();\n    var isHexPrefixed = formattedString.substr(0, 2) === '0x' || formattedString.substr(0, 3) === '-0x';\n    var stringArg = stripHexPrefix(formattedString); // eslint-disable-line\n    if (stringArg.substr(0, 1) === '-') {\n      stringArg = stripHexPrefix(stringArg.slice(1));\n      multiplier = new BN(-1, 10);\n    }\n    stringArg = stringArg === '' ? '0' : stringArg;\n\n    if ((!stringArg.match(/^-?[0-9]+$/) && stringArg.match(/^[0-9A-Fa-f]+$/))\n      || stringArg.match(/^[a-fA-F]+$/)\n      || (isHexPrefixed === true && stringArg.match(/^[0-9A-Fa-f]+$/))) {\n      return new BN(stringArg, 16).mul(multiplier);\n    }\n\n    if ((stringArg.match(/^-?[0-9]+$/) || stringArg === '') && isHexPrefixed === false) {\n      return new BN(stringArg, 10).mul(multiplier);\n    }\n  } else if (typeof arg === 'object' && arg.toString && (!arg.pop && !arg.push)) {\n    if (arg.toString(10).match(/^-?[0-9]+$/) && (arg.mul || arg.dividedToIntegerBy)) {\n      return new BN(arg.toString(10), 10);\n    }\n  }\n\n  throw new Error('[number-to-bn] while converting number ' + JSON.stringify(arg) + ' to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.');\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","// This file is the concatenation of many js files.\n// See http://github.com/jimhigson/oboe.js for the raw source\n\n// having a local undefined, window, Object etc allows slightly better minification:\n(function  (window, Object, Array, Error, JSON, undefined ) {\n\n   // v2.1.3-15-g7432b49\n\n/*\n\nCopyright (c) 2013, Jim Higson\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n1.  Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n2.  Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\nTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\nTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n*/\n\n/** \n * Partially complete a function.\n * \n *  var add3 = partialComplete( function add(a,b){return a+b}, 3 );\n *  \n *  add3(4) // gives 7\n *  \n *  function wrap(left, right, cen){return left + \" \" + cen + \" \" + right;}\n *  \n *  var pirateGreeting = partialComplete( wrap , \"I'm\", \", a mighty pirate!\" );\n *  \n *  pirateGreeting(\"Guybrush Threepwood\"); \n *  // gives \"I'm Guybrush Threepwood, a mighty pirate!\"\n */\nvar partialComplete = varArgs(function( fn, args ) {\n\n      // this isn't the shortest way to write this but it does\n      // avoid creating a new array each time to pass to fn.apply,\n      // otherwise could just call boundArgs.concat(callArgs)       \n\n      var numBoundArgs = args.length;\n\n      return varArgs(function( callArgs ) {\n         \n         for (var i = 0; i < callArgs.length; i++) {\n            args[numBoundArgs + i] = callArgs[i];\n         }\n         \n         args.length = numBoundArgs + callArgs.length;         \n                     \n         return fn.apply(this, args);\n      }); \n   }),\n\n/**\n * Compose zero or more functions:\n * \n *    compose(f1, f2, f3)(x) = f1(f2(f3(x))))\n * \n * The last (inner-most) function may take more than one parameter:\n * \n *    compose(f1, f2, f3)(x,y) = f1(f2(f3(x,y))))\n */\n   compose = varArgs(function(fns) {\n\n      var fnsList = arrayAsList(fns);\n   \n      function next(params, curFn) {  \n         return [apply(params, curFn)];   \n      }\n            \n      return varArgs(function(startParams){\n        \n         return foldR(next, startParams, fnsList)[0];\n      });\n   });\n\n/**\n * A more optimised version of compose that takes exactly two functions\n * @param f1\n * @param f2\n */\nfunction compose2(f1, f2){\n   return function(){\n      return f1.call(this,f2.apply(this,arguments));\n   }\n}\n\n/**\n * Generic form for a function to get a property from an object\n * \n *    var o = {\n *       foo:'bar'\n *    }\n *    \n *    var getFoo = attr('foo')\n *    \n *    fetFoo(o) // returns 'bar'\n * \n * @param {String} key the property name\n */\nfunction attr(key) {\n   return function(o) { return o[key]; };\n}\n        \n/**\n * Call a list of functions with the same args until one returns a \n * truthy result. Similar to the || operator.\n * \n * So:\n *      lazyUnion([f1,f2,f3 ... fn])( p1, p2 ... pn )\n *      \n * Is equivalent to: \n *      apply([p1, p2 ... pn], f1) || \n *      apply([p1, p2 ... pn], f2) || \n *      apply([p1, p2 ... pn], f3) ... apply(fn, [p1, p2 ... pn])  \n *  \n * @returns the first return value that is given that is truthy.\n */\n   var lazyUnion = varArgs(function(fns) {\n\n      return varArgs(function(params){\n   \n         var maybeValue;\n   \n         for (var i = 0; i < len(fns); i++) {\n   \n            maybeValue = apply(params, fns[i]);\n   \n            if( maybeValue ) {\n               return maybeValue;\n            }\n         }\n      });\n   });   \n\n/**\n * This file declares various pieces of functional programming.\n * \n * This isn't a general purpose functional library, to keep things small it\n * has just the parts useful for Oboe.js.\n */\n\n\n/**\n * Call a single function with the given arguments array.\n * Basically, a functional-style version of the OO-style Function#apply for \n * when we don't care about the context ('this') of the call.\n * \n * The order of arguments allows partial completion of the arguments array\n */\nfunction apply(args, fn) {\n   return fn.apply(undefined, args);\n}\n\n/**\n * Define variable argument functions but cut out all that tedious messing about \n * with the arguments object. Delivers the variable-length part of the arguments\n * list as an array.\n * \n * Eg:\n * \n * var myFunction = varArgs(\n *    function( fixedArgument, otherFixedArgument, variableNumberOfArguments ){\n *       console.log( variableNumberOfArguments );\n *    }\n * )\n * \n * myFunction('a', 'b', 1, 2, 3); // logs [1,2,3]\n * \n * var myOtherFunction = varArgs(function( variableNumberOfArguments ){\n *    console.log( variableNumberOfArguments );\n * })\n * \n * myFunction(1, 2, 3); // logs [1,2,3]\n * \n */\nfunction varArgs(fn){\n\n   var numberOfFixedArguments = fn.length -1,\n       slice = Array.prototype.slice;          \n         \n                   \n   if( numberOfFixedArguments == 0 ) {\n      // an optimised case for when there are no fixed args:   \n   \n      return function(){\n         return fn.call(this, slice.call(arguments));\n      }\n      \n   } else if( numberOfFixedArguments == 1 ) {\n      // an optimised case for when there are is one fixed args:\n   \n      return function(){\n         return fn.call(this, arguments[0], slice.call(arguments, 1));\n      }\n   }\n   \n   // general case   \n\n   // we know how many arguments fn will always take. Create a\n   // fixed-size array to hold that many, to be re-used on\n   // every call to the returned function\n   var argsHolder = Array(fn.length);   \n                             \n   return function(){\n                            \n      for (var i = 0; i < numberOfFixedArguments; i++) {\n         argsHolder[i] = arguments[i];         \n      }\n\n      argsHolder[numberOfFixedArguments] = \n         slice.call(arguments, numberOfFixedArguments);\n                                \n      return fn.apply( this, argsHolder);      \n   }       \n}\n\n\n/**\n * Swap the order of parameters to a binary function\n * \n * A bit like this flip: http://zvon.org/other/haskell/Outputprelude/flip_f.html\n */\nfunction flip(fn){\n   return function(a, b){\n      return fn(b,a);\n   }\n}\n\n\n/**\n * Create a function which is the intersection of two other functions.\n * \n * Like the && operator, if the first is truthy, the second is never called,\n * otherwise the return value from the second is returned.\n */\nfunction lazyIntersection(fn1, fn2) {\n\n   return function (param) {\n                                                              \n      return fn1(param) && fn2(param);\n   };   \n}\n\n/**\n * A function which does nothing\n */\nfunction noop(){}\n\n/**\n * A function which is always happy\n */\nfunction always(){return true}\n\n/**\n * Create a function which always returns the same\n * value\n * \n * var return3 = functor(3);\n * \n * return3() // gives 3\n * return3() // still gives 3\n * return3() // will always give 3\n */\nfunction functor(val){\n   return function(){\n      return val;\n   }\n}\n\n/**\n * This file defines some loosely associated syntactic sugar for \n * Javascript programming \n */\n\n\n/**\n * Returns true if the given candidate is of type T\n */\nfunction isOfType(T, maybeSomething){\n   return maybeSomething && maybeSomething.constructor === T;\n}\n\nvar len = attr('length'),    \n    isString = partialComplete(isOfType, String);\n\n/** \n * I don't like saying this:\n * \n *    foo !=== undefined\n *    \n * because of the double-negative. I find this:\n * \n *    defined(foo)\n *    \n * easier to read.\n */ \nfunction defined( value ) {\n   return value !== undefined;\n}\n\n/**\n * Returns true if object o has a key named like every property in \n * the properties array. Will give false if any are missing, or if o \n * is not an object.\n */\nfunction hasAllProperties(fieldList, o) {\n\n   return      (o instanceof Object) \n            &&\n               all(function (field) {         \n                  return (field in o);         \n               }, fieldList);\n}\n/**\n * Like cons in Lisp\n */\nfunction cons(x, xs) {\n   \n   /* Internally lists are linked 2-element Javascript arrays.\n          \n      Ideally the return here would be Object.freeze([x,xs])\n      so that bugs related to mutation are found fast.\n      However, cons is right on the critical path for\n      performance and this slows oboe-mark down by\n      ~25%. Under theoretical future JS engines that freeze more\n      efficiently (possibly even use immutability to\n      run faster) this should be considered for\n      restoration.\n   */\n   \n   return [x,xs];\n}\n\n/**\n * The empty list\n */\nvar emptyList = null,\n\n/**\n * Get the head of a list.\n * \n * Ie, head(cons(a,b)) = a\n */\n    head = attr(0),\n\n/**\n * Get the tail of a list.\n * \n * Ie, tail(cons(a,b)) = b\n */\n    tail = attr(1);\n\n\n/** \n * Converts an array to a list \n * \n *    asList([a,b,c])\n * \n * is equivalent to:\n *    \n *    cons(a, cons(b, cons(c, emptyList))) \n **/\nfunction arrayAsList(inputArray){\n\n   return reverseList( \n      inputArray.reduce(\n         flip(cons),\n         emptyList \n      )\n   );\n}\n\n/**\n * A varargs version of arrayAsList. Works a bit like list\n * in LISP.\n * \n *    list(a,b,c) \n *    \n * is equivalent to:\n * \n *    cons(a, cons(b, cons(c, emptyList)))\n */\nvar list = varArgs(arrayAsList);\n\n/**\n * Convert a list back to a js native array\n */\nfunction listAsArray(list){\n\n   return foldR( function(arraySoFar, listItem){\n      \n      arraySoFar.unshift(listItem);\n      return arraySoFar;\n           \n   }, [], list );\n   \n}\n\n/**\n * Map a function over a list \n */\nfunction map(fn, list) {\n\n   return list\n            ? cons(fn(head(list)), map(fn,tail(list)))\n            : emptyList\n            ;\n}\n\n/**\n * foldR implementation. Reduce a list down to a single value.\n * \n * @pram {Function} fn     (rightEval, curVal) -> result \n */\nfunction foldR(fn, startValue, list) {\n      \n   return list \n            ? fn(foldR(fn, startValue, tail(list)), head(list))\n            : startValue\n            ;\n}\n\n/**\n * foldR implementation. Reduce a list down to a single value.\n * \n * @pram {Function} fn     (rightEval, curVal) -> result \n */\nfunction foldR1(fn, list) {\n      \n   return tail(list) \n            ? fn(foldR1(fn, tail(list)), head(list))\n            : head(list)\n            ;\n}\n\n\n/**\n * Return a list like the one given but with the first instance equal \n * to item removed \n */\nfunction without(list, test, removedFn) {\n \n   return withoutInner(list, removedFn || noop);\n \n   function withoutInner(subList, removedFn) {\n      return subList  \n         ?  ( test(head(subList)) \n                  ? (removedFn(head(subList)), tail(subList)) \n                  : cons(head(subList), withoutInner(tail(subList), removedFn))\n            )\n         : emptyList\n         ;\n   }               \n}\n\n/** \n * Returns true if the given function holds for every item in \n * the list, false otherwise \n */\nfunction all(fn, list) {\n   \n   return !list || \n          ( fn(head(list)) && all(fn, tail(list)) );\n}\n\n/**\n * Call every function in a list of functions with the same arguments\n * \n * This doesn't make any sense if we're doing pure functional because \n * it doesn't return anything. Hence, this is only really useful if the\n * functions being called have side-effects. \n */\nfunction applyEach(fnList, args) {\n\n   if( fnList ) {  \n      head(fnList).apply(null, args);\n      \n      applyEach(tail(fnList), args);\n   }\n}\n\n/**\n * Reverse the order of a list\n */\nfunction reverseList(list){ \n\n   // js re-implementation of 3rd solution from:\n   //    http://www.haskell.org/haskellwiki/99_questions/Solutions/5\n   function reverseInner( list, reversedAlready ) {\n      if( !list ) {\n         return reversedAlready;\n      }\n      \n      return reverseInner(tail(list), cons(head(list), reversedAlready))\n   }\n\n   return reverseInner(list, emptyList);\n}\n\nfunction first(test, list) {\n   return   list &&\n               (test(head(list)) \n                  ? head(list) \n                  : first(test,tail(list))); \n}\n\n/* \n   This is a slightly hacked-up browser only version of clarinet \n   \n      *  some features removed to help keep browser Oboe under \n         the 5k micro-library limit\n      *  plug directly into event bus\n   \n   For the original go here:\n      https://github.com/dscape/clarinet\n\n   We receive the events:\n      STREAM_DATA\n      STREAM_END\n      \n   We emit the events:\n      SAX_KEY\n      SAX_VALUE_OPEN\n      SAX_VALUE_CLOSE      \n      FAIL_EVENT      \n */\n\nfunction clarinet(eventBus) {\n  \"use strict\";\n   \n  var \n      // shortcut some events on the bus\n      emitSaxKey           = eventBus(SAX_KEY).emit,\n      emitValueOpen        = eventBus(SAX_VALUE_OPEN).emit,\n      emitValueClose       = eventBus(SAX_VALUE_CLOSE).emit,\n      emitFail             = eventBus(FAIL_EVENT).emit,\n              \n      MAX_BUFFER_LENGTH = 64 * 1024\n  ,   stringTokenPattern = /[\\\\\"\\n]/g\n  ,   _n = 0\n  \n      // states\n  ,   BEGIN                = _n++\n  ,   VALUE                = _n++ // general stuff\n  ,   OPEN_OBJECT          = _n++ // {\n  ,   CLOSE_OBJECT         = _n++ // }\n  ,   OPEN_ARRAY           = _n++ // [\n  ,   CLOSE_ARRAY          = _n++ // ]\n  ,   STRING               = _n++ // \"\"\n  ,   OPEN_KEY             = _n++ // , \"a\"\n  ,   CLOSE_KEY            = _n++ // :\n  ,   TRUE                 = _n++ // r\n  ,   TRUE2                = _n++ // u\n  ,   TRUE3                = _n++ // e\n  ,   FALSE                = _n++ // a\n  ,   FALSE2               = _n++ // l\n  ,   FALSE3               = _n++ // s\n  ,   FALSE4               = _n++ // e\n  ,   NULL                 = _n++ // u\n  ,   NULL2                = _n++ // l\n  ,   NULL3                = _n++ // l\n  ,   NUMBER_DECIMAL_POINT = _n++ // .\n  ,   NUMBER_DIGIT         = _n   // [0-9]\n\n      // setup initial parser values\n  ,   bufferCheckPosition  = MAX_BUFFER_LENGTH\n  ,   latestError                \n  ,   c                    \n  ,   p                    \n  ,   textNode             = undefined\n  ,   numberNode           = \"\"     \n  ,   slashed              = false\n  ,   closed               = false\n  ,   state                = BEGIN\n  ,   stack                = []\n  ,   unicodeS             = null\n  ,   unicodeI             = 0\n  ,   depth                = 0\n  ,   position             = 0\n  ,   column               = 0  //mostly for error reporting\n  ,   line                 = 1\n  ;\n\n  function checkBufferLength () {\n     \n    var maxActual = 0;\n     \n    if (textNode !== undefined && textNode.length > MAX_BUFFER_LENGTH) {\n      emitError(\"Max buffer length exceeded: textNode\");\n      maxActual = Math.max(maxActual, textNode.length);\n    }\n    if (numberNode.length > MAX_BUFFER_LENGTH) {\n      emitError(\"Max buffer length exceeded: numberNode\");\n      maxActual = Math.max(maxActual, numberNode.length);\n    }\n     \n    bufferCheckPosition = (MAX_BUFFER_LENGTH - maxActual)\n                               + position;\n  }\n\n  eventBus(STREAM_DATA).on(handleData);\n\n   /* At the end of the http content close the clarinet \n    This will provide an error if the total content provided was not \n    valid json, ie if not all arrays, objects and Strings closed properly */\n  eventBus(STREAM_END).on(handleStreamEnd);   \n\n  function emitError (errorString) {\n     if (textNode !== undefined) {\n        emitValueOpen(textNode);\n        emitValueClose();\n        textNode = undefined;\n     }\n\n     latestError = Error(errorString + \"\\nLn: \"+line+\n                                       \"\\nCol: \"+column+\n                                       \"\\nChr: \"+c);\n     \n     emitFail(errorReport(undefined, undefined, latestError));\n  }\n\n  function handleStreamEnd() {\n    if( state == BEGIN ) {\n      // Handle the case where the stream closes without ever receiving\n      // any input. This isn't an error - response bodies can be blank,\n      // particularly for 204 http responses\n      \n      // Because of how Oboe is currently implemented, we parse a\n      // completely empty stream as containing an empty object.\n      // This is because Oboe's done event is only fired when the\n      // root object of the JSON stream closes.\n      \n      // This should be decoupled and attached instead to the input stream\n      // from the http (or whatever) resource ending.\n      // If this decoupling could happen the SAX parser could simply emit\n      // zero events on a completely empty input.\n      emitValueOpen({});\n      emitValueClose();\n\n      closed = true;\n      return;\n    }\n  \n    if (state !== VALUE || depth !== 0)\n      emitError(\"Unexpected end\");\n \n    if (textNode !== undefined) {\n      emitValueOpen(textNode);\n      emitValueClose();\n      textNode = undefined;\n    }\n     \n    closed = true;\n  }\n\n  function whitespace(c){\n     return c == '\\r' || c == '\\n' || c == ' ' || c == '\\t';\n  }\n   \n  function handleData (chunk) {\n         \n    // this used to throw the error but inside Oboe we will have already\n    // gotten the error when it was emitted. The important thing is to\n    // not continue with the parse.\n    if (latestError)\n      return;\n      \n    if (closed) {\n       return emitError(\"Cannot write after close\");\n    }\n\n    var i = 0;\n    c = chunk[0]; \n\n    while (c) {\n      if (i > 0) {\n        p = c;\n      }\n      c = chunk[i++];\n      if(!c) break;\n\n      position ++;\n      if (c == \"\\n\") {\n        line ++;\n        column = 0;\n      } else column ++;\n      switch (state) {\n\n        case BEGIN:\n          if (c === \"{\") state = OPEN_OBJECT;\n          else if (c === \"[\") state = OPEN_ARRAY;\n          else if (!whitespace(c))\n            return emitError(\"Non-whitespace before {[.\");\n        continue;\n\n        case OPEN_KEY:\n        case OPEN_OBJECT:\n          if (whitespace(c)) continue;\n          if(state === OPEN_KEY) stack.push(CLOSE_KEY);\n          else {\n            if(c === '}') {\n              emitValueOpen({});\n              emitValueClose();\n              state = stack.pop() || VALUE;\n              continue;\n            } else  stack.push(CLOSE_OBJECT);\n          }\n          if(c === '\"')\n             state = STRING;\n          else\n             return emitError(\"Malformed object key should start with \\\" \");\n        continue;\n\n        case CLOSE_KEY:\n        case CLOSE_OBJECT:\n          if (whitespace(c)) continue;\n\n          if(c===':') {\n            if(state === CLOSE_OBJECT) {\n              stack.push(CLOSE_OBJECT);\n\n               if (textNode !== undefined) {\n                  // was previously (in upstream Clarinet) one event\n                  //  - object open came with the text of the first\n                  emitValueOpen({});\n                  emitSaxKey(textNode);\n                  textNode = undefined;\n               }\n               depth++;\n            } else {\n               if (textNode !== undefined) {\n                  emitSaxKey(textNode);\n                  textNode = undefined;\n               }\n            }\n             state  = VALUE;\n          } else if (c==='}') {\n             if (textNode !== undefined) {\n                emitValueOpen(textNode);\n                emitValueClose();\n                textNode = undefined;\n             }\n             emitValueClose();\n            depth--;\n            state = stack.pop() || VALUE;\n          } else if(c===',') {\n            if(state === CLOSE_OBJECT)\n              stack.push(CLOSE_OBJECT);\n             if (textNode !== undefined) {\n                emitValueOpen(textNode);\n                emitValueClose();\n                textNode = undefined;\n             }\n             state  = OPEN_KEY;\n          } else \n             return emitError('Bad object');\n        continue;\n\n        case OPEN_ARRAY: // after an array there always a value\n        case VALUE:\n          if (whitespace(c)) continue;\n          if(state===OPEN_ARRAY) {\n            emitValueOpen([]);\n            depth++;             \n            state = VALUE;\n            if(c === ']') {\n              emitValueClose();\n              depth--;\n              state = stack.pop() || VALUE;\n              continue;\n            } else {\n              stack.push(CLOSE_ARRAY);\n            }\n          }\n               if(c === '\"') state = STRING;\n          else if(c === '{') state = OPEN_OBJECT;\n          else if(c === '[') state = OPEN_ARRAY;\n          else if(c === 't') state = TRUE;\n          else if(c === 'f') state = FALSE;\n          else if(c === 'n') state = NULL;\n          else if(c === '-') { // keep and continue\n            numberNode += c;\n          } else if(c==='0') {\n            numberNode += c;\n            state = NUMBER_DIGIT;\n          } else if('123456789'.indexOf(c) !== -1) {\n            numberNode += c;\n            state = NUMBER_DIGIT;\n          } else               \n            return emitError(\"Bad value\");\n        continue;\n\n        case CLOSE_ARRAY:\n          if(c===',') {\n            stack.push(CLOSE_ARRAY);\n             if (textNode !== undefined) {\n                emitValueOpen(textNode);\n                emitValueClose();\n                textNode = undefined;\n             }\n             state  = VALUE;\n          } else if (c===']') {\n             if (textNode !== undefined) {\n                emitValueOpen(textNode);\n                emitValueClose();\n                textNode = undefined;\n             }\n             emitValueClose();\n            depth--;\n            state = stack.pop() || VALUE;\n          } else if (whitespace(c))\n              continue;\n          else \n             return emitError('Bad array');\n        continue;\n\n        case STRING:\n          if (textNode === undefined) {\n              textNode = \"\";\n          }\n\n          // thanks thejh, this is an about 50% performance improvement.\n          var starti              = i-1;\n           \n          STRING_BIGLOOP: while (true) {\n\n            // zero means \"no unicode active\". 1-4 mean \"parse some more\". end after 4.\n            while (unicodeI > 0) {\n              unicodeS += c;\n              c = chunk.charAt(i++);\n              if (unicodeI === 4) {\n                // TODO this might be slow? well, probably not used too often anyway\n                textNode += String.fromCharCode(parseInt(unicodeS, 16));\n                unicodeI = 0;\n                starti = i-1;\n              } else {\n                unicodeI++;\n              }\n              // we can just break here: no stuff we skipped that still has to be sliced out or so\n              if (!c) break STRING_BIGLOOP;\n            }\n            if (c === '\"' && !slashed) {\n              state = stack.pop() || VALUE;\n              textNode += chunk.substring(starti, i-1);\n              break;\n            }\n            if (c === '\\\\' && !slashed) {\n              slashed = true;\n              textNode += chunk.substring(starti, i-1);\n               c = chunk.charAt(i++);\n              if (!c) break;\n            }\n            if (slashed) {\n              slashed = false;\n                   if (c === 'n') { textNode += '\\n'; }\n              else if (c === 'r') { textNode += '\\r'; }\n              else if (c === 't') { textNode += '\\t'; }\n              else if (c === 'f') { textNode += '\\f'; }\n              else if (c === 'b') { textNode += '\\b'; }\n              else if (c === 'u') {\n                // \\uxxxx. meh!\n                unicodeI = 1;\n                unicodeS = '';\n              } else {\n                textNode += c;\n              }\n              c = chunk.charAt(i++);\n              starti = i-1;\n              if (!c) break;\n              else continue;\n            }\n\n            stringTokenPattern.lastIndex = i;\n            var reResult = stringTokenPattern.exec(chunk);\n            if (!reResult) {\n              i = chunk.length+1;\n              textNode += chunk.substring(starti, i-1);\n              break;\n            }\n            i = reResult.index+1;\n            c = chunk.charAt(reResult.index);\n            if (!c) {\n              textNode += chunk.substring(starti, i-1);\n              break;\n            }\n          }\n        continue;\n\n        case TRUE:\n          if (!c)  continue; // strange buffers\n          if (c==='r') state = TRUE2;\n          else\n             return emitError( 'Invalid true started with t'+ c);\n        continue;\n\n        case TRUE2:\n          if (!c)  continue;\n          if (c==='u') state = TRUE3;\n          else\n             return emitError('Invalid true started with tr'+ c);\n        continue;\n\n        case TRUE3:\n          if (!c) continue;\n          if(c==='e') {\n            emitValueOpen(true);\n            emitValueClose();\n            state = stack.pop() || VALUE;\n          } else\n             return emitError('Invalid true started with tru'+ c);\n        continue;\n\n        case FALSE:\n          if (!c)  continue;\n          if (c==='a') state = FALSE2;\n          else\n             return emitError('Invalid false started with f'+ c);\n        continue;\n\n        case FALSE2:\n          if (!c)  continue;\n          if (c==='l') state = FALSE3;\n          else\n             return emitError('Invalid false started with fa'+ c);\n        continue;\n\n        case FALSE3:\n          if (!c)  continue;\n          if (c==='s') state = FALSE4;\n          else\n             return emitError('Invalid false started with fal'+ c);\n        continue;\n\n        case FALSE4:\n          if (!c)  continue;\n          if (c==='e') {\n            emitValueOpen(false);\n            emitValueClose();\n            state = stack.pop() || VALUE;\n          } else\n             return emitError('Invalid false started with fals'+ c);\n        continue;\n\n        case NULL:\n          if (!c)  continue;\n          if (c==='u') state = NULL2;\n          else\n             return emitError('Invalid null started with n'+ c);\n        continue;\n\n        case NULL2:\n          if (!c)  continue;\n          if (c==='l') state = NULL3;\n          else\n             return emitError('Invalid null started with nu'+ c);\n        continue;\n\n        case NULL3:\n          if (!c) continue;\n          if(c==='l') {\n            emitValueOpen(null);\n            emitValueClose();\n            state = stack.pop() || VALUE;\n          } else \n             return emitError('Invalid null started with nul'+ c);\n        continue;\n\n        case NUMBER_DECIMAL_POINT:\n          if(c==='.') {\n            numberNode += c;\n            state       = NUMBER_DIGIT;\n          } else \n             return emitError('Leading zero not followed by .');\n        continue;\n\n        case NUMBER_DIGIT:\n          if('0123456789'.indexOf(c) !== -1) numberNode += c;\n          else if (c==='.') {\n            if(numberNode.indexOf('.')!==-1)\n               return emitError('Invalid number has two dots');\n            numberNode += c;\n          } else if (c==='e' || c==='E') {\n            if(numberNode.indexOf('e')!==-1 ||\n               numberNode.indexOf('E')!==-1 )\n               return emitError('Invalid number has two exponential');\n            numberNode += c;\n          } else if (c===\"+\" || c===\"-\") {\n            if(!(p==='e' || p==='E'))\n               return emitError('Invalid symbol in number');\n            numberNode += c;\n          } else {\n            if (numberNode) {\n              emitValueOpen(parseFloat(numberNode));\n              emitValueClose();\n              numberNode = \"\";\n            }\n            i--; // go back one\n            state = stack.pop() || VALUE;\n          }\n        continue;\n\n        default:\n          return emitError(\"Unknown state: \" + state);\n      }\n    }\n    if (position >= bufferCheckPosition)\n      checkBufferLength();\n  }\n}\n\n\n/** \n * A bridge used to assign stateless functions to listen to clarinet.\n * \n * As well as the parameter from clarinet, each callback will also be passed\n * the result of the last callback.\n * \n * This may also be used to clear all listeners by assigning zero handlers:\n * \n *    ascentManager( clarinet, {} )\n */\nfunction ascentManager(oboeBus, handlers){\n   \"use strict\";\n   \n   var listenerId = {},\n       ascent;\n\n   function stateAfter(handler) {\n      return function(param){\n         ascent = handler( ascent, param);\n      }\n   }\n   \n   for( var eventName in handlers ) {\n\n      oboeBus(eventName).on(stateAfter(handlers[eventName]), listenerId);\n   }\n   \n   oboeBus(NODE_SWAP).on(function(newNode) {\n      \n      var oldHead = head(ascent),\n          key = keyOf(oldHead),\n          ancestors = tail(ascent),\n          parentNode;\n\n      if( ancestors ) {\n         parentNode = nodeOf(head(ancestors));\n         parentNode[key] = newNode;\n      }\n   });\n\n   oboeBus(NODE_DROP).on(function() {\n\n      var oldHead = head(ascent),\n          key = keyOf(oldHead),\n          ancestors = tail(ascent),\n          parentNode;\n\n      if( ancestors ) {\n         parentNode = nodeOf(head(ancestors));\n \n         delete parentNode[key];\n      }\n   });\n\n   oboeBus(ABORTING).on(function(){\n      \n      for( var eventName in handlers ) {\n         oboeBus(eventName).un(listenerId);\n      }\n   });   \n}\n\n// based on gist https://gist.github.com/monsur/706839\n\n/**\n * XmlHttpRequest's getAllResponseHeaders() method returns a string of response\n * headers according to the format described here:\n * http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method\n * This method parses that string into a user-friendly key/value pair object.\n */\nfunction parseResponseHeaders(headerStr) {\n   var headers = {};\n   \n   headerStr && headerStr.split('\\u000d\\u000a')\n      .forEach(function(headerPair){\n   \n         // Can't use split() here because it does the wrong thing\n         // if the header value has the string \": \" in it.\n         var index = headerPair.indexOf('\\u003a\\u0020');\n         \n         headers[headerPair.substring(0, index)] \n                     = headerPair.substring(index + 2);\n      });\n   \n   return headers;\n}\n\n/**\n * Detect if a given URL is cross-origin in the scope of the\n * current page.\n * \n * Browser only (since cross-origin has no meaning in Node.js)\n *\n * @param {Object} pageLocation - as in window.location\n * @param {Object} ajaxHost - an object like window.location describing the \n *    origin of the url that we want to ajax in\n */\nfunction isCrossOrigin(pageLocation, ajaxHost) {\n\n   /*\n    * NB: defaultPort only knows http and https.\n    * Returns undefined otherwise.\n    */\n   function defaultPort(protocol) {\n      return {'http:':80, 'https:':443}[protocol];\n   }\n   \n   function portOf(location) {\n      // pageLocation should always have a protocol. ajaxHost if no port or\n      // protocol is specified, should use the port of the containing page\n      \n      return location.port || defaultPort(location.protocol||pageLocation.protocol);\n   }\n\n   // if ajaxHost doesn't give a domain, port is the same as pageLocation\n   // it can't give a protocol but not a domain\n   // it can't give a port but not a domain\n   \n   return !!(  (ajaxHost.protocol  && (ajaxHost.protocol  != pageLocation.protocol)) ||\n               (ajaxHost.host      && (ajaxHost.host      != pageLocation.host))     ||\n               (ajaxHost.host      && (portOf(ajaxHost) != portOf(pageLocation)))\n          );\n}\n\n/* turn any url into an object like window.location */\nfunction parseUrlOrigin(url) {\n   // url could be domain-relative\n   // url could give a domain\n\n   // cross origin means:\n   //    same domain\n   //    same port\n   //    some protocol\n   // so, same everything up to the first (single) slash \n   // if such is given\n   //\n   // can ignore everything after that   \n   \n   var URL_HOST_PATTERN = /(\\w+:)?(?:\\/\\/)([\\w.-]+)?(?::(\\d+))?\\/?/,\n\n         // if no match, use an empty array so that\n         // subexpressions 1,2,3 are all undefined\n         // and will ultimately return all empty\n         // strings as the parse result:\n       urlHostMatch = URL_HOST_PATTERN.exec(url) || [];\n   \n   return {\n      protocol:   urlHostMatch[1] || '',\n      host:       urlHostMatch[2] || '',\n      port:       urlHostMatch[3] || ''\n   };\n}\n\nfunction httpTransport(){\n   return new XMLHttpRequest();\n}\n\n/**\n * A wrapper around the browser XmlHttpRequest object that raises an \n * event whenever a new part of the response is available.\n * \n * In older browsers progressive reading is impossible so all the \n * content is given in a single call. For newer ones several events\n * should be raised, allowing progressive interpretation of the response.\n *      \n * @param {Function} oboeBus an event bus local to this Oboe instance\n * @param {XMLHttpRequest} xhr the xhr to use as the transport. Under normal\n *          operation, will have been created using httpTransport() above\n *          but for tests a stub can be provided instead.\n * @param {String} method one of 'GET' 'POST' 'PUT' 'PATCH' 'DELETE'\n * @param {String} url the url to make a request to\n * @param {String|Null} data some content to be sent with the request.\n *                      Only valid if method is POST or PUT.\n * @param {Object} [headers] the http request headers to send\n * @param {boolean} withCredentials the XHR withCredentials property will be\n *    set to this value\n */  \nfunction streamingHttp(oboeBus, xhr, method, url, data, headers, withCredentials) {\n           \n   \"use strict\";\n   \n   var emitStreamData = oboeBus(STREAM_DATA).emit,\n       emitFail       = oboeBus(FAIL_EVENT).emit,\n       numberOfCharsAlreadyGivenToCallback = 0,\n       stillToSendStartEvent = true;\n\n   // When an ABORTING message is put on the event bus abort \n   // the ajax request         \n   oboeBus( ABORTING ).on( function(){\n  \n      // if we keep the onreadystatechange while aborting the XHR gives \n      // a callback like a successful call so first remove this listener\n      // by assigning null:\n      xhr.onreadystatechange = null;\n            \n      xhr.abort();\n   });\n\n   /** \n    * Handle input from the underlying xhr: either a state change,\n    * the progress event or the request being complete.\n    */\n   function handleProgress() {\n                        \n      var textSoFar = xhr.responseText,\n          newText = textSoFar.substr(numberOfCharsAlreadyGivenToCallback);\n      \n      \n      /* Raise the event for new text.\n      \n         On older browsers, the new text is the whole response. \n         On newer/better ones, the fragment part that we got since \n         last progress. */\n         \n      if( newText ) {\n         emitStreamData( newText );\n      } \n\n      numberOfCharsAlreadyGivenToCallback = len(textSoFar);\n   }\n   \n   \n   if('onprogress' in xhr){  // detect browser support for progressive delivery\n      xhr.onprogress = handleProgress;\n   }\n      \n   xhr.onreadystatechange = function() {\n\n      function sendStartIfNotAlready() {\n         // Internet Explorer is very unreliable as to when xhr.status etc can\n         // be read so has to be protected with try/catch and tried again on \n         // the next readyState if it fails\n         try{\n            stillToSendStartEvent && oboeBus( HTTP_START ).emit(\n               xhr.status,\n               parseResponseHeaders(xhr.getAllResponseHeaders()) );\n            stillToSendStartEvent = false;\n         } catch(e){/* do nothing, will try again on next readyState*/}\n      }\n      \n      switch( xhr.readyState ) {\n               \n         case 2: // HEADERS_RECEIVED\n         case 3: // LOADING\n            return sendStartIfNotAlready();\n            \n         case 4: // DONE\n            sendStartIfNotAlready(); // if xhr.status hasn't been available yet, it must be NOW, huh IE?\n            \n            // is this a 2xx http code?\n            var successful = String(xhr.status)[0] == 2;\n            \n            if( successful ) {\n               // In Chrome 29 (not 28) no onprogress is emitted when a response\n               // is complete before the onload. We need to always do handleInput\n               // in case we get the load but have not had a final progress event.\n               // This looks like a bug and may change in future but let's take\n               // the safest approach and assume we might not have received a \n               // progress event for each part of the response\n               handleProgress();\n               \n               oboeBus(STREAM_END).emit();\n            } else {\n\n               emitFail( errorReport(\n                  xhr.status, \n                  xhr.responseText\n               ));\n            }\n      }\n   };\n   \n   try{\n   \n      xhr.open(method, url, true);\n   \n      for( var headerName in headers ){\n         xhr.setRequestHeader(headerName, headers[headerName]);\n      }\n      \n      if( !isCrossOrigin(window.location, parseUrlOrigin(url)) ) {\n         xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      }\n\n      xhr.withCredentials = withCredentials;\n      \n      xhr.send(data);\n      \n   } catch( e ) {\n      \n      // To keep a consistent interface with Node, we can't emit an event here.\n      // Node's streaming http adaptor receives the error as an asynchronous\n      // event rather than as an exception. If we emitted now, the Oboe user\n      // has had no chance to add a .fail listener so there is no way\n      // the event could be useful. For both these reasons defer the\n      // firing to the next JS frame.  \n      window.setTimeout(\n         partialComplete(emitFail, errorReport(undefined, undefined, e))\n      ,  0\n      );\n   }            \n}\n\nvar jsonPathSyntax = (function() {\n \n   var\n   \n   /** \n    * Export a regular expression as a simple function by exposing just \n    * the Regex#exec. This allows regex tests to be used under the same \n    * interface as differently implemented tests, or for a user of the\n    * tests to not concern themselves with their implementation as regular\n    * expressions.\n    * \n    * This could also be expressed point-free as:\n    *   Function.prototype.bind.bind(RegExp.prototype.exec),\n    *   \n    * But that's far too confusing! (and not even smaller once minified \n    * and gzipped)\n    */\n       regexDescriptor = function regexDescriptor(regex) {\n            return regex.exec.bind(regex);\n       }\n       \n   /**\n    * Join several regular expressions and express as a function.\n    * This allows the token patterns to reuse component regular expressions\n    * instead of being expressed in full using huge and confusing regular\n    * expressions.\n    */       \n   ,   jsonPathClause = varArgs(function( componentRegexes ) {\n\n            // The regular expressions all start with ^ because we \n            // only want to find matches at the start of the \n            // JSONPath fragment we are inspecting           \n            componentRegexes.unshift(/^/);\n            \n            return   regexDescriptor(\n                        RegExp(\n                           componentRegexes.map(attr('source')).join('')\n                        )\n                     );\n       })\n       \n   ,   possiblyCapturing =           /(\\$?)/\n   ,   namedNode =                   /([\\w-_]+|\\*)/\n   ,   namePlaceholder =             /()/\n   ,   nodeInArrayNotation =         /\\[\"([^\"]+)\"\\]/\n   ,   numberedNodeInArrayNotation = /\\[(\\d+|\\*)\\]/\n   ,   fieldList =                      /{([\\w ]*?)}/\n   ,   optionalFieldList =           /(?:{([\\w ]*?)})?/\n    \n\n       //   foo or *                  \n   ,   jsonPathNamedNodeInObjectNotation   = jsonPathClause( \n                                                possiblyCapturing, \n                                                namedNode, \n                                                optionalFieldList\n                                             )\n                                             \n       //   [\"foo\"]   \n   ,   jsonPathNamedNodeInArrayNotation    = jsonPathClause( \n                                                possiblyCapturing, \n                                                nodeInArrayNotation, \n                                                optionalFieldList\n                                             )  \n\n       //   [2] or [*]       \n   ,   jsonPathNumberedNodeInArrayNotation = jsonPathClause( \n                                                possiblyCapturing, \n                                                numberedNodeInArrayNotation, \n                                                optionalFieldList\n                                             )\n\n       //   {a b c}      \n   ,   jsonPathPureDuckTyping              = jsonPathClause( \n                                                possiblyCapturing, \n                                                namePlaceholder, \n                                                fieldList\n                                             )\n   \n       //   ..\n   ,   jsonPathDoubleDot                   = jsonPathClause(/\\.\\./)                  \n   \n       //   .\n   ,   jsonPathDot                         = jsonPathClause(/\\./)                    \n   \n       //   !\n   ,   jsonPathBang                        = jsonPathClause(\n                                                possiblyCapturing, \n                                                /!/\n                                             )  \n   \n       //   nada!\n   ,   emptyString                         = jsonPathClause(/$/)                     \n   \n   ;\n   \n  \n   /* We export only a single function. When called, this function injects \n      into another function the descriptors from above.             \n    */\n   return function (fn){      \n      return fn(      \n         lazyUnion(\n            jsonPathNamedNodeInObjectNotation\n         ,  jsonPathNamedNodeInArrayNotation\n         ,  jsonPathNumberedNodeInArrayNotation\n         ,  jsonPathPureDuckTyping \n         )\n      ,  jsonPathDoubleDot\n      ,  jsonPathDot\n      ,  jsonPathBang\n      ,  emptyString \n      );\n   }; \n\n}());\n/**\n * Get a new key->node mapping\n * \n * @param {String|Number} key\n * @param {Object|Array|String|Number|null} node a value found in the json\n */\nfunction namedNode(key, node) {\n   return {key:key, node:node};\n}\n\n/** get the key of a namedNode */\nvar keyOf = attr('key');\n\n/** get the node from a namedNode */\nvar nodeOf = attr('node');\n/** \n * This file provides various listeners which can be used to build up\n * a changing ascent based on the callbacks provided by Clarinet. It listens\n * to the low-level events from Clarinet and emits higher-level ones.\n *  \n * The building up is stateless so to track a JSON file\n * ascentManager.js is required to store the ascent state\n * between calls.\n */\n\n\n\n/** \n * A special value to use in the path list to represent the path 'to' a root \n * object (which doesn't really have any path). This prevents the need for \n * special-casing detection of the root object and allows it to be treated \n * like any other object. We might think of this as being similar to the \n * 'unnamed root' domain \".\", eg if I go to \n * http://en.wikipedia.org./wiki/En/Main_page the dot after 'org' deliminates \n * the unnamed root of the DNS.\n * \n * This is kept as an object to take advantage that in Javascript's OO objects \n * are guaranteed to be distinct, therefore no other object can possibly clash \n * with this one. Strings, numbers etc provide no such guarantee. \n **/\nvar ROOT_PATH = {};\n\n\n/**\n * Create a new set of handlers for clarinet's events, bound to the emit \n * function given.  \n */ \nfunction incrementalContentBuilder( oboeBus ) {\n\n   var emitNodeOpened = oboeBus(NODE_OPENED).emit,\n       emitNodeClosed = oboeBus(NODE_CLOSED).emit,\n       emitRootOpened = oboeBus(ROOT_PATH_FOUND).emit,\n       emitRootClosed = oboeBus(ROOT_NODE_FOUND).emit;\n\n   function arrayIndicesAreKeys( possiblyInconsistentAscent, newDeepestNode) {\n   \n      /* for values in arrays we aren't pre-warned of the coming paths \n         (Clarinet gives no call to onkey like it does for values in objects) \n         so if we are in an array we need to create this path ourselves. The \n         key will be len(parentNode) because array keys are always sequential \n         numbers. */\n\n      var parentNode = nodeOf( head( possiblyInconsistentAscent));\n      \n      return      isOfType( Array, parentNode)\n               ?\n                  keyFound(  possiblyInconsistentAscent, \n                              len(parentNode), \n                              newDeepestNode\n                  )\n               :  \n                  // nothing needed, return unchanged\n                  possiblyInconsistentAscent \n               ;\n   }\n                 \n   function nodeOpened( ascent, newDeepestNode ) {\n      \n      if( !ascent ) {\n         // we discovered the root node,         \n         emitRootOpened( newDeepestNode);\n                    \n         return keyFound( ascent, ROOT_PATH, newDeepestNode);         \n      }\n\n      // we discovered a non-root node\n                 \n      var arrayConsistentAscent  = arrayIndicesAreKeys( ascent, newDeepestNode),      \n          ancestorBranches       = tail( arrayConsistentAscent),\n          previouslyUnmappedName = keyOf( head( arrayConsistentAscent));\n          \n      appendBuiltContent( \n         ancestorBranches, \n         previouslyUnmappedName, \n         newDeepestNode \n      );\n                                                                                                         \n      return cons( \n               namedNode( previouslyUnmappedName, newDeepestNode ), \n               ancestorBranches\n      );                                                                          \n   }\n\n\n   /**\n    * Add a new value to the object we are building up to represent the\n    * parsed JSON\n    */\n   function appendBuiltContent( ancestorBranches, key, node ){\n     \n      nodeOf( head( ancestorBranches))[key] = node;\n   }\n\n     \n   /**\n    * For when we find a new key in the json.\n    * \n    * @param {String|Number|Object} newDeepestName the key. If we are in an \n    *    array will be a number, otherwise a string. May take the special \n    *    value ROOT_PATH if the root node has just been found\n    *    \n    * @param {String|Number|Object|Array|Null|undefined} [maybeNewDeepestNode] \n    *    usually this won't be known so can be undefined. Can't use null \n    *    to represent unknown because null is a valid value in JSON\n    **/  \n   function keyFound(ascent, newDeepestName, maybeNewDeepestNode) {\n\n      if( ascent ) { // if not root\n      \n         // If we have the key but (unless adding to an array) no known value\n         // yet. Put that key in the output but against no defined value:      \n         appendBuiltContent( ascent, newDeepestName, maybeNewDeepestNode );\n      }\n   \n      var ascentWithNewPath = cons( \n                                 namedNode( newDeepestName, \n                                            maybeNewDeepestNode), \n                                 ascent\n                              );\n\n      emitNodeOpened( ascentWithNewPath);\n \n      return ascentWithNewPath;\n   }\n\n\n   /**\n    * For when the current node ends.\n    */\n   function nodeClosed( ascent ) {\n\n      emitNodeClosed( ascent);\n       \n      return tail( ascent) ||\n             // If there are no nodes left in the ascent the root node\n             // just closed. Emit a special event for this: \n             emitRootClosed(nodeOf(head(ascent)));\n   }      \n\n   var contentBuilderHandlers = {};\n   contentBuilderHandlers[SAX_VALUE_OPEN] = nodeOpened;\n   contentBuilderHandlers[SAX_VALUE_CLOSE] = nodeClosed;\n   contentBuilderHandlers[SAX_KEY] = keyFound;\n   return contentBuilderHandlers;\n}\n\n/**\n * The jsonPath evaluator compiler used for Oboe.js. \n * \n * One function is exposed. This function takes a String JSONPath spec and \n * returns a function to test candidate ascents for matches.\n * \n *  String jsonPath -> (List ascent) -> Boolean|Object\n *\n * This file is coded in a pure functional style. That is, no function has \n * side effects, every function evaluates to the same value for the same \n * arguments and no variables are reassigned.\n */  \n// the call to jsonPathSyntax injects the token syntaxes that are needed \n// inside the compiler\nvar jsonPathCompiler = jsonPathSyntax(function (pathNodeSyntax, \n                                                doubleDotSyntax, \n                                                dotSyntax,\n                                                bangSyntax,\n                                                emptySyntax ) {\n\n   var CAPTURING_INDEX = 1;\n   var NAME_INDEX = 2;\n   var FIELD_LIST_INDEX = 3;\n\n   var headKey  = compose2(keyOf, head),\n       headNode = compose2(nodeOf, head);\n                   \n   /**\n    * Create an evaluator function for a named path node, expressed in the\n    * JSONPath like:\n    *    foo\n    *    [\"bar\"]\n    *    [2]   \n    */\n   function nameClause(previousExpr, detection ) {\n     \n      var name = detection[NAME_INDEX],\n            \n          matchesName = ( !name || name == '*' ) \n                           ?  always\n                           :  function(ascent){return headKey(ascent) == name};\n     \n\n      return lazyIntersection(matchesName, previousExpr);\n   }\n\n   /**\n    * Create an evaluator function for a a duck-typed node, expressed like:\n    * \n    *    {spin, taste, colour}\n    *    .particle{spin, taste, colour}\n    *    *{spin, taste, colour}\n    */\n   function duckTypeClause(previousExpr, detection) {\n\n      var fieldListStr = detection[FIELD_LIST_INDEX];\n\n      if (!fieldListStr) \n         return previousExpr; // don't wrap at all, return given expr as-is      \n\n      var hasAllrequiredFields = partialComplete(\n                                    hasAllProperties, \n                                    arrayAsList(fieldListStr.split(/\\W+/))\n                                 ),\n                                 \n          isMatch =  compose2( \n                        hasAllrequiredFields, \n                        headNode\n                     );\n\n      return lazyIntersection(isMatch, previousExpr);\n   }\n\n   /**\n    * Expression for $, returns the evaluator function\n    */\n   function capture( previousExpr, detection ) {\n\n      // extract meaning from the detection      \n      var capturing = !!detection[CAPTURING_INDEX];\n\n      if (!capturing)          \n         return previousExpr; // don't wrap at all, return given expr as-is      \n      \n      return lazyIntersection(previousExpr, head);\n            \n   }            \n      \n   /**\n    * Create an evaluator function that moves onto the next item on the \n    * lists. This function is the place where the logic to move up a \n    * level in the ascent exists. \n    * \n    * Eg, for JSONPath \".foo\" we need skip1(nameClause(always, [,'foo']))\n    */\n   function skip1(previousExpr) {\n   \n   \n      if( previousExpr == always ) {\n         /* If there is no previous expression this consume command \n            is at the start of the jsonPath.\n            Since JSONPath specifies what we'd like to find but not \n            necessarily everything leading down to it, when running\n            out of JSONPath to check against we default to true */\n         return always;\n      }\n\n      /** return true if the ascent we have contains only the JSON root,\n       *  false otherwise\n       */\n      function notAtRoot(ascent){\n         return headKey(ascent) != ROOT_PATH;\n      }\n      \n      return lazyIntersection(\n               /* If we're already at the root but there are more \n                  expressions to satisfy, can't consume any more. No match.\n\n                  This check is why none of the other exprs have to be able \n                  to handle empty lists; skip1 is the only evaluator that \n                  moves onto the next token and it refuses to do so once it \n                  reaches the last item in the list. */\n               notAtRoot,\n               \n               /* We are not at the root of the ascent yet.\n                  Move to the next level of the ascent by handing only \n                  the tail to the previous expression */ \n               compose2(previousExpr, tail) \n      );\n                                                                                                               \n   }   \n   \n   /**\n    * Create an evaluator function for the .. (double dot) token. Consumes\n    * zero or more levels of the ascent, the fewest that are required to find\n    * a match when given to previousExpr.\n    */   \n   function skipMany(previousExpr) {\n\n      if( previousExpr == always ) {\n         /* If there is no previous expression this consume command \n            is at the start of the jsonPath.\n            Since JSONPath specifies what we'd like to find but not \n            necessarily everything leading down to it, when running\n            out of JSONPath to check against we default to true */            \n         return always;\n      }\n          \n      var \n          // In JSONPath .. is equivalent to !.. so if .. reaches the root\n          // the match has succeeded. Ie, we might write ..foo or !..foo\n          // and both should match identically.\n          terminalCaseWhenArrivingAtRoot = rootExpr(),\n          terminalCaseWhenPreviousExpressionIsSatisfied = previousExpr,\n          recursiveCase = skip1(function(ascent) {\n             return cases(ascent);\n          }),\n\n          cases = lazyUnion(\n                     terminalCaseWhenArrivingAtRoot\n                  ,  terminalCaseWhenPreviousExpressionIsSatisfied\n                  ,  recursiveCase  \n                  );\n      \n      return cases;\n   }      \n   \n   /**\n    * Generate an evaluator for ! - matches only the root element of the json\n    * and ignores any previous expressions since nothing may precede !. \n    */   \n   function rootExpr() {\n      \n      return function(ascent){\n         return headKey(ascent) == ROOT_PATH;\n      };\n   }   \n         \n   /**\n    * Generate a statement wrapper to sit around the outermost \n    * clause evaluator.\n    * \n    * Handles the case where the capturing is implicit because the JSONPath\n    * did not contain a '$' by returning the last node.\n    */   \n   function statementExpr(lastClause) {\n      \n      return function(ascent) {\n   \n         // kick off the evaluation by passing through to the last clause\n         var exprMatch = lastClause(ascent);\n                                                     \n         return exprMatch === true ? head(ascent) : exprMatch;\n      };\n   }      \n                          \n   /**\n    * For when a token has been found in the JSONPath input.\n    * Compiles the parser for that token and returns in combination with the\n    * parser already generated.\n    * \n    * @param {Function} exprs  a list of the clause evaluator generators for\n    *                          the token that was found\n    * @param {Function} parserGeneratedSoFar the parser already found\n    * @param {Array} detection the match given by the regex engine when \n    *                          the feature was found\n    */\n   function expressionsReader( exprs, parserGeneratedSoFar, detection ) {\n                     \n      // if exprs is zero-length foldR will pass back the \n      // parserGeneratedSoFar as-is so we don't need to treat \n      // this as a special case\n      \n      return   foldR( \n                  function( parserGeneratedSoFar, expr ){\n         \n                     return expr(parserGeneratedSoFar, detection);\n                  }, \n                  parserGeneratedSoFar, \n                  exprs\n               );                     \n\n   }\n\n   /** \n    *  If jsonPath matches the given detector function, creates a function which\n    *  evaluates against every clause in the clauseEvaluatorGenerators. The\n    *  created function is propagated to the onSuccess function, along with\n    *  the remaining unparsed JSONPath substring.\n    *  \n    *  The intended use is to create a clauseMatcher by filling in\n    *  the first two arguments, thus providing a function that knows\n    *  some syntax to match and what kind of generator to create if it\n    *  finds it. The parameter list once completed is:\n    *  \n    *    (jsonPath, parserGeneratedSoFar, onSuccess)\n    *  \n    *  onSuccess may be compileJsonPathToFunction, to recursively continue \n    *  parsing after finding a match or returnFoundParser to stop here.\n    */\n   function generateClauseReaderIfTokenFound (\n     \n                        tokenDetector, clauseEvaluatorGenerators,\n                         \n                        jsonPath, parserGeneratedSoFar, onSuccess) {\n                        \n      var detected = tokenDetector(jsonPath);\n\n      if(detected) {\n         var compiledParser = expressionsReader(\n                                 clauseEvaluatorGenerators, \n                                 parserGeneratedSoFar, \n                                 detected\n                              ),\n         \n             remainingUnparsedJsonPath = jsonPath.substr(len(detected[0]));                \n                               \n         return onSuccess(remainingUnparsedJsonPath, compiledParser);\n      }         \n   }\n                 \n   /**\n    * Partially completes generateClauseReaderIfTokenFound above. \n    */\n   function clauseMatcher(tokenDetector, exprs) {\n        \n      return   partialComplete( \n                  generateClauseReaderIfTokenFound, \n                  tokenDetector, \n                  exprs \n               );\n   }\n\n   /**\n    * clauseForJsonPath is a function which attempts to match against \n    * several clause matchers in order until one matches. If non match the\n    * jsonPath expression is invalid and an error is thrown.\n    * \n    * The parameter list is the same as a single clauseMatcher:\n    * \n    *    (jsonPath, parserGeneratedSoFar, onSuccess)\n    */     \n   var clauseForJsonPath = lazyUnion(\n\n      clauseMatcher(pathNodeSyntax   , list( capture, \n                                             duckTypeClause, \n                                             nameClause, \n                                             skip1 ))\n                                                     \n   ,  clauseMatcher(doubleDotSyntax  , list( skipMany))\n       \n       // dot is a separator only (like whitespace in other languages) but \n       // rather than make it a special case, use an empty list of \n       // expressions when this token is found\n   ,  clauseMatcher(dotSyntax        , list() )  \n                                                                                      \n   ,  clauseMatcher(bangSyntax       , list( capture,\n                                             rootExpr))\n                                                          \n   ,  clauseMatcher(emptySyntax      , list( statementExpr))\n   \n   ,  function (jsonPath) {\n         throw Error('\"' + jsonPath + '\" could not be tokenised')      \n      }\n   );\n\n\n   /**\n    * One of two possible values for the onSuccess argument of \n    * generateClauseReaderIfTokenFound.\n    * \n    * When this function is used, generateClauseReaderIfTokenFound simply \n    * returns the compiledParser that it made, regardless of if there is \n    * any remaining jsonPath to be compiled.\n    */\n   function returnFoundParser(_remainingJsonPath, compiledParser){ \n      return compiledParser \n   }     \n              \n   /**\n    * Recursively compile a JSONPath expression.\n    * \n    * This function serves as one of two possible values for the onSuccess \n    * argument of generateClauseReaderIfTokenFound, meaning continue to\n    * recursively compile. Otherwise, returnFoundParser is given and\n    * compilation terminates.\n    */\n   function compileJsonPathToFunction( uncompiledJsonPath, \n                                       parserGeneratedSoFar ) {\n\n      /**\n       * On finding a match, if there is remaining text to be compiled\n       * we want to either continue parsing using a recursive call to \n       * compileJsonPathToFunction. Otherwise, we want to stop and return \n       * the parser that we have found so far.\n       */\n      var onFind =      uncompiledJsonPath\n                     ?  compileJsonPathToFunction \n                     :  returnFoundParser;\n                   \n      return   clauseForJsonPath( \n                  uncompiledJsonPath, \n                  parserGeneratedSoFar, \n                  onFind\n               );                              \n   }\n\n   /**\n    * This is the function that we expose to the rest of the library.\n    */\n   return function(jsonPath){\n        \n      try {\n         // Kick off the recursive parsing of the jsonPath \n         return compileJsonPathToFunction(jsonPath, always);\n         \n      } catch( e ) {\n         throw Error( 'Could not compile \"' + jsonPath + \n                      '\" because ' + e.message\n         );\n      }\n   }\n\n});\n\n/**\n * A pub/sub which is responsible for a single event type. A\n * multi-event type event bus is created by pubSub by collecting\n * several of these.\n *\n * @param {String} eventType\n *    the name of the events managed by this singleEventPubSub\n * @param {singleEventPubSub} [newListener]\n *    place to notify of new listeners\n * @param {singleEventPubSub} [removeListener]\n *    place to notify of when listeners are removed\n */\nfunction singleEventPubSub(eventType, newListener, removeListener){\n\n  /** we are optimised for emitting events over firing them.\n   *  As well as the tuple list which stores event ids and\n   *  listeners there is a list with just the listeners which\n   *  can be iterated more quickly when we are emitting\n   */\n  var listenerTupleList,\n      listenerList;\n\n  function hasId(id){\n    return function(tuple) {\n      return tuple.id == id;\n    };\n  }\n\n  return {\n\n    /**\n     * @param {Function} listener\n     * @param {*} listenerId\n     *    an id that this listener can later by removed by.\n     *    Can be of any type, to be compared to other ids using ==\n     */\n    on:function( listener, listenerId ) {\n\n      var tuple = {\n        listener: listener\n        ,  id:       listenerId || listener // when no id is given use the\n        // listener function as the id\n      };\n\n      if( newListener ) {\n        newListener.emit(eventType, listener, tuple.id);\n      }\n\n      listenerTupleList = cons( tuple,    listenerTupleList );\n      listenerList      = cons( listener, listenerList      );\n\n      return this; // chaining\n    },\n\n    emit:function () {\n      applyEach( listenerList, arguments );\n    },\n\n    un: function( listenerId ) {\n\n      var removed;\n\n      listenerTupleList = without(\n        listenerTupleList,\n        hasId(listenerId),\n        function(tuple){\n          removed = tuple;\n        }\n      );\n\n      if( removed ) {\n        listenerList = without( listenerList, function(listener){\n          return listener == removed.listener;\n        });\n\n        if( removeListener ) {\n          removeListener.emit(eventType, removed.listener, removed.id);\n        }\n      }\n    },\n\n    listeners: function(){\n      // differs from Node EventEmitter: returns list, not array\n      return listenerList;\n    },\n\n    hasListener: function(listenerId){\n      var test = listenerId? hasId(listenerId) : always;\n\n      return defined(first( test, listenerTupleList));\n    }\n  };\n}\n\n/**\n * pubSub is a curried interface for listening to and emitting\n * events.\n *\n * If we get a bus:\n *\n *    var bus = pubSub();\n *\n * We can listen to event 'foo' like:\n *\n *    bus('foo').on(myCallback)\n *\n * And emit event foo like:\n *\n *    bus('foo').emit()\n *\n * or, with a parameter:\n *\n *    bus('foo').emit('bar')\n *\n * All functions can be cached and don't need to be\n * bound. Ie:\n *\n *    var fooEmitter = bus('foo').emit\n *    fooEmitter('bar');  // emit an event\n *    fooEmitter('baz');  // emit another\n *\n * There's also an uncurried[1] shortcut for .emit and .on:\n *\n *    bus.on('foo', callback)\n *    bus.emit('foo', 'bar')\n *\n * [1]: http://zvon.org/other/haskell/Outputprelude/uncurry_f.html\n */\nfunction pubSub(){\n\n   var singles = {},\n       newListener = newSingle('newListener'),\n       removeListener = newSingle('removeListener');\n\n   function newSingle(eventName) {\n      return singles[eventName] = singleEventPubSub(\n         eventName,\n         newListener,\n         removeListener\n      );\n   }\n\n   /** pubSub instances are functions */\n   function pubSubInstance( eventName ){\n\n      return singles[eventName] || newSingle( eventName );\n   }\n\n   // add convenience EventEmitter-style uncurried form of 'emit' and 'on'\n   ['emit', 'on', 'un'].forEach(function(methodName){\n\n      pubSubInstance[methodName] = varArgs(function(eventName, parameters){\n         apply( parameters, pubSubInstance( eventName )[methodName]);\n      });\n   });\n\n   return pubSubInstance;\n}\n\n/**\n * This file declares some constants to use as names for event types.\n */\n\nvar // the events which are never exported are kept as \n    // the smallest possible representation, in numbers:\n    _S = 1,\n\n    // fired whenever a new node starts in the JSON stream:\n    NODE_OPENED     = _S++,\n\n    // fired whenever a node closes in the JSON stream:\n    NODE_CLOSED     = _S++,\n\n    // called if a .node callback returns a value - \n    NODE_SWAP       = _S++,\n    NODE_DROP       = _S++,\n\n    FAIL_EVENT      = 'fail',\n   \n    ROOT_NODE_FOUND = _S++,\n    ROOT_PATH_FOUND = _S++,\n   \n    HTTP_START      = 'start',\n    STREAM_DATA     = 'data',\n    STREAM_END      = 'end',\n    ABORTING        = _S++,\n\n    // SAX events butchered from Clarinet\n    SAX_KEY          = _S++,\n    SAX_VALUE_OPEN   = _S++,\n    SAX_VALUE_CLOSE  = _S++;\n    \nfunction errorReport(statusCode, body, error) {\n   try{\n      var jsonBody = JSON.parse(body);\n   }catch(e){}\n\n   return {\n      statusCode:statusCode,\n      body:body,\n      jsonBody:jsonBody,\n      thrown:error\n   };\n}    \n\n/** \n *  The pattern adaptor listens for newListener and removeListener\n *  events. When patterns are added or removed it compiles the JSONPath\n *  and wires them up.\n *  \n *  When nodes and paths are found it emits the fully-qualified match \n *  events with parameters ready to ship to the outside world\n */\n\nfunction patternAdapter(oboeBus, jsonPathCompiler) {\n\n   var predicateEventMap = {\n      node:oboeBus(NODE_CLOSED)\n   ,  path:oboeBus(NODE_OPENED)\n   };\n     \n   function emitMatchingNode(emitMatch, node, ascent) {\n         \n      /* \n         We're now calling to the outside world where Lisp-style \n         lists will not be familiar. Convert to standard arrays. \n   \n         Also, reverse the order because it is more common to \n         list paths \"root to leaf\" than \"leaf to root\"  */\n      var descent     = reverseList(ascent);\n                \n      emitMatch(\n         node,\n         \n         // To make a path, strip off the last item which is the special\n         // ROOT_PATH token for the 'path' to the root node          \n         listAsArray(tail(map(keyOf,descent))),  // path\n         listAsArray(map(nodeOf, descent))       // ancestors    \n      );         \n   }\n\n   /* \n    * Set up the catching of events such as NODE_CLOSED and NODE_OPENED and, if \n    * matching the specified pattern, propagate to pattern-match events such as \n    * oboeBus('node:!')\n    * \n    * \n    * \n    * @param {Function} predicateEvent \n    *          either oboeBus(NODE_CLOSED) or oboeBus(NODE_OPENED).\n    * @param {Function} compiledJsonPath          \n    */\n   function addUnderlyingListener( fullEventName, predicateEvent, compiledJsonPath ){\n   \n      var emitMatch = oboeBus(fullEventName).emit;\n   \n      predicateEvent.on( function (ascent) {\n\n         var maybeMatchingMapping = compiledJsonPath(ascent);\n\n         /* Possible values for maybeMatchingMapping are now:\n\n          false: \n          we did not match \n\n          an object/array/string/number/null: \n          we matched and have the node that matched.\n          Because nulls are valid json values this can be null.\n\n          undefined:\n          we matched but don't have the matching node yet.\n          ie, we know there is an upcoming node that matches but we \n          can't say anything else about it. \n          */\n         if (maybeMatchingMapping !== false) {\n\n            emitMatchingNode(\n               emitMatch, \n               nodeOf(maybeMatchingMapping), \n               ascent\n            );\n         }\n      }, fullEventName);\n     \n      oboeBus('removeListener').on( function(removedEventName){\n\n         // if the fully qualified match event listener is later removed, clean up \n         // by removing the underlying listener if it was the last using that pattern:\n      \n         if( removedEventName == fullEventName ) {\n         \n            if( !oboeBus(removedEventName).listeners(  )) {\n               predicateEvent.un( fullEventName );\n            }\n         }\n      });   \n   }\n\n   oboeBus('newListener').on( function(fullEventName){\n\n      var match = /(node|path):(.*)/.exec(fullEventName);\n      \n      if( match ) {\n         var predicateEvent = predicateEventMap[match[1]];\n                    \n         if( !predicateEvent.hasListener( fullEventName) ) {  \n                  \n            addUnderlyingListener(\n               fullEventName,\n               predicateEvent, \n               jsonPathCompiler( match[2] )\n            );\n         }\n      }    \n   })\n\n}\n\n/**\n * The instance API is the thing that is returned when oboe() is called.\n * it allows:\n *\n *    - listeners for various events to be added and removed\n *    - the http response header/headers to be read\n */\nfunction instanceApi(oboeBus, contentSource){\n\n  var oboeApi,\n      fullyQualifiedNamePattern = /^(node|path):./,\n      rootNodeFinishedEvent = oboeBus(ROOT_NODE_FOUND),\n      emitNodeDrop = oboeBus(NODE_DROP).emit,\n      emitNodeSwap = oboeBus(NODE_SWAP).emit,\n\n      /**\n       * Add any kind of listener that the instance api exposes\n       */\n      addListener = varArgs(function( eventId, parameters ){\n\n        if( oboeApi[eventId] ) {\n\n          // for events added as .on(event, callback), if there is a\n          // .event() equivalent with special behaviour , pass through\n          // to that:\n          apply(parameters, oboeApi[eventId]);\n        } else {\n\n          // we have a standard Node.js EventEmitter 2-argument call.\n          // The first parameter is the listener.\n          var event = oboeBus(eventId),\n              listener = parameters[0];\n\n          if( fullyQualifiedNamePattern.test(eventId) ) {\n\n            // allow fully-qualified node/path listeners\n            // to be added\n            addForgettableCallback(event, listener);\n          } else  {\n\n            // the event has no special handling, pass through\n            // directly onto the event bus:\n            event.on( listener);\n          }\n        }\n\n        return oboeApi; // chaining\n      }),\n\n      /**\n       * Remove any kind of listener that the instance api exposes\n       */\n      removeListener = function( eventId, p2, p3 ){\n\n        if( eventId == 'done' ) {\n\n          rootNodeFinishedEvent.un(p2);\n\n        } else if( eventId == 'node' || eventId == 'path' ) {\n\n          // allow removal of node and path\n          oboeBus.un(eventId + ':' + p2, p3);\n        } else {\n\n          // we have a standard Node.js EventEmitter 2-argument call.\n          // The second parameter is the listener. This may be a call\n          // to remove a fully-qualified node/path listener but requires\n          // no special handling\n          var listener = p2;\n\n          oboeBus(eventId).un(listener);\n        }\n\n        return oboeApi; // chaining\n      };\n\n  /**\n   * Add a callback, wrapped in a try/catch so as to not break the\n   * execution of Oboe if an exception is thrown (fail events are\n   * fired instead)\n   *\n   * The callback is used as the listener id so that it can later be\n   * removed using .un(callback)\n   */\n  function addProtectedCallback(eventName, callback) {\n    oboeBus(eventName).on(protectedCallback(callback), callback);\n    return oboeApi; // chaining\n  }\n\n  /**\n   * Add a callback where, if .forget() is called during the callback's\n   * execution, the callback will be de-registered\n   */\n  function addForgettableCallback(event, callback, listenerId) {\n\n    // listenerId is optional and if not given, the original\n    // callback will be used\n    listenerId = listenerId || callback;\n\n    var safeCallback = protectedCallback(callback);\n\n    event.on( function() {\n\n      var discard = false;\n\n      oboeApi.forget = function(){\n        discard = true;\n      };\n\n      apply( arguments, safeCallback );\n\n      delete oboeApi.forget;\n\n      if( discard ) {\n        event.un(listenerId);\n      }\n    }, listenerId);\n\n    return oboeApi; // chaining\n  }\n\n  /**\n   *  wrap a callback so that if it throws, Oboe.js doesn't crash but instead\n   *  throw the error in another event loop\n   */\n  function protectedCallback( callback ) {\n    return function() {\n      try{\n        return callback.apply(oboeApi, arguments);\n      }catch(e)  {\n        setTimeout(function() {\n          throw new Error(e.message);\n        });\n      }\n    }\n  }\n\n  /**\n   * Return the fully qualified event for when a pattern matches\n   * either a node or a path\n   *\n   * @param type {String} either 'node' or 'path'\n   */\n  function fullyQualifiedPatternMatchEvent(type, pattern) {\n    return oboeBus(type + ':' + pattern);\n  }\n\n  function wrapCallbackToSwapNodeIfSomethingReturned( callback ) {\n    return function() {\n      var returnValueFromCallback = callback.apply(this, arguments);\n\n      if( defined(returnValueFromCallback) ) {\n\n        if( returnValueFromCallback == oboe.drop ) {\n          emitNodeDrop();\n        } else {\n          emitNodeSwap(returnValueFromCallback);\n        }\n      }\n    }\n  }\n\n  function addSingleNodeOrPathListener(eventId, pattern, callback) {\n\n    var effectiveCallback;\n\n    if( eventId == 'node' ) {\n      effectiveCallback = wrapCallbackToSwapNodeIfSomethingReturned(callback);\n    } else {\n      effectiveCallback = callback;\n    }\n\n    addForgettableCallback(\n      fullyQualifiedPatternMatchEvent(eventId, pattern),\n      effectiveCallback,\n      callback\n    );\n  }\n\n  /**\n   * Add several listeners at a time, from a map\n   */\n  function addMultipleNodeOrPathListeners(eventId, listenerMap) {\n\n    for( var pattern in listenerMap ) {\n      addSingleNodeOrPathListener(eventId, pattern, listenerMap[pattern]);\n    }\n  }\n\n  /**\n   * implementation behind .onPath() and .onNode()\n   */\n  function addNodeOrPathListenerApi( eventId, jsonPathOrListenerMap, callback ){\n\n    if( isString(jsonPathOrListenerMap) ) {\n      addSingleNodeOrPathListener(eventId, jsonPathOrListenerMap, callback);\n\n    } else {\n      addMultipleNodeOrPathListeners(eventId, jsonPathOrListenerMap);\n    }\n\n    return oboeApi; // chaining\n  }\n\n\n  // some interface methods are only filled in after we receive\n  // values and are noops before that:\n  oboeBus(ROOT_PATH_FOUND).on( function(rootNode) {\n    oboeApi.root = functor(rootNode);\n  });\n\n  /**\n   * When content starts make the headers readable through the\n   * instance API\n   */\n  oboeBus(HTTP_START).on( function(_statusCode, headers) {\n\n    oboeApi.header =  function(name) {\n      return name ? headers[name]\n        : headers\n      ;\n    }\n  });\n\n  /**\n   * Construct and return the public API of the Oboe instance to be\n   * returned to the calling application\n   */\n  return oboeApi = {\n    on             : addListener,\n    addListener    : addListener,\n    removeListener : removeListener,\n    emit           : oboeBus.emit,\n\n    node           : partialComplete(addNodeOrPathListenerApi, 'node'),\n    path           : partialComplete(addNodeOrPathListenerApi, 'path'),\n\n    done           : partialComplete(addForgettableCallback, rootNodeFinishedEvent),\n    start          : partialComplete(addProtectedCallback, HTTP_START ),\n\n    // fail doesn't use protectedCallback because\n    // could lead to non-terminating loops\n    fail           : oboeBus(FAIL_EVENT).on,\n\n    // public api calling abort fires the ABORTING event\n    abort          : oboeBus(ABORTING).emit,\n\n    // initially return nothing for header and root\n    header         : noop,\n    root           : noop,\n\n    source         : contentSource\n  };\n}\n\n/**\n * This file sits just behind the API which is used to attain a new\n * Oboe instance. It creates the new components that are required\n * and introduces them to each other.\n */\n\nfunction wire (httpMethodName, contentSource, body, headers, withCredentials){\n\n   var oboeBus = pubSub();\n   \n   // Wire the input stream in if we are given a content source.\n   // This will usually be the case. If not, the instance created\n   // will have to be passed content from an external source.\n  \n   if( contentSource ) {\n\n      streamingHttp( oboeBus,\n                     httpTransport(), \n                     httpMethodName,\n                     contentSource,\n                     body,\n                     headers,\n                     withCredentials\n      );\n   }\n\n   clarinet(oboeBus);\n\n   ascentManager(oboeBus, incrementalContentBuilder(oboeBus));\n      \n   patternAdapter(oboeBus, jsonPathCompiler);      \n      \n   return instanceApi(oboeBus, contentSource);\n}\n\nfunction applyDefaults( passthrough, url, httpMethodName, body, headers, withCredentials, cached ){\n\n   headers = headers ?\n      // Shallow-clone the headers array. This allows it to be\n      // modified without side effects to the caller. We don't\n      // want to change objects that the user passes in.\n      JSON.parse(JSON.stringify(headers))\n      : {};\n\n   if( body ) {\n      if( !isString(body) ) {\n\n         // If the body is not a string, stringify it. This allows objects to\n         // be given which will be sent as JSON.\n         body = JSON.stringify(body);\n\n         // Default Content-Type to JSON unless given otherwise.\n         headers['Content-Type'] = headers['Content-Type'] || 'application/json';\n      }\n      headers['Content-Length'] = headers['Content-Length'] || body.length;\n   } else {\n      body = null;\n   }\n\n   // support cache busting like jQuery.ajax({cache:false})\n   function modifiedUrl(baseUrl, cached) {\n\n      if( cached === false ) {\n\n         if( baseUrl.indexOf('?') == -1 ) {\n            baseUrl += '?';\n         } else {\n            baseUrl += '&';\n         }\n\n         baseUrl += '_=' + new Date().getTime();\n      }\n      return baseUrl;\n   }\n\n   return passthrough( httpMethodName || 'GET', modifiedUrl(url, cached), body, headers, withCredentials || false );\n}\n\n// export public API\nfunction oboe(arg1) {\n\n   // We use duck-typing to detect if the parameter given is a stream, with the\n   // below list of parameters.\n   // Unpipe and unshift would normally be present on a stream but this breaks\n   // compatibility with Request streams.\n   // See https://github.com/jimhigson/oboe.js/issues/65\n   \n   var nodeStreamMethodNames = list('resume', 'pause', 'pipe'),\n       isStream = partialComplete(\n                     hasAllProperties\n                  ,  nodeStreamMethodNames\n                  );\n   \n   if( arg1 ) {\n      if (isStream(arg1) || isString(arg1)) {\n\n         //  simple version for GETs. Signature is:\n         //    oboe( url )\n         //  or, under node:\n         //    oboe( readableStream )\n         return applyDefaults(\n            wire,\n            arg1 // url\n         );\n\n      } else {\n\n         // method signature is:\n         //    oboe({method:m, url:u, body:b, headers:{...}})\n\n         return applyDefaults(\n            wire,\n            arg1.url,\n            arg1.method,\n            arg1.body,\n            arg1.headers,\n            arg1.withCredentials,\n            arg1.cached\n         );\n         \n      }\n   } else {\n      // wire up a no-AJAX, no-stream Oboe. Will have to have content \n      // fed in externally and using .emit.\n      return wire();\n   }\n}\n\n/* oboe.drop is a special value. If a node callback returns this value the\n   parsed node is deleted from the JSON\n */\noboe.drop = function() {\n   return oboe.drop;\n};\n\n\n   if ( typeof define === \"function\" && define.amd ) {\n      define( \"oboe\", [], function () { return oboe; } );\n   } else if (typeof exports === 'object') {\n      module.exports = oboe;\n   } else {\n      window.oboe = oboe;\n   }\n})((function(){\n   // Access to the window object throws an exception in HTML5 web workers so\n   // point it to \"self\" if it runs in a web worker\n      try {\n         return window;\n      } catch (e) {\n         return self;\n      }\n   }()), Object, Array, Error, JSON);\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","import { Slot } from '@wry/context';\nexport { asyncFromGen, bind as bindContext, noContext, setTimeout } from '@wry/context';\n\nfunction defaultDispose() { }\r\nvar Cache = /** @class */ (function () {\r\n    function Cache(max, dispose) {\r\n        if (max === void 0) { max = Infinity; }\r\n        if (dispose === void 0) { dispose = defaultDispose; }\r\n        this.max = max;\r\n        this.dispose = dispose;\r\n        this.map = new Map();\r\n        this.newest = null;\r\n        this.oldest = null;\r\n    }\r\n    Cache.prototype.has = function (key) {\r\n        return this.map.has(key);\r\n    };\r\n    Cache.prototype.get = function (key) {\r\n        var entry = this.getEntry(key);\r\n        return entry && entry.value;\r\n    };\r\n    Cache.prototype.getEntry = function (key) {\r\n        var entry = this.map.get(key);\r\n        if (entry && entry !== this.newest) {\r\n            var older = entry.older, newer = entry.newer;\r\n            if (newer) {\r\n                newer.older = older;\r\n            }\r\n            if (older) {\r\n                older.newer = newer;\r\n            }\r\n            entry.older = this.newest;\r\n            entry.older.newer = entry;\r\n            entry.newer = null;\r\n            this.newest = entry;\r\n            if (entry === this.oldest) {\r\n                this.oldest = newer;\r\n            }\r\n        }\r\n        return entry;\r\n    };\r\n    Cache.prototype.set = function (key, value) {\r\n        var entry = this.getEntry(key);\r\n        if (entry) {\r\n            return entry.value = value;\r\n        }\r\n        entry = {\r\n            key: key,\r\n            value: value,\r\n            newer: null,\r\n            older: this.newest\r\n        };\r\n        if (this.newest) {\r\n            this.newest.newer = entry;\r\n        }\r\n        this.newest = entry;\r\n        this.oldest = this.oldest || entry;\r\n        this.map.set(key, entry);\r\n        return entry.value;\r\n    };\r\n    Cache.prototype.clean = function () {\r\n        while (this.oldest && this.map.size > this.max) {\r\n            this.delete(this.oldest.key);\r\n        }\r\n    };\r\n    Cache.prototype.delete = function (key) {\r\n        var entry = this.map.get(key);\r\n        if (entry) {\r\n            if (entry === this.newest) {\r\n                this.newest = entry.older;\r\n            }\r\n            if (entry === this.oldest) {\r\n                this.oldest = entry.newer;\r\n            }\r\n            if (entry.newer) {\r\n                entry.newer.older = entry.older;\r\n            }\r\n            if (entry.older) {\r\n                entry.older.newer = entry.newer;\r\n            }\r\n            this.map.delete(key);\r\n            this.dispose(entry.value, key);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return Cache;\r\n}());\n\nvar parentEntrySlot = new Slot();\n\nvar reusableEmptyArray = [];\r\nvar emptySetPool = [];\r\nvar POOL_TARGET_SIZE = 100;\r\n// Since this package might be used browsers, we should avoid using the\r\n// Node built-in assert module.\r\nfunction assert(condition, optionalMessage) {\r\n    if (!condition) {\r\n        throw new Error(optionalMessage || \"assertion failure\");\r\n    }\r\n}\r\nfunction valueIs(a, b) {\r\n    var len = a.length;\r\n    return (\r\n    // Unknown values are not equal to each other.\r\n    len > 0 &&\r\n        // Both values must be ordinary (or both exceptional) to be equal.\r\n        len === b.length &&\r\n        // The underlying value or exception must be the same.\r\n        a[len - 1] === b[len - 1]);\r\n}\r\nfunction valueGet(value) {\r\n    switch (value.length) {\r\n        case 0: throw new Error(\"unknown value\");\r\n        case 1: return value[0];\r\n        case 2: throw value[1];\r\n    }\r\n}\r\nfunction valueCopy(value) {\r\n    return value.slice(0);\r\n}\r\nvar Entry = /** @class */ (function () {\r\n    function Entry(fn, args) {\r\n        this.fn = fn;\r\n        this.args = args;\r\n        this.parents = new Set();\r\n        this.childValues = new Map();\r\n        // When this Entry has children that are dirty, this property becomes\r\n        // a Set containing other Entry objects, borrowed from emptySetPool.\r\n        // When the set becomes empty, it gets recycled back to emptySetPool.\r\n        this.dirtyChildren = null;\r\n        this.dirty = true;\r\n        this.recomputing = false;\r\n        this.value = [];\r\n        ++Entry.count;\r\n    }\r\n    // This is the most important method of the Entry API, because it\r\n    // determines whether the cached this.value can be returned immediately,\r\n    // or must be recomputed. The overall performance of the caching system\r\n    // depends on the truth of the following observations: (1) this.dirty is\r\n    // usually false, (2) this.dirtyChildren is usually null/empty, and thus\r\n    // (3) valueGet(this.value) is usually returned without recomputation.\r\n    Entry.prototype.recompute = function () {\r\n        assert(!this.recomputing, \"already recomputing\");\r\n        if (!rememberParent(this) && maybeReportOrphan(this)) {\r\n            // The recipient of the entry.reportOrphan callback decided to dispose\r\n            // of this orphan entry by calling entry.dispose(), so we don't need to\r\n            // (and should not) proceed with the recomputation.\r\n            return void 0;\r\n        }\r\n        return mightBeDirty(this)\r\n            ? reallyRecompute(this)\r\n            : valueGet(this.value);\r\n    };\r\n    Entry.prototype.setDirty = function () {\r\n        if (this.dirty)\r\n            return;\r\n        this.dirty = true;\r\n        this.value.length = 0;\r\n        reportDirty(this);\r\n        // We can go ahead and unsubscribe here, since any further dirty\r\n        // notifications we receive will be redundant, and unsubscribing may\r\n        // free up some resources, e.g. file watchers.\r\n        maybeUnsubscribe(this);\r\n    };\r\n    Entry.prototype.dispose = function () {\r\n        var _this = this;\r\n        forgetChildren(this).forEach(maybeReportOrphan);\r\n        maybeUnsubscribe(this);\r\n        // Because this entry has been kicked out of the cache (in index.js),\r\n        // we've lost the ability to find out if/when this entry becomes dirty,\r\n        // whether that happens through a subscription, because of a direct call\r\n        // to entry.setDirty(), or because one of its children becomes dirty.\r\n        // Because of this loss of future information, we have to assume the\r\n        // worst (that this entry might have become dirty very soon), so we must\r\n        // immediately mark this entry's parents as dirty. Normally we could\r\n        // just call entry.setDirty() rather than calling parent.setDirty() for\r\n        // each parent, but that would leave this entry in parent.childValues\r\n        // and parent.dirtyChildren, which would prevent the child from being\r\n        // truly forgotten.\r\n        this.parents.forEach(function (parent) {\r\n            parent.setDirty();\r\n            forgetChild(parent, _this);\r\n        });\r\n    };\r\n    Entry.count = 0;\r\n    return Entry;\r\n}());\r\nfunction rememberParent(child) {\r\n    var parent = parentEntrySlot.getValue();\r\n    if (parent) {\r\n        child.parents.add(parent);\r\n        if (!parent.childValues.has(child)) {\r\n            parent.childValues.set(child, []);\r\n        }\r\n        if (mightBeDirty(child)) {\r\n            reportDirtyChild(parent, child);\r\n        }\r\n        else {\r\n            reportCleanChild(parent, child);\r\n        }\r\n        return parent;\r\n    }\r\n}\r\nfunction reallyRecompute(entry) {\r\n    // Since this recomputation is likely to re-remember some of this\r\n    // entry's children, we forget our children here but do not call\r\n    // maybeReportOrphan until after the recomputation finishes.\r\n    var originalChildren = forgetChildren(entry);\r\n    // Set entry as the parent entry while calling recomputeNewValue(entry).\r\n    parentEntrySlot.withValue(entry, recomputeNewValue, [entry]);\r\n    if (maybeSubscribe(entry)) {\r\n        // If we successfully recomputed entry.value and did not fail to\r\n        // (re)subscribe, then this Entry is no longer explicitly dirty.\r\n        setClean(entry);\r\n    }\r\n    // Now that we've had a chance to re-remember any children that were\r\n    // involved in the recomputation, we can safely report any orphan\r\n    // children that remain.\r\n    originalChildren.forEach(maybeReportOrphan);\r\n    return valueGet(entry.value);\r\n}\r\nfunction recomputeNewValue(entry) {\r\n    entry.recomputing = true;\r\n    // Set entry.value as unknown.\r\n    entry.value.length = 0;\r\n    try {\r\n        // If entry.fn succeeds, entry.value will become a normal Value.\r\n        entry.value[0] = entry.fn.apply(null, entry.args);\r\n    }\r\n    catch (e) {\r\n        // If entry.fn throws, entry.value will become exceptional.\r\n        entry.value[1] = e;\r\n    }\r\n    // Either way, this line is always reached.\r\n    entry.recomputing = false;\r\n}\r\nfunction mightBeDirty(entry) {\r\n    return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);\r\n}\r\nfunction setClean(entry) {\r\n    entry.dirty = false;\r\n    if (mightBeDirty(entry)) {\r\n        // This Entry may still have dirty children, in which case we can't\r\n        // let our parents know we're clean just yet.\r\n        return;\r\n    }\r\n    reportClean(entry);\r\n}\r\nfunction reportDirty(child) {\r\n    child.parents.forEach(function (parent) { return reportDirtyChild(parent, child); });\r\n}\r\nfunction reportClean(child) {\r\n    child.parents.forEach(function (parent) { return reportCleanChild(parent, child); });\r\n}\r\n// Let a parent Entry know that one of its children may be dirty.\r\nfunction reportDirtyChild(parent, child) {\r\n    // Must have called rememberParent(child) before calling\r\n    // reportDirtyChild(parent, child).\r\n    assert(parent.childValues.has(child));\r\n    assert(mightBeDirty(child));\r\n    if (!parent.dirtyChildren) {\r\n        parent.dirtyChildren = emptySetPool.pop() || new Set;\r\n    }\r\n    else if (parent.dirtyChildren.has(child)) {\r\n        // If we already know this child is dirty, then we must have already\r\n        // informed our own parents that we are dirty, so we can terminate\r\n        // the recursion early.\r\n        return;\r\n    }\r\n    parent.dirtyChildren.add(child);\r\n    reportDirty(parent);\r\n}\r\n// Let a parent Entry know that one of its children is no longer dirty.\r\nfunction reportCleanChild(parent, child) {\r\n    // Must have called rememberChild(child) before calling\r\n    // reportCleanChild(parent, child).\r\n    assert(parent.childValues.has(child));\r\n    assert(!mightBeDirty(child));\r\n    var childValue = parent.childValues.get(child);\r\n    if (childValue.length === 0) {\r\n        parent.childValues.set(child, valueCopy(child.value));\r\n    }\r\n    else if (!valueIs(childValue, child.value)) {\r\n        parent.setDirty();\r\n    }\r\n    removeDirtyChild(parent, child);\r\n    if (mightBeDirty(parent)) {\r\n        return;\r\n    }\r\n    reportClean(parent);\r\n}\r\nfunction removeDirtyChild(parent, child) {\r\n    var dc = parent.dirtyChildren;\r\n    if (dc) {\r\n        dc.delete(child);\r\n        if (dc.size === 0) {\r\n            if (emptySetPool.length < POOL_TARGET_SIZE) {\r\n                emptySetPool.push(dc);\r\n            }\r\n            parent.dirtyChildren = null;\r\n        }\r\n    }\r\n}\r\n// If the given entry has a reportOrphan method, and no remaining parents,\r\n// call entry.reportOrphan and return true iff it returns true. The\r\n// reportOrphan function should return true to indicate entry.dispose()\r\n// has been called, and the entry has been removed from any other caches\r\n// (see index.js for the only current example).\r\nfunction maybeReportOrphan(entry) {\r\n    return entry.parents.size === 0 &&\r\n        typeof entry.reportOrphan === \"function\" &&\r\n        entry.reportOrphan() === true;\r\n}\r\n// Removes all children from this entry and returns an array of the\r\n// removed children.\r\nfunction forgetChildren(parent) {\r\n    var children = reusableEmptyArray;\r\n    if (parent.childValues.size > 0) {\r\n        children = [];\r\n        parent.childValues.forEach(function (_value, child) {\r\n            forgetChild(parent, child);\r\n            children.push(child);\r\n        });\r\n    }\r\n    // After we forget all our children, this.dirtyChildren must be empty\r\n    // and therefore must have been reset to null.\r\n    assert(parent.dirtyChildren === null);\r\n    return children;\r\n}\r\nfunction forgetChild(parent, child) {\r\n    child.parents.delete(parent);\r\n    parent.childValues.delete(child);\r\n    removeDirtyChild(parent, child);\r\n}\r\nfunction maybeSubscribe(entry) {\r\n    if (typeof entry.subscribe === \"function\") {\r\n        try {\r\n            maybeUnsubscribe(entry); // Prevent double subscriptions.\r\n            entry.unsubscribe = entry.subscribe.apply(null, entry.args);\r\n        }\r\n        catch (e) {\r\n            // If this Entry has a subscribe function and it threw an exception\r\n            // (or an unsubscribe function it previously returned now throws),\r\n            // return false to indicate that we were not able to subscribe (or\r\n            // unsubscribe), and this Entry should remain dirty.\r\n            entry.setDirty();\r\n            return false;\r\n        }\r\n    }\r\n    // Returning true indicates either that there was no entry.subscribe\r\n    // function or that it succeeded.\r\n    return true;\r\n}\r\nfunction maybeUnsubscribe(entry) {\r\n    var unsubscribe = entry.unsubscribe;\r\n    if (typeof unsubscribe === \"function\") {\r\n        entry.unsubscribe = void 0;\r\n        unsubscribe();\r\n    }\r\n}\n\n// A trie data structure that holds object keys weakly, yet can also hold\r\n// non-object keys, unlike the native `WeakMap`.\r\nvar KeyTrie = /** @class */ (function () {\r\n    function KeyTrie(weakness) {\r\n        this.weakness = weakness;\r\n    }\r\n    KeyTrie.prototype.lookup = function () {\r\n        var array = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            array[_i] = arguments[_i];\r\n        }\r\n        return this.lookupArray(array);\r\n    };\r\n    KeyTrie.prototype.lookupArray = function (array) {\r\n        var node = this;\r\n        array.forEach(function (key) { return node = node.getChildTrie(key); });\r\n        return node.data || (node.data = Object.create(null));\r\n    };\r\n    KeyTrie.prototype.getChildTrie = function (key) {\r\n        var map = this.weakness && isObjRef(key)\r\n            ? this.weak || (this.weak = new WeakMap())\r\n            : this.strong || (this.strong = new Map());\r\n        var child = map.get(key);\r\n        if (!child)\r\n            map.set(key, child = new KeyTrie(this.weakness));\r\n        return child;\r\n    };\r\n    return KeyTrie;\r\n}());\r\nfunction isObjRef(value) {\r\n    switch (typeof value) {\r\n        case \"object\":\r\n            if (value === null)\r\n                break;\r\n        // Fall through to return true...\r\n        case \"function\":\r\n            return true;\r\n    }\r\n    return false;\r\n}\n\n// The defaultMakeCacheKey function is remarkably powerful, because it gives\r\n// a unique object for any shallow-identical list of arguments. If you need\r\n// to implement a custom makeCacheKey function, you may find it helpful to\r\n// delegate the final work to defaultMakeCacheKey, which is why we export it\r\n// here. However, you may want to avoid defaultMakeCacheKey if your runtime\r\n// does not support WeakMap, or you have the ability to return a string key.\r\n// In those cases, just write your own custom makeCacheKey functions.\r\nvar keyTrie = new KeyTrie(typeof WeakMap === \"function\");\r\nfunction defaultMakeCacheKey() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return keyTrie.lookupArray(args);\r\n}\r\nvar caches = new Set();\r\nfunction wrap(originalFunction, options) {\r\n    if (options === void 0) { options = Object.create(null); }\r\n    var cache = new Cache(options.max || Math.pow(2, 16), function (entry) { return entry.dispose(); });\r\n    var disposable = !!options.disposable;\r\n    var makeCacheKey = options.makeCacheKey || defaultMakeCacheKey;\r\n    function optimistic() {\r\n        if (disposable && !parentEntrySlot.hasValue()) {\r\n            // If there's no current parent computation, and this wrapped\r\n            // function is disposable (meaning we don't care about entry.value,\r\n            // just dependency tracking), then we can short-cut everything else\r\n            // in this function, because entry.recompute() is going to recycle\r\n            // the entry object without recomputing anything, anyway.\r\n            return void 0;\r\n        }\r\n        var key = makeCacheKey.apply(null, arguments);\r\n        if (key === void 0) {\r\n            return originalFunction.apply(null, arguments);\r\n        }\r\n        var args = Array.prototype.slice.call(arguments);\r\n        var entry = cache.get(key);\r\n        if (entry) {\r\n            entry.args = args;\r\n        }\r\n        else {\r\n            entry = new Entry(originalFunction, args);\r\n            cache.set(key, entry);\r\n            entry.subscribe = options.subscribe;\r\n            if (disposable) {\r\n                entry.reportOrphan = function () { return cache.delete(key); };\r\n            }\r\n        }\r\n        var value = entry.recompute();\r\n        // Move this entry to the front of the least-recently used queue,\r\n        // since we just finished computing its value.\r\n        cache.set(key, entry);\r\n        caches.add(cache);\r\n        // Clean up any excess entries in the cache, but only if there is no\r\n        // active parent entry, meaning we're not in the middle of a larger\r\n        // computation that might be flummoxed by the cleaning.\r\n        if (!parentEntrySlot.hasValue()) {\r\n            caches.forEach(function (cache) { return cache.clean(); });\r\n            caches.clear();\r\n        }\r\n        // If options.disposable is truthy, the caller of wrap is telling us\r\n        // they don't care about the result of entry.recompute(), so we should\r\n        // avoid returning the value, so it won't be accidentally used.\r\n        return disposable ? void 0 : value;\r\n    }\r\n    optimistic.dirty = function () {\r\n        var key = makeCacheKey.apply(null, arguments);\r\n        var child = key !== void 0 && cache.get(key);\r\n        if (child) {\r\n            child.setDirty();\r\n        }\r\n    };\r\n    return optimistic;\r\n}\n\nexport { KeyTrie, defaultMakeCacheKey, wrap };\n//# sourceMappingURL=bundle.esm.js.map\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","const Fifo = require('fast-fifo')\nconst defer = require('p-defer')\n\nmodule.exports = class PFifo {\n  constructor () {\n    this._buffer = new Fifo()\n    this._waitingConsumers = new Fifo()\n  }\n\n  push (chunk) {\n    const { promise, resolve } = defer()\n    this._buffer.push({ chunk, resolve })\n    this._consume()\n    return promise\n  }\n\n  _consume () {\n    while (!this._waitingConsumers.isEmpty() && !this._buffer.isEmpty()) {\n      const nextConsumer = this._waitingConsumers.shift()\n      const nextChunk = this._buffer.shift()\n      nextConsumer.resolve(nextChunk.chunk)\n      nextChunk.resolve()\n    }\n  }\n\n  shift () {\n    const { promise, resolve } = defer()\n    this._waitingConsumers.push({ resolve })\n    this._consume()\n    return promise\n  }\n\n  isEmpty () {\n    return this._buffer.isEmpty()\n  }\n}\n","'use strict';\n\nconst pDefer = () => {\n\tconst deferred = {};\n\n\tdeferred.promise = new Promise((resolve, reject) => {\n\t\tdeferred.resolve = resolve;\n\t\tdeferred.reject = reject;\n\t});\n\n\treturn deferred;\n};\n\nmodule.exports = pDefer;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nconst { Deflate, deflate, deflateRaw, gzip } = require('./lib/deflate');\n\nconst { Inflate, inflate, inflateRaw, ungzip } = require('./lib/inflate');\n\nconst constants = require('./lib/zlib/constants');\n\nmodule.exports.Deflate = Deflate;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateRaw = deflateRaw;\nmodule.exports.gzip = gzip;\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = ungzip;\nmodule.exports.constants = constants;\n","'use strict';\n\n\nconst zlib_deflate = require('./zlib/deflate');\nconst utils        = require('./utils/common');\nconst strings      = require('./utils/strings');\nconst msg          = require('./zlib/messages');\nconst ZStream      = require('./zlib/zstream');\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED\n} = require('./zlib/constants');\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = zlib_deflate.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = zlib_deflate.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    this.result = utils.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  const deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nmodule.exports.Deflate = Deflate;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateRaw = deflateRaw;\nmodule.exports.gzip = gzip;\nmodule.exports.constants = require('./zlib/constants');\n","'use strict';\n\n\nconst zlib_inflate = require('./zlib/inflate');\nconst utils        = require('./utils/common');\nconst strings      = require('./utils/strings');\nconst msg          = require('./zlib/messages');\nconst ZStream      = require('./zlib/zstream');\nconst GZheader     = require('./zlib/gzheader');\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = require('./zlib/constants');\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  this.options = utils.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = zlib_inflate.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      zlib_inflate.inflateReset(strm);\n      status = zlib_inflate.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = zlib_inflate.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  const inflator = new Inflate(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || msg[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = inflate;\nmodule.exports.constants = require('./zlib/constants');\n","'use strict';\n\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nmodule.exports.assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nmodule.exports.flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n","// String encode/decode helpers\n'use strict';\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nmodule.exports.string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nmodule.exports.buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nmodule.exports.utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = require('./trees');\nconst adler32 = require('./adler32');\nconst crc32   = require('./crc32');\nconst msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_PARTIAL_FLUSH, Z_FULL_FLUSH, Z_FINISH, Z_BLOCK,\n  Z_OK, Z_STREAM_END, Z_STREAM_ERROR, Z_DATA_ERROR, Z_BUF_ERROR,\n  Z_DEFAULT_COMPRESSION,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY,\n  Z_UNKNOWN,\n  Z_DEFLATED\n} = require('./constants');\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = msg[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH) ||\n                        flush === Z_NO_FLUSH ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH && flush !== Z_FINISH &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH) && flush !== Z_NO_FLUSH &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR;\n  }\n  strm.state.gzhead = head;\n  return Z_OK;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n};\n\n\n/* ========================================================================= */\nconst deflate = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n};\n\n\nmodule.exports.deflateInit = deflateInit;\nmodule.exports.deflateInit2 = deflateInit2;\nmodule.exports.deflateReset = deflateReset;\nmodule.exports.deflateResetKeep = deflateResetKeep;\nmodule.exports.deflateSetHeader = deflateSetHeader;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateEnd = deflateEnd;\nmodule.exports.deflateSetDictionary = deflateSetDictionary;\nmodule.exports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD = 16209;       /* got a data error -- remain here until reset */\nconst TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32       = require('./adler32');\nconst crc32         = require('./crc32');\nconst inflate_fast  = require('./inffast');\nconst inflate_table = require('./inftrees');\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH, Z_BLOCK, Z_TREES,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR, Z_BUF_ERROR,\n  Z_DEFLATED\n} = require('./constants');\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n};\n\n\nmodule.exports.inflateReset = inflateReset;\nmodule.exports.inflateReset2 = inflateReset2;\nmodule.exports.inflateResetKeep = inflateResetKeep;\nmodule.exports.inflateInit = inflateInit;\nmodule.exports.inflateInit2 = inflateInit2;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateEnd = inflateEnd;\nmodule.exports.inflateGetHeader = inflateGetHeader;\nmodule.exports.inflateSetDictionary = inflateSetDictionary;\nmodule.exports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nmodule.exports = inflate_table;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH    = 3;\nconst MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES       = 30;\n/* number of distance codes */\n\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nconst MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nmodule.exports._tr_init  = _tr_init;\nmodule.exports._tr_stored_block = _tr_stored_block;\nmodule.exports._tr_flush_block  = _tr_flush_block;\nmodule.exports._tr_tally = _tr_tally;\nmodule.exports._tr_align = _tr_align;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n'use strict'\n\nvar asn1 = require('asn1.js')\n\nexports.certificate = require('./certificate')\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('modulus').int(),\n    this.key('publicExponent').int(),\n    this.key('privateExponent').int(),\n    this.key('prime1').int(),\n    this.key('prime2').int(),\n    this.key('exponent1').int(),\n    this.key('exponent2').int(),\n    this.key('coefficient').int()\n  )\n})\nexports.RSAPrivateKey = RSAPrivateKey\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n  this.seq().obj(\n    this.key('modulus').int(),\n    this.key('publicExponent').int()\n  )\n})\nexports.RSAPublicKey = RSAPublicKey\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\nexports.PublicKey = PublicKey\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('none').null_().optional(),\n    this.key('curve').objid().optional(),\n    this.key('params').seq().obj(\n      this.key('p').int(),\n      this.key('q').int(),\n      this.key('g').int()\n    ).optional()\n  )\n})\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\nexports.PrivateKey = PrivateKeyInfo\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').seq().obj(\n      this.key('id').objid(),\n      this.key('decrypt').seq().obj(\n        this.key('kde').seq().obj(\n          this.key('id').objid(),\n          this.key('kdeparams').seq().obj(\n            this.key('salt').octstr(),\n            this.key('iters').int()\n          )\n        ),\n        this.key('cipher').seq().obj(\n          this.key('algo').objid(),\n          this.key('iv').octstr()\n        )\n      )\n    ),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('p').int(),\n    this.key('q').int(),\n    this.key('g').int(),\n    this.key('pub_key').int(),\n    this.key('priv_key').int()\n  )\n})\nexports.DSAPrivateKey = DSAPrivateKey\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n  this.int()\n})\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('privateKey').octstr(),\n    this.key('parameters').optional().explicit(0).use(ECParameters),\n    this.key('publicKey').optional().explicit(1).bitstr()\n  )\n})\nexports.ECPrivateKey = ECPrivateKey\n\nvar ECParameters = asn1.define('ECParameters', function () {\n  this.choice({\n    namedCurve: this.objid()\n  })\n})\n\nexports.signature = asn1.define('signature', function () {\n  this.seq().obj(\n    this.key('r').int(),\n    this.key('s').int()\n  )\n})\n","// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n'use strict'\n\nvar asn = require('asn1.js')\n\nvar Time = asn.define('Time', function () {\n  this.choice({\n    utcTime: this.utctime(),\n    generalTime: this.gentime()\n  })\n})\n\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n  this.seq().obj(\n    this.key('type').objid(),\n    this.key('value').any()\n  )\n})\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('parameters').optional(),\n    this.key('curve').objid().optional()\n  )\n})\n\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\n\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n  this.setof(AttributeTypeValue)\n})\n\nvar RDNSequence = asn.define('RDNSequence', function () {\n  this.seqof(RelativeDistinguishedName)\n})\n\nvar Name = asn.define('Name', function () {\n  this.choice({\n    rdnSequence: this.use(RDNSequence)\n  })\n})\n\nvar Validity = asn.define('Validity', function () {\n  this.seq().obj(\n    this.key('notBefore').use(Time),\n    this.key('notAfter').use(Time)\n  )\n})\n\nvar Extension = asn.define('Extension', function () {\n  this.seq().obj(\n    this.key('extnID').objid(),\n    this.key('critical').bool().def(false),\n    this.key('extnValue').octstr()\n  )\n})\n\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n  this.seq().obj(\n    this.key('version').explicit(0).int().optional(),\n    this.key('serialNumber').int(),\n    this.key('signature').use(AlgorithmIdentifier),\n    this.key('issuer').use(Name),\n    this.key('validity').use(Validity),\n    this.key('subject').use(Name),\n    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),\n    this.key('issuerUniqueID').implicit(1).bitstr().optional(),\n    this.key('subjectUniqueID').implicit(2).bitstr().optional(),\n    this.key('extensions').explicit(3).seqof(Extension).optional()\n  )\n})\n\nvar X509Certificate = asn.define('X509Certificate', function () {\n  this.seq().obj(\n    this.key('tbsCertificate').use(TBSCertificate),\n    this.key('signatureAlgorithm').use(AlgorithmIdentifier),\n    this.key('signatureValue').bitstr()\n  )\n})\n\nmodule.exports = X509Certificate\n","// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r+/=]+)[\\n\\r]+/m\nvar startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m\nvar fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r+/=]+)-----END \\1-----$/m\nvar evp = require('evp_bytestokey')\nvar ciphers = require('browserify-aes')\nvar Buffer = require('safe-buffer').Buffer\nmodule.exports = function (okey, password) {\n  var key = okey.toString()\n  var match = key.match(findProc)\n  var decrypted\n  if (!match) {\n    var match2 = key.match(fullRegex)\n    decrypted = Buffer.from(match2[2].replace(/[\\r\\n]/g, ''), 'base64')\n  } else {\n    var suite = 'aes' + match[1]\n    var iv = Buffer.from(match[2], 'hex')\n    var cipherText = Buffer.from(match[3].replace(/[\\r\\n]/g, ''), 'base64')\n    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key\n    var out = []\n    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)\n    out.push(cipher.update(cipherText))\n    out.push(cipher.final())\n    decrypted = Buffer.concat(out)\n  }\n  var tag = key.match(startRegex)[1]\n  return {\n    tag: tag,\n    data: decrypted\n  }\n}\n","var asn1 = require('./asn1')\nvar aesid = require('./aesid.json')\nvar fixProc = require('./fixProc')\nvar ciphers = require('browserify-aes')\nvar compat = require('pbkdf2')\nvar Buffer = require('safe-buffer').Buffer\nmodule.exports = parseKeys\n\nfunction parseKeys (buffer) {\n  var password\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase\n    buffer = buffer.key\n  }\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer)\n  }\n\n  var stripped = fixProc(buffer, password)\n\n  var type = stripped.tag\n  var data = stripped.data\n  var subtype, ndata\n  switch (type) {\n    case 'CERTIFICATE':\n      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo\n      // falls through\n    case 'PUBLIC KEY':\n      if (!ndata) {\n        ndata = asn1.PublicKey.decode(data, 'der')\n      }\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey\n          return {\n            type: 'ec',\n            data: ndata\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      // throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der')\n      data = decrypt(data, password)\n      // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      // throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der')\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der')\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      }\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der')\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      }\n    default: throw new Error('unknown key type ' + type)\n  }\n}\nparseKeys.signature = asn1.signature\nfunction decrypt (data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]\n  var iv = data.algorithm.decrypt.cipher.iv\n  var cipherText = data.subjectPrivateKey\n  var keylen = parseInt(algo.split('-')[1], 10) / 8\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')\n  var cipher = ciphers.createDecipheriv(algo, key, iv)\n  var out = []\n  out.push(cipher.update(cipherText))\n  out.push(cipher.final())\n  return Buffer.concat(out)\n}\n","let durationRE = /(-?(?:\\d+\\.?\\d*|\\d*\\.?\\d+)(?:e[-+]?\\d+)?)\\s*([\\p{L}]*)/uig\n\n\n/**\n * conversion ratios\n */\n\nparse.nanosecond =\nparse.ns = 1 / 1e6\n\nparse['µs'] =\nparse['μs'] =\nparse.us =\nparse.microsecond = 1 / 1e3\n\nparse.millisecond =\nparse.ms =\nparse[''] = 1\n\nparse.second =\nparse.sec =\nparse.s = parse.ms * 1000\n\nparse.minute =\nparse.min =\nparse.m = parse.s * 60\n\nparse.hour =\nparse.hr =\nparse.h = parse.m * 60\n\nparse.day =\nparse.d = parse.h * 24\n\nparse.week =\nparse.wk =\nparse.w = parse.d * 7\n\nparse.month =\nparse.b =\nparse.d * (365.25 / 12)\n\nparse.year =\nparse.yr =\nparse.y = parse.d * 365.25\n\n/**\n * convert `str` to ms\n *\n * @param {String} str\n * @param {String} format\n * @return {Number}\n */\n\nfunction parse(str='', format='ms'){\n  var result = null\n  // ignore commas/placeholders\n  str = (str+'').replace(/(\\d)[,_](\\d)/g, '$1$2')\n  str.replace(durationRE, function(_, n, units){\n    units = unitRatio(units)\n    if (units) result = (result || 0) + parseFloat(n, 10) * units\n  })\n\n  return result && (result / (unitRatio(format) || 1))\n}\n\nfunction unitRatio(str) {\n  return parse[str] || parse[str.toLowerCase().replace(/s$/, '')]\n}\n\nexport default parse\n","var trim = function(string) {\n  return string.replace(/^\\s+|\\s+$/g, '');\n}\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  var headersArr = trim(headers).split('\\n')\n\n  for (var i = 0; i < headersArr.length; i++) {\n    var row = headersArr[i]\n    var index = row.indexOf(':')\n    , key = trim(row.slice(0, index)).toLowerCase()\n    , value = trim(row.slice(index + 1))\n\n    if (typeof(result[key]) === 'undefined') {\n      result[key] = value\n    } else if (isArray(result[key])) {\n      result[key].push(value)\n    } else {\n      result[key] = [ result[key], value ]\n    }\n  }\n\n  return result\n}\n","exports.pbkdf2 = require('./lib/async')\nexports.pbkdf2Sync = require('./lib/sync')\n","var Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar toBuffer = require('./to-buffer')\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  sha: 'SHA-1',\n  'sha-1': 'SHA-1',\n  sha1: 'SHA-1',\n  sha256: 'SHA-256',\n  'sha-256': 'SHA-256',\n  sha384: 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  sha512: 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\nvar nextTick\nfunction getNextTick () {\n  if (nextTick) {\n    return nextTick\n  }\n  if (global.process && global.process.nextTick) {\n    nextTick = global.process.nextTick\n  } else if (global.queueMicrotask) {\n    nextTick = global.queueMicrotask\n  } else if (global.setImmediate) {\n    nextTick = global.setImmediate\n  } else {\n    nextTick = global.setTimeout\n  }\n  return nextTick\n}\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    getNextTick()(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    getNextTick()(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    getNextTick()(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n    return\n  }\n\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","var defaultEncoding\n/* istanbul ignore next */\nif (global.process && global.process.browser) {\n  defaultEncoding = 'utf-8'\n} else if (global.process && global.process.version) {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n} else {\n  defaultEncoding = 'utf-8'\n}\nmodule.exports = defaultEncoding\n","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nmodule.exports = function (iterations, keylen) {\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","var md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar toBuffer = require('./to-buffer')\n\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n  function rmd160Func (data) {\n    return new RIPEMD160().update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","var Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (thing, encoding, name) {\n  if (Buffer.isBuffer(thing)) {\n    return thing\n  } else if (typeof thing === 'string') {\n    return Buffer.from(thing, encoding)\n  } else if (ArrayBuffer.isView(thing)) {\n    return Buffer.from(thing.buffer)\n  } else {\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\n  }\n}\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport _wrapNativeSuper from '@babel/runtime/helpers/esm/wrapNativeSuper';\nimport _taggedTemplateLiteralLoose from '@babel/runtime/helpers/esm/taggedTemplateLiteralLoose';\n\nfunction last() {\n  var _ref;\n\n  return _ref = arguments.length - 1, _ref < 0 || arguments.length <= _ref ? undefined : arguments[_ref];\n}\n\nfunction negation(a) {\n  return -a;\n}\n\nfunction addition(a, b) {\n  return a + b;\n}\n\nfunction subtraction(a, b) {\n  return a - b;\n}\n\nfunction multiplication(a, b) {\n  return a * b;\n}\n\nfunction division(a, b) {\n  return a / b;\n}\n\nfunction max() {\n  return Math.max.apply(Math, arguments);\n}\n\nfunction min() {\n  return Math.min.apply(Math, arguments);\n}\n\nfunction comma() {\n  return Array.of.apply(Array, arguments);\n}\n\nvar defaultSymbols = {\n  symbols: {\n    '*': {\n      infix: {\n        symbol: '*',\n        f: multiplication,\n        notation: 'infix',\n        precedence: 4,\n        rightToLeft: 0,\n        argCount: 2\n      },\n      symbol: '*',\n      regSymbol: '\\\\*'\n    },\n    '/': {\n      infix: {\n        symbol: '/',\n        f: division,\n        notation: 'infix',\n        precedence: 4,\n        rightToLeft: 0,\n        argCount: 2\n      },\n      symbol: '/',\n      regSymbol: '/'\n    },\n    '+': {\n      infix: {\n        symbol: '+',\n        f: addition,\n        notation: 'infix',\n        precedence: 2,\n        rightToLeft: 0,\n        argCount: 2\n      },\n      prefix: {\n        symbol: '+',\n        f: last,\n        notation: 'prefix',\n        precedence: 3,\n        rightToLeft: 0,\n        argCount: 1\n      },\n      symbol: '+',\n      regSymbol: '\\\\+'\n    },\n    '-': {\n      infix: {\n        symbol: '-',\n        f: subtraction,\n        notation: 'infix',\n        precedence: 2,\n        rightToLeft: 0,\n        argCount: 2\n      },\n      prefix: {\n        symbol: '-',\n        f: negation,\n        notation: 'prefix',\n        precedence: 3,\n        rightToLeft: 0,\n        argCount: 1\n      },\n      symbol: '-',\n      regSymbol: '-'\n    },\n    ',': {\n      infix: {\n        symbol: ',',\n        f: comma,\n        notation: 'infix',\n        precedence: 1,\n        rightToLeft: 0,\n        argCount: 2\n      },\n      symbol: ',',\n      regSymbol: ','\n    },\n    '(': {\n      prefix: {\n        symbol: '(',\n        f: last,\n        notation: 'prefix',\n        precedence: 0,\n        rightToLeft: 0,\n        argCount: 1\n      },\n      symbol: '(',\n      regSymbol: '\\\\('\n    },\n    ')': {\n      postfix: {\n        symbol: ')',\n        f: undefined,\n        notation: 'postfix',\n        precedence: 0,\n        rightToLeft: 0,\n        argCount: 1\n      },\n      symbol: ')',\n      regSymbol: '\\\\)'\n    },\n    min: {\n      func: {\n        symbol: 'min',\n        f: min,\n        notation: 'func',\n        precedence: 0,\n        rightToLeft: 0,\n        argCount: 1\n      },\n      symbol: 'min',\n      regSymbol: 'min\\\\b'\n    },\n    max: {\n      func: {\n        symbol: 'max',\n        f: max,\n        notation: 'func',\n        precedence: 0,\n        rightToLeft: 0,\n        argCount: 1\n      },\n      symbol: 'max',\n      regSymbol: 'max\\\\b'\n    }\n  }\n};\nvar defaultSymbolMap = defaultSymbols;\n\n// based on https://github.com/styled-components/styled-components/blob/fcf6f3804c57a14dd7984dfab7bc06ee2edca044/src/utils/error.js\n\n/**\n * Parse errors.md and turn it into a simple hash of code: message\n * @private\n */\nvar ERRORS = {\n  \"1\": \"Passed invalid arguments to hsl, please pass multiple numbers e.g. hsl(360, 0.75, 0.4) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75 }).\\n\\n\",\n  \"2\": \"Passed invalid arguments to hsla, please pass multiple numbers e.g. hsla(360, 0.75, 0.4, 0.7) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75, alpha: 0.7 }).\\n\\n\",\n  \"3\": \"Passed an incorrect argument to a color function, please pass a string representation of a color.\\n\\n\",\n  \"4\": \"Couldn't generate valid rgb string from %s, it returned %s.\\n\\n\",\n  \"5\": \"Couldn't parse the color string. Please provide the color as a string in hex, rgb, rgba, hsl or hsla notation.\\n\\n\",\n  \"6\": \"Passed invalid arguments to rgb, please pass multiple numbers e.g. rgb(255, 205, 100) or an object e.g. rgb({ red: 255, green: 205, blue: 100 }).\\n\\n\",\n  \"7\": \"Passed invalid arguments to rgba, please pass multiple numbers e.g. rgb(255, 205, 100, 0.75) or an object e.g. rgb({ red: 255, green: 205, blue: 100, alpha: 0.75 }).\\n\\n\",\n  \"8\": \"Passed invalid argument to toColorString, please pass a RgbColor, RgbaColor, HslColor or HslaColor object.\\n\\n\",\n  \"9\": \"Please provide a number of steps to the modularScale helper.\\n\\n\",\n  \"10\": \"Please pass a number or one of the predefined scales to the modularScale helper as the ratio.\\n\\n\",\n  \"11\": \"Invalid value passed as base to modularScale, expected number or em string but got \\\"%s\\\"\\n\\n\",\n  \"12\": \"Expected a string ending in \\\"px\\\" or a number passed as the first argument to %s(), got \\\"%s\\\" instead.\\n\\n\",\n  \"13\": \"Expected a string ending in \\\"px\\\" or a number passed as the second argument to %s(), got \\\"%s\\\" instead.\\n\\n\",\n  \"14\": \"Passed invalid pixel value (\\\"%s\\\") to %s(), please pass a value like \\\"12px\\\" or 12.\\n\\n\",\n  \"15\": \"Passed invalid base value (\\\"%s\\\") to %s(), please pass a value like \\\"12px\\\" or 12.\\n\\n\",\n  \"16\": \"You must provide a template to this method.\\n\\n\",\n  \"17\": \"You passed an unsupported selector state to this method.\\n\\n\",\n  \"18\": \"minScreen and maxScreen must be provided as stringified numbers with the same units.\\n\\n\",\n  \"19\": \"fromSize and toSize must be provided as stringified numbers with the same units.\\n\\n\",\n  \"20\": \"expects either an array of objects or a single object with the properties prop, fromSize, and toSize.\\n\\n\",\n  \"21\": \"expects the objects in the first argument array to have the properties `prop`, `fromSize`, and `toSize`.\\n\\n\",\n  \"22\": \"expects the first argument object to have the properties `prop`, `fromSize`, and `toSize`.\\n\\n\",\n  \"23\": \"fontFace expects a name of a font-family.\\n\\n\",\n  \"24\": \"fontFace expects either the path to the font file(s) or a name of a local copy.\\n\\n\",\n  \"25\": \"fontFace expects localFonts to be an array.\\n\\n\",\n  \"26\": \"fontFace expects fileFormats to be an array.\\n\\n\",\n  \"27\": \"radialGradient requries at least 2 color-stops to properly render.\\n\\n\",\n  \"28\": \"Please supply a filename to retinaImage() as the first argument.\\n\\n\",\n  \"29\": \"Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\\n\\n\",\n  \"30\": \"Passed an invalid value to `height` or `width`. Please provide a pixel based unit.\\n\\n\",\n  \"31\": \"The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation\\n\\n\",\n  \"32\": \"To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s')\\n\\n\",\n  \"33\": \"The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation\\n\\n\",\n  \"34\": \"borderRadius expects a radius value as a string or number as the second argument.\\n\\n\",\n  \"35\": \"borderRadius expects one of \\\"top\\\", \\\"bottom\\\", \\\"left\\\" or \\\"right\\\" as the first argument.\\n\\n\",\n  \"36\": \"Property must be a string value.\\n\\n\",\n  \"37\": \"Syntax Error at %s.\\n\\n\",\n  \"38\": \"Formula contains a function that needs parentheses at %s.\\n\\n\",\n  \"39\": \"Formula is missing closing parenthesis at %s.\\n\\n\",\n  \"40\": \"Formula has too many closing parentheses at %s.\\n\\n\",\n  \"41\": \"All values in a formula must have the same unit or be unitless.\\n\\n\",\n  \"42\": \"Please provide a number of steps to the modularScale helper.\\n\\n\",\n  \"43\": \"Please pass a number or one of the predefined scales to the modularScale helper as the ratio.\\n\\n\",\n  \"44\": \"Invalid value passed as base to modularScale, expected number or em/rem string but got %s.\\n\\n\",\n  \"45\": \"Passed invalid argument to hslToColorString, please pass a HslColor or HslaColor object.\\n\\n\",\n  \"46\": \"Passed invalid argument to rgbToColorString, please pass a RgbColor or RgbaColor object.\\n\\n\",\n  \"47\": \"minScreen and maxScreen must be provided as stringified numbers with the same units.\\n\\n\",\n  \"48\": \"fromSize and toSize must be provided as stringified numbers with the same units.\\n\\n\",\n  \"49\": \"Expects either an array of objects or a single object with the properties prop, fromSize, and toSize.\\n\\n\",\n  \"50\": \"Expects the objects in the first argument array to have the properties prop, fromSize, and toSize.\\n\\n\",\n  \"51\": \"Expects the first argument object to have the properties prop, fromSize, and toSize.\\n\\n\",\n  \"52\": \"fontFace expects either the path to the font file(s) or a name of a local copy.\\n\\n\",\n  \"53\": \"fontFace expects localFonts to be an array.\\n\\n\",\n  \"54\": \"fontFace expects fileFormats to be an array.\\n\\n\",\n  \"55\": \"fontFace expects a name of a font-family.\\n\\n\",\n  \"56\": \"linearGradient requries at least 2 color-stops to properly render.\\n\\n\",\n  \"57\": \"radialGradient requries at least 2 color-stops to properly render.\\n\\n\",\n  \"58\": \"Please supply a filename to retinaImage() as the first argument.\\n\\n\",\n  \"59\": \"Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\\n\\n\",\n  \"60\": \"Passed an invalid value to `height` or `width`. Please provide a pixel based unit.\\n\\n\",\n  \"61\": \"Property must be a string value.\\n\\n\",\n  \"62\": \"borderRadius expects a radius value as a string or number as the second argument.\\n\\n\",\n  \"63\": \"borderRadius expects one of \\\"top\\\", \\\"bottom\\\", \\\"left\\\" or \\\"right\\\" as the first argument.\\n\\n\",\n  \"64\": \"The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation.\\n\\n\",\n  \"65\": \"To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\\\\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s').\\n\\n\",\n  \"66\": \"The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation.\\n\\n\",\n  \"67\": \"You must provide a template to this method.\\n\\n\",\n  \"68\": \"You passed an unsupported selector state to this method.\\n\\n\",\n  \"69\": \"Expected a string ending in \\\"px\\\" or a number passed as the first argument to %s(), got %s instead.\\n\\n\",\n  \"70\": \"Expected a string ending in \\\"px\\\" or a number passed as the second argument to %s(), got %s instead.\\n\\n\",\n  \"71\": \"Passed invalid pixel value %s to %s(), please pass a value like \\\"12px\\\" or 12.\\n\\n\",\n  \"72\": \"Passed invalid base value %s to %s(), please pass a value like \\\"12px\\\" or 12.\\n\\n\",\n  \"73\": \"Please provide a valid CSS variable.\\n\\n\",\n  \"74\": \"CSS variable not found and no default was provided.\\n\\n\",\n  \"75\": \"important requires a valid style object, got a %s instead.\\n\\n\",\n  \"76\": \"fromSize and toSize must be provided as stringified numbers with the same units as minScreen and maxScreen.\\n\\n\",\n  \"77\": \"remToPx expects a value in \\\"rem\\\" but you provided it in \\\"%s\\\".\\n\\n\",\n  \"78\": \"base must be set in \\\"px\\\" or \\\"%\\\" but you set it in \\\"%s\\\".\\n\"\n};\n/**\n * super basic version of sprintf\n * @private\n */\n\nfunction format() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var a = args[0];\n  var b = [];\n  var c;\n\n  for (c = 1; c < args.length; c += 1) {\n    b.push(args[c]);\n  }\n\n  b.forEach(function (d) {\n    a = a.replace(/%[a-z]/, d);\n  });\n  return a;\n}\n/**\n * Create an error file out of errors.md for development and a simple web link to the full errors\n * in production mode.\n * @private\n */\n\n\nvar PolishedError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(PolishedError, _Error);\n\n  function PolishedError(code) {\n    var _this;\n\n    if (process.env.NODE_ENV === 'production') {\n      _this = _Error.call(this, \"An error occurred. See https://github.com/styled-components/polished/blob/main/src/internalHelpers/errors.md#\" + code + \" for more information.\") || this;\n    } else {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      _this = _Error.call(this, format.apply(void 0, [ERRORS[code]].concat(args))) || this;\n    }\n\n    return _assertThisInitialized(_this);\n  }\n\n  return PolishedError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar unitRegExp = /((?!\\w)a|na|hc|mc|dg|me[r]?|xe|ni(?![a-zA-Z])|mm|cp|tp|xp|q(?!s)|hv|xamv|nimv|wv|sm|s(?!\\D|$)|ged|darg?|nrut)/g; // Merges additional math functionality into the defaults.\n\nfunction mergeSymbolMaps(additionalSymbols) {\n  var symbolMap = {};\n  symbolMap.symbols = additionalSymbols ? _extends({}, defaultSymbolMap.symbols, additionalSymbols.symbols) : _extends({}, defaultSymbolMap.symbols);\n  return symbolMap;\n}\n\nfunction exec(operators, values) {\n  var _ref;\n\n  var op = operators.pop();\n  values.push(op.f.apply(op, (_ref = []).concat.apply(_ref, values.splice(-op.argCount))));\n  return op.precedence;\n}\n\nfunction calculate(expression, additionalSymbols) {\n  var symbolMap = mergeSymbolMaps(additionalSymbols);\n  var match;\n  var operators = [symbolMap.symbols['('].prefix];\n  var values = [];\n  var pattern = new RegExp( // Pattern for numbers\n  \"\\\\d+(?:\\\\.\\\\d+)?|\" + // ...and patterns for individual operators/function names\n  Object.keys(symbolMap.symbols).map(function (key) {\n    return symbolMap.symbols[key];\n  }) // longer symbols should be listed first\n  // $FlowFixMe\n  .sort(function (a, b) {\n    return b.symbol.length - a.symbol.length;\n  }) // $FlowFixMe\n  .map(function (val) {\n    return val.regSymbol;\n  }).join('|') + \"|(\\\\S)\", 'g');\n  pattern.lastIndex = 0; // Reset regular expression object\n\n  var afterValue = false;\n\n  do {\n    match = pattern.exec(expression);\n\n    var _ref2 = match || [')', undefined],\n        token = _ref2[0],\n        bad = _ref2[1];\n\n    var notNumber = symbolMap.symbols[token];\n    var notNewValue = notNumber && !notNumber.prefix && !notNumber.func;\n    var notAfterValue = !notNumber || !notNumber.postfix && !notNumber.infix; // Check for syntax errors:\n\n    if (bad || (afterValue ? notAfterValue : notNewValue)) {\n      throw new PolishedError(37, match ? match.index : expression.length, expression);\n    }\n\n    if (afterValue) {\n      // We either have an infix or postfix operator (they should be mutually exclusive)\n      var curr = notNumber.postfix || notNumber.infix;\n\n      do {\n        var prev = operators[operators.length - 1];\n        if ((curr.precedence - prev.precedence || prev.rightToLeft) > 0) break; // Apply previous operator, since it has precedence over current one\n      } while (exec(operators, values)); // Exit loop after executing an opening parenthesis or function\n\n\n      afterValue = curr.notation === 'postfix';\n\n      if (curr.symbol !== ')') {\n        operators.push(curr); // Postfix always has precedence over any operator that follows after it\n\n        if (afterValue) exec(operators, values);\n      }\n    } else if (notNumber) {\n      // prefix operator or function\n      operators.push(notNumber.prefix || notNumber.func);\n\n      if (notNumber.func) {\n        // Require an opening parenthesis\n        match = pattern.exec(expression);\n\n        if (!match || match[0] !== '(') {\n          throw new PolishedError(38, match ? match.index : expression.length, expression);\n        }\n      }\n    } else {\n      // number\n      values.push(+token);\n      afterValue = true;\n    }\n  } while (match && operators.length);\n\n  if (operators.length) {\n    throw new PolishedError(39, match ? match.index : expression.length, expression);\n  } else if (match) {\n    throw new PolishedError(40, match ? match.index : expression.length, expression);\n  } else {\n    return values.pop();\n  }\n}\n\nfunction reverseString(str) {\n  return str.split('').reverse().join('');\n}\n/**\n * Helper for doing math with CSS Units. Accepts a formula as a string. All values in the formula must have the same unit (or be unitless). Supports complex formulas utliziing addition, subtraction, multiplication, division, square root, powers, factorial, min, max, as well as parentheses for order of operation.\n *\n *In cases where you need to do calculations with mixed units where one unit is a [relative length unit](https://developer.mozilla.org/en-US/docs/Web/CSS/length#Relative_length_units), you will want to use [CSS Calc](https://developer.mozilla.org/en-US/docs/Web/CSS/calc).\n *\n * *warning* While we've done everything possible to ensure math safely evalutes formulas expressed as strings, you should always use extreme caution when passing `math` user provided values.\n * @example\n * // Styles as object usage\n * const styles = {\n *   fontSize: math('12rem + 8rem'),\n *   fontSize: math('(12px + 2px) * 3'),\n *   fontSize: math('3px^2 + sqrt(4)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   fontSize: ${math('12rem + 8rem')};\n *   fontSize: ${math('(12px + 2px) * 3')};\n *   fontSize: ${math('3px^2 + sqrt(4)')};\n * `\n *\n * // CSS as JS Output\n *\n * div: {\n *   fontSize: '20rem',\n *   fontSize: '42px',\n *   fontSize: '11px',\n * }\n */\n\n\nfunction math(formula, additionalSymbols) {\n  var reversedFormula = reverseString(formula);\n  var formulaMatch = reversedFormula.match(unitRegExp); // Check that all units are the same\n\n  if (formulaMatch && !formulaMatch.every(function (unit) {\n    return unit === formulaMatch[0];\n  })) {\n    throw new PolishedError(41);\n  }\n\n  var cleanFormula = reverseString(reversedFormula.replace(unitRegExp, ''));\n  return \"\" + calculate(cleanFormula, additionalSymbols) + (formulaMatch ? reverseString(formulaMatch[0]) : '');\n}\n\nvar cssVariableRegex = /--[\\S]*/g;\n/**\n * Fetches the value of a passed CSS Variable in the :root scope, or otherwise returns a defaultValue if provided.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   'background': cssVar('--background-color'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${cssVar('--background-color')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   'background': 'red'\n * }\n */\n\nfunction cssVar(cssVariable, defaultValue) {\n  if (!cssVariable || !cssVariable.match(cssVariableRegex)) {\n    throw new PolishedError(73);\n  }\n\n  var variableValue;\n  /* eslint-disable */\n\n  /* istanbul ignore next */\n\n  if (typeof document !== 'undefined' && document.documentElement !== null) {\n    variableValue = getComputedStyle(document.documentElement).getPropertyValue(cssVariable);\n  }\n  /* eslint-enable */\n\n\n  if (variableValue) {\n    return variableValue.trim();\n  } else if (defaultValue) {\n    return defaultValue;\n  }\n\n  throw new PolishedError(74);\n}\n\n// @private\nfunction capitalizeString(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar positionMap$1 = ['Top', 'Right', 'Bottom', 'Left'];\n\nfunction generateProperty(property, position) {\n  if (!property) return position.toLowerCase();\n  var splitProperty = property.split('-');\n\n  if (splitProperty.length > 1) {\n    splitProperty.splice(1, 0, position);\n    return splitProperty.reduce(function (acc, val) {\n      return \"\" + acc + capitalizeString(val);\n    });\n  }\n\n  var joinedProperty = property.replace(/([a-z])([A-Z])/g, \"$1\" + position + \"$2\");\n  return property === joinedProperty ? \"\" + property + position : joinedProperty;\n}\n\nfunction generateStyles(property, valuesWithDefaults) {\n  var styles = {};\n\n  for (var i = 0; i < valuesWithDefaults.length; i += 1) {\n    if (valuesWithDefaults[i] || valuesWithDefaults[i] === 0) {\n      styles[generateProperty(property, positionMap$1[i])] = valuesWithDefaults[i];\n    }\n  }\n\n  return styles;\n}\n/**\n * Enables shorthand for direction-based properties. It accepts a property (hyphenated or camelCased) and up to four values that map to top, right, bottom, and left, respectively. You can optionally pass an empty string to get only the directional values as properties. You can also optionally pass a null argument for a directional value to ignore it.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...directionalProperty('padding', '12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${directionalProperty('padding', '12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'paddingTop': '12px',\n *   'paddingRight': '24px',\n *   'paddingBottom': '36px',\n *   'paddingLeft': '48px'\n * }\n */\n\n\nfunction directionalProperty(property) {\n  for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  //  prettier-ignore\n  var firstValue = values[0],\n      _values$ = values[1],\n      secondValue = _values$ === void 0 ? firstValue : _values$,\n      _values$2 = values[2],\n      thirdValue = _values$2 === void 0 ? firstValue : _values$2,\n      _values$3 = values[3],\n      fourthValue = _values$3 === void 0 ? secondValue : _values$3;\n  var valuesWithDefaults = [firstValue, secondValue, thirdValue, fourthValue];\n  return generateStyles(property, valuesWithDefaults);\n}\n\n/**\n * Check if a string ends with something\n * @private\n */\nfunction endsWith(string, suffix) {\n  return string.substr(-suffix.length) === suffix;\n}\n\nvar cssRegex$1 = /^([+-]?(?:\\d+|\\d*\\.\\d+))([a-z]*|%)$/;\n/**\n * Returns a given CSS value minus its unit of measure.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   '--dimension': stripUnit('100px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   --dimension: ${stripUnit('100px')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   '--dimension': 100\n * }\n */\n\nfunction stripUnit(value) {\n  if (typeof value !== 'string') return value;\n  var matchedValue = value.match(cssRegex$1);\n  return matchedValue ? parseFloat(value) : value;\n}\n\n/**\n * Factory function that creates pixel-to-x converters\n * @private\n */\n\nvar pxtoFactory = function pxtoFactory(to) {\n  return function (pxval, base) {\n    if (base === void 0) {\n      base = '16px';\n    }\n\n    var newPxval = pxval;\n    var newBase = base;\n\n    if (typeof pxval === 'string') {\n      if (!endsWith(pxval, 'px')) {\n        throw new PolishedError(69, to, pxval);\n      }\n\n      newPxval = stripUnit(pxval);\n    }\n\n    if (typeof base === 'string') {\n      if (!endsWith(base, 'px')) {\n        throw new PolishedError(70, to, base);\n      }\n\n      newBase = stripUnit(base);\n    }\n\n    if (typeof newPxval === 'string') {\n      throw new PolishedError(71, pxval, to);\n    }\n\n    if (typeof newBase === 'string') {\n      throw new PolishedError(72, base, to);\n    }\n\n    return \"\" + newPxval / newBase + to;\n  };\n};\n\nvar pixelsto = pxtoFactory;\n\n/**\n * Convert pixel value to ems. The default base value is 16px, but can be changed by passing a\n * second argument to the function.\n * @function\n * @param {string|number} pxval\n * @param {string|number} [base='16px']\n * @example\n * // Styles as object usage\n * const styles = {\n *   'height': em('16px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   height: ${em('16px')}\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   'height': '1em'\n * }\n */\n\nvar em = /*#__PURE__*/pixelsto('em');\nvar em$1 = em;\n\nvar cssRegex = /^([+-]?(?:\\d+|\\d*\\.\\d+))([a-z]*|%)$/;\n/**\n * Returns a given CSS value and its unit as elements of an array.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   '--dimension': getValueAndUnit('100px')[0],\n *   '--unit': getValueAndUnit('100px')[1],\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   --dimension: ${getValueAndUnit('100px')[0]};\n *   --unit: ${getValueAndUnit('100px')[1]};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   '--dimension': 100,\n *   '--unit': 'px',\n * }\n */\n\nfunction getValueAndUnit(value) {\n  if (typeof value !== 'string') return [value, ''];\n  var matchedValue = value.match(cssRegex);\n  if (matchedValue) return [parseFloat(value), matchedValue[2]];\n  return [value, undefined];\n}\n\n/**\n * Helper for targeting rules in a style block generated by polished modules that need !important-level specificity. Can optionally specify a rule (or rules) to target specific rules.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...important(cover())\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${important(cover())}\n * `\n *\n * // CSS as JS Output\n *\n * div: {\n *   'position': 'absolute !important',\n *   'top': '0 !important',\n *   'right: '0 !important',\n *   'bottom': '0 !important',\n *   'left: '0 !important'\n * }\n */\n\nfunction important(styleBlock, rules) {\n  if (typeof styleBlock !== 'object' || styleBlock === null) {\n    throw new PolishedError(75, typeof styleBlock);\n  }\n\n  var newStyleBlock = {};\n  Object.keys(styleBlock).forEach(function (key) {\n    if (typeof styleBlock[key] === 'object' && styleBlock[key] !== null) {\n      newStyleBlock[key] = important(styleBlock[key], rules);\n    } else if (!rules || rules && (rules === key || rules.indexOf(key) >= 0)) {\n      newStyleBlock[key] = styleBlock[key] + \" !important\";\n    } else {\n      newStyleBlock[key] = styleBlock[key];\n    }\n  });\n  return newStyleBlock;\n}\n\nvar ratioNames = {\n  minorSecond: 1.067,\n  majorSecond: 1.125,\n  minorThird: 1.2,\n  majorThird: 1.25,\n  perfectFourth: 1.333,\n  augFourth: 1.414,\n  perfectFifth: 1.5,\n  minorSixth: 1.6,\n  goldenSection: 1.618,\n  majorSixth: 1.667,\n  minorSeventh: 1.778,\n  majorSeventh: 1.875,\n  octave: 2,\n  majorTenth: 2.5,\n  majorEleventh: 2.667,\n  majorTwelfth: 3,\n  doubleOctave: 4\n};\n\nfunction getRatio(ratioName) {\n  return ratioNames[ratioName];\n}\n/**\n * Establish consistent measurements and spacial relationships throughout your projects by incrementing an em or rem value up or down a defined scale. We provide a list of commonly used scales as pre-defined variables.\n * @example\n * // Styles as object usage\n * const styles = {\n *    // Increment two steps up the default scale\n *   'fontSize': modularScale(2)\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *    // Increment two steps up the default scale\n *   fontSize: ${modularScale(2)}\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   'fontSize': '1.77689em'\n * }\n */\n\n\nfunction modularScale(steps, base, ratio) {\n  if (base === void 0) {\n    base = '1em';\n  }\n\n  if (ratio === void 0) {\n    ratio = 1.333;\n  }\n\n  if (typeof steps !== 'number') {\n    throw new PolishedError(42);\n  }\n\n  if (typeof ratio === 'string' && !ratioNames[ratio]) {\n    throw new PolishedError(43);\n  }\n\n  var _ref = typeof base === 'string' ? getValueAndUnit(base) : [base, ''],\n      realBase = _ref[0],\n      unit = _ref[1];\n\n  var realRatio = typeof ratio === 'string' ? getRatio(ratio) : ratio;\n\n  if (typeof realBase === 'string') {\n    throw new PolishedError(44, base);\n  }\n\n  return \"\" + realBase * Math.pow(realRatio, steps) + (unit || '');\n}\n\n/**\n * Convert pixel value to rems. The default base value is 16px, but can be changed by passing a\n * second argument to the function.\n * @function\n * @param {string|number} pxval\n * @param {string|number} [base='16px']\n * @example\n * // Styles as object usage\n * const styles = {\n *   'height': rem('16px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   height: ${rem('16px')}\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   'height': '1rem'\n * }\n */\n\nvar rem = /*#__PURE__*/pixelsto('rem');\nvar rem$1 = rem;\n\nvar defaultFontSize = 16;\n\nfunction convertBase(base) {\n  var deconstructedValue = getValueAndUnit(base);\n\n  if (deconstructedValue[1] === 'px') {\n    return parseFloat(base);\n  }\n\n  if (deconstructedValue[1] === '%') {\n    return parseFloat(base) / 100 * defaultFontSize;\n  }\n\n  throw new PolishedError(78, deconstructedValue[1]);\n}\n\nfunction getBaseFromDoc() {\n  /* eslint-disable */\n\n  /* istanbul ignore next */\n  if (typeof document !== 'undefined' && document.documentElement !== null) {\n    var rootFontSize = getComputedStyle(document.documentElement).fontSize;\n    return rootFontSize ? convertBase(rootFontSize) : defaultFontSize;\n  }\n  /* eslint-enable */\n\n  /* istanbul ignore next */\n\n\n  return defaultFontSize;\n}\n/**\n * Convert rem values to px. By default, the base value is pulled from the font-size property on the root element (if it is set in % or px). It defaults to 16px if not found on the root. You can also override the base value by providing your own base in % or px.\n * @example\n * // Styles as object usage\n * const styles = {\n *   'height': remToPx('1.6rem')\n *   'height': remToPx('1.6rem', '10px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   height: ${remToPx('1.6rem')}\n *   height: ${remToPx('1.6rem', '10px')}\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   'height': '25.6px',\n *   'height': '16px',\n * }\n */\n\n\nfunction remToPx(value, base) {\n  var deconstructedValue = getValueAndUnit(value);\n\n  if (deconstructedValue[1] !== 'rem' && deconstructedValue[1] !== '') {\n    throw new PolishedError(77, deconstructedValue[1]);\n  }\n\n  var newBase = base ? convertBase(base) : getBaseFromDoc();\n  return deconstructedValue[0] * newBase + \"px\";\n}\n\nvar functionsMap$3 = {\n  back: 'cubic-bezier(0.600, -0.280, 0.735, 0.045)',\n  circ: 'cubic-bezier(0.600,  0.040, 0.980, 0.335)',\n  cubic: 'cubic-bezier(0.550,  0.055, 0.675, 0.190)',\n  expo: 'cubic-bezier(0.950,  0.050, 0.795, 0.035)',\n  quad: 'cubic-bezier(0.550,  0.085, 0.680, 0.530)',\n  quart: 'cubic-bezier(0.895,  0.030, 0.685, 0.220)',\n  quint: 'cubic-bezier(0.755,  0.050, 0.855, 0.060)',\n  sine: 'cubic-bezier(0.470,  0.000, 0.745, 0.715)'\n};\n/**\n * String to represent common easing functions as demonstrated here: (github.com/jaukia/easie).\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   'transitionTimingFunction': easeIn('quad')\n * }\n *\n * // styled-components usage\n *  const div = styled.div`\n *   transitionTimingFunction: ${easeIn('quad')};\n * `\n *\n * // CSS as JS Output\n *\n * 'div': {\n *   'transitionTimingFunction': 'cubic-bezier(0.550,  0.085, 0.680, 0.530)',\n * }\n */\n\nfunction easeIn(functionName) {\n  return functionsMap$3[functionName.toLowerCase().trim()];\n}\n\nvar functionsMap$2 = {\n  back: 'cubic-bezier(0.680, -0.550, 0.265, 1.550)',\n  circ: 'cubic-bezier(0.785,  0.135, 0.150, 0.860)',\n  cubic: 'cubic-bezier(0.645,  0.045, 0.355, 1.000)',\n  expo: 'cubic-bezier(1.000,  0.000, 0.000, 1.000)',\n  quad: 'cubic-bezier(0.455,  0.030, 0.515, 0.955)',\n  quart: 'cubic-bezier(0.770,  0.000, 0.175, 1.000)',\n  quint: 'cubic-bezier(0.860,  0.000, 0.070, 1.000)',\n  sine: 'cubic-bezier(0.445,  0.050, 0.550, 0.950)'\n};\n/**\n * String to represent common easing functions as demonstrated here: (github.com/jaukia/easie).\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   'transitionTimingFunction': easeInOut('quad')\n * }\n *\n * // styled-components usage\n *  const div = styled.div`\n *   transitionTimingFunction: ${easeInOut('quad')};\n * `\n *\n * // CSS as JS Output\n *\n * 'div': {\n *   'transitionTimingFunction': 'cubic-bezier(0.455,  0.030, 0.515, 0.955)',\n * }\n */\n\nfunction easeInOut(functionName) {\n  return functionsMap$2[functionName.toLowerCase().trim()];\n}\n\nvar functionsMap$1 = {\n  back: 'cubic-bezier(0.175,  0.885, 0.320, 1.275)',\n  cubic: 'cubic-bezier(0.215,  0.610, 0.355, 1.000)',\n  circ: 'cubic-bezier(0.075,  0.820, 0.165, 1.000)',\n  expo: 'cubic-bezier(0.190,  1.000, 0.220, 1.000)',\n  quad: 'cubic-bezier(0.250,  0.460, 0.450, 0.940)',\n  quart: 'cubic-bezier(0.165,  0.840, 0.440, 1.000)',\n  quint: 'cubic-bezier(0.230,  1.000, 0.320, 1.000)',\n  sine: 'cubic-bezier(0.390,  0.575, 0.565, 1.000)'\n};\n/**\n * String to represent common easing functions as demonstrated here: (github.com/jaukia/easie).\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   'transitionTimingFunction': easeOut('quad')\n * }\n *\n * // styled-components usage\n *  const div = styled.div`\n *   transitionTimingFunction: ${easeOut('quad')};\n * `\n *\n * // CSS as JS Output\n *\n * 'div': {\n *   'transitionTimingFunction': 'cubic-bezier(0.250,  0.460, 0.450, 0.940)',\n * }\n */\n\nfunction easeOut(functionName) {\n  return functionsMap$1[functionName.toLowerCase().trim()];\n}\n\n/**\n * Returns a CSS calc formula for linear interpolation of a property between two values. Accepts optional minScreen (defaults to '320px') and maxScreen (defaults to '1200px').\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   fontSize: between('20px', '100px', '400px', '1000px'),\n *   fontSize: between('20px', '100px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   fontSize: ${between('20px', '100px', '400px', '1000px')};\n *   fontSize: ${between('20px', '100px')}\n * `\n *\n * // CSS as JS Output\n *\n * h1: {\n *   'fontSize': 'calc(-33.33333333333334px + 13.333333333333334vw)',\n *   'fontSize': 'calc(-9.090909090909093px + 9.090909090909092vw)'\n * }\n */\n\nfunction between(fromSize, toSize, minScreen, maxScreen) {\n  if (minScreen === void 0) {\n    minScreen = '320px';\n  }\n\n  if (maxScreen === void 0) {\n    maxScreen = '1200px';\n  }\n\n  var _getValueAndUnit = getValueAndUnit(fromSize),\n      unitlessFromSize = _getValueAndUnit[0],\n      fromSizeUnit = _getValueAndUnit[1];\n\n  var _getValueAndUnit2 = getValueAndUnit(toSize),\n      unitlessToSize = _getValueAndUnit2[0],\n      toSizeUnit = _getValueAndUnit2[1];\n\n  var _getValueAndUnit3 = getValueAndUnit(minScreen),\n      unitlessMinScreen = _getValueAndUnit3[0],\n      minScreenUnit = _getValueAndUnit3[1];\n\n  var _getValueAndUnit4 = getValueAndUnit(maxScreen),\n      unitlessMaxScreen = _getValueAndUnit4[0],\n      maxScreenUnit = _getValueAndUnit4[1];\n\n  if (typeof unitlessMinScreen !== 'number' || typeof unitlessMaxScreen !== 'number' || !minScreenUnit || !maxScreenUnit || minScreenUnit !== maxScreenUnit) {\n    throw new PolishedError(47);\n  }\n\n  if (typeof unitlessFromSize !== 'number' || typeof unitlessToSize !== 'number' || fromSizeUnit !== toSizeUnit) {\n    throw new PolishedError(48);\n  }\n\n  if (fromSizeUnit !== minScreenUnit || toSizeUnit !== maxScreenUnit) {\n    throw new PolishedError(76);\n  }\n\n  var slope = (unitlessFromSize - unitlessToSize) / (unitlessMinScreen - unitlessMaxScreen);\n  var base = unitlessToSize - slope * unitlessMaxScreen;\n  return \"calc(\" + base.toFixed(2) + (fromSizeUnit || '') + \" + \" + (100 * slope).toFixed(2) + \"vw)\";\n}\n\n/**\n * CSS to contain a float (credit to CSSMojo).\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *    ...clearFix(),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${clearFix()}\n * `\n *\n * // CSS as JS Output\n *\n * '&::after': {\n *   'clear': 'both',\n *   'content': '\"\"',\n *   'display': 'table'\n * }\n */\nfunction clearFix(parent) {\n  var _ref;\n\n  if (parent === void 0) {\n    parent = '&';\n  }\n\n  var pseudoSelector = parent + \"::after\";\n  return _ref = {}, _ref[pseudoSelector] = {\n    clear: 'both',\n    content: '\"\"',\n    display: 'table'\n  }, _ref;\n}\n\n/**\n * CSS to fully cover an area. Can optionally be passed an offset to act as a \"padding\".\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...cover()\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${cover()}\n * `\n *\n * // CSS as JS Output\n *\n * div: {\n *   'position': 'absolute',\n *   'top': '0',\n *   'right: '0',\n *   'bottom': '0',\n *   'left: '0'\n * }\n */\nfunction cover(offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  return {\n    position: 'absolute',\n    top: offset,\n    right: offset,\n    bottom: offset,\n    left: offset\n  };\n}\n\n/**\n * CSS to represent truncated text with an ellipsis. You can optionally pass a max-width and number of lines before truncating.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...ellipsis('250px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${ellipsis('250px')}\n * `\n *\n * // CSS as JS Output\n *\n * div: {\n *   'display': 'inline-block',\n *   'maxWidth': '250px',\n *   'overflow': 'hidden',\n *   'textOverflow': 'ellipsis',\n *   'whiteSpace': 'nowrap',\n *   'wordWrap': 'normal'\n * }\n */\nfunction ellipsis(width, lines) {\n  if (lines === void 0) {\n    lines = 1;\n  }\n\n  var styles = {\n    display: 'inline-block',\n    maxWidth: width || '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    wordWrap: 'normal'\n  };\n  return lines > 1 ? _extends({}, styles, {\n    WebkitBoxOrient: 'vertical',\n    WebkitLineClamp: lines,\n    display: '-webkit-box',\n    whiteSpace: 'normal'\n  }) : styles;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Returns a set of media queries that resizes a property (or set of properties) between a provided fromSize and toSize. Accepts optional minScreen (defaults to '320px') and maxScreen (defaults to '1200px') to constrain the interpolation.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...fluidRange(\n *    {\n *        prop: 'padding',\n *        fromSize: '20px',\n *        toSize: '100px',\n *      },\n *      '400px',\n *      '1000px',\n *    )\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${fluidRange(\n *      {\n *        prop: 'padding',\n *        fromSize: '20px',\n *        toSize: '100px',\n *      },\n *      '400px',\n *      '1000px',\n *    )}\n * `\n *\n * // CSS as JS Output\n *\n * div: {\n *   \"@media (min-width: 1000px)\": Object {\n *     \"padding\": \"100px\",\n *   },\n *   \"@media (min-width: 400px)\": Object {\n *     \"padding\": \"calc(-33.33333333333334px + 13.333333333333334vw)\",\n *   },\n *   \"padding\": \"20px\",\n * }\n */\nfunction fluidRange(cssProp, minScreen, maxScreen) {\n  if (minScreen === void 0) {\n    minScreen = '320px';\n  }\n\n  if (maxScreen === void 0) {\n    maxScreen = '1200px';\n  }\n\n  if (!Array.isArray(cssProp) && typeof cssProp !== 'object' || cssProp === null) {\n    throw new PolishedError(49);\n  }\n\n  if (Array.isArray(cssProp)) {\n    var mediaQueries = {};\n    var fallbacks = {};\n\n    for (var _iterator = _createForOfIteratorHelperLoose(cssProp), _step; !(_step = _iterator()).done;) {\n      var _extends2, _extends3;\n\n      var obj = _step.value;\n\n      if (!obj.prop || !obj.fromSize || !obj.toSize) {\n        throw new PolishedError(50);\n      }\n\n      fallbacks[obj.prop] = obj.fromSize;\n      mediaQueries[\"@media (min-width: \" + minScreen + \")\"] = _extends({}, mediaQueries[\"@media (min-width: \" + minScreen + \")\"], (_extends2 = {}, _extends2[obj.prop] = between(obj.fromSize, obj.toSize, minScreen, maxScreen), _extends2));\n      mediaQueries[\"@media (min-width: \" + maxScreen + \")\"] = _extends({}, mediaQueries[\"@media (min-width: \" + maxScreen + \")\"], (_extends3 = {}, _extends3[obj.prop] = obj.toSize, _extends3));\n    }\n\n    return _extends({}, fallbacks, mediaQueries);\n  } else {\n    var _ref, _ref2, _ref3;\n\n    if (!cssProp.prop || !cssProp.fromSize || !cssProp.toSize) {\n      throw new PolishedError(51);\n    }\n\n    return _ref3 = {}, _ref3[cssProp.prop] = cssProp.fromSize, _ref3[\"@media (min-width: \" + minScreen + \")\"] = (_ref = {}, _ref[cssProp.prop] = between(cssProp.fromSize, cssProp.toSize, minScreen, maxScreen), _ref), _ref3[\"@media (min-width: \" + maxScreen + \")\"] = (_ref2 = {}, _ref2[cssProp.prop] = cssProp.toSize, _ref2), _ref3;\n  }\n}\n\nvar dataURIRegex = /^\\s*data:([a-z]+\\/[a-z-]+(;[a-z-]+=[a-z-]+)?)?(;charset=[a-z0-9-]+)?(;base64)?,[a-z0-9!$&',()*+,;=\\-._~:@/?%\\s]*\\s*$/i;\nvar formatHintMap = {\n  woff: 'woff',\n  woff2: 'woff2',\n  ttf: 'truetype',\n  otf: 'opentype',\n  eot: 'embedded-opentype',\n  svg: 'svg',\n  svgz: 'svg'\n};\n\nfunction generateFormatHint(format, formatHint) {\n  if (!formatHint) return '';\n  return \" format(\\\"\" + formatHintMap[format] + \"\\\")\";\n}\n\nfunction isDataURI(fontFilePath) {\n  return !!fontFilePath.replace(/\\s+/g, ' ').match(dataURIRegex);\n}\n\nfunction generateFileReferences(fontFilePath, fileFormats, formatHint) {\n  if (isDataURI(fontFilePath)) {\n    return \"url(\\\"\" + fontFilePath + \"\\\")\" + generateFormatHint(fileFormats[0], formatHint);\n  }\n\n  var fileFontReferences = fileFormats.map(function (format) {\n    return \"url(\\\"\" + fontFilePath + \".\" + format + \"\\\")\" + generateFormatHint(format, formatHint);\n  });\n  return fileFontReferences.join(', ');\n}\n\nfunction generateLocalReferences(localFonts) {\n  var localFontReferences = localFonts.map(function (font) {\n    return \"local(\\\"\" + font + \"\\\")\";\n  });\n  return localFontReferences.join(', ');\n}\n\nfunction generateSources(fontFilePath, localFonts, fileFormats, formatHint) {\n  var fontReferences = [];\n  if (localFonts) fontReferences.push(generateLocalReferences(localFonts));\n\n  if (fontFilePath) {\n    fontReferences.push(generateFileReferences(fontFilePath, fileFormats, formatHint));\n  }\n\n  return fontReferences.join(', ');\n}\n/**\n * CSS for a @font-face declaration. Defaults to check for local copies of the font on the user's machine. You can disable this by passing `null` to localFonts.\n *\n * @example\n * // Styles as object basic usage\n * const styles = {\n *    ...fontFace({\n *      'fontFamily': 'Sans-Pro',\n *      'fontFilePath': 'path/to/file'\n *    })\n * }\n *\n * // styled-components basic usage\n * const GlobalStyle = createGlobalStyle`${\n *   fontFace({\n *     'fontFamily': 'Sans-Pro',\n *     'fontFilePath': 'path/to/file'\n *   }\n * )}`\n *\n * // CSS as JS Output\n *\n * '@font-face': {\n *   'fontFamily': 'Sans-Pro',\n *   'src': 'url(\"path/to/file.eot\"), url(\"path/to/file.woff2\"), url(\"path/to/file.woff\"), url(\"path/to/file.ttf\"), url(\"path/to/file.svg\")',\n * }\n */\n\n\nfunction fontFace(_ref) {\n  var fontFamily = _ref.fontFamily,\n      fontFilePath = _ref.fontFilePath,\n      fontStretch = _ref.fontStretch,\n      fontStyle = _ref.fontStyle,\n      fontVariant = _ref.fontVariant,\n      fontWeight = _ref.fontWeight,\n      _ref$fileFormats = _ref.fileFormats,\n      fileFormats = _ref$fileFormats === void 0 ? ['eot', 'woff2', 'woff', 'ttf', 'svg'] : _ref$fileFormats,\n      _ref$formatHint = _ref.formatHint,\n      formatHint = _ref$formatHint === void 0 ? false : _ref$formatHint,\n      _ref$localFonts = _ref.localFonts,\n      localFonts = _ref$localFonts === void 0 ? [fontFamily] : _ref$localFonts,\n      unicodeRange = _ref.unicodeRange,\n      fontDisplay = _ref.fontDisplay,\n      fontVariationSettings = _ref.fontVariationSettings,\n      fontFeatureSettings = _ref.fontFeatureSettings;\n  // Error Handling\n  if (!fontFamily) throw new PolishedError(55);\n\n  if (!fontFilePath && !localFonts) {\n    throw new PolishedError(52);\n  }\n\n  if (localFonts && !Array.isArray(localFonts)) {\n    throw new PolishedError(53);\n  }\n\n  if (!Array.isArray(fileFormats)) {\n    throw new PolishedError(54);\n  }\n\n  var fontFaceDeclaration = {\n    '@font-face': {\n      fontFamily: fontFamily,\n      src: generateSources(fontFilePath, localFonts, fileFormats, formatHint),\n      unicodeRange: unicodeRange,\n      fontStretch: fontStretch,\n      fontStyle: fontStyle,\n      fontVariant: fontVariant,\n      fontWeight: fontWeight,\n      fontDisplay: fontDisplay,\n      fontVariationSettings: fontVariationSettings,\n      fontFeatureSettings: fontFeatureSettings\n    }\n  }; // Removes undefined fields for cleaner css object.\n\n  return JSON.parse(JSON.stringify(fontFaceDeclaration));\n}\n\n/**\n * CSS to hide text to show a background image in a SEO-friendly way.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   'backgroundImage': 'url(logo.png)',\n *   ...hideText(),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   backgroundImage: url(logo.png);\n *   ${hideText()};\n * `\n *\n * // CSS as JS Output\n *\n * 'div': {\n *   'backgroundImage': 'url(logo.png)',\n *   'textIndent': '101%',\n *   'overflow': 'hidden',\n *   'whiteSpace': 'nowrap',\n * }\n */\nfunction hideText() {\n  return {\n    textIndent: '101%',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap'\n  };\n}\n\n/**\n * CSS to hide content visually but remain accessible to screen readers.\n * from [HTML5 Boilerplate](https://github.com/h5bp/html5-boilerplate/blob/9a176f57af1cfe8ec70300da4621fb9b07e5fa31/src/css/main.css#L121)\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...hideVisually(),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${hideVisually()};\n * `\n *\n * // CSS as JS Output\n *\n * 'div': {\n *   'border': '0',\n *   'clip': 'rect(0 0 0 0)',\n *   'height': '1px',\n *   'margin': '-1px',\n *   'overflow': 'hidden',\n *   'padding': '0',\n *   'position': 'absolute',\n *   'whiteSpace': 'nowrap',\n *   'width': '1px',\n * }\n */\nfunction hideVisually() {\n  return {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    whiteSpace: 'nowrap',\n    width: '1px'\n  };\n}\n\n/**\n * Generates a media query to target HiDPI devices.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *  [hiDPI(1.5)]: {\n *    width: 200px;\n *  }\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${hiDPI(1.5)} {\n *     width: 200px;\n *   }\n * `\n *\n * // CSS as JS Output\n *\n * '@media only screen and (-webkit-min-device-pixel-ratio: 1.5),\n *  only screen and (min--moz-device-pixel-ratio: 1.5),\n *  only screen and (-o-min-device-pixel-ratio: 1.5/1),\n *  only screen and (min-resolution: 144dpi),\n *  only screen and (min-resolution: 1.5dppx)': {\n *   'width': '200px',\n * }\n */\nfunction hiDPI(ratio) {\n  if (ratio === void 0) {\n    ratio = 1.3;\n  }\n\n  return \"\\n    @media only screen and (-webkit-min-device-pixel-ratio: \" + ratio + \"),\\n    only screen and (min--moz-device-pixel-ratio: \" + ratio + \"),\\n    only screen and (-o-min-device-pixel-ratio: \" + ratio + \"/1),\\n    only screen and (min-resolution: \" + Math.round(ratio * 96) + \"dpi),\\n    only screen and (min-resolution: \" + ratio + \"dppx)\\n  \";\n}\n\nfunction constructGradientValue(literals) {\n  var template = '';\n\n  for (var _len = arguments.length, substitutions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    substitutions[_key - 1] = arguments[_key];\n  }\n\n  for (var i = 0; i < literals.length; i += 1) {\n    template += literals[i];\n\n    if (i === substitutions.length - 1 && substitutions[i]) {\n      var definedValues = substitutions.filter(function (substitute) {\n        return !!substitute;\n      }); // Adds leading coma if properties preceed color-stops\n\n      if (definedValues.length > 1) {\n        template = template.slice(0, -1);\n        template += \", \" + substitutions[i]; // No trailing space if color-stops is the only param provided\n      } else if (definedValues.length === 1) {\n        template += \"\" + substitutions[i];\n      }\n    } else if (substitutions[i]) {\n      template += substitutions[i] + \" \";\n    }\n  }\n\n  return template.trim();\n}\n\nvar _templateObject$1;\n\n/**\n * CSS for declaring a linear gradient, including a fallback background-color. The fallback is either the first color-stop or an explicitly passed fallback color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...linearGradient({\n        colorStops: ['#00FFFF 0%', 'rgba(0, 0, 255, 0) 50%', '#0000FF 95%'],\n        toDirection: 'to top right',\n        fallback: '#FFF',\n      })\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${linearGradient({\n        colorStops: ['#00FFFF 0%', 'rgba(0, 0, 255, 0) 50%', '#0000FF 95%'],\n        toDirection: 'to top right',\n        fallback: '#FFF',\n      })}\n *`\n *\n * // CSS as JS Output\n *\n * div: {\n *   'backgroundColor': '#FFF',\n *   'backgroundImage': 'linear-gradient(to top right, #00FFFF 0%, rgba(0, 0, 255, 0) 50%, #0000FF 95%)',\n * }\n */\nfunction linearGradient(_ref) {\n  var colorStops = _ref.colorStops,\n      fallback = _ref.fallback,\n      _ref$toDirection = _ref.toDirection,\n      toDirection = _ref$toDirection === void 0 ? '' : _ref$toDirection;\n\n  if (!colorStops || colorStops.length < 2) {\n    throw new PolishedError(56);\n  }\n\n  return {\n    backgroundColor: fallback || colorStops[0].replace(/,\\s+/g, ',').split(' ')[0].replace(/,(?=\\S)/g, ', '),\n    backgroundImage: constructGradientValue(_templateObject$1 || (_templateObject$1 = _taggedTemplateLiteralLoose([\"linear-gradient(\", \"\", \")\"])), toDirection, colorStops.join(', ').replace(/,(?=\\S)/g, ', '))\n  };\n}\n\n/**\n * CSS to normalize abnormalities across browsers (normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css)\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *    ...normalize(),\n * }\n *\n * // styled-components usage\n * const GlobalStyle = createGlobalStyle`${normalize()}`\n *\n * // CSS as JS Output\n *\n * html {\n *   lineHeight: 1.15,\n *   textSizeAdjust: 100%,\n * } ...\n */\nfunction normalize() {\n  var _ref;\n\n  return [(_ref = {\n    html: {\n      lineHeight: '1.15',\n      textSizeAdjust: '100%'\n    },\n    body: {\n      margin: '0'\n    },\n    main: {\n      display: 'block'\n    },\n    h1: {\n      fontSize: '2em',\n      margin: '0.67em 0'\n    },\n    hr: {\n      boxSizing: 'content-box',\n      height: '0',\n      overflow: 'visible'\n    },\n    pre: {\n      fontFamily: 'monospace, monospace',\n      fontSize: '1em'\n    },\n    a: {\n      backgroundColor: 'transparent'\n    },\n    'abbr[title]': {\n      borderBottom: 'none',\n      textDecoration: 'underline'\n    }\n  }, _ref[\"b,\\n    strong\"] = {\n    fontWeight: 'bolder'\n  }, _ref[\"code,\\n    kbd,\\n    samp\"] = {\n    fontFamily: 'monospace, monospace',\n    fontSize: '1em'\n  }, _ref.small = {\n    fontSize: '80%'\n  }, _ref[\"sub,\\n    sup\"] = {\n    fontSize: '75%',\n    lineHeight: '0',\n    position: 'relative',\n    verticalAlign: 'baseline'\n  }, _ref.sub = {\n    bottom: '-0.25em'\n  }, _ref.sup = {\n    top: '-0.5em'\n  }, _ref.img = {\n    borderStyle: 'none'\n  }, _ref[\"button,\\n    input,\\n    optgroup,\\n    select,\\n    textarea\"] = {\n    fontFamily: 'inherit',\n    fontSize: '100%',\n    lineHeight: '1.15',\n    margin: '0'\n  }, _ref[\"button,\\n    input\"] = {\n    overflow: 'visible'\n  }, _ref[\"button,\\n    select\"] = {\n    textTransform: 'none'\n  }, _ref[\"button,\\n    html [type=\\\"button\\\"],\\n    [type=\\\"reset\\\"],\\n    [type=\\\"submit\\\"]\"] = {\n    WebkitAppearance: 'button'\n  }, _ref[\"button::-moz-focus-inner,\\n    [type=\\\"button\\\"]::-moz-focus-inner,\\n    [type=\\\"reset\\\"]::-moz-focus-inner,\\n    [type=\\\"submit\\\"]::-moz-focus-inner\"] = {\n    borderStyle: 'none',\n    padding: '0'\n  }, _ref[\"button:-moz-focusring,\\n    [type=\\\"button\\\"]:-moz-focusring,\\n    [type=\\\"reset\\\"]:-moz-focusring,\\n    [type=\\\"submit\\\"]:-moz-focusring\"] = {\n    outline: '1px dotted ButtonText'\n  }, _ref.fieldset = {\n    padding: '0.35em 0.625em 0.75em'\n  }, _ref.legend = {\n    boxSizing: 'border-box',\n    color: 'inherit',\n    display: 'table',\n    maxWidth: '100%',\n    padding: '0',\n    whiteSpace: 'normal'\n  }, _ref.progress = {\n    verticalAlign: 'baseline'\n  }, _ref.textarea = {\n    overflow: 'auto'\n  }, _ref[\"[type=\\\"checkbox\\\"],\\n    [type=\\\"radio\\\"]\"] = {\n    boxSizing: 'border-box',\n    padding: '0'\n  }, _ref[\"[type=\\\"number\\\"]::-webkit-inner-spin-button,\\n    [type=\\\"number\\\"]::-webkit-outer-spin-button\"] = {\n    height: 'auto'\n  }, _ref['[type=\"search\"]'] = {\n    WebkitAppearance: 'textfield',\n    outlineOffset: '-2px'\n  }, _ref['[type=\"search\"]::-webkit-search-decoration'] = {\n    WebkitAppearance: 'none'\n  }, _ref['::-webkit-file-upload-button'] = {\n    WebkitAppearance: 'button',\n    font: 'inherit'\n  }, _ref.details = {\n    display: 'block'\n  }, _ref.summary = {\n    display: 'list-item'\n  }, _ref.template = {\n    display: 'none'\n  }, _ref['[hidden]'] = {\n    display: 'none'\n  }, _ref), {\n    'abbr[title]': {\n      textDecoration: 'underline dotted'\n    }\n  }];\n}\n\nvar _templateObject;\n\n/**\n * CSS for declaring a radial gradient, including a fallback background-color. The fallback is either the first color-stop or an explicitly passed fallback color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...radialGradient({\n *     colorStops: ['#00FFFF 0%', 'rgba(0, 0, 255, 0) 50%', '#0000FF 95%'],\n *     extent: 'farthest-corner at 45px 45px',\n *     position: 'center',\n *     shape: 'ellipse',\n *   })\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${radialGradient({\n *     colorStops: ['#00FFFF 0%', 'rgba(0, 0, 255, 0) 50%', '#0000FF 95%'],\n *     extent: 'farthest-corner at 45px 45px',\n *     position: 'center',\n *     shape: 'ellipse',\n *   })}\n *`\n *\n * // CSS as JS Output\n *\n * div: {\n *   'backgroundColor': '#00FFFF',\n *   'backgroundImage': 'radial-gradient(center ellipse farthest-corner at 45px 45px, #00FFFF 0%, rgba(0, 0, 255, 0) 50%, #0000FF 95%)',\n * }\n */\nfunction radialGradient(_ref) {\n  var colorStops = _ref.colorStops,\n      _ref$extent = _ref.extent,\n      extent = _ref$extent === void 0 ? '' : _ref$extent,\n      fallback = _ref.fallback,\n      _ref$position = _ref.position,\n      position = _ref$position === void 0 ? '' : _ref$position,\n      _ref$shape = _ref.shape,\n      shape = _ref$shape === void 0 ? '' : _ref$shape;\n\n  if (!colorStops || colorStops.length < 2) {\n    throw new PolishedError(57);\n  }\n\n  return {\n    backgroundColor: fallback || colorStops[0].split(' ')[0],\n    backgroundImage: constructGradientValue(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"radial-gradient(\", \"\", \"\", \"\", \")\"])), position, shape, extent, colorStops.join(', '))\n  };\n}\n\n/**\n * A helper to generate a retina background image and non-retina\n * background image. The retina background image will output to a HiDPI media query. The mixin uses\n * a _2x.png filename suffix by default.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *  ...retinaImage('my-img')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${retinaImage('my-img')}\n * `\n *\n * // CSS as JS Output\n * div {\n *   backgroundImage: 'url(my-img.png)',\n *   '@media only screen and (-webkit-min-device-pixel-ratio: 1.3),\n *    only screen and (min--moz-device-pixel-ratio: 1.3),\n *    only screen and (-o-min-device-pixel-ratio: 1.3/1),\n *    only screen and (min-resolution: 144dpi),\n *    only screen and (min-resolution: 1.5dppx)': {\n *     backgroundImage: 'url(my-img_2x.png)',\n *   }\n * }\n */\nfunction retinaImage(filename, backgroundSize, extension, retinaFilename, retinaSuffix) {\n  var _ref;\n\n  if (extension === void 0) {\n    extension = 'png';\n  }\n\n  if (retinaSuffix === void 0) {\n    retinaSuffix = '_2x';\n  }\n\n  if (!filename) {\n    throw new PolishedError(58);\n  } // Replace the dot at the beginning of the passed extension if one exists\n\n\n  var ext = extension.replace(/^\\./, '');\n  var rFilename = retinaFilename ? retinaFilename + \".\" + ext : \"\" + filename + retinaSuffix + \".\" + ext;\n  return _ref = {\n    backgroundImage: \"url(\" + filename + \".\" + ext + \")\"\n  }, _ref[hiDPI()] = _extends({\n    backgroundImage: \"url(\" + rFilename + \")\"\n  }, backgroundSize ? {\n    backgroundSize: backgroundSize\n  } : {}), _ref;\n}\n\n/* eslint-disable key-spacing */\nvar functionsMap = {\n  easeInBack: 'cubic-bezier(0.600, -0.280, 0.735, 0.045)',\n  easeInCirc: 'cubic-bezier(0.600,  0.040, 0.980, 0.335)',\n  easeInCubic: 'cubic-bezier(0.550,  0.055, 0.675, 0.190)',\n  easeInExpo: 'cubic-bezier(0.950,  0.050, 0.795, 0.035)',\n  easeInQuad: 'cubic-bezier(0.550,  0.085, 0.680, 0.530)',\n  easeInQuart: 'cubic-bezier(0.895,  0.030, 0.685, 0.220)',\n  easeInQuint: 'cubic-bezier(0.755,  0.050, 0.855, 0.060)',\n  easeInSine: 'cubic-bezier(0.470,  0.000, 0.745, 0.715)',\n  easeOutBack: 'cubic-bezier(0.175,  0.885, 0.320, 1.275)',\n  easeOutCubic: 'cubic-bezier(0.215,  0.610, 0.355, 1.000)',\n  easeOutCirc: 'cubic-bezier(0.075,  0.820, 0.165, 1.000)',\n  easeOutExpo: 'cubic-bezier(0.190,  1.000, 0.220, 1.000)',\n  easeOutQuad: 'cubic-bezier(0.250,  0.460, 0.450, 0.940)',\n  easeOutQuart: 'cubic-bezier(0.165,  0.840, 0.440, 1.000)',\n  easeOutQuint: 'cubic-bezier(0.230,  1.000, 0.320, 1.000)',\n  easeOutSine: 'cubic-bezier(0.390,  0.575, 0.565, 1.000)',\n  easeInOutBack: 'cubic-bezier(0.680, -0.550, 0.265, 1.550)',\n  easeInOutCirc: 'cubic-bezier(0.785,  0.135, 0.150, 0.860)',\n  easeInOutCubic: 'cubic-bezier(0.645,  0.045, 0.355, 1.000)',\n  easeInOutExpo: 'cubic-bezier(1.000,  0.000, 0.000, 1.000)',\n  easeInOutQuad: 'cubic-bezier(0.455,  0.030, 0.515, 0.955)',\n  easeInOutQuart: 'cubic-bezier(0.770,  0.000, 0.175, 1.000)',\n  easeInOutQuint: 'cubic-bezier(0.860,  0.000, 0.070, 1.000)',\n  easeInOutSine: 'cubic-bezier(0.445,  0.050, 0.550, 0.950)'\n};\n/* eslint-enable key-spacing */\n\nfunction getTimingFunction(functionName) {\n  return functionsMap[functionName];\n}\n/**\n * String to represent common easing functions as demonstrated here: (github.com/jaukia/easie).\n *\n * @deprecated - This will be deprecated in v5 in favor of `easeIn`, `easeOut`, `easeInOut`.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   'transitionTimingFunction': timingFunctions('easeInQuad')\n * }\n *\n * // styled-components usage\n *  const div = styled.div`\n *   transitionTimingFunction: ${timingFunctions('easeInQuad')};\n * `\n *\n * // CSS as JS Output\n *\n * 'div': {\n *   'transitionTimingFunction': 'cubic-bezier(0.550,  0.085, 0.680, 0.530)',\n * }\n */\n\n\nfunction timingFunctions(timingFunction) {\n  return getTimingFunction(timingFunction);\n}\n\nvar getBorderWidth = function getBorderWidth(pointingDirection, height, width) {\n  var fullWidth = \"\" + width[0] + (width[1] || '');\n  var halfWidth = \"\" + width[0] / 2 + (width[1] || '');\n  var fullHeight = \"\" + height[0] + (height[1] || '');\n  var halfHeight = \"\" + height[0] / 2 + (height[1] || '');\n\n  switch (pointingDirection) {\n    case 'top':\n      return \"0 \" + halfWidth + \" \" + fullHeight + \" \" + halfWidth;\n\n    case 'topLeft':\n      return fullWidth + \" \" + fullHeight + \" 0 0\";\n\n    case 'left':\n      return halfHeight + \" \" + fullWidth + \" \" + halfHeight + \" 0\";\n\n    case 'bottomLeft':\n      return fullWidth + \" 0 0 \" + fullHeight;\n\n    case 'bottom':\n      return fullHeight + \" \" + halfWidth + \" 0 \" + halfWidth;\n\n    case 'bottomRight':\n      return \"0 0 \" + fullWidth + \" \" + fullHeight;\n\n    case 'right':\n      return halfHeight + \" 0 \" + halfHeight + \" \" + fullWidth;\n\n    case 'topRight':\n    default:\n      return \"0 \" + fullWidth + \" \" + fullHeight + \" 0\";\n  }\n};\n\nvar getBorderColor = function getBorderColor(pointingDirection, foregroundColor) {\n  switch (pointingDirection) {\n    case 'top':\n    case 'bottomRight':\n      return {\n        borderBottomColor: foregroundColor\n      };\n\n    case 'right':\n    case 'bottomLeft':\n      return {\n        borderLeftColor: foregroundColor\n      };\n\n    case 'bottom':\n    case 'topLeft':\n      return {\n        borderTopColor: foregroundColor\n      };\n\n    case 'left':\n    case 'topRight':\n      return {\n        borderRightColor: foregroundColor\n      };\n\n    default:\n      throw new PolishedError(59);\n  }\n};\n/**\n * CSS to represent triangle with any pointing direction with an optional background color.\n *\n * @example\n * // Styles as object usage\n *\n * const styles = {\n *   ...triangle({ pointingDirection: 'right', width: '100px', height: '100px', foregroundColor: 'red' })\n * }\n *\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${triangle({ pointingDirection: 'right', width: '100px', height: '100px', foregroundColor: 'red' })}\n *\n *\n * // CSS as JS Output\n *\n * div: {\n *  'borderColor': 'transparent transparent transparent red',\n *  'borderStyle': 'solid',\n *  'borderWidth': '50px 0 50px 100px',\n *  'height': '0',\n *  'width': '0',\n * }\n */\n\n\nfunction triangle(_ref) {\n  var pointingDirection = _ref.pointingDirection,\n      height = _ref.height,\n      width = _ref.width,\n      foregroundColor = _ref.foregroundColor,\n      _ref$backgroundColor = _ref.backgroundColor,\n      backgroundColor = _ref$backgroundColor === void 0 ? 'transparent' : _ref$backgroundColor;\n  var widthAndUnit = getValueAndUnit(width);\n  var heightAndUnit = getValueAndUnit(height);\n\n  if (isNaN(heightAndUnit[0]) || isNaN(widthAndUnit[0])) {\n    throw new PolishedError(60);\n  }\n\n  return _extends({\n    width: '0',\n    height: '0',\n    borderColor: backgroundColor\n  }, getBorderColor(pointingDirection, foregroundColor), {\n    borderStyle: 'solid',\n    borderWidth: getBorderWidth(pointingDirection, heightAndUnit, widthAndUnit)\n  });\n}\n\n/**\n * Provides an easy way to change the `wordWrap` property.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...wordWrap('break-word')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${wordWrap('break-word')}\n * `\n *\n * // CSS as JS Output\n *\n * const styles = {\n *   overflowWrap: 'break-word',\n *   wordWrap: 'break-word',\n *   wordBreak: 'break-all',\n * }\n */\nfunction wordWrap(wrap) {\n  if (wrap === void 0) {\n    wrap = 'break-word';\n  }\n\n  var wordBreak = wrap === 'break-word' ? 'break-all' : wrap;\n  return {\n    overflowWrap: wrap,\n    wordWrap: wrap,\n    wordBreak: wordBreak\n  };\n}\n\nfunction colorToInt(color) {\n  return Math.round(color * 255);\n}\n\nfunction convertToInt(red, green, blue) {\n  return colorToInt(red) + \",\" + colorToInt(green) + \",\" + colorToInt(blue);\n}\n\nfunction hslToRgb(hue, saturation, lightness, convert) {\n  if (convert === void 0) {\n    convert = convertToInt;\n  }\n\n  if (saturation === 0) {\n    // achromatic\n    return convert(lightness, lightness, lightness);\n  } // formulae from https://en.wikipedia.org/wiki/HSL_and_HSV\n\n\n  var huePrime = (hue % 360 + 360) % 360 / 60;\n  var chroma = (1 - Math.abs(2 * lightness - 1)) * saturation;\n  var secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));\n  var red = 0;\n  var green = 0;\n  var blue = 0;\n\n  if (huePrime >= 0 && huePrime < 1) {\n    red = chroma;\n    green = secondComponent;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    red = secondComponent;\n    green = chroma;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    green = chroma;\n    blue = secondComponent;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    green = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    red = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 5 && huePrime < 6) {\n    red = chroma;\n    blue = secondComponent;\n  }\n\n  var lightnessModification = lightness - chroma / 2;\n  var finalRed = red + lightnessModification;\n  var finalGreen = green + lightnessModification;\n  var finalBlue = blue + lightnessModification;\n  return convert(finalRed, finalGreen, finalBlue);\n}\n\nvar namedColorMap = {\n  aliceblue: 'f0f8ff',\n  antiquewhite: 'faebd7',\n  aqua: '00ffff',\n  aquamarine: '7fffd4',\n  azure: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '000',\n  blanchedalmond: 'ffebcd',\n  blue: '0000ff',\n  blueviolet: '8a2be2',\n  brown: 'a52a2a',\n  burlywood: 'deb887',\n  cadetblue: '5f9ea0',\n  chartreuse: '7fff00',\n  chocolate: 'd2691e',\n  coral: 'ff7f50',\n  cornflowerblue: '6495ed',\n  cornsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: '00ffff',\n  darkblue: '00008b',\n  darkcyan: '008b8b',\n  darkgoldenrod: 'b8860b',\n  darkgray: 'a9a9a9',\n  darkgreen: '006400',\n  darkgrey: 'a9a9a9',\n  darkkhaki: 'bdb76b',\n  darkmagenta: '8b008b',\n  darkolivegreen: '556b2f',\n  darkorange: 'ff8c00',\n  darkorchid: '9932cc',\n  darkred: '8b0000',\n  darksalmon: 'e9967a',\n  darkseagreen: '8fbc8f',\n  darkslateblue: '483d8b',\n  darkslategray: '2f4f4f',\n  darkslategrey: '2f4f4f',\n  darkturquoise: '00ced1',\n  darkviolet: '9400d3',\n  deeppink: 'ff1493',\n  deepskyblue: '00bfff',\n  dimgray: '696969',\n  dimgrey: '696969',\n  dodgerblue: '1e90ff',\n  firebrick: 'b22222',\n  floralwhite: 'fffaf0',\n  forestgreen: '228b22',\n  fuchsia: 'ff00ff',\n  gainsboro: 'dcdcdc',\n  ghostwhite: 'f8f8ff',\n  gold: 'ffd700',\n  goldenrod: 'daa520',\n  gray: '808080',\n  green: '008000',\n  greenyellow: 'adff2f',\n  grey: '808080',\n  honeydew: 'f0fff0',\n  hotpink: 'ff69b4',\n  indianred: 'cd5c5c',\n  indigo: '4b0082',\n  ivory: 'fffff0',\n  khaki: 'f0e68c',\n  lavender: 'e6e6fa',\n  lavenderblush: 'fff0f5',\n  lawngreen: '7cfc00',\n  lemonchiffon: 'fffacd',\n  lightblue: 'add8e6',\n  lightcoral: 'f08080',\n  lightcyan: 'e0ffff',\n  lightgoldenrodyellow: 'fafad2',\n  lightgray: 'd3d3d3',\n  lightgreen: '90ee90',\n  lightgrey: 'd3d3d3',\n  lightpink: 'ffb6c1',\n  lightsalmon: 'ffa07a',\n  lightseagreen: '20b2aa',\n  lightskyblue: '87cefa',\n  lightslategray: '789',\n  lightslategrey: '789',\n  lightsteelblue: 'b0c4de',\n  lightyellow: 'ffffe0',\n  lime: '0f0',\n  limegreen: '32cd32',\n  linen: 'faf0e6',\n  magenta: 'f0f',\n  maroon: '800000',\n  mediumaquamarine: '66cdaa',\n  mediumblue: '0000cd',\n  mediumorchid: 'ba55d3',\n  mediumpurple: '9370db',\n  mediumseagreen: '3cb371',\n  mediumslateblue: '7b68ee',\n  mediumspringgreen: '00fa9a',\n  mediumturquoise: '48d1cc',\n  mediumvioletred: 'c71585',\n  midnightblue: '191970',\n  mintcream: 'f5fffa',\n  mistyrose: 'ffe4e1',\n  moccasin: 'ffe4b5',\n  navajowhite: 'ffdead',\n  navy: '000080',\n  oldlace: 'fdf5e6',\n  olive: '808000',\n  olivedrab: '6b8e23',\n  orange: 'ffa500',\n  orangered: 'ff4500',\n  orchid: 'da70d6',\n  palegoldenrod: 'eee8aa',\n  palegreen: '98fb98',\n  paleturquoise: 'afeeee',\n  palevioletred: 'db7093',\n  papayawhip: 'ffefd5',\n  peachpuff: 'ffdab9',\n  peru: 'cd853f',\n  pink: 'ffc0cb',\n  plum: 'dda0dd',\n  powderblue: 'b0e0e6',\n  purple: '800080',\n  rebeccapurple: '639',\n  red: 'f00',\n  rosybrown: 'bc8f8f',\n  royalblue: '4169e1',\n  saddlebrown: '8b4513',\n  salmon: 'fa8072',\n  sandybrown: 'f4a460',\n  seagreen: '2e8b57',\n  seashell: 'fff5ee',\n  sienna: 'a0522d',\n  silver: 'c0c0c0',\n  skyblue: '87ceeb',\n  slateblue: '6a5acd',\n  slategray: '708090',\n  slategrey: '708090',\n  snow: 'fffafa',\n  springgreen: '00ff7f',\n  steelblue: '4682b4',\n  tan: 'd2b48c',\n  teal: '008080',\n  thistle: 'd8bfd8',\n  tomato: 'ff6347',\n  turquoise: '40e0d0',\n  violet: 'ee82ee',\n  wheat: 'f5deb3',\n  white: 'fff',\n  whitesmoke: 'f5f5f5',\n  yellow: 'ff0',\n  yellowgreen: '9acd32'\n};\n/**\n * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.\n * @private\n */\n\nfunction nameToHex(color) {\n  if (typeof color !== 'string') return color;\n  var normalizedColorName = color.toLowerCase();\n  return namedColorMap[normalizedColorName] ? \"#\" + namedColorMap[normalizedColorName] : color;\n}\n\nvar hexRegex = /^#[a-fA-F0-9]{6}$/;\nvar hexRgbaRegex = /^#[a-fA-F0-9]{8}$/;\nvar reducedHexRegex = /^#[a-fA-F0-9]{3}$/;\nvar reducedRgbaHexRegex = /^#[a-fA-F0-9]{4}$/;\nvar rgbRegex = /^rgb\\(\\s*(\\d{1,3})\\s*(?:,)?\\s*(\\d{1,3})\\s*(?:,)?\\s*(\\d{1,3})\\s*\\)$/i;\nvar rgbaRegex = /^rgb(?:a)?\\(\\s*(\\d{1,3})\\s*(?:,)?\\s*(\\d{1,3})\\s*(?:,)?\\s*(\\d{1,3})\\s*(?:,|\\/)\\s*([-+]?\\d*[.]?\\d+[%]?)\\s*\\)$/i;\nvar hslRegex = /^hsl\\(\\s*(\\d{0,3}[.]?[0-9]+(?:deg)?)\\s*(?:,)?\\s*(\\d{1,3}[.]?[0-9]?)%\\s*(?:,)?\\s*(\\d{1,3}[.]?[0-9]?)%\\s*\\)$/i;\nvar hslaRegex = /^hsl(?:a)?\\(\\s*(\\d{0,3}[.]?[0-9]+(?:deg)?)\\s*(?:,)?\\s*(\\d{1,3}[.]?[0-9]?)%\\s*(?:,)?\\s*(\\d{1,3}[.]?[0-9]?)%\\s*(?:,|\\/)\\s*([-+]?\\d*[.]?\\d+[%]?)\\s*\\)$/i;\n/**\n * Returns an RgbColor or RgbaColor object. This utility function is only useful\n * if want to extract a color component. With the color util `toColorString` you\n * can convert a RgbColor or RgbaColor object back to a string.\n *\n * @example\n * // Assigns `{ red: 255, green: 0, blue: 0 }` to color1\n * const color1 = parseToRgb('rgb(255, 0, 0)');\n * // Assigns `{ red: 92, green: 102, blue: 112, alpha: 0.75 }` to color2\n * const color2 = parseToRgb('hsla(210, 10%, 40%, 0.75)');\n */\n\nfunction parseToRgb(color) {\n  if (typeof color !== 'string') {\n    throw new PolishedError(3);\n  }\n\n  var normalizedColor = nameToHex(color);\n\n  if (normalizedColor.match(hexRegex)) {\n    return {\n      red: parseInt(\"\" + normalizedColor[1] + normalizedColor[2], 16),\n      green: parseInt(\"\" + normalizedColor[3] + normalizedColor[4], 16),\n      blue: parseInt(\"\" + normalizedColor[5] + normalizedColor[6], 16)\n    };\n  }\n\n  if (normalizedColor.match(hexRgbaRegex)) {\n    var alpha = parseFloat((parseInt(\"\" + normalizedColor[7] + normalizedColor[8], 16) / 255).toFixed(2));\n    return {\n      red: parseInt(\"\" + normalizedColor[1] + normalizedColor[2], 16),\n      green: parseInt(\"\" + normalizedColor[3] + normalizedColor[4], 16),\n      blue: parseInt(\"\" + normalizedColor[5] + normalizedColor[6], 16),\n      alpha: alpha\n    };\n  }\n\n  if (normalizedColor.match(reducedHexRegex)) {\n    return {\n      red: parseInt(\"\" + normalizedColor[1] + normalizedColor[1], 16),\n      green: parseInt(\"\" + normalizedColor[2] + normalizedColor[2], 16),\n      blue: parseInt(\"\" + normalizedColor[3] + normalizedColor[3], 16)\n    };\n  }\n\n  if (normalizedColor.match(reducedRgbaHexRegex)) {\n    var _alpha = parseFloat((parseInt(\"\" + normalizedColor[4] + normalizedColor[4], 16) / 255).toFixed(2));\n\n    return {\n      red: parseInt(\"\" + normalizedColor[1] + normalizedColor[1], 16),\n      green: parseInt(\"\" + normalizedColor[2] + normalizedColor[2], 16),\n      blue: parseInt(\"\" + normalizedColor[3] + normalizedColor[3], 16),\n      alpha: _alpha\n    };\n  }\n\n  var rgbMatched = rgbRegex.exec(normalizedColor);\n\n  if (rgbMatched) {\n    return {\n      red: parseInt(\"\" + rgbMatched[1], 10),\n      green: parseInt(\"\" + rgbMatched[2], 10),\n      blue: parseInt(\"\" + rgbMatched[3], 10)\n    };\n  }\n\n  var rgbaMatched = rgbaRegex.exec(normalizedColor.substring(0, 50));\n\n  if (rgbaMatched) {\n    return {\n      red: parseInt(\"\" + rgbaMatched[1], 10),\n      green: parseInt(\"\" + rgbaMatched[2], 10),\n      blue: parseInt(\"\" + rgbaMatched[3], 10),\n      alpha: parseFloat(\"\" + rgbaMatched[4]) > 1 ? parseFloat(\"\" + rgbaMatched[4]) / 100 : parseFloat(\"\" + rgbaMatched[4])\n    };\n  }\n\n  var hslMatched = hslRegex.exec(normalizedColor);\n\n  if (hslMatched) {\n    var hue = parseInt(\"\" + hslMatched[1], 10);\n    var saturation = parseInt(\"\" + hslMatched[2], 10) / 100;\n    var lightness = parseInt(\"\" + hslMatched[3], 10) / 100;\n    var rgbColorString = \"rgb(\" + hslToRgb(hue, saturation, lightness) + \")\";\n    var hslRgbMatched = rgbRegex.exec(rgbColorString);\n\n    if (!hslRgbMatched) {\n      throw new PolishedError(4, normalizedColor, rgbColorString);\n    }\n\n    return {\n      red: parseInt(\"\" + hslRgbMatched[1], 10),\n      green: parseInt(\"\" + hslRgbMatched[2], 10),\n      blue: parseInt(\"\" + hslRgbMatched[3], 10)\n    };\n  }\n\n  var hslaMatched = hslaRegex.exec(normalizedColor.substring(0, 50));\n\n  if (hslaMatched) {\n    var _hue = parseInt(\"\" + hslaMatched[1], 10);\n\n    var _saturation = parseInt(\"\" + hslaMatched[2], 10) / 100;\n\n    var _lightness = parseInt(\"\" + hslaMatched[3], 10) / 100;\n\n    var _rgbColorString = \"rgb(\" + hslToRgb(_hue, _saturation, _lightness) + \")\";\n\n    var _hslRgbMatched = rgbRegex.exec(_rgbColorString);\n\n    if (!_hslRgbMatched) {\n      throw new PolishedError(4, normalizedColor, _rgbColorString);\n    }\n\n    return {\n      red: parseInt(\"\" + _hslRgbMatched[1], 10),\n      green: parseInt(\"\" + _hslRgbMatched[2], 10),\n      blue: parseInt(\"\" + _hslRgbMatched[3], 10),\n      alpha: parseFloat(\"\" + hslaMatched[4]) > 1 ? parseFloat(\"\" + hslaMatched[4]) / 100 : parseFloat(\"\" + hslaMatched[4])\n    };\n  }\n\n  throw new PolishedError(5);\n}\n\nfunction rgbToHsl(color) {\n  // make sure rgb are contained in a set of [0, 255]\n  var red = color.red / 255;\n  var green = color.green / 255;\n  var blue = color.blue / 255;\n  var max = Math.max(red, green, blue);\n  var min = Math.min(red, green, blue);\n  var lightness = (max + min) / 2;\n\n  if (max === min) {\n    // achromatic\n    if (color.alpha !== undefined) {\n      return {\n        hue: 0,\n        saturation: 0,\n        lightness: lightness,\n        alpha: color.alpha\n      };\n    } else {\n      return {\n        hue: 0,\n        saturation: 0,\n        lightness: lightness\n      };\n    }\n  }\n\n  var hue;\n  var delta = max - min;\n  var saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n\n  switch (max) {\n    case red:\n      hue = (green - blue) / delta + (green < blue ? 6 : 0);\n      break;\n\n    case green:\n      hue = (blue - red) / delta + 2;\n      break;\n\n    default:\n      // blue case\n      hue = (red - green) / delta + 4;\n      break;\n  }\n\n  hue *= 60;\n\n  if (color.alpha !== undefined) {\n    return {\n      hue: hue,\n      saturation: saturation,\n      lightness: lightness,\n      alpha: color.alpha\n    };\n  }\n\n  return {\n    hue: hue,\n    saturation: saturation,\n    lightness: lightness\n  };\n}\n\n/**\n * Returns an HslColor or HslaColor object. This utility function is only useful\n * if want to extract a color component. With the color util `toColorString` you\n * can convert a HslColor or HslaColor object back to a string.\n *\n * @example\n * // Assigns `{ hue: 0, saturation: 1, lightness: 0.5 }` to color1\n * const color1 = parseToHsl('rgb(255, 0, 0)');\n * // Assigns `{ hue: 128, saturation: 1, lightness: 0.5, alpha: 0.75 }` to color2\n * const color2 = parseToHsl('hsla(128, 100%, 50%, 0.75)');\n */\nfunction parseToHsl(color) {\n  // Note: At a later stage we can optimize this function as right now a hsl\n  // color would be parsed converted to rgb values and converted back to hsl.\n  return rgbToHsl(parseToRgb(color));\n}\n\n/**\n * Reduces hex values if possible e.g. #ff8866 to #f86\n * @private\n */\nvar reduceHexValue = function reduceHexValue(value) {\n  if (value.length === 7 && value[1] === value[2] && value[3] === value[4] && value[5] === value[6]) {\n    return \"#\" + value[1] + value[3] + value[5];\n  }\n\n  return value;\n};\n\nvar reduceHexValue$1 = reduceHexValue;\n\nfunction numberToHex(value) {\n  var hex = value.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nfunction colorToHex(color) {\n  return numberToHex(Math.round(color * 255));\n}\n\nfunction convertToHex(red, green, blue) {\n  return reduceHexValue$1(\"#\" + colorToHex(red) + colorToHex(green) + colorToHex(blue));\n}\n\nfunction hslToHex(hue, saturation, lightness) {\n  return hslToRgb(hue, saturation, lightness, convertToHex);\n}\n\n/**\n * Returns a string value for the color. The returned result is the smallest possible hex notation.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: hsl(359, 0.75, 0.4),\n *   background: hsl({ hue: 360, saturation: 0.75, lightness: 0.4 }),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${hsl(359, 0.75, 0.4)};\n *   background: ${hsl({ hue: 360, saturation: 0.75, lightness: 0.4 })};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#b3191c\";\n *   background: \"#b3191c\";\n * }\n */\nfunction hsl(value, saturation, lightness) {\n  if (typeof value === 'number' && typeof saturation === 'number' && typeof lightness === 'number') {\n    return hslToHex(value, saturation, lightness);\n  } else if (typeof value === 'object' && saturation === undefined && lightness === undefined) {\n    return hslToHex(value.hue, value.saturation, value.lightness);\n  }\n\n  throw new PolishedError(1);\n}\n\n/**\n * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: hsla(359, 0.75, 0.4, 0.7),\n *   background: hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 }),\n *   background: hsla(359, 0.75, 0.4, 1),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${hsla(359, 0.75, 0.4, 0.7)};\n *   background: ${hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 })};\n *   background: ${hsla(359, 0.75, 0.4, 1)};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"rgba(179,25,28,0.7)\";\n *   background: \"rgba(179,25,28,0.7)\";\n *   background: \"#b3191c\";\n * }\n */\nfunction hsla(value, saturation, lightness, alpha) {\n  if (typeof value === 'number' && typeof saturation === 'number' && typeof lightness === 'number' && typeof alpha === 'number') {\n    return alpha >= 1 ? hslToHex(value, saturation, lightness) : \"rgba(\" + hslToRgb(value, saturation, lightness) + \",\" + alpha + \")\";\n  } else if (typeof value === 'object' && saturation === undefined && lightness === undefined && alpha === undefined) {\n    return value.alpha >= 1 ? hslToHex(value.hue, value.saturation, value.lightness) : \"rgba(\" + hslToRgb(value.hue, value.saturation, value.lightness) + \",\" + value.alpha + \")\";\n  }\n\n  throw new PolishedError(2);\n}\n\n/**\n * Returns a string value for the color. The returned result is the smallest possible hex notation.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: rgb(255, 205, 100),\n *   background: rgb({ red: 255, green: 205, blue: 100 }),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${rgb(255, 205, 100)};\n *   background: ${rgb({ red: 255, green: 205, blue: 100 })};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#ffcd64\";\n *   background: \"#ffcd64\";\n * }\n */\nfunction rgb(value, green, blue) {\n  if (typeof value === 'number' && typeof green === 'number' && typeof blue === 'number') {\n    return reduceHexValue$1(\"#\" + numberToHex(value) + numberToHex(green) + numberToHex(blue));\n  } else if (typeof value === 'object' && green === undefined && blue === undefined) {\n    return reduceHexValue$1(\"#\" + numberToHex(value.red) + numberToHex(value.green) + numberToHex(value.blue));\n  }\n\n  throw new PolishedError(6);\n}\n\n/**\n * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.\n *\n * Can also be used to fade a color by passing a hex value or named CSS color along with an alpha value.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: rgba(255, 205, 100, 0.7),\n *   background: rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 }),\n *   background: rgba(255, 205, 100, 1),\n *   background: rgba('#ffffff', 0.4),\n *   background: rgba('black', 0.7),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${rgba(255, 205, 100, 0.7)};\n *   background: ${rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 })};\n *   background: ${rgba(255, 205, 100, 1)};\n *   background: ${rgba('#ffffff', 0.4)};\n *   background: ${rgba('black', 0.7)};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"rgba(255,205,100,0.7)\";\n *   background: \"rgba(255,205,100,0.7)\";\n *   background: \"#ffcd64\";\n *   background: \"rgba(255,255,255,0.4)\";\n *   background: \"rgba(0,0,0,0.7)\";\n * }\n */\nfunction rgba(firstValue, secondValue, thirdValue, fourthValue) {\n  if (typeof firstValue === 'string' && typeof secondValue === 'number') {\n    var rgbValue = parseToRgb(firstValue);\n    return \"rgba(\" + rgbValue.red + \",\" + rgbValue.green + \",\" + rgbValue.blue + \",\" + secondValue + \")\";\n  } else if (typeof firstValue === 'number' && typeof secondValue === 'number' && typeof thirdValue === 'number' && typeof fourthValue === 'number') {\n    return fourthValue >= 1 ? rgb(firstValue, secondValue, thirdValue) : \"rgba(\" + firstValue + \",\" + secondValue + \",\" + thirdValue + \",\" + fourthValue + \")\";\n  } else if (typeof firstValue === 'object' && secondValue === undefined && thirdValue === undefined && fourthValue === undefined) {\n    return firstValue.alpha >= 1 ? rgb(firstValue.red, firstValue.green, firstValue.blue) : \"rgba(\" + firstValue.red + \",\" + firstValue.green + \",\" + firstValue.blue + \",\" + firstValue.alpha + \")\";\n  }\n\n  throw new PolishedError(7);\n}\n\nvar isRgb = function isRgb(color) {\n  return typeof color.red === 'number' && typeof color.green === 'number' && typeof color.blue === 'number' && (typeof color.alpha !== 'number' || typeof color.alpha === 'undefined');\n};\n\nvar isRgba = function isRgba(color) {\n  return typeof color.red === 'number' && typeof color.green === 'number' && typeof color.blue === 'number' && typeof color.alpha === 'number';\n};\n\nvar isHsl = function isHsl(color) {\n  return typeof color.hue === 'number' && typeof color.saturation === 'number' && typeof color.lightness === 'number' && (typeof color.alpha !== 'number' || typeof color.alpha === 'undefined');\n};\n\nvar isHsla = function isHsla(color) {\n  return typeof color.hue === 'number' && typeof color.saturation === 'number' && typeof color.lightness === 'number' && typeof color.alpha === 'number';\n};\n/**\n * Converts a RgbColor, RgbaColor, HslColor or HslaColor object to a color string.\n * This util is useful in case you only know on runtime which color object is\n * used. Otherwise we recommend to rely on `rgb`, `rgba`, `hsl` or `hsla`.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: toColorString({ red: 255, green: 205, blue: 100 }),\n *   background: toColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 }),\n *   background: toColorString({ hue: 240, saturation: 1, lightness: 0.5 }),\n *   background: toColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 }),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${toColorString({ red: 255, green: 205, blue: 100 })};\n *   background: ${toColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 })};\n *   background: ${toColorString({ hue: 240, saturation: 1, lightness: 0.5 })};\n *   background: ${toColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 })};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#ffcd64\";\n *   background: \"rgba(255,205,100,0.72)\";\n *   background: \"#00f\";\n *   background: \"rgba(179,25,25,0.72)\";\n * }\n */\n\n\nfunction toColorString(color) {\n  if (typeof color !== 'object') throw new PolishedError(8);\n  if (isRgba(color)) return rgba(color);\n  if (isRgb(color)) return rgb(color);\n  if (isHsla(color)) return hsla(color);\n  if (isHsl(color)) return hsl(color);\n  throw new PolishedError(8);\n}\n\n// Type definitions taken from https://github.com/gcanti/flow-static-land/blob/master/src/Fun.js\n// eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line no-redeclare\nfunction curried(f, length, acc) {\n  return function fn() {\n    // eslint-disable-next-line prefer-rest-params\n    var combined = acc.concat(Array.prototype.slice.call(arguments));\n    return combined.length >= length ? f.apply(this, combined) : curried(f, length, combined);\n  };\n} // eslint-disable-next-line no-redeclare\n\n\nfunction curry(f) {\n  // eslint-disable-line no-redeclare\n  return curried(f, f.length, []);\n}\n\n/**\n * Changes the hue of the color. Hue is a number between 0 to 360. The first\n * argument for adjustHue is the amount of degrees the color is rotated around\n * the color wheel, always producing a positive hue value.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: adjustHue(180, '#448'),\n *   background: adjustHue('180', 'rgba(101,100,205,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${adjustHue(180, '#448')};\n *   background: ${adjustHue('180', 'rgba(101,100,205,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#888844\";\n *   background: \"rgba(136,136,68,0.7)\";\n * }\n */\n\nfunction adjustHue(degree, color) {\n  if (color === 'transparent') return color;\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    hue: hslColor.hue + parseFloat(degree)\n  }));\n} // prettier-ignore\n\n\nvar curriedAdjustHue = /*#__PURE__*/curry\n/* ::<number | string, string, string> */\n(adjustHue);\nvar curriedAdjustHue$1 = curriedAdjustHue;\n\n/**\n * Returns the complement of the provided color. This is identical to adjustHue(180, <color>).\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: complement('#448'),\n *   background: complement('rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${complement('#448')};\n *   background: ${complement('rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#884\";\n *   background: \"rgba(153,153,153,0.7)\";\n * }\n */\n\nfunction complement(color) {\n  if (color === 'transparent') return color;\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    hue: (hslColor.hue + 180) % 360\n  }));\n}\n\nfunction guard(lowerBoundary, upperBoundary, value) {\n  return Math.max(lowerBoundary, Math.min(upperBoundary, value));\n}\n\n/**\n * Returns a string value for the darkened color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: darken(0.2, '#FFCD64'),\n *   background: darken('0.2', 'rgba(255,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${darken(0.2, '#FFCD64')};\n *   background: ${darken('0.2', 'rgba(255,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#ffbd31\";\n *   background: \"rgba(255,189,49,0.7)\";\n * }\n */\n\nfunction darken(amount, color) {\n  if (color === 'transparent') return color;\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    lightness: guard(0, 1, hslColor.lightness - parseFloat(amount))\n  }));\n} // prettier-ignore\n\n\nvar curriedDarken = /*#__PURE__*/curry\n/* ::<number | string, string, string> */\n(darken);\nvar curriedDarken$1 = curriedDarken;\n\n/**\n * Decreases the intensity of a color. Its range is between 0 to 1. The first\n * argument of the desaturate function is the amount by how much the color\n * intensity should be decreased.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: desaturate(0.2, '#CCCD64'),\n *   background: desaturate('0.2', 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${desaturate(0.2, '#CCCD64')};\n *   background: ${desaturate('0.2', 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#b8b979\";\n *   background: \"rgba(184,185,121,0.7)\";\n * }\n */\n\nfunction desaturate(amount, color) {\n  if (color === 'transparent') return color;\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    saturation: guard(0, 1, hslColor.saturation - parseFloat(amount))\n  }));\n} // prettier-ignore\n\n\nvar curriedDesaturate = /*#__PURE__*/curry\n/* ::<number | string, string, string> */\n(desaturate);\nvar curriedDesaturate$1 = curriedDesaturate;\n\n/**\n * Returns a number (float) representing the luminance of a color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: getLuminance('#CCCD64') >= getLuminance('#0000ff') ? '#CCCD64' : '#0000ff',\n *   background: getLuminance('rgba(58, 133, 255, 1)') >= getLuminance('rgba(255, 57, 149, 1)') ?\n *                             'rgba(58, 133, 255, 1)' :\n *                             'rgba(255, 57, 149, 1)',\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${getLuminance('#CCCD64') >= getLuminance('#0000ff') ? '#CCCD64' : '#0000ff'};\n *   background: ${getLuminance('rgba(58, 133, 255, 1)') >= getLuminance('rgba(255, 57, 149, 1)') ?\n *                             'rgba(58, 133, 255, 1)' :\n *                             'rgba(255, 57, 149, 1)'};\n *\n * // CSS in JS Output\n *\n * div {\n *   background: \"#CCCD64\";\n *   background: \"rgba(58, 133, 255, 1)\";\n * }\n */\n\nfunction getLuminance(color) {\n  if (color === 'transparent') return 0;\n  var rgbColor = parseToRgb(color);\n\n  var _Object$keys$map = Object.keys(rgbColor).map(function (key) {\n    var channel = rgbColor[key] / 255;\n    return channel <= 0.03928 ? channel / 12.92 : Math.pow((channel + 0.055) / 1.055, 2.4);\n  }),\n      r = _Object$keys$map[0],\n      g = _Object$keys$map[1],\n      b = _Object$keys$map[2];\n\n  return parseFloat((0.2126 * r + 0.7152 * g + 0.0722 * b).toFixed(3));\n}\n\n/**\n * Returns the contrast ratio between two colors based on\n * [W3's recommended equation for calculating contrast](http://www.w3.org/TR/WCAG20/#contrast-ratiodef).\n *\n * @example\n * const contrastRatio = getContrast('#444', '#fff');\n */\n\nfunction getContrast(color1, color2) {\n  var luminance1 = getLuminance(color1);\n  var luminance2 = getLuminance(color2);\n  return parseFloat((luminance1 > luminance2 ? (luminance1 + 0.05) / (luminance2 + 0.05) : (luminance2 + 0.05) / (luminance1 + 0.05)).toFixed(2));\n}\n\n/**\n * Converts the color to a grayscale, by reducing its saturation to 0.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: grayscale('#CCCD64'),\n *   background: grayscale('rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${grayscale('#CCCD64')};\n *   background: ${grayscale('rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#999\";\n *   background: \"rgba(153,153,153,0.7)\";\n * }\n */\n\nfunction grayscale(color) {\n  if (color === 'transparent') return color;\n  return toColorString(_extends({}, parseToHsl(color), {\n    saturation: 0\n  }));\n}\n\n/**\n * Converts a HslColor or HslaColor object to a color string.\n * This util is useful in case you only know on runtime which color object is\n * used. Otherwise we recommend to rely on `hsl` or `hsla`.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: hslToColorString({ hue: 240, saturation: 1, lightness: 0.5 }),\n *   background: hslToColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 }),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${hslToColorString({ hue: 240, saturation: 1, lightness: 0.5 })};\n *   background: ${hslToColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 })};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#00f\";\n *   background: \"rgba(179,25,25,0.72)\";\n * }\n */\nfunction hslToColorString(color) {\n  if (typeof color === 'object' && typeof color.hue === 'number' && typeof color.saturation === 'number' && typeof color.lightness === 'number') {\n    if (color.alpha && typeof color.alpha === 'number') {\n      return hsla({\n        hue: color.hue,\n        saturation: color.saturation,\n        lightness: color.lightness,\n        alpha: color.alpha\n      });\n    }\n\n    return hsl({\n      hue: color.hue,\n      saturation: color.saturation,\n      lightness: color.lightness\n    });\n  }\n\n  throw new PolishedError(45);\n}\n\n/**\n * Inverts the red, green and blue values of a color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: invert('#CCCD64'),\n *   background: invert('rgba(101,100,205,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${invert('#CCCD64')};\n *   background: ${invert('rgba(101,100,205,0.7)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#33329b\";\n *   background: \"rgba(154,155,50,0.7)\";\n * }\n */\n\nfunction invert(color) {\n  if (color === 'transparent') return color; // parse color string to rgb\n\n  var value = parseToRgb(color);\n  return toColorString(_extends({}, value, {\n    red: 255 - value.red,\n    green: 255 - value.green,\n    blue: 255 - value.blue\n  }));\n}\n\n/**\n * Returns a string value for the lightened color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: lighten(0.2, '#CCCD64'),\n *   background: lighten('0.2', 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${lighten(0.2, '#FFCD64')};\n *   background: ${lighten('0.2', 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#e5e6b1\";\n *   background: \"rgba(229,230,177,0.7)\";\n * }\n */\n\nfunction lighten(amount, color) {\n  if (color === 'transparent') return color;\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    lightness: guard(0, 1, hslColor.lightness + parseFloat(amount))\n  }));\n} // prettier-ignore\n\n\nvar curriedLighten = /*#__PURE__*/curry\n/* ::<number | string, string, string> */\n(lighten);\nvar curriedLighten$1 = curriedLighten;\n\n/**\n * Determines which contrast guidelines have been met for two colors.\n * Based on the [contrast calculations recommended by W3](https://www.w3.org/WAI/WCAG21/Understanding/contrast-enhanced.html).\n *\n * @example\n * const scores = meetsContrastGuidelines('#444', '#fff');\n */\nfunction meetsContrastGuidelines(color1, color2) {\n  var contrastRatio = getContrast(color1, color2);\n  return {\n    AA: contrastRatio >= 4.5,\n    AALarge: contrastRatio >= 3,\n    AAA: contrastRatio >= 7,\n    AAALarge: contrastRatio >= 4.5\n  };\n}\n\n/**\n * Mixes the two provided colors together by calculating the average of each of the RGB components weighted to the first color by the provided weight.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: mix(0.5, '#f00', '#00f')\n *   background: mix(0.25, '#f00', '#00f')\n *   background: mix('0.5', 'rgba(255, 0, 0, 0.5)', '#00f')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${mix(0.5, '#f00', '#00f')};\n *   background: ${mix(0.25, '#f00', '#00f')};\n *   background: ${mix('0.5', 'rgba(255, 0, 0, 0.5)', '#00f')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#7f007f\";\n *   background: \"#3f00bf\";\n *   background: \"rgba(63, 0, 191, 0.75)\";\n * }\n */\n\nfunction mix(weight, color, otherColor) {\n  if (color === 'transparent') return otherColor;\n  if (otherColor === 'transparent') return color;\n  if (weight === 0) return otherColor;\n  var parsedColor1 = parseToRgb(color);\n\n  var color1 = _extends({}, parsedColor1, {\n    alpha: typeof parsedColor1.alpha === 'number' ? parsedColor1.alpha : 1\n  });\n\n  var parsedColor2 = parseToRgb(otherColor);\n\n  var color2 = _extends({}, parsedColor2, {\n    alpha: typeof parsedColor2.alpha === 'number' ? parsedColor2.alpha : 1\n  }); // The formula is copied from the original Sass implementation:\n  // http://sass-lang.com/documentation/Sass/Script/Functions.html#mix-instance_method\n\n\n  var alphaDelta = color1.alpha - color2.alpha;\n  var x = parseFloat(weight) * 2 - 1;\n  var y = x * alphaDelta === -1 ? x : x + alphaDelta;\n  var z = 1 + x * alphaDelta;\n  var weight1 = (y / z + 1) / 2.0;\n  var weight2 = 1 - weight1;\n  var mixedColor = {\n    red: Math.floor(color1.red * weight1 + color2.red * weight2),\n    green: Math.floor(color1.green * weight1 + color2.green * weight2),\n    blue: Math.floor(color1.blue * weight1 + color2.blue * weight2),\n    alpha: color1.alpha * parseFloat(weight) + color2.alpha * (1 - parseFloat(weight))\n  };\n  return rgba(mixedColor);\n} // prettier-ignore\n\n\nvar curriedMix = /*#__PURE__*/curry\n/* ::<number | string, string, string, string> */\n(mix);\nvar mix$1 = curriedMix;\n\n/**\n * Increases the opacity of a color. Its range for the amount is between 0 to 1.\n *\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: opacify(0.1, 'rgba(255, 255, 255, 0.9)');\n *   background: opacify(0.2, 'hsla(0, 0%, 100%, 0.5)'),\n *   background: opacify('0.5', 'rgba(255, 0, 0, 0.2)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${opacify(0.1, 'rgba(255, 255, 255, 0.9)')};\n *   background: ${opacify(0.2, 'hsla(0, 0%, 100%, 0.5)')},\n *   background: ${opacify('0.5', 'rgba(255, 0, 0, 0.2)')},\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#fff\";\n *   background: \"rgba(255,255,255,0.7)\";\n *   background: \"rgba(255,0,0,0.7)\";\n * }\n */\n\nfunction opacify(amount, color) {\n  if (color === 'transparent') return color;\n  var parsedColor = parseToRgb(color);\n  var alpha = typeof parsedColor.alpha === 'number' ? parsedColor.alpha : 1;\n\n  var colorWithAlpha = _extends({}, parsedColor, {\n    alpha: guard(0, 1, (alpha * 100 + parseFloat(amount) * 100) / 100)\n  });\n\n  return rgba(colorWithAlpha);\n} // prettier-ignore\n\n\nvar curriedOpacify = /*#__PURE__*/curry\n/* ::<number | string, string, string> */\n(opacify);\nvar curriedOpacify$1 = curriedOpacify;\n\nvar defaultReturnIfLightColor = '#000';\nvar defaultReturnIfDarkColor = '#fff';\n/**\n * Returns black or white (or optional passed colors) for best\n * contrast depending on the luminosity of the given color.\n * When passing custom return colors, strict mode ensures that the\n * return color always meets or exceeds WCAG level AA or greater. If this test\n * fails, the default return color (black or white) is returned in place of the\n * custom return color. You can optionally turn off strict mode.\n *\n * Follows [W3C specs for readability](https://www.w3.org/TR/WCAG20-TECHS/G18.html).\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   color: readableColor('#000'),\n *   color: readableColor('black', '#001', '#ff8'),\n *   color: readableColor('white', '#001', '#ff8'),\n *   color: readableColor('red', '#333', '#ddd', true)\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   color: ${readableColor('#000')};\n *   color: ${readableColor('black', '#001', '#ff8')};\n *   color: ${readableColor('white', '#001', '#ff8')};\n *   color: ${readableColor('red', '#333', '#ddd', true)};\n * `\n *\n * // CSS in JS Output\n * element {\n *   color: \"#fff\";\n *   color: \"#ff8\";\n *   color: \"#001\";\n *   color: \"#000\";\n * }\n */\n\nfunction readableColor(color, returnIfLightColor, returnIfDarkColor, strict) {\n  if (returnIfLightColor === void 0) {\n    returnIfLightColor = defaultReturnIfLightColor;\n  }\n\n  if (returnIfDarkColor === void 0) {\n    returnIfDarkColor = defaultReturnIfDarkColor;\n  }\n\n  if (strict === void 0) {\n    strict = true;\n  }\n\n  var isColorLight = getLuminance(color) > 0.179;\n  var preferredReturnColor = isColorLight ? returnIfLightColor : returnIfDarkColor;\n\n  if (!strict || getContrast(color, preferredReturnColor) >= 4.5) {\n    return preferredReturnColor;\n  }\n\n  return isColorLight ? defaultReturnIfLightColor : defaultReturnIfDarkColor;\n}\n\n/**\n * Converts a RgbColor or RgbaColor object to a color string.\n * This util is useful in case you only know on runtime which color object is\n * used. Otherwise we recommend to rely on `rgb` or `rgba`.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: rgbToColorString({ red: 255, green: 205, blue: 100 }),\n *   background: rgbToColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 }),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${rgbToColorString({ red: 255, green: 205, blue: 100 })};\n *   background: ${rgbToColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 })};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#ffcd64\";\n *   background: \"rgba(255,205,100,0.72)\";\n * }\n */\nfunction rgbToColorString(color) {\n  if (typeof color === 'object' && typeof color.red === 'number' && typeof color.green === 'number' && typeof color.blue === 'number') {\n    if (typeof color.alpha === 'number') {\n      return rgba({\n        red: color.red,\n        green: color.green,\n        blue: color.blue,\n        alpha: color.alpha\n      });\n    }\n\n    return rgb({\n      red: color.red,\n      green: color.green,\n      blue: color.blue\n    });\n  }\n\n  throw new PolishedError(46);\n}\n\n/**\n * Increases the intensity of a color. Its range is between 0 to 1. The first\n * argument of the saturate function is the amount by how much the color\n * intensity should be increased.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: saturate(0.2, '#CCCD64'),\n *   background: saturate('0.2', 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${saturate(0.2, '#FFCD64')};\n *   background: ${saturate('0.2', 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#e0e250\";\n *   background: \"rgba(224,226,80,0.7)\";\n * }\n */\n\nfunction saturate(amount, color) {\n  if (color === 'transparent') return color;\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    saturation: guard(0, 1, hslColor.saturation + parseFloat(amount))\n  }));\n} // prettier-ignore\n\n\nvar curriedSaturate = /*#__PURE__*/curry\n/* ::<number | string, string, string> */\n(saturate);\nvar curriedSaturate$1 = curriedSaturate;\n\n/**\n * Sets the hue of a color to the provided value. The hue range can be\n * from 0 and 359.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: setHue(42, '#CCCD64'),\n *   background: setHue('244', 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${setHue(42, '#CCCD64')};\n *   background: ${setHue('244', 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#cdae64\";\n *   background: \"rgba(107,100,205,0.7)\";\n * }\n */\n\nfunction setHue(hue, color) {\n  if (color === 'transparent') return color;\n  return toColorString(_extends({}, parseToHsl(color), {\n    hue: parseFloat(hue)\n  }));\n} // prettier-ignore\n\n\nvar curriedSetHue = /*#__PURE__*/curry\n/* ::<number | string, string, string> */\n(setHue);\nvar curriedSetHue$1 = curriedSetHue;\n\n/**\n * Sets the lightness of a color to the provided value. The lightness range can be\n * from 0 and 1.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: setLightness(0.2, '#CCCD64'),\n *   background: setLightness('0.75', 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${setLightness(0.2, '#CCCD64')};\n *   background: ${setLightness('0.75', 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#4d4d19\";\n *   background: \"rgba(223,224,159,0.7)\";\n * }\n */\n\nfunction setLightness(lightness, color) {\n  if (color === 'transparent') return color;\n  return toColorString(_extends({}, parseToHsl(color), {\n    lightness: parseFloat(lightness)\n  }));\n} // prettier-ignore\n\n\nvar curriedSetLightness = /*#__PURE__*/curry\n/* ::<number | string, string, string> */\n(setLightness);\nvar curriedSetLightness$1 = curriedSetLightness;\n\n/**\n * Sets the saturation of a color to the provided value. The saturation range can be\n * from 0 and 1.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: setSaturation(0.2, '#CCCD64'),\n *   background: setSaturation('0.75', 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${setSaturation(0.2, '#CCCD64')};\n *   background: ${setSaturation('0.75', 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#adad84\";\n *   background: \"rgba(228,229,76,0.7)\";\n * }\n */\n\nfunction setSaturation(saturation, color) {\n  if (color === 'transparent') return color;\n  return toColorString(_extends({}, parseToHsl(color), {\n    saturation: parseFloat(saturation)\n  }));\n} // prettier-ignore\n\n\nvar curriedSetSaturation = /*#__PURE__*/curry\n/* ::<number | string, string, string> */\n(setSaturation);\nvar curriedSetSaturation$1 = curriedSetSaturation;\n\n/**\n * Shades a color by mixing it with black. `shade` can produce\n * hue shifts, where as `darken` manipulates the luminance channel and therefore\n * doesn't produce hue shifts.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: shade(0.25, '#00f')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${shade(0.25, '#00f')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#00003f\";\n * }\n */\n\nfunction shade(percentage, color) {\n  if (color === 'transparent') return color;\n  return mix$1(parseFloat(percentage), 'rgb(0, 0, 0)', color);\n} // prettier-ignore\n\n\nvar curriedShade = /*#__PURE__*/curry\n/* ::<number | string, string, string> */\n(shade);\nvar curriedShade$1 = curriedShade;\n\n/**\n * Tints a color by mixing it with white. `tint` can produce\n * hue shifts, where as `lighten` manipulates the luminance channel and therefore\n * doesn't produce hue shifts.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: tint(0.25, '#00f')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${tint(0.25, '#00f')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#bfbfff\";\n * }\n */\n\nfunction tint(percentage, color) {\n  if (color === 'transparent') return color;\n  return mix$1(parseFloat(percentage), 'rgb(255, 255, 255)', color);\n} // prettier-ignore\n\n\nvar curriedTint = /*#__PURE__*/curry\n/* ::<number | string, string, string> */\n(tint);\nvar curriedTint$1 = curriedTint;\n\n/**\n * Decreases the opacity of a color. Its range for the amount is between 0 to 1.\n *\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: transparentize(0.1, '#fff'),\n *   background: transparentize(0.2, 'hsl(0, 0%, 100%)'),\n *   background: transparentize('0.5', 'rgba(255, 0, 0, 0.8)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${transparentize(0.1, '#fff')};\n *   background: ${transparentize(0.2, 'hsl(0, 0%, 100%)')};\n *   background: ${transparentize('0.5', 'rgba(255, 0, 0, 0.8)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"rgba(255,255,255,0.9)\";\n *   background: \"rgba(255,255,255,0.8)\";\n *   background: \"rgba(255,0,0,0.3)\";\n * }\n */\n\nfunction transparentize(amount, color) {\n  if (color === 'transparent') return color;\n  var parsedColor = parseToRgb(color);\n  var alpha = typeof parsedColor.alpha === 'number' ? parsedColor.alpha : 1;\n\n  var colorWithAlpha = _extends({}, parsedColor, {\n    alpha: guard(0, 1, +(alpha * 100 - parseFloat(amount) * 100).toFixed(2) / 100)\n  });\n\n  return rgba(colorWithAlpha);\n} // prettier-ignore\n\n\nvar curriedTransparentize = /*#__PURE__*/curry\n/* ::<number | string, string, string> */\n(transparentize);\nvar curriedTransparentize$1 = curriedTransparentize;\n\n/**\n * Shorthand for easily setting the animation property. Allows either multiple arrays with animations\n * or a single animation spread over the arguments.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...animation(['rotate', '1s', 'ease-in-out'], ['colorchange', '2s'])\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${animation(['rotate', '1s', 'ease-in-out'], ['colorchange', '2s'])}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'animation': 'rotate 1s ease-in-out, colorchange 2s'\n * }\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...animation('rotate', '1s', 'ease-in-out')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${animation('rotate', '1s', 'ease-in-out')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'animation': 'rotate 1s ease-in-out'\n * }\n */\nfunction animation() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  // Allow single or multiple animations passed\n  var multiMode = Array.isArray(args[0]);\n\n  if (!multiMode && args.length > 8) {\n    throw new PolishedError(64);\n  }\n\n  var code = args.map(function (arg) {\n    if (multiMode && !Array.isArray(arg) || !multiMode && Array.isArray(arg)) {\n      throw new PolishedError(65);\n    }\n\n    if (Array.isArray(arg) && arg.length > 8) {\n      throw new PolishedError(66);\n    }\n\n    return Array.isArray(arg) ? arg.join(' ') : arg;\n  }).join(', ');\n  return {\n    animation: code\n  };\n}\n\n/**\n * Shorthand that accepts any number of backgroundImage values as parameters for creating a single background statement.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...backgroundImages('url(\"/image/background.jpg\")', 'linear-gradient(red, green)')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${backgroundImages('url(\"/image/background.jpg\")', 'linear-gradient(red, green)')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'backgroundImage': 'url(\"/image/background.jpg\"), linear-gradient(red, green)'\n * }\n */\nfunction backgroundImages() {\n  for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {\n    properties[_key] = arguments[_key];\n  }\n\n  return {\n    backgroundImage: properties.join(', ')\n  };\n}\n\n/**\n * Shorthand that accepts any number of background values as parameters for creating a single background statement.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...backgrounds('url(\"/image/background.jpg\")', 'linear-gradient(red, green)', 'center no-repeat')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${backgrounds('url(\"/image/background.jpg\")', 'linear-gradient(red, green)', 'center no-repeat')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'background': 'url(\"/image/background.jpg\"), linear-gradient(red, green), center no-repeat'\n * }\n */\nfunction backgrounds() {\n  for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {\n    properties[_key] = arguments[_key];\n  }\n\n  return {\n    background: properties.join(', ')\n  };\n}\n\nvar sideMap = ['top', 'right', 'bottom', 'left'];\n/**\n * Shorthand for the border property that splits out individual properties for use with tools like Fela and Styletron. A side keyword can optionally be passed to target only one side's border properties.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...border('1px', 'solid', 'red')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${border('1px', 'solid', 'red')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderColor': 'red',\n *   'borderStyle': 'solid',\n *   'borderWidth': `1px`,\n * }\n *\n * // Styles as object usage\n * const styles = {\n *   ...border('top', '1px', 'solid', 'red')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${border('top', '1px', 'solid', 'red')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderTopColor': 'red',\n *   'borderTopStyle': 'solid',\n *   'borderTopWidth': `1px`,\n * }\n */\n\nfunction border(sideKeyword) {\n  for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  if (typeof sideKeyword === 'string' && sideMap.indexOf(sideKeyword) >= 0) {\n    var _ref;\n\n    return _ref = {}, _ref[\"border\" + capitalizeString(sideKeyword) + \"Width\"] = values[0], _ref[\"border\" + capitalizeString(sideKeyword) + \"Style\"] = values[1], _ref[\"border\" + capitalizeString(sideKeyword) + \"Color\"] = values[2], _ref;\n  } else {\n    values.unshift(sideKeyword);\n    return {\n      borderWidth: values[0],\n      borderStyle: values[1],\n      borderColor: values[2]\n    };\n  }\n}\n\n/**\n * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...borderColor('red', 'green', 'blue', 'yellow')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${borderColor('red', 'green', 'blue', 'yellow')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderTopColor': 'red',\n *   'borderRightColor': 'green',\n *   'borderBottomColor': 'blue',\n *   'borderLeftColor': 'yellow'\n * }\n */\nfunction borderColor() {\n  for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return directionalProperty.apply(void 0, ['borderColor'].concat(values));\n}\n\n/**\n * Shorthand that accepts a value for side and a value for radius and applies the radius value to both corners of the side.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...borderRadius('top', '5px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${borderRadius('top', '5px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderTopRightRadius': '5px',\n *   'borderTopLeftRadius': '5px',\n * }\n */\nfunction borderRadius(side, radius) {\n  var uppercaseSide = capitalizeString(side);\n\n  if (!radius && radius !== 0) {\n    throw new PolishedError(62);\n  }\n\n  if (uppercaseSide === 'Top' || uppercaseSide === 'Bottom') {\n    var _ref;\n\n    return _ref = {}, _ref[\"border\" + uppercaseSide + \"RightRadius\"] = radius, _ref[\"border\" + uppercaseSide + \"LeftRadius\"] = radius, _ref;\n  }\n\n  if (uppercaseSide === 'Left' || uppercaseSide === 'Right') {\n    var _ref2;\n\n    return _ref2 = {}, _ref2[\"borderTop\" + uppercaseSide + \"Radius\"] = radius, _ref2[\"borderBottom\" + uppercaseSide + \"Radius\"] = radius, _ref2;\n  }\n\n  throw new PolishedError(63);\n}\n\n/**\n * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...borderStyle('solid', 'dashed', 'dotted', 'double')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${borderStyle('solid', 'dashed', 'dotted', 'double')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderTopStyle': 'solid',\n *   'borderRightStyle': 'dashed',\n *   'borderBottomStyle': 'dotted',\n *   'borderLeftStyle': 'double'\n * }\n */\nfunction borderStyle() {\n  for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return directionalProperty.apply(void 0, ['borderStyle'].concat(values));\n}\n\n/**\n * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...borderWidth('12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${borderWidth('12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderTopWidth': '12px',\n *   'borderRightWidth': '24px',\n *   'borderBottomWidth': '36px',\n *   'borderLeftWidth': '48px'\n * }\n */\nfunction borderWidth() {\n  for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return directionalProperty.apply(void 0, ['borderWidth'].concat(values));\n}\n\nfunction generateSelectors(template, state) {\n  var stateSuffix = state ? \":\" + state : '';\n  return template(stateSuffix);\n}\n/**\n * Function helper that adds an array of states to a template of selectors. Used in textInputs and buttons.\n * @private\n */\n\n\nfunction statefulSelectors(states, template, stateMap) {\n  if (!template) throw new PolishedError(67);\n  if (states.length === 0) return generateSelectors(template, null);\n  var selectors = [];\n\n  for (var i = 0; i < states.length; i += 1) {\n    if (stateMap && stateMap.indexOf(states[i]) < 0) {\n      throw new PolishedError(68);\n    }\n\n    selectors.push(generateSelectors(template, states[i]));\n  }\n\n  selectors = selectors.join(',');\n  return selectors;\n}\n\nvar stateMap$1 = [undefined, null, 'active', 'focus', 'hover'];\n\nfunction template$1(state) {\n  return \"button\" + state + \",\\n  input[type=\\\"button\\\"]\" + state + \",\\n  input[type=\\\"reset\\\"]\" + state + \",\\n  input[type=\\\"submit\\\"]\" + state;\n}\n/**\n * Populates selectors that target all buttons. You can pass optional states to append to the selectors.\n * @example\n * // Styles as object usage\n * const styles = {\n *   [buttons('active')]: {\n *     'border': 'none'\n *   }\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   > ${buttons('active')} {\n *     border: none;\n *   }\n * `\n *\n * // CSS in JS Output\n *\n *  'button:active,\n *  'input[type=\"button\"]:active,\n *  'input[type=\\\"reset\\\"]:active,\n *  'input[type=\\\"submit\\\"]:active: {\n *   'border': 'none'\n * }\n */\n\n\nfunction buttons() {\n  for (var _len = arguments.length, states = new Array(_len), _key = 0; _key < _len; _key++) {\n    states[_key] = arguments[_key];\n  }\n\n  return statefulSelectors(states, template$1, stateMap$1);\n}\n\n/**\n * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...margin('12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${margin('12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'marginTop': '12px',\n *   'marginRight': '24px',\n *   'marginBottom': '36px',\n *   'marginLeft': '48px'\n * }\n */\nfunction margin() {\n  for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return directionalProperty.apply(void 0, ['margin'].concat(values));\n}\n\n/**\n * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...padding('12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${padding('12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'paddingTop': '12px',\n *   'paddingRight': '24px',\n *   'paddingBottom': '36px',\n *   'paddingLeft': '48px'\n * }\n */\nfunction padding() {\n  for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return directionalProperty.apply(void 0, ['padding'].concat(values));\n}\n\nvar positionMap = ['absolute', 'fixed', 'relative', 'static', 'sticky'];\n/**\n * Shorthand accepts up to five values, including null to skip a value, and maps them to their respective directions. The first value can optionally be a position keyword.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...position('12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${position('12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'top': '12px',\n *   'right': '24px',\n *   'bottom': '36px',\n *   'left': '48px'\n * }\n *\n * // Styles as object usage\n * const styles = {\n *   ...position('absolute', '12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${position('absolute', '12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'position': 'absolute',\n *   'top': '12px',\n *   'right': '24px',\n *   'bottom': '36px',\n *   'left': '48px'\n * }\n */\n\nfunction position(firstValue) {\n  for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  if (positionMap.indexOf(firstValue) >= 0 && firstValue) {\n    return _extends({}, directionalProperty.apply(void 0, [''].concat(values)), {\n      position: firstValue\n    });\n  } else {\n    return directionalProperty.apply(void 0, ['', firstValue].concat(values));\n  }\n}\n\n/**\n * Shorthand to set the height and width properties in a single statement.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...size('300px', '250px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${size('300px', '250px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'height': '300px',\n *   'width': '250px',\n * }\n */\nfunction size(height, width) {\n  if (width === void 0) {\n    width = height;\n  }\n\n  return {\n    height: height,\n    width: width\n  };\n}\n\nvar stateMap = [undefined, null, 'active', 'focus', 'hover'];\n\nfunction template(state) {\n  return \"input[type=\\\"color\\\"]\" + state + \",\\n    input[type=\\\"date\\\"]\" + state + \",\\n    input[type=\\\"datetime\\\"]\" + state + \",\\n    input[type=\\\"datetime-local\\\"]\" + state + \",\\n    input[type=\\\"email\\\"]\" + state + \",\\n    input[type=\\\"month\\\"]\" + state + \",\\n    input[type=\\\"number\\\"]\" + state + \",\\n    input[type=\\\"password\\\"]\" + state + \",\\n    input[type=\\\"search\\\"]\" + state + \",\\n    input[type=\\\"tel\\\"]\" + state + \",\\n    input[type=\\\"text\\\"]\" + state + \",\\n    input[type=\\\"time\\\"]\" + state + \",\\n    input[type=\\\"url\\\"]\" + state + \",\\n    input[type=\\\"week\\\"]\" + state + \",\\n    input:not([type])\" + state + \",\\n    textarea\" + state;\n}\n/**\n * Populates selectors that target all text inputs. You can pass optional states to append to the selectors.\n * @example\n * // Styles as object usage\n * const styles = {\n *   [textInputs('active')]: {\n *     'border': 'none'\n *   }\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   > ${textInputs('active')} {\n *     border: none;\n *   }\n * `\n *\n * // CSS in JS Output\n *\n *  'input[type=\"color\"]:active,\n *  input[type=\"date\"]:active,\n *  input[type=\"datetime\"]:active,\n *  input[type=\"datetime-local\"]:active,\n *  input[type=\"email\"]:active,\n *  input[type=\"month\"]:active,\n *  input[type=\"number\"]:active,\n *  input[type=\"password\"]:active,\n *  input[type=\"search\"]:active,\n *  input[type=\"tel\"]:active,\n *  input[type=\"text\"]:active,\n *  input[type=\"time\"]:active,\n *  input[type=\"url\"]:active,\n *  input[type=\"week\"]:active,\n *  input:not([type]):active,\n *  textarea:active': {\n *   'border': 'none'\n * }\n */\n\n\nfunction textInputs() {\n  for (var _len = arguments.length, states = new Array(_len), _key = 0; _key < _len; _key++) {\n    states[_key] = arguments[_key];\n  }\n\n  return statefulSelectors(states, template, stateMap);\n}\n\n/**\n * Accepts any number of transition values as parameters for creating a single transition statement. You may also pass an array of properties as the first parameter that you would like to apply the same transition values to (second parameter).\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...transitions('opacity 1.0s ease-in 0s', 'width 2.0s ease-in 2s'),\n *   ...transitions(['color', 'background-color'], '2.0s ease-in 2s')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${transitions('opacity 1.0s ease-in 0s', 'width 2.0s ease-in 2s')};\n *   ${transitions(['color', 'background-color'], '2.0s ease-in 2s'),};\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'transition': 'opacity 1.0s ease-in 0s, width 2.0s ease-in 2s'\n *   'transition': 'color 2.0s ease-in 2s, background-color 2.0s ease-in 2s',\n * }\n */\n\nfunction transitions() {\n  for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {\n    properties[_key] = arguments[_key];\n  }\n\n  if (Array.isArray(properties[0]) && properties.length === 2) {\n    var value = properties[1];\n\n    if (typeof value !== 'string') {\n      throw new PolishedError(61);\n    }\n\n    var transitionsString = properties[0].map(function (property) {\n      return property + \" \" + value;\n    }).join(', ');\n    return {\n      transition: transitionsString\n    };\n  } else {\n    return {\n      transition: properties.join(', ')\n    };\n  }\n}\n\nexport { curriedAdjustHue$1 as adjustHue, animation, backgroundImages, backgrounds, between, border, borderColor, borderRadius, borderStyle, borderWidth, buttons, clearFix, complement, cover, cssVar, curriedDarken$1 as darken, curriedDesaturate$1 as desaturate, directionalProperty, easeIn, easeInOut, easeOut, ellipsis, em$1 as em, fluidRange, fontFace, getContrast, getLuminance, getValueAndUnit, grayscale, hiDPI, hideText, hideVisually, hsl, hslToColorString, hsla, important, invert, curriedLighten$1 as lighten, linearGradient, margin, math, meetsContrastGuidelines, mix$1 as mix, modularScale, normalize, curriedOpacify$1 as opacify, padding, parseToHsl, parseToRgb, position, radialGradient, readableColor, rem$1 as rem, remToPx, retinaImage, rgb, rgbToColorString, rgba, curriedSaturate$1 as saturate, curriedSetHue$1 as setHue, curriedSetLightness$1 as setLightness, curriedSetSaturation$1 as setSaturation, curriedShade$1 as shade, size, stripUnit, textInputs, timingFunctions, curriedTint$1 as tint, toColorString, transitions, curriedTransparentize$1 as transparentize, triangle, wordWrap };\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","var parse = require('./parse')\nvar stringify = require('./stringify')\n\nmodule.exports = parse\nmodule.exports.parse = parse\nmodule.exports.stringify = stringify\n","var tokenize = require('./tokenize')\nvar MAX_RANGE = 0x1FFFFFFF\n\n// \"Only repeated fields of primitive numeric types (types which use the varint, 32-bit, or 64-bit wire types) can be declared \"packed\".\"\n// https://developers.google.com/protocol-buffers/docs/encoding#optional\nvar PACKABLE_TYPES = [\n  // varint wire types\n  'int32', 'int64', 'uint32', 'uint64', 'sint32', 'sint64', 'bool',\n  // + ENUMS\n  // 64-bit wire types\n  'fixed64', 'sfixed64', 'double',\n  // 32-bit wire types\n  'fixed32', 'sfixed32', 'float'\n]\n\nvar onfieldoptionvalue = function (tokens) {\n  var value = tokens.shift()\n  if (value !== '{') {\n    return value\n  }\n  value = {}\n  var field = ''\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case '}':\n        tokens.shift()\n        return value\n      case ':':\n        tokens.shift()\n        value[field] = onfieldoptionvalue(tokens)\n        break\n      default:\n        field = tokens.shift()\n    }\n  }\n}\n\nvar onfieldoptions = function (tokens) {\n  var opts = {}\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case '[':\n      case ',': {\n        tokens.shift()\n        var name = tokens.shift()\n        if (name === '(') { // handling [(A) = B]\n          name = tokens.shift()\n          tokens.shift() // remove the end of bracket\n        }\n        var field = []\n        if (tokens[0][0] === '.') {\n          field = tokens[0].substr(1).split('.')\n          tokens.shift()\n        }\n        if (tokens[0] !== '=') throw new Error('Unexpected token in field options: ' + tokens[0])\n        tokens.shift()\n        if (tokens[0] === ']') throw new Error('Unexpected ] in field option')\n\n        // for option (A).b.c\n        // path will be ['A', 'b'] and lastFieldName 'c'\n        var path = [name].concat(field)\n        var lastFieldName = path.pop()\n\n        // opt references opts.A.b\n        var opt = path.reduce(function (opt, n, index) {\n          if (opt[n] == null) {\n            opt[n] = {}\n          }\n          return opt[n]\n        }, opts)\n\n        // now set opt['c'] that references opts.A.b['c']\n        opt[lastFieldName] = onfieldoptionvalue(tokens)\n        break\n      }\n      case ']':\n        tokens.shift()\n        return opts\n\n      default:\n        throw new Error('Unexpected token in field options: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for field options')\n}\n\nvar onfield = function (tokens) {\n  var field = {\n    name: null,\n    type: null,\n    tag: -1,\n    map: null,\n    oneof: null,\n    required: false,\n    repeated: false,\n    options: {}\n  }\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case '=':\n        tokens.shift()\n        field.tag = Number(tokens.shift())\n        break\n\n      case 'map':\n        field.type = 'map'\n        field.map = { from: null, to: null }\n        tokens.shift()\n        if (tokens[0] !== '<') throw new Error('Unexpected token in map type: ' + tokens[0])\n        tokens.shift()\n        field.map.from = tokens.shift()\n        if (tokens[0] !== ',') throw new Error('Unexpected token in map type: ' + tokens[0])\n        tokens.shift()\n        field.map.to = tokens.shift()\n        if (tokens[0] !== '>') throw new Error('Unexpected token in map type: ' + tokens[0])\n        tokens.shift()\n        field.name = tokens.shift()\n        break\n\n      case 'repeated':\n      case 'required':\n      case 'optional':\n        var t = tokens.shift()\n        field.required = t === 'required'\n        field.repeated = t === 'repeated'\n        field.type = tokens.shift()\n        field.name = tokens.shift()\n        break\n\n      case '[':\n        field.options = onfieldoptions(tokens)\n        break\n\n      case ';':\n        if (field.name === null) throw new Error('Missing field name')\n        if (field.type === null) throw new Error('Missing type in message field: ' + field.name)\n        if (field.tag === -1) throw new Error('Missing tag number in message field: ' + field.name)\n        tokens.shift()\n        return field\n\n      default:\n        throw new Error('Unexpected token in message field: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No ; found for message field')\n}\n\nvar onmessagebody = function (tokens) {\n  var body = {\n    enums: [],\n    options: {},\n    messages: [],\n    fields: [],\n    extends: [],\n    extensions: null\n  }\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case 'map':\n      case 'repeated':\n      case 'optional':\n      case 'required':\n        body.fields.push(onfield(tokens))\n        break\n\n      case 'enum':\n        body.enums.push(onenum(tokens))\n        break\n\n      case 'message':\n        body.messages.push(onmessage(tokens))\n        break\n\n      case 'extensions':\n        body.extensions = onextensions(tokens)\n        break\n\n      case 'oneof':\n        tokens.shift()\n        var name = tokens.shift()\n        if (tokens[0] !== '{') throw new Error('Unexpected token in oneof: ' + tokens[0])\n        tokens.shift()\n        while (tokens[0] !== '}') {\n          tokens.unshift('optional')\n          var field = onfield(tokens)\n          field.oneof = name\n          body.fields.push(field)\n        }\n        tokens.shift()\n        break\n\n      case 'extend':\n        body.extends.push(onextend(tokens))\n        break\n\n      case ';':\n        tokens.shift()\n        break\n\n      case 'reserved':\n        tokens.shift()\n        while (tokens[0] !== ';') {\n          tokens.shift()\n        }\n        break\n\n      case 'option':\n        var opt = onoption(tokens)\n        if (body.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name)\n        body.options[opt.name] = opt.value\n        break\n\n      default:\n        // proto3 does not require the use of optional/required, assumed as optional\n        // \"singular: a well-formed message can have zero or one of this field (but not more than one).\"\n        // https://developers.google.com/protocol-buffers/docs/proto3#specifying-field-rules\n        tokens.unshift('optional')\n        body.fields.push(onfield(tokens))\n    }\n  }\n\n  return body\n}\n\nvar onextend = function (tokens) {\n  var out = {\n    name: tokens[1],\n    message: onmessage(tokens)\n  }\n  return out\n}\n\nvar onextensions = function (tokens) {\n  tokens.shift()\n  var from = Number(tokens.shift())\n  if (isNaN(from)) throw new Error('Invalid from in extensions definition')\n  if (tokens.shift() !== 'to') throw new Error(\"Expected keyword 'to' in extensions definition\")\n  var to = tokens.shift()\n  if (to === 'max') to = MAX_RANGE\n  to = Number(to)\n  if (isNaN(to)) throw new Error('Invalid to in extensions definition')\n  if (tokens.shift() !== ';') throw new Error('Missing ; in extensions definition')\n  return { from: from, to: to }\n}\nvar onmessage = function (tokens) {\n  tokens.shift()\n\n  var lvl = 1\n  var body = []\n  var msg = {\n    name: tokens.shift(),\n    options: {},\n    enums: [],\n    extends: [],\n    messages: [],\n    fields: []\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '{') lvl++\n    else if (tokens[0] === '}') lvl--\n\n    if (!lvl) {\n      tokens.shift()\n      body = onmessagebody(body)\n      msg.enums = body.enums\n      msg.messages = body.messages\n      msg.fields = body.fields\n      msg.extends = body.extends\n      msg.extensions = body.extensions\n      msg.options = body.options\n      return msg\n    }\n\n    body.push(tokens.shift())\n  }\n\n  if (lvl) throw new Error('No closing tag for message')\n}\n\nvar onpackagename = function (tokens) {\n  tokens.shift()\n  var name = tokens.shift()\n  if (tokens[0] !== ';') throw new Error('Expected ; but found ' + tokens[0])\n  tokens.shift()\n  return name\n}\n\nvar onsyntaxversion = function (tokens) {\n  tokens.shift()\n\n  if (tokens[0] !== '=') throw new Error('Expected = but found ' + tokens[0])\n  tokens.shift()\n\n  var version = tokens.shift()\n  switch (version) {\n    case '\"proto2\"':\n      version = 2\n      break\n\n    case '\"proto3\"':\n      version = 3\n      break\n\n    default:\n      throw new Error('Expected protobuf syntax version but found ' + version)\n  }\n\n  if (tokens[0] !== ';') throw new Error('Expected ; but found ' + tokens[0])\n  tokens.shift()\n\n  return version\n}\n\nvar onenumvalue = function (tokens) {\n  if (tokens.length < 4) throw new Error('Invalid enum value: ' + tokens.slice(0, 3).join(' '))\n  if (tokens[0] === 'reserved') {\n    tokens.shift()\n    while (tokens[0] !== ';') {\n      tokens.shift()\n    }\n    tokens.shift()\n    return null\n  }\n  if (tokens[1] !== '=') throw new Error('Expected = but found ' + tokens[1])\n  if (tokens[3] !== ';' && tokens[3] !== '[') throw new Error('Expected ; or [ but found ' + tokens[1])\n\n  var name = tokens.shift()\n  tokens.shift()\n  var val = {\n    value: null,\n    options: {}\n  }\n  val.value = Number(tokens.shift())\n  if (tokens[0] === '[') {\n    val.options = onfieldoptions(tokens)\n  }\n  tokens.shift() // expecting the semicolon here\n\n  return {\n    name: name,\n    val: val\n  }\n}\n\nvar onenum = function (tokens) {\n  tokens.shift()\n  var options = {}\n  var e = {\n    name: tokens.shift(),\n    values: {},\n    options: {}\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      // there goes optional semicolon after the enclosing \"}\"\n      if (tokens[0] === ';') tokens.shift()\n      return e\n    }\n    if (tokens[0] === 'option') {\n      options = onoption(tokens)\n      e.options[options.name] = options.value\n      continue\n    }\n    var val = onenumvalue(tokens)\n    if (val !== null) {\n      e.values[val.name] = val.val\n    }\n  }\n\n  throw new Error('No closing tag for enum')\n}\n\nvar onoption = function (tokens) {\n  var name = null\n  var value = null\n\n  var parse = function (value) {\n    if (value === 'true') return true\n    if (value === 'false') return false\n    return value.replace(/^\"+|\"+$/gm, '')\n  }\n\n  while (tokens.length) {\n    if (tokens[0] === ';') {\n      tokens.shift()\n      return { name: name, value: value }\n    }\n    switch (tokens[0]) {\n      case 'option':\n        tokens.shift()\n\n        var hasBracket = tokens[0] === '('\n        if (hasBracket) tokens.shift()\n\n        name = tokens.shift()\n\n        if (hasBracket) {\n          if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n          tokens.shift()\n        }\n\n        if (tokens[0][0] === '.') {\n          name += tokens.shift()\n        }\n\n        break\n\n      case '=':\n        tokens.shift()\n        if (name === null) throw new Error('Expected key for option with value: ' + tokens[0])\n        value = parse(tokens.shift())\n\n        if (name === 'optimize_for' && !/^(SPEED|CODE_SIZE|LITE_RUNTIME)$/.test(value)) {\n          throw new Error('Unexpected value for option optimize_for: ' + value)\n        } else if (value === '{') {\n          // option foo = {bar: baz}\n          value = onoptionMap(tokens)\n        }\n        break\n\n      default:\n        throw new Error('Unexpected token in option: ' + tokens[0])\n    }\n  }\n}\n\nvar onoptionMap = function (tokens) {\n  var parse = function (value) {\n    if (value === 'true') return true\n    if (value === 'false') return false\n    return value.replace(/^\"+|\"+$/gm, '')\n  }\n\n  var map = {}\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      return map\n    }\n\n    var hasBracket = tokens[0] === '('\n    if (hasBracket) tokens.shift()\n\n    var key = tokens.shift()\n    if (hasBracket) {\n      if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n      tokens.shift()\n    }\n\n    var value = null\n\n    switch (tokens[0]) {\n      case ':':\n        if (map[key] !== undefined) throw new Error('Duplicate option map key ' + key)\n\n        tokens.shift()\n\n        value = parse(tokens.shift())\n\n        if (value === '{') {\n          // option foo = {bar: baz}\n          value = onoptionMap(tokens)\n        }\n\n        map[key] = value\n\n        if (tokens[0] === ';') {\n          tokens.shift()\n        }\n        break\n\n      case '{':\n        tokens.shift()\n        value = onoptionMap(tokens)\n\n        if (map[key] === undefined) map[key] = []\n        if (!Array.isArray(map[key])) throw new Error('Duplicate option map key ' + key)\n\n        map[key].push(value)\n        break\n\n      default:\n        throw new Error('Unexpected token in option map: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for option map')\n}\n\nvar onimport = function (tokens) {\n  tokens.shift()\n  var file = tokens.shift().replace(/^\"+|\"+$/gm, '')\n\n  if (tokens[0] !== ';') throw new Error('Unexpected token: ' + tokens[0] + '. Expected \";\"')\n\n  tokens.shift()\n  return file\n}\n\nvar onservice = function (tokens) {\n  tokens.shift()\n\n  var service = {\n    name: tokens.shift(),\n    methods: [],\n    options: {}\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      // there goes optional semicolon after the enclosing \"}\"\n      if (tokens[0] === ';') tokens.shift()\n      return service\n    }\n\n    switch (tokens[0]) {\n      case 'option':\n        var opt = onoption(tokens)\n        if (service.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name)\n        service.options[opt.name] = opt.value\n        break\n      case 'rpc':\n        service.methods.push(onrpc(tokens))\n        break\n      default:\n        throw new Error('Unexpected token in service: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for service')\n}\n\nvar onrpc = function (tokens) {\n  tokens.shift()\n\n  var rpc = {\n    name: tokens.shift(),\n    input_type: null,\n    output_type: null,\n    client_streaming: false,\n    server_streaming: false,\n    options: {}\n  }\n\n  if (tokens[0] !== '(') throw new Error('Expected ( but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] === 'stream') {\n    tokens.shift()\n    rpc.client_streaming = true\n  }\n\n  rpc.input_type = tokens.shift()\n\n  if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] !== 'returns') throw new Error('Expected returns but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] !== '(') throw new Error('Expected ( but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] === 'stream') {\n    tokens.shift()\n    rpc.server_streaming = true\n  }\n\n  rpc.output_type = tokens.shift()\n\n  if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] === ';') {\n    tokens.shift()\n    return rpc\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      // there goes optional semicolon after the enclosing \"}\"\n      if (tokens[0] === ';') tokens.shift()\n      return rpc\n    }\n\n    if (tokens[0] === 'option') {\n      var opt = onoption(tokens)\n      if (rpc.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name)\n      rpc.options[opt.name] = opt.value\n    } else {\n      throw new Error('Unexpected token in rpc options: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for rpc')\n}\n\nvar parse = function (buf) {\n  var tokens = tokenize(buf.toString())\n  // check for isolated strings in tokens by looking for opening quote\n  for (var i = 0; i < tokens.length; i++) {\n    if (/^(\"|')([^'\"]*)$/.test(tokens[i])) {\n      var j\n      if (tokens[i].length === 1) {\n        j = i + 1\n      } else {\n        j = i\n      }\n      // look ahead for the closing quote and collapse all\n      // in-between tokens into a single token\n      for (j; j < tokens.length; j++) {\n        if (/^[^'\"\\\\]*(?:\\\\.[^'\"\\\\]*)*(\"|')$/.test(tokens[j])) {\n          tokens = tokens.slice(0, i).concat(tokens.slice(i, j + 1).join('')).concat(tokens.slice(j + 1))\n          break\n        }\n      }\n    }\n  }\n  var schema = {\n    syntax: 3,\n    package: null,\n    imports: [],\n    enums: [],\n    messages: [],\n    options: {},\n    extends: []\n  }\n\n  var firstline = true\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case 'package':\n        schema.package = onpackagename(tokens)\n        break\n\n      case 'syntax':\n        if (!firstline) throw new Error('Protobuf syntax version should be first thing in file')\n        schema.syntax = onsyntaxversion(tokens)\n        break\n\n      case 'message':\n        schema.messages.push(onmessage(tokens))\n        break\n\n      case 'enum':\n        schema.enums.push(onenum(tokens))\n        break\n\n      case 'option':\n        var opt = onoption(tokens)\n        if (schema.options[opt.name]) throw new Error('Duplicate option ' + opt.name)\n        schema.options[opt.name] = opt.value\n        break\n\n      case 'import':\n        schema.imports.push(onimport(tokens))\n        break\n\n      case 'extend':\n        schema.extends.push(onextend(tokens))\n        break\n\n      case 'service':\n        if (!schema.services) schema.services = []\n        schema.services.push(onservice(tokens))\n        break\n\n      default:\n        throw new Error('Unexpected token: ' + tokens[0])\n    }\n    firstline = false\n  }\n\n  // now iterate over messages and propagate extends\n  schema.extends.forEach(function (ext) {\n    schema.messages.forEach(function (msg) {\n      if (msg.name === ext.name) {\n        ext.message.fields.forEach(function (field) {\n          if (!msg.extensions || field.tag < msg.extensions.from || field.tag > msg.extensions.to) {\n            throw new Error(msg.name + ' does not declare ' + field.tag + ' as an extension number')\n          }\n          msg.fields.push(field)\n        })\n      }\n    })\n  })\n\n  schema.messages.forEach(function (msg) {\n    msg.fields.forEach(function (field) {\n      var fieldSplit\n      var messageName\n      var nestedEnumName\n      var message\n\n      function enumNameIsFieldType (en) {\n        return en.name === field.type\n      }\n\n      function enumNameIsNestedEnumName (en) {\n        return en.name === nestedEnumName\n      }\n\n      if (field.options && field.options.packed === 'true') {\n        if (PACKABLE_TYPES.indexOf(field.type) === -1) {\n          // let's see if it's an enum\n          if (field.type.indexOf('.') === -1) {\n            if (msg.enums && msg.enums.some(enumNameIsFieldType)) {\n              return\n            }\n          } else {\n            fieldSplit = field.type.split('.')\n            if (fieldSplit.length > 2) {\n              throw new Error('what is this?')\n            }\n\n            messageName = fieldSplit[0]\n            nestedEnumName = fieldSplit[1]\n\n            schema.messages.some(function (msg) {\n              if (msg.name === messageName) {\n                message = msg\n                return msg\n              }\n            })\n\n            if (message && message.enums && message.enums.some(enumNameIsNestedEnumName)) {\n              return\n            }\n          }\n\n          throw new Error(\n            'Fields of type ' + field.type + ' cannot be declared [packed=true]. ' +\n            'Only repeated fields of primitive numeric types (types which use ' +\n            'the varint, 32-bit, or 64-bit wire types) can be declared \"packed\". ' +\n            'See https://developers.google.com/protocol-buffers/docs/encoding#optional'\n          )\n        }\n      }\n    })\n  })\n\n  return schema\n}\n\nmodule.exports = parse\n","var onimport = function (i, result) {\n  result.push('import \"' + i + '\";', '')\n  return result\n}\n\nvar onfield = function (f, result) {\n  var prefix = f.repeated ? 'repeated' : f.required ? 'required' : 'optional'\n  if (f.type === 'map') prefix = 'map<' + f.map.from + ',' + f.map.to + '>'\n  if (f.oneof) prefix = ''\n\n  var opts = Object.keys(f.options || {}).map(function (key) {\n    return key + ' = ' + f.options[key]\n  }).join(',')\n\n  if (opts) opts = ' [' + opts + ']'\n\n  result.push((prefix ? prefix + ' ' : '') + (f.map === 'map' ? '' : f.type + ' ') + f.name + ' = ' + f.tag + opts + ';')\n  return result\n}\n\nvar onmessage = function (m, result) {\n  result.push('message ' + m.name + ' {')\n\n  if (!m.options) m.options = {}\n  onoption(m.options, result)\n\n  if (!m.enums) m.enums = []\n  m.enums.forEach(function (e) {\n    result.push(onenum(e, []))\n  })\n\n  if (!m.messages) m.messages = []\n  m.messages.forEach(function (m) {\n    result.push(onmessage(m, []))\n  })\n\n  var oneofs = {}\n\n  if (!m.fields) m.fields = []\n  m.fields.forEach(function (f) {\n    if (f.oneof) {\n      if (!oneofs[f.oneof]) oneofs[f.oneof] = []\n      oneofs[f.oneof].push(onfield(f, []))\n    } else {\n      result.push(onfield(f, []))\n    }\n  })\n\n  Object.keys(oneofs).forEach(function (n) {\n    oneofs[n].unshift('oneof ' + n + ' {')\n    oneofs[n].push('}')\n    result.push(oneofs[n])\n  })\n\n  result.push('}', '')\n  return result\n}\n\nvar onenum = function (e, result) {\n  result.push('enum ' + e.name + ' {')\n  if (!e.options) e.options = {}\n  var options = onoption(e.options, [])\n  if (options.length > 1) {\n    result.push(options.slice(0, -1))\n  }\n  Object.keys(e.values).map(function (v) {\n    var val = onenumvalue(e.values[v])\n    result.push([v + ' = ' + val + ';'])\n  })\n  result.push('}', '')\n  return result\n}\n\nvar onenumvalue = function (v, result) {\n  var opts = Object.keys(v.options || {}).map(function (key) {\n    return key + ' = ' + v.options[key]\n  }).join(',')\n\n  if (opts) opts = ' [' + opts + ']'\n  var val = v.value + opts\n  return val\n}\n\nvar onoption = function (o, result) {\n  var keys = Object.keys(o)\n  keys.forEach(function (option) {\n    var v = o[option]\n    if (~option.indexOf('.')) option = '(' + option + ')'\n\n    var type = typeof v\n\n    if (type === 'object') {\n      v = onoptionMap(v, [])\n      if (v.length) result.push('option ' + option + ' = {', v, '};')\n    } else {\n      if (type === 'string' && option !== 'optimize_for') v = '\"' + v + '\"'\n      result.push('option ' + option + ' = ' + v + ';')\n    }\n  })\n  if (keys.length > 0) {\n    result.push('')\n  }\n\n  return result\n}\n\nvar onoptionMap = function (o, result) {\n  var keys = Object.keys(o)\n  keys.forEach(function (k) {\n    var v = o[k]\n\n    var type = typeof v\n\n    if (type === 'object') {\n      if (Array.isArray(v)) {\n        v.forEach(function (v) {\n          v = onoptionMap(v, [])\n          if (v.length) result.push(k + ' {', v, '}')\n        })\n      } else {\n        v = onoptionMap(v, [])\n        if (v.length) result.push(k + ' {', v, '}')\n      }\n    } else {\n      if (type === 'string') v = '\"' + v + '\"'\n      result.push(k + ': ' + v)\n    }\n  })\n\n  return result\n}\n\nvar onservices = function (s, result) {\n  result.push('service ' + s.name + ' {')\n\n  if (!s.options) s.options = {}\n  onoption(s.options, result)\n  if (!s.methods) s.methods = []\n  s.methods.forEach(function (m) {\n    result.push(onrpc(m, []))\n  })\n\n  result.push('}', '')\n  return result\n}\n\nvar onrpc = function (rpc, result) {\n  var def = 'rpc ' + rpc.name + '('\n  if (rpc.client_streaming) def += 'stream '\n  def += rpc.input_type + ') returns ('\n  if (rpc.server_streaming) def += 'stream '\n  def += rpc.output_type + ')'\n\n  if (!rpc.options) rpc.options = {}\n\n  var options = onoption(rpc.options, [])\n  if (options.length > 1) {\n    result.push(def + ' {', options.slice(0, -1), '}')\n  } else {\n    result.push(def + ';')\n  }\n\n  return result\n}\n\nvar indent = function (lvl) {\n  return function (line) {\n    if (Array.isArray(line)) return line.map(indent(lvl + '  ')).join('\\n')\n    return lvl + line\n  }\n}\n\nmodule.exports = function (schema) {\n  var result = []\n\n  result.push('syntax = \"proto' + schema.syntax + '\";', '')\n\n  if (schema.package) result.push('package ' + schema.package + ';', '')\n\n  if (schema.imports) {\n    schema.imports.forEach(function (i) {\n      onimport(i, result)\n    })\n  }\n\n  if (!schema.options) schema.options = {}\n\n  onoption(schema.options, result)\n\n  if (!schema.enums) schema.enums = []\n  schema.enums.forEach(function (e) {\n    onenum(e, result)\n  })\n\n  if (!schema.messages) schema.messages = []\n  schema.messages.forEach(function (m) {\n    onmessage(m, result)\n  })\n\n  if (schema.services) {\n    schema.services.forEach(function (s) {\n      onservices(s, result)\n    })\n  }\n  return result.map(indent('')).join('\\n')\n}\n","module.exports = function (sch) {\n  var noComments = function (line) {\n    var i = line.indexOf('//')\n    return i > -1 ? line.slice(0, i) : line\n  }\n\n  var noMultilineComments = function () {\n    var inside = false\n    return function (token) {\n      if (token === '/*') {\n        inside = true\n        return false\n      }\n      if (token === '*/') {\n        inside = false\n        return false\n      }\n      return !inside\n    }\n  }\n\n  var trim = function (line) {\n    return line.trim()\n  }\n\n  var removeQuotedLines = function (list) {\n    return function (str) {\n      var s = '$' + list.length + '$'\n      list.push(str)\n      return s\n    }\n  }\n\n  var restoreQuotedLines = function (list) {\n    var re = /^\\$(\\d+)\\$$/\n    return function (line) {\n      var m = line.match(re)\n      return m ? list[+m[1]] : line\n    }\n  }\n\n  var replacements = []\n  return sch\n    .replace(/\"(\\\\\"|[^\"\\n])*?\"|'(\\\\'|[^'\\n])*?'/gm, removeQuotedLines(replacements))\n    .replace(/([;,{}()=:[\\]<>]|\\/\\*|\\*\\/)/g, ' $1 ')\n    .split(/\\n/)\n    .map(trim)\n    .filter(Boolean)\n    .map(noComments)\n    .map(trim)\n    .filter(Boolean)\n    .join('\\n')\n    .split(/\\s+|\\n+/gm)\n    .filter(noMultilineComments())\n    .map(restoreQuotedLines(replacements))\n}\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","/* eslint max-depth: 1 */\n'use strict'\n\nvar varint = require('varint')\nvar defined = require('./utils').defined\n\nfunction toSentenceCase (string) {\n  return `${string.substring(0, 1).toUpperCase()}${string.substring(1)}`\n}\n\nfunction addPropertyAccessors (obj, name, value, defaultValue) {\n  if (Object.prototype.hasOwnProperty.call(obj, name)) {\n    // have already added this property\n    return\n  }\n\n  const sentenceCaseName = toSentenceCase(name)\n\n  Object.defineProperties(obj, {\n    [name]: {\n      enumerable: true,\n      configurable: true,\n      set: (val) => {\n        value = val\n      },\n      get: () => {\n        if (value === undefined) {\n          return defaultValue\n        }\n\n        return value\n      }\n    },\n    [`has${sentenceCaseName}`]: {\n      configurable: true,\n      value: () => {\n        return value !== undefined\n      }\n    },\n    [`set${sentenceCaseName}`]: {\n      configurable: true,\n      value: (val) => {\n        value = val\n      }\n    },\n    [`get${sentenceCaseName}`]: {\n      configurable: true,\n      value: () => {\n        return value\n      }\n    },\n    [`clear${sentenceCaseName}`]: {\n      configurable: true,\n      value: () => {\n        value = undefined\n        obj[name] = undefined\n      }\n    }\n  })\n}\n\nfunction compileDecode (m, resolve, enc) {\n  var requiredFields = []\n  var fields = {}\n  var oneofFields = []\n  var vals = []\n\n  for (var i = 0; i < enc.length; i++) {\n    var field = m.fields[i]\n\n    fields[field.tag] = i\n\n    var def = field.options && field.options.default\n    var resolved = resolve(field.type, m.id, false)\n    vals[i] = [def, resolved && resolved.values]\n\n    m.fields[i].packed = field.repeated && field.options && field.options.packed && field.options.packed !== 'false'\n\n    if (field.required) {\n      requiredFields.push(field.name)\n    }\n\n    if (field.oneof) {\n      oneofFields.push(field.name)\n    }\n  }\n\n  function decodeField (e, field, obj, buf, offset, i) {\n    var name = field.name\n\n    if (field.oneof) {\n      // clear already defined oneof fields\n      var props = Object.keys(obj)\n      for (var j = 0; j < props.length; j++) {\n        if (oneofFields.indexOf(props[j]) > -1) {\n          const sentenceCase = toSentenceCase(props[j])\n          delete obj[`has${sentenceCase}`]\n          delete obj[`get${sentenceCase}`]\n          delete obj[`set${sentenceCase}`]\n          delete obj[`clear${sentenceCase}`]\n          delete obj[props[j]]\n        }\n      }\n    }\n\n    let value\n\n    if (e.message) {\n      var len = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n\n      var decoded = e.decode(buf, offset, offset + len)\n\n      if (field.map) {\n        value = obj[name] || {}\n        value[decoded.key] = decoded.value\n      } else if (field.repeated) {\n        value = obj[name] || []\n        value.push(decoded)\n      } else {\n        value = decoded\n      }\n    } else {\n      if (field.repeated) {\n        value = obj[name] || []\n        value.push(e.decode(buf, offset))\n      } else {\n        value = e.decode(buf, offset)\n      }\n    }\n\n    addPropertyAccessors(obj, name, value)\n\n    offset += e.decode.bytes\n    return offset\n  }\n\n  return function decode (buf, offset, end) {\n    if (offset == null) {\n      offset = 0\n    }\n\n    if (end == null) {\n      end = buf.length\n    }\n\n    if (!(end <= buf.length && offset <= buf.length)) {\n      throw new Error('Decoded message is not valid')\n    }\n\n    var oldOffset = offset\n    var obj = {}\n    var field\n\n    while (true) {\n      if (end <= offset) {\n        // finished\n\n        // check required methods\n        var name = ''\n        var j = 0\n        for (j = 0; j < requiredFields.length; j++) {\n          name = requiredFields[j]\n          if (!defined(obj[name])) {\n            throw new Error('Decoded message is not valid, missing required field: ' + name)\n          }\n        }\n\n        // fill out missing defaults\n        var val\n        var def\n        for (j = 0; j < enc.length; j++) {\n          field = m.fields[j]\n          def = vals[j][0]\n          val = vals[j][1]\n          name = field.name\n          let defaultVal\n\n          if (Object.prototype.hasOwnProperty.call(obj, name)) {\n            continue\n          }\n\n          var done = false\n\n          if (field.oneof) {\n            var props = Object.keys(obj)\n\n            for (var k = 0; k < props.length; k++) {\n              if (oneofFields.indexOf(props[k]) > -1) {\n                done = true\n                break\n              }\n            }\n          }\n\n          if (done) {\n            continue\n          }\n\n          if (val) { // is enum\n            if (field.repeated) {\n              def = []\n            } else {\n              def = (def && val[def]) ? val[def].value : val[Object.keys(val)[0]].value\n              def = parseInt(def || 0, 10)\n            }\n          } else {\n            defaultVal = defaultValue(field)\n            def = coerceValue(field, def)\n          }\n\n          addPropertyAccessors(obj, name, def, defaultVal)\n        }\n\n        decode.bytes = offset - oldOffset\n        return obj\n      }\n\n      var prefix = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n      var tag = prefix >> 3\n\n      var i = fields[tag]\n\n      if (i == null) {\n        offset = skip(prefix & 7, buf, offset)\n        continue\n      }\n\n      var e = enc[i]\n      field = m.fields[i]\n\n      if (field.packed) {\n        var packedEnd = varint.decode(buf, offset)\n        offset += varint.decode.bytes\n        packedEnd += offset\n\n        while (offset < packedEnd) {\n          offset = decodeField(e, field, obj, buf, offset, i)\n        }\n      } else {\n        offset = decodeField(e, field, obj, buf, offset, i)\n      }\n    }\n  }\n}\n\nvar skip = function (type, buffer, offset) {\n  switch (type) {\n    case 0:\n      varint.decode(buffer, offset)\n      return offset + varint.decode.bytes\n\n    case 1:\n      return offset + 8\n\n    case 2:\n      var len = varint.decode(buffer, offset)\n      return offset + varint.decode.bytes + len\n\n    case 3:\n    case 4:\n      throw new Error('Groups are not supported')\n\n    case 5:\n      return offset + 4\n    default:\n      throw new Error('Unknown wire type: ' + type)\n  }\n}\n\nvar defaultValue = function (f) {\n  if (f.map) return {}\n  if (f.repeated) return []\n\n  switch (f.type) {\n    case 'string':\n      return ''\n    case 'bool':\n      return false\n    case 'float':\n    case 'double':\n    case 'sfixed32':\n    case 'fixed32':\n    case 'varint':\n    case 'enum':\n    case 'uint64':\n    case 'uint32':\n    case 'int64':\n    case 'int32':\n    case 'sint64':\n    case 'sint32':\n      return 0\n    default:\n      return null\n  }\n}\n\nvar coerceValue = function (f, def) {\n  if (def === undefined) {\n    return def\n  }\n\n  switch (f.type) {\n    case 'bool':\n      return def === 'true'\n    case 'float':\n    case 'double':\n    case 'sfixed32':\n    case 'fixed32':\n    case 'varint':\n    case 'enum':\n    case 'uint64':\n    case 'uint32':\n    case 'int64':\n    case 'int32':\n    case 'sint64':\n    case 'sint32':\n      return parseInt(def, 10)\n    default:\n      return def\n  }\n}\n\nmodule.exports = compileDecode\n","'use strict'\nconst { Buffer } = require('buffer')\nvar defined = require('./utils').defined\nvar varint = require('varint')\n\nfunction compileEncode (m, resolve, enc, oneofs, encodingLength) {\n  var oneofsKeys = Object.keys(oneofs)\n  var encLength = enc.length\n  var ints = {}\n  for (var i = 0; i < encLength; i++) {\n    ints[i] = {\n      p: varint.encode(m.fields[i].tag << 3 | 2),\n      h: varint.encode(m.fields[i].tag << 3 | enc[i].type)\n    }\n\n    var field = m.fields[i]\n    m.fields[i].packed = field.repeated && field.options && field.options.packed && field.options.packed !== 'false'\n  }\n\n  function encodeField (buf, offset, h, e, packed, innerVal) {\n    var j = 0\n    if (!packed) {\n      for (j = 0; j < h.length; j++) {\n        buf[offset++] = h[j]\n      }\n    }\n\n    if (e.message) {\n      varint.encode(e.encodingLength(innerVal), buf, offset)\n      offset += varint.encode.bytes\n    }\n\n    e.encode(innerVal, buf, offset)\n    return offset + e.encode.bytes\n  }\n\n  return function encode (obj, buf, offset) {\n    if (offset == null) {\n      offset = 0\n    }\n    if (buf == null) {\n      buf = Buffer.allocUnsafe(encodingLength(obj))\n    }\n\n    var oldOffset = offset\n    var objKeys = Object.keys(obj)\n    var i = 0\n\n    // oneof checks\n\n    var match = false\n    for (i = 0; i < oneofsKeys.length; i++) {\n      var name = oneofsKeys[i]\n      var prop = oneofs[i]\n      if (objKeys.indexOf(prop) > -1) {\n        if (match) {\n          throw new Error('only one of the properties defined in oneof ' + name + ' can be set')\n        }\n\n        match = true\n      }\n    }\n\n    for (i = 0; i < encLength; i++) {\n      var e = enc[i]\n      var field = m.fields[i] // was f\n      var val = obj[field.name]\n      var j = 0\n\n      if (!defined(val)) {\n        if (field.required) {\n          throw new Error(field.name + ' is required')\n        }\n        continue\n      }\n      var p = ints[i].p\n      var h = ints[i].h\n\n      var packed = field.packed\n\n      if (field.map) {\n        var tmp = Object.keys(val)\n        for (j = 0; j < tmp.length; j++) {\n          tmp[j] = {\n            key: tmp[j],\n            value: val[tmp[j]]\n          }\n        }\n        val = tmp\n      }\n\n      if (packed) {\n        var packedLen = 0\n        for (j = 0; j < val.length; j++) {\n          if (!Object.prototype.hasOwnProperty.call(val, j)) {\n            continue\n          }\n\n          packedLen += e.encodingLength(val[j])\n        }\n\n        if (packedLen) {\n          for (j = 0; j < h.length; j++) {\n            buf[offset++] = p[j]\n          }\n          varint.encode(packedLen, buf, offset)\n          offset += varint.encode.bytes\n        }\n      }\n\n      if (field.repeated) {\n        var innerVal\n        for (j = 0; j < val.length; j++) {\n          innerVal = val[j]\n          if (!defined(innerVal)) {\n            continue\n          }\n          offset = encodeField(buf, offset, h, e, packed, innerVal)\n        }\n      } else {\n        offset = encodeField(buf, offset, h, e, packed, val)\n      }\n    }\n\n    encode.bytes = offset - oldOffset\n    return buf\n  }\n}\n\nmodule.exports = compileEncode\n","'use strict'\n\nvar defined = require('./utils').defined\nvar varint = require('varint')\n\nfunction compileEncodingLength (m, enc, oneofs) {\n  var oneofsKeys = Object.keys(oneofs)\n  var encLength = enc.length\n\n  var hls = new Array(encLength)\n\n  for (var i = 0; i < m.fields.length; i++) {\n    hls[i] = varint.encodingLength(m.fields[i].tag << 3 | enc[i].type)\n\n    var field = m.fields[i]\n    m.fields[i].packed = field.repeated && field.options && field.options.packed && field.options.packed !== 'false'\n  }\n\n  return function encodingLength (obj) {\n    var length = 0\n    var i = 0\n    var j = 0\n\n    for (i = 0; i < oneofsKeys.length; i++) {\n      var name = oneofsKeys[i]\n      var props = oneofs[name]\n\n      var match = false\n      for (j = 0; j < props.length; j++) {\n        if (defined(obj[props[j]])) {\n          if (match) {\n            throw new Error('only one of the properties defined in oneof ' + name + ' can be set')\n          }\n          match = true\n        }\n      }\n    }\n\n    for (i = 0; i < encLength; i++) {\n      var e = enc[i]\n      var field = m.fields[i]\n      var val = obj[field.name]\n      var hl = hls[i]\n      var len\n\n      if (!defined(val)) {\n        if (field.required) {\n          throw new Error(field.name + ' is required')\n        }\n\n        continue\n      }\n\n      if (field.map) {\n        var tmp = Object.keys(val)\n        for (j = 0; j < tmp.length; j++) {\n          tmp[j] = {\n            key: tmp[j],\n            value: val[tmp[j]]\n          }\n        }\n\n        val = tmp\n      }\n\n      if (field.packed) {\n        var packedLen = 0\n        for (j = 0; j < val.length; j++) {\n          if (!defined(val[j])) {\n            continue\n          }\n          len = e.encodingLength(val[j])\n          packedLen += len\n\n          if (e.message) {\n            packedLen += varint.encodingLength(len)\n          }\n        }\n\n        if (packedLen) {\n          length += hl + packedLen + varint.encodingLength(packedLen)\n        }\n      } else if (field.repeated) {\n        for (j = 0; j < val.length; j++) {\n          if (!defined(val[j])) {\n            continue\n          }\n\n          len = e.encodingLength(val[j])\n          length += hl + len + (e.message ? varint.encodingLength(len) : 0)\n        }\n      } else {\n        len = e.encodingLength(val)\n        length += hl + len + (e.message ? varint.encodingLength(len) : 0)\n      }\n    }\n\n    return length\n  }\n}\n\nmodule.exports = compileEncodingLength\n","'use strict'\n\nvar varint = require('varint')\nvar svarint = require('signed-varint')\nconst { Buffer } = require('buffer')\n\nvar encoder = function (type, encode, decode, encodingLength) {\n  encode.bytes = decode.bytes = 0\n\n  return {\n    type: type,\n    encode: encode,\n    decode: decode,\n    encodingLength: encodingLength\n  }\n}\n\nexports.make = encoder\n\nexports.bytes = (function () {\n  var bufferLength = function (val) {\n    return Buffer.isBuffer(val) ? val.length : Buffer.byteLength(val)\n  }\n\n  var encodingLength = function (val) {\n    var len = bufferLength(val)\n    return varint.encodingLength(len) + len\n  }\n\n  var encode = function (val, buffer, offset) {\n    var oldOffset = offset\n    var len = bufferLength(val)\n\n    varint.encode(len, buffer, offset)\n    offset += varint.encode.bytes\n\n    if (val instanceof Uint8Array) buffer.set(val, offset)\n    else buffer.write(val, offset, len)\n    offset += len\n\n    encode.bytes = offset - oldOffset\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var oldOffset = offset\n\n    var len = varint.decode(buffer, offset)\n    offset += varint.decode.bytes\n\n    var val = buffer.slice(offset, offset + len)\n    offset += val.length\n\n    decode.bytes = offset - oldOffset\n    return val\n  }\n\n  return encoder(2, encode, decode, encodingLength)\n})()\n\nexports.string = (function () {\n  var encodingLength = function (val) {\n    var len = Buffer.byteLength(val)\n    return varint.encodingLength(len) + len\n  }\n\n  var encode = function (val, buffer, offset) {\n    var oldOffset = offset\n    var len = Buffer.byteLength(val)\n\n    varint.encode(len, buffer, offset, 'utf-8')\n    offset += varint.encode.bytes\n\n    buffer.write(val, offset, len)\n    offset += len\n\n    encode.bytes = offset - oldOffset\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var oldOffset = offset\n\n    var len = varint.decode(buffer, offset)\n    offset += varint.decode.bytes\n\n    var val = buffer.toString('utf-8', offset, offset + len)\n    offset += len\n\n    decode.bytes = offset - oldOffset\n    return val\n  }\n\n  return encoder(2, encode, decode, encodingLength)\n})()\n\nexports.bool = (function () {\n  var encodingLength = function (val) {\n    return 1\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer[offset] = val ? 1 : 0\n    encode.bytes = 1\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var bool = buffer[offset] > 0\n    decode.bytes = 1\n    return bool\n  }\n\n  return encoder(0, encode, decode, encodingLength)\n})()\n\nexports.int32 = (function () {\n  var decode = function (buffer, offset) {\n    var val = varint.decode(buffer, offset)\n    decode.bytes = varint.decode.bytes\n    return val > 2147483647 ? val - 4294967296 : val\n  }\n\n  var encode = function (val, buffer, offset) {\n    varint.encode(val < 0 ? val + 4294967296 : val, buffer, offset)\n    encode.bytes = varint.encode.bytes\n    return buffer\n  }\n\n  var encodingLength = function (val) {\n    return varint.encodingLength(val < 0 ? val + 4294967296 : val)\n  }\n\n  return encoder(0, encode, decode, encodingLength)\n})()\n\nexports.int64 = (function () {\n  var decode = function (buffer, offset) {\n    var val = varint.decode(buffer, offset)\n    if (val >= Math.pow(2, 63)) {\n      var limit = 9\n      while (buffer[offset + limit - 1] === 0xff) limit--\n      limit = limit || 9\n      var subset = Buffer.allocUnsafe(limit)\n      buffer.copy(subset, 0, offset, offset + limit)\n      subset[limit - 1] = subset[limit - 1] & 0x7f\n      val = -1 * varint.decode(subset, 0)\n      decode.bytes = 10\n    } else {\n      decode.bytes = varint.decode.bytes\n    }\n    return val\n  }\n\n  var encode = function (val, buffer, offset) {\n    if (val < 0) {\n      var last = offset + 9\n      varint.encode(val * -1, buffer, offset)\n      offset += varint.encode.bytes - 1\n      buffer[offset] = buffer[offset] | 0x80\n      while (offset < last - 1) {\n        offset++\n        buffer[offset] = 0xff\n      }\n      buffer[last] = 0x01\n      encode.bytes = 10\n    } else {\n      varint.encode(val, buffer, offset)\n      encode.bytes = varint.encode.bytes\n    }\n    return buffer\n  }\n\n  var encodingLength = function (val) {\n    return val < 0 ? 10 : varint.encodingLength(val)\n  }\n\n  return encoder(0, encode, decode, encodingLength)\n})()\n\nexports.sint32 =\nexports.sint64 = (function () {\n  return encoder(0, svarint.encode, svarint.decode, svarint.encodingLength)\n})()\n\nexports.uint32 =\nexports.uint64 =\nexports.enum =\nexports.varint = (function () {\n  return encoder(0, varint.encode, varint.decode, varint.encodingLength)\n})()\n\n// we cannot represent these in javascript so we just use buffers\nexports.fixed64 =\nexports.sfixed64 = (function () {\n  var encodingLength = function (val) {\n    return 8\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.set(val, offset)\n    encode.bytes = 8\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.slice(offset, offset + 8)\n    decode.bytes = 8\n    return val\n  }\n\n  return encoder(1, encode, decode, encodingLength)\n})()\n\nexports.double = (function () {\n  var encodingLength = function (val) {\n    return 8\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeDoubleLE(val, offset)\n    encode.bytes = 8\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readDoubleLE(offset)\n    decode.bytes = 8\n    return val\n  }\n\n  return encoder(1, encode, decode, encodingLength)\n})()\n\nexports.fixed32 = (function () {\n  var encodingLength = function (val) {\n    return 4\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeUInt32LE(val, offset)\n    encode.bytes = 4\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readUInt32LE(offset)\n    decode.bytes = 4\n    return val\n  }\n\n  return encoder(5, encode, decode, encodingLength)\n})()\n\nexports.sfixed32 = (function () {\n  var encodingLength = function (val) {\n    return 4\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeInt32LE(val, offset)\n    encode.bytes = 4\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readInt32LE(offset)\n    decode.bytes = 4\n    return val\n  }\n\n  return encoder(5, encode, decode, encodingLength)\n})()\n\nexports.float = (function () {\n  var encodingLength = function (val) {\n    return 4\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeFloatLE(val, offset)\n    encode.bytes = 4\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readFloatLE(offset)\n    decode.bytes = 4\n    return val\n  }\n\n  return encoder(5, encode, decode, encodingLength)\n})()\n","'use strict'\n\nvar encodings = require('./encodings')\nvar compileDecode = require('./decode')\nvar compileEncode = require('./encode')\nvar compileEncodingLength = require('./encoding-length')\nvar varint = require('varint')\n\nvar flatten = function (values) {\n  if (!values) return null\n  var result = {}\n  Object.keys(values).forEach(function (k) {\n    result[k] = values[k].value\n  })\n  return result\n}\n\nmodule.exports = function (schema, extraEncodings) {\n  var messages = {}\n  var enums = {}\n  var cache = {}\n\n  var visit = function (schema, prefix) {\n    if (schema.enums) {\n      schema.enums.forEach(function (e) {\n        e.id = prefix + (prefix ? '.' : '') + e.name\n        enums[e.id] = e\n        visit(e, e.id)\n      })\n    }\n    if (schema.messages) {\n      schema.messages.forEach(function (m) {\n        m.id = prefix + (prefix ? '.' : '') + m.name\n        messages[m.id] = m\n        m.fields.forEach(function (f) {\n          if (!f.map) return\n\n          var name = 'Map_' + f.map.from + '_' + f.map.to\n          var map = {\n            name: name,\n            enums: [],\n            messages: [],\n            fields: [{\n              name: 'key',\n              type: f.map.from,\n              tag: 1,\n              repeated: false,\n              required: true\n            }, {\n              name: 'value',\n              type: f.map.to,\n              tag: 2,\n              repeated: false,\n              required: false\n            }],\n            extensions: null,\n            id: prefix + (prefix ? '.' : '') + name\n          }\n\n          if (!messages[map.id]) {\n            messages[map.id] = map\n            schema.messages.push(map)\n          }\n          f.type = name\n          f.repeated = true\n        })\n        visit(m, m.id)\n      })\n    }\n  }\n\n  visit(schema, '')\n\n  var compileEnum = function (e) {\n    var values = Object.keys(e.values || []).map(function (k) {\n      return parseInt(e.values[k].value, 10)\n    })\n\n    var encode = function encode (val, buf, offset) {\n      if (!values.length || values.indexOf(val) === -1) {\n        throw new Error('Invalid enum value: ' + val)\n      }\n      varint.encode(val, buf, offset)\n      encode.bytes = varint.encode.bytes\n      return buf\n    }\n\n    var decode = function decode (buf, offset) {\n      var val = varint.decode(buf, offset)\n      if (!values.length || values.indexOf(val) === -1) {\n        throw new Error('Invalid enum value: ' + val)\n      }\n      decode.bytes = varint.decode.bytes\n      return val\n    }\n\n    return encodings.make(0, encode, decode, varint.encodingLength)\n  }\n\n  var compileMessage = function (m, exports) {\n    m.messages.forEach(function (nested) {\n      exports[nested.name] = resolve(nested.name, m.id)\n    })\n\n    m.enums.forEach(function (val) {\n      exports[val.name] = flatten(val.values)\n    })\n\n    exports.type = 2\n    exports.message = true\n    exports.name = m.name\n\n    var oneofs = {}\n\n    m.fields.forEach(function (f) {\n      if (!f.oneof) return\n      if (!oneofs[f.oneof]) oneofs[f.oneof] = []\n      oneofs[f.oneof].push(f.name)\n    })\n\n    var enc = m.fields.map(function (f) {\n      return resolve(f.type, m.id)\n    })\n\n    var encodingLength = compileEncodingLength(m, enc, oneofs)\n    var encode = compileEncode(m, resolve, enc, oneofs, encodingLength)\n    var decode = compileDecode(m, resolve, enc)\n\n    // end of compilation - return all the things\n\n    encode.bytes = decode.bytes = 0\n\n    exports.buffer = true\n    exports.encode = encode\n    exports.decode = decode\n    exports.encodingLength = encodingLength\n\n    return exports\n  }\n\n  var resolve = function (name, from, compile) {\n    if (extraEncodings && extraEncodings[name]) return extraEncodings[name]\n    if (encodings[name]) return encodings[name]\n\n    var m = (from ? from + '.' + name : name).split('.')\n      .map(function (part, i, list) {\n        return list.slice(0, i).concat(name).join('.')\n      })\n      .reverse()\n      .reduce(function (result, id) {\n        return result || messages[id] || enums[id]\n      }, null)\n\n    if (compile === false) return m\n    if (!m) throw new Error('Could not resolve ' + name)\n\n    if (m.values) return compileEnum(m)\n    var res = cache[m.id] || compileMessage(m, cache[m.id] = {})\n    return res\n  }\n\n  return (schema.enums || []).concat((schema.messages || []).map(function (message) {\n    return resolve(message.id)\n  }))\n}\n","'use strict'\n\nexports.defined = function (val) {\n  return val !== null && val !== undefined && (typeof val !== 'number' || !isNaN(val))\n}\n","'use strict'\n\nvar schema = require('protocol-buffers-schema')\nconst { Buffer } = require('buffer')\nvar compile = require('./compile')\n\nvar flatten = function (values) {\n  if (!values) return null\n  var result = {}\n  Object.keys(values).forEach(function (k) {\n    result[k] = values[k].value\n  })\n  return result\n}\n\nmodule.exports = function (proto, opts) {\n  if (!opts) opts = {}\n  if (!proto) throw new Error('Pass in a .proto string or a protobuf-schema parsed object')\n\n  var sch = (typeof proto === 'object' && !Buffer.isBuffer(proto)) ? proto : schema.parse(proto)\n\n  // to not make toString,toJSON enumarable we make a fire-and-forget prototype\n  var Messages = function () {\n    var self = this\n\n    compile(sch, opts.encodings || {}).forEach(function (m) {\n      self[m.name] = flatten(m.values) || m\n    })\n  }\n\n  Messages.prototype.toString = function () {\n    return schema.stringify(sch)\n  }\n\n  Messages.prototype.toJSON = function () {\n    return sch\n  }\n\n  return new Messages()\n}\n","exports.publicEncrypt = require('./publicEncrypt')\nexports.privateDecrypt = require('./privateDecrypt')\n\nexports.privateEncrypt = function privateEncrypt (key, buf) {\n  return exports.publicEncrypt(key, buf, true)\n}\n\nexports.publicDecrypt = function publicDecrypt (key, buf) {\n  return exports.privateDecrypt(key, buf, true)\n}\n","var createHash = require('create-hash')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0)\n  var i = 0\n  var c\n  while (t.length < len) {\n    c = i2ops(i++)\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])\n  }\n  return t.slice(0, len)\n}\n\nfunction i2ops (c) {\n  var out = Buffer.allocUnsafe(4)\n  out.writeUInt32BE(c, 0)\n  return out\n}\n","var parseKeys = require('parse-asn1')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar crt = require('browserify-rsa')\nvar createHash = require('create-hash')\nvar withPublic = require('./withPublic')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function privateDecrypt (privateKey, enc, reverse) {\n  var padding\n  if (privateKey.padding) {\n    padding = privateKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n\n  var key = parseKeys(privateKey)\n  var k = key.modulus.byteLength()\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error')\n  }\n  var msg\n  if (reverse) {\n    msg = withPublic(new BN(enc), key)\n  } else {\n    msg = crt(enc, key)\n  }\n  var zBuffer = Buffer.alloc(k - msg.length)\n  msg = Buffer.concat([zBuffer, msg], k)\n  if (padding === 4) {\n    return oaep(key, msg)\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    return msg\n  } else {\n    throw new Error('unknown padding')\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  if (msg[0] !== 0) {\n    throw new Error('decryption error')\n  }\n  var maskedSeed = msg.slice(1, hLen + 1)\n  var maskedDb = msg.slice(hLen + 1)\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen))\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1))\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error')\n  }\n  var i = hLen\n  while (db[i] === 0) {\n    i++\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error')\n  }\n  return db.slice(i)\n}\n\nfunction pkcs1 (key, msg, reverse) {\n  var p1 = msg.slice(0, 2)\n  var i = 2\n  var status = 0\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++\n      break\n    }\n  }\n  var ps = msg.slice(2, i - 1)\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {\n    status++\n  }\n  if (ps.length < 8) {\n    status++\n  }\n  if (status) {\n    throw new Error('decryption error')\n  }\n  return msg.slice(i)\n}\nfunction compare (a, b) {\n  a = Buffer.from(a)\n  b = Buffer.from(b)\n  var dif = 0\n  var len = a.length\n  if (a.length !== b.length) {\n    dif++\n    len = Math.min(a.length, b.length)\n  }\n  var i = -1\n  while (++i < len) {\n    dif += (a[i] ^ b[i])\n  }\n  return dif\n}\n","var parseKeys = require('parse-asn1')\nvar randomBytes = require('randombytes')\nvar createHash = require('create-hash')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar withPublic = require('./withPublic')\nvar crt = require('browserify-rsa')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function publicEncrypt (publicKey, msg, reverse) {\n  var padding\n  if (publicKey.padding) {\n    padding = publicKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n  var key = parseKeys(publicKey)\n  var paddedMsg\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg)\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    paddedMsg = new BN(msg)\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus')\n    }\n  } else {\n    throw new Error('unknown padding')\n  }\n  if (reverse) {\n    return crt(paddedMsg, key)\n  } else {\n    return withPublic(paddedMsg, key)\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var mLen = msg.length\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  var hLen2 = 2 * hLen\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long')\n  }\n  var ps = Buffer.alloc(k - mLen - hLen2 - 2)\n  var dblen = k - hLen - 1\n  var seed = randomBytes(hLen)\n  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen))\n  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))\n}\nfunction pkcs1 (key, msg, reverse) {\n  var mLen = msg.length\n  var k = key.modulus.byteLength()\n  if (mLen > k - 11) {\n    throw new Error('message too long')\n  }\n  var ps\n  if (reverse) {\n    ps = Buffer.alloc(k - mLen - 3, 0xff)\n  } else {\n    ps = nonZero(k - mLen - 3)\n  }\n  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))\n}\nfunction nonZero (len) {\n  var out = Buffer.allocUnsafe(len)\n  var i = 0\n  var cache = randomBytes(len * 2)\n  var cur = 0\n  var num\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len * 2)\n      cur = 0\n    }\n    num = cache[cur++]\n    if (num) {\n      out[i++] = num\n    }\n  }\n  return out\n}\n","var BN = require('bn.js')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n","module.exports = function xor (a, b) {\n  var len = a.length\n  var i = -1\n  while (++i < len) {\n    a[i] ^= b[i]\n  }\n  return a\n}\n","var once = require('once')\nvar eos = require('end-of-stream')\nvar fs = require('fs') // we only need fs to get the ReadStream and WriteStream prototypes\n\nvar noop = function () {}\nvar ancient = /^v?\\.0/.test(process.version)\n\nvar isFn = function (fn) {\n  return typeof fn === 'function'\n}\n\nvar isFS = function (stream) {\n  if (!ancient) return false // newer node version do not need to care about fs is a special way\n  if (!fs) return false // browser\n  return (stream instanceof (fs.ReadStream || noop) || stream instanceof (fs.WriteStream || noop)) && isFn(stream.close)\n}\n\nvar isRequest = function (stream) {\n  return stream.setHeader && isFn(stream.abort)\n}\n\nvar destroyer = function (stream, reading, writing, callback) {\n  callback = once(callback)\n\n  var closed = false\n  stream.on('close', function () {\n    closed = true\n  })\n\n  eos(stream, {readable: reading, writable: writing}, function (err) {\n    if (err) return callback(err)\n    closed = true\n    callback()\n  })\n\n  var destroyed = false\n  return function (err) {\n    if (closed) return\n    if (destroyed) return\n    destroyed = true\n\n    if (isFS(stream)) return stream.close(noop) // use close for fs streams to avoid fd leaks\n    if (isRequest(stream)) return stream.abort() // request.destroy just do .end - .abort is what we want\n\n    if (isFn(stream.destroy)) return stream.destroy()\n\n    callback(err || new Error('stream was destroyed'))\n  }\n}\n\nvar call = function (fn) {\n  fn()\n}\n\nvar pipe = function (from, to) {\n  return from.pipe(to)\n}\n\nvar pump = function () {\n  var streams = Array.prototype.slice.call(arguments)\n  var callback = isFn(streams[streams.length - 1] || noop) && streams.pop() || noop\n\n  if (Array.isArray(streams[0])) streams = streams[0]\n  if (streams.length < 2) throw new Error('pump requires two streams per minimum')\n\n  var error\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1\n    var writing = i > 0\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err\n      if (err) destroys.forEach(call)\n      if (reading) return\n      destroys.forEach(call)\n      callback(error)\n    })\n  })\n\n  return streams.reduce(pipe)\n}\n\nmodule.exports = pump\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","\nconst { instantiate } = require(\"@assemblyscript/loader\");\n\nloadWebAssembly.supported = typeof WebAssembly !== 'undefined'\n\nfunction loadWebAssembly (imp = {}) {\n  if (!loadWebAssembly.supported) return null\n  \n  var wasm = new Uint8Array([0,97,115,109,1,0,0,0,1,78,14,96,2,127,126,0,96,1,127,1,126,96,2,127,127,0,96,1,127,1,127,96,1,127,0,96,2,127,127,1,127,96,3,127,127,127,1,127,96,0,0,96,3,127,127,127,0,96,0,1,127,96,4,127,127,127,127,0,96,5,127,127,127,127,127,1,127,96,1,126,1,127,96,2,126,126,1,126,2,13,1,3,101,110,118,5,97,98,111,114,116,0,10,3,54,53,2,2,8,9,3,5,2,8,6,5,3,4,2,6,9,12,13,2,5,11,3,2,3,2,3,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,6,7,7,4,4,5,3,1,0,1,6,47,9,127,1,65,0,11,127,1,65,0,11,127,0,65,3,11,127,0,65,4,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,0,65,240,2,11,127,0,65,6,11,7,240,5,41,6,109,101,109,111,114,121,2,0,7,95,95,97,108,108,111,99,0,10,8,95,95,114,101,116,97,105,110,0,11,9,95,95,114,101,108,101,97,115,101,0,12,9,95,95,99,111,108,108,101,99,116,0,51,11,95,95,114,116,116,105,95,98,97,115,101,3,7,13,73,110,116,51,50,65,114,114,97,121,95,73,68,3,2,13,85,105,110,116,56,65,114,114,97,121,95,73,68,3,3,6,100,101,103,114,101,101,0,16,3,109,111,100,0,17,5,82,97,98,105,110,3,8,16,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,0,21,16,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,0,22,21,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,23,21,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,24,14,82,97,98,105,110,35,103,101,116,58,119,112,111,115,0,25,14,82,97,98,105,110,35,115,101,116,58,119,112,111,115,0,26,15,82,97,98,105,110,35,103,101,116,58,99,111,117,110,116,0,27,15,82,97,98,105,110,35,115,101,116,58,99,111,117,110,116,0,28,13,82,97,98,105,110,35,103,101,116,58,112,111,115,0,29,13,82,97,98,105,110,35,115,101,116,58,112,111,115,0,30,15,82,97,98,105,110,35,103,101,116,58,115,116,97,114,116,0,31,15,82,97,98,105,110,35,115,101,116,58,115,116,97,114,116,0,32,16,82,97,98,105,110,35,103,101,116,58,100,105,103,101,115,116,0,33,16,82,97,98,105,110,35,115,101,116,58,100,105,103,101,115,116,0,34,21,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,35,21,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,36,22,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,37,22,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,38,31,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,39,31,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,40,20,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,0,41,20,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,0,42,17,82,97,98,105,110,35,103,101,116,58,109,105,110,115,105,122,101,0,43,17,82,97,98,105,110,35,115,101,116,58,109,105,110,115,105,122,101,0,44,17,82,97,98,105,110,35,103,101,116,58,109,97,120,115,105,122,101,0,45,17,82,97,98,105,110,35,115,101,116,58,109,97,120,115,105,122,101,0,46,14,82,97,98,105,110,35,103,101,116,58,109,97,115,107,0,47,14,82,97,98,105,110,35,115,101,116,58,109,97,115,107,0,48,17,82,97,98,105,110,35,99,111,110,115,116,114,117,99,116,111,114,0,20,17,82,97,98,105,110,35,102,105,110,103,101,114,112,114,105,110,116,0,49,8,1,50,10,165,31,53,199,1,1,4,127,32,1,40,2,0,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,3,65,4,107,118,65,16,115,33,4,32,3,65,7,107,11,33,3,32,1,40,2,20,33,2,32,1,40,2,16,34,5,4,64,32,5,32,2,54,2,20,11,32,2,4,64,32,2,32,5,54,2,16,11,32,1,32,0,32,4,32,3,65,4,116,106,65,2,116,106,40,2,96,70,4,64,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,2,54,2,96,32,2,69,4,64,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,65,127,115,113,34,1,54,2,4,32,1,69,4,64,32,0,32,0,40,2,0,65,1,32,3,116,65,127,115,113,54,2,0,11,11,11,11,226,2,1,6,127,32,1,40,2,0,33,3,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,34,5,65,1,113,4,64,32,3,65,124,113,65,16,106,32,5,65,124,113,106,34,2,65,240,255,255,255,3,73,4,64,32,0,32,4,16,1,32,1,32,2,32,3,65,3,113,114,34,3,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,33,5,11,11,32,3,65,2,113,4,64,32,1,65,4,107,40,2,0,34,2,40,2,0,34,6,65,124,113,65,16,106,32,3,65,124,113,106,34,7,65,240,255,255,255,3,73,4,64,32,0,32,2,16,1,32,2,32,7,32,6,65,3,113,114,34,3,54,2,0,32,2,33,1,11,11,32,4,32,5,65,2,114,54,2,0,32,4,65,4,107,32,1,54,2,0,32,0,32,3,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,2,65,4,107,118,65,16,115,33,4,32,2,65,7,107,11,34,3,65,4,116,32,4,106,65,2,116,106,40,2,96,33,2,32,1,65,0,54,2,16,32,1,32,2,54,2,20,32,2,4,64,32,2,32,1,54,2,16,11,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,1,54,2,96,32,0,32,0,40,2,0,65,1,32,3,116,114,54,2,0,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,114,54,2,4,11,119,1,1,127,32,2,2,127,32,0,40,2,160,12,34,2,4,64,32,2,32,1,65,16,107,70,4,64,32,2,40,2,0,33,3,32,1,65,16,107,33,1,11,11,32,1,11,107,34,2,65,48,73,4,64,15,11,32,1,32,3,65,2,113,32,2,65,32,107,65,1,114,114,54,2,0,32,1,65,0,54,2,16,32,1,65,0,54,2,20,32,1,32,2,106,65,16,107,34,2,65,2,54,2,0,32,0,32,2,54,2,160,12,32,0,32,1,16,2,11,155,1,1,3,127,35,0,34,0,69,4,64,65,1,63,0,34,0,74,4,127,65,1,32,0,107,64,0,65,0,72,5,65,0,11,4,64,0,11,65,176,3,34,0,65,0,54,2,0,65,208,15,65,0,54,2,0,3,64,32,1,65,23,73,4,64,32,1,65,2,116,65,176,3,106,65,0,54,2,4,65,0,33,2,3,64,32,2,65,16,73,4,64,32,1,65,4,116,32,2,106,65,2,116,65,176,3,106,65,0,54,2,96,32,2,65,1,106,33,2,12,1,11,11,32,1,65,1,106,33,1,12,1,11,11,65,176,3,65,224,15,63,0,65,16,116,16,3,65,176,3,36,0,11,32,0,11,45,0,32,0,65,240,255,255,255,3,79,4,64,65,32,65,224,0,65,201,3,65,29,16,0,0,11,32,0,65,15,106,65,112,113,34,0,65,16,32,0,65,16,75,27,11,169,1,1,1,127,32,0,32,1,65,128,2,73,4,127,32,1,65,4,118,33,1,65,0,5,32,1,65,248,255,255,255,1,73,4,64,32,1,65,1,65,27,32,1,103,107,116,106,65,1,107,33,1,11,32,1,65,31,32,1,103,107,34,2,65,4,107,118,65,16,115,33,1,32,2,65,7,107,11,34,2,65,2,116,106,40,2,4,65,127,32,1,116,113,34,1,4,127,32,0,32,1,104,32,2,65,4,116,106,65,2,116,106,40,2,96,5,32,0,40,2,0,65,127,32,2,65,1,106,116,113,34,1,4,127,32,0,32,0,32,1,104,34,0,65,2,116,106,40,2,4,104,32,0,65,4,116,106,65,2,116,106,40,2,96,5,65,0,11,11,11,111,1,1,127,63,0,34,2,32,1,65,248,255,255,255,1,73,4,127,32,1,65,1,65,27,32,1,103,107,116,65,1,107,106,5,32,1,11,65,16,32,0,40,2,160,12,32,2,65,16,116,65,16,107,71,116,106,65,255,255,3,106,65,128,128,124,113,65,16,118,34,1,32,2,32,1,74,27,64,0,65,0,72,4,64,32,1,64,0,65,0,72,4,64,0,11,11,32,0,32,2,65,16,116,63,0,65,16,116,16,3,11,113,1,2,127,32,1,40,2,0,34,3,65,124,113,32,2,107,34,4,65,32,79,4,64,32,1,32,2,32,3,65,2,113,114,54,2,0,32,2,32,1,65,16,106,106,34,1,32,4,65,16,107,65,1,114,54,2,0,32,0,32,1,16,2,5,32,1,32,3,65,126,113,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,32,1,65,16,106,32,1,40,2,0,65,124,113,106,40,2,0,65,125,113,54,2,0,11,11,91,1,2,127,32,0,32,1,16,5,34,4,16,6,34,3,69,4,64,65,1,36,1,65,0,36,1,32,0,32,4,16,6,34,3,69,4,64,32,0,32,4,16,7,32,0,32,4,16,6,33,3,11,11,32,3,65,0,54,2,4,32,3,32,2,54,2,8,32,3,32,1,54,2,12,32,0,32,3,16,1,32,0,32,3,32,4,16,8,32,3,11,13,0,16,4,32,0,32,1,16,9,65,16,106,11,33,1,1,127,32,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,18,0,32,0,65,172,3,75,4,64,32,0,65,16,107,16,52,11,11,140,3,1,1,127,2,64,32,1,69,13,0,32,0,65,0,58,0,0,32,0,32,1,106,65,1,107,65,0,58,0,0,32,1,65,2,77,13,0,32,0,65,1,106,65,0,58,0,0,32,0,65,2,106,65,0,58,0,0,32,0,32,1,106,34,2,65,2,107,65,0,58,0,0,32,2,65,3,107,65,0,58,0,0,32,1,65,6,77,13,0,32,0,65,3,106,65,0,58,0,0,32,0,32,1,106,65,4,107,65,0,58,0,0,32,1,65,8,77,13,0,32,1,65,0,32,0,107,65,3,113,34,1,107,33,2,32,0,32,1,106,34,0,65,0,54,2,0,32,0,32,2,65,124,113,34,1,106,65,4,107,65,0,54,2,0,32,1,65,8,77,13,0,32,0,65,4,106,65,0,54,2,0,32,0,65,8,106,65,0,54,2,0,32,0,32,1,106,34,2,65,12,107,65,0,54,2,0,32,2,65,8,107,65,0,54,2,0,32,1,65,24,77,13,0,32,0,65,12,106,65,0,54,2,0,32,0,65,16,106,65,0,54,2,0,32,0,65,20,106,65,0,54,2,0,32,0,65,24,106,65,0,54,2,0,32,0,32,1,106,34,2,65,28,107,65,0,54,2,0,32,2,65,24,107,65,0,54,2,0,32,2,65,20,107,65,0,54,2,0,32,2,65,16,107,65,0,54,2,0,32,0,32,0,65,4,113,65,24,106,34,2,106,33,0,32,1,32,2,107,33,1,3,64,32,1,65,32,79,4,64,32,0,66,0,55,3,0,32,0,65,8,106,66,0,55,3,0,32,0,65,16,106,66,0,55,3,0,32,0,65,24,106,66,0,55,3,0,32,1,65,32,107,33,1,32,0,65,32,106,33,0,12,1,11,11,11,11,178,1,1,3,127,32,1,65,240,255,255,255,3,32,2,118,75,4,64,65,144,1,65,192,1,65,23,65,56,16,0,0,11,32,1,32,2,116,34,3,65,0,16,10,34,2,32,3,16,13,32,0,69,4,64,65,12,65,2,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,2,34,1,32,0,40,2,0,34,4,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,32,4,16,12,11,32,0,32,1,54,2,0,32,0,32,2,54,2,4,32,0,32,3,54,2,8,32,0,11,46,1,2,127,65,12,65,5,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,65,128,2,65,3,16,14,11,9,0,65,63,32,0,121,167,107,11,49,1,2,127,65,63,32,1,121,167,107,33,2,3,64,65,63,32,0,121,167,107,32,2,107,34,3,65,0,78,4,64,32,0,32,1,32,3,172,134,133,33,0,12,1,11,11,32,0,11,40,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,163,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,65,0,58,0,0,11,38,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,152,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,45,0,0,11,254,5,2,1,127,4,126,32,0,69,4,64,65,232,0,65,6,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,0,66,0,55,3,64,32,0,66,0,55,3,72,32,0,66,0,55,3,80,32,0,66,0,55,3,88,32,0,66,0,55,3,96,32,0,32,2,173,55,3,80,32,0,32,3,173,55,3,88,65,12,65,4,16,10,34,2,65,172,3,75,4,64,32,2,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,32,4,65,0,16,14,33,2,32,0,40,2,0,16,12,32,0,32,2,54,2,0,32,0,32,4,54,2,4,32,0,66,1,32,1,173,134,66,1,125,55,3,96,32,0,66,243,130,183,218,216,230,232,30,55,3,72,35,4,69,4,64,65,0,33,2,3,64,32,2,65,128,2,72,4,64,32,2,65,255,1,113,173,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,65,0,33,4,3,64,32,4,32,0,40,2,4,65,1,107,72,4,64,32,6,66,8,134,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,32,4,65,1,106,33,4,12,1,11,11,35,6,40,2,4,32,2,65,3,116,106,32,6,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,63,32,0,41,3,72,121,167,107,172,33,7,65,0,33,2,3,64,32,2,65,128,2,72,4,64,35,5,33,1,32,2,172,32,7,134,34,8,33,6,65,63,32,0,41,3,72,34,9,121,167,107,33,3,3,64,65,63,32,6,121,167,107,32,3,107,34,4,65,0,78,4,64,32,6,32,9,32,4,172,134,133,33,6,12,1,11,11,32,1,40,2,4,32,2,65,3,116,106,32,6,32,8,132,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,1,36,4,11,32,0,66,0,55,3,24,32,0,66,0,55,3,32,65,0,33,2,3,64,32,2,32,0,40,2,4,72,4,64,32,0,40,2,0,32,2,16,18,32,2,65,1,106,33,2,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,6,66,45,136,167,65,3,116,106,41,3,0,32,6,66,8,134,66,1,132,133,55,3,40,32,0,11,38,1,1,127,32,0,40,2,0,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,55,1,2,127,32,1,32,0,40,2,0,34,2,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,16,12,11,32,0,32,1,54,2,0,11,7,0,32,0,40,2,4,11,9,0,32,0,32,1,54,2,4,11,7,0,32,0,40,2,8,11,9,0,32,0,32,1,54,2,8,11,7,0,32,0,41,3,16,11,9,0,32,0,32,1,55,3,16,11,7,0,32,0,41,3,24,11,9,0,32,0,32,1,55,3,24,11,7,0,32,0,41,3,32,11,9,0,32,0,32,1,55,3,32,11,7,0,32,0,41,3,40,11,9,0,32,0,32,1,55,3,40,11,7,0,32,0,41,3,48,11,9,0,32,0,32,1,55,3,48,11,7,0,32,0,41,3,56,11,9,0,32,0,32,1,55,3,56,11,7,0,32,0,41,3,64,11,9,0,32,0,32,1,55,3,64,11,7,0,32,0,41,3,72,11,9,0,32,0,32,1,55,3,72,11,7,0,32,0,41,3,80,11,9,0,32,0,32,1,55,3,80,11,7,0,32,0,41,3,88,11,9,0,32,0,32,1,55,3,88,11,7,0,32,0,41,3,96,11,9,0,32,0,32,1,55,3,96,11,172,4,2,5,127,1,126,32,2,65,172,3,75,4,64,32,2,65,16,107,34,4,32,4,40,2,4,65,1,106,54,2,4,11,32,2,33,4,65,0,33,2,32,1,40,2,8,33,5,32,1,40,2,4,33,6,3,64,2,127,65,0,33,3,3,64,32,3,32,5,72,4,64,32,3,32,6,106,45,0,0,33,1,32,0,40,2,0,32,0,40,2,8,16,19,33,7,32,0,40,2,8,32,0,40,2,0,40,2,4,106,32,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,7,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,1,173,32,8,66,8,134,132,133,55,3,40,32,0,32,0,41,3,16,66,1,124,55,3,16,32,0,32,0,41,3,24,66,1,124,55,3,24,32,0,41,3,16,32,0,41,3,80,90,4,127,32,0,41,3,40,32,0,41,3,96,131,80,5,65,0,11,4,127,65,1,5,32,0,41,3,16,32,0,41,3,88,90,11,4,64,32,0,32,0,41,3,32,55,3,48,32,0,32,0,41,3,16,55,3,56,32,0,32,0,41,3,40,55,3,64,65,0,33,1,3,64,32,1,32,0,40,2,4,72,4,64,32,0,40,2,0,32,1,16,18,32,1,65,1,106,33,1,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,8,66,8,134,66,1,132,133,55,3,40,32,3,65,1,106,12,3,11,32,3,65,1,106,33,3,12,1,11,11,65,127,11,34,1,65,0,78,4,64,32,5,32,1,107,33,5,32,1,32,6,106,33,6,32,2,34,1,65,1,106,33,2,32,4,40,2,4,32,1,65,2,116,106,32,0,41,3,56,62,2,0,12,1,11,11,32,4,11,10,0,16,15,36,5,16,15,36,6,11,3,0,1,11,73,1,2,127,32,0,40,2,4,34,1,65,255,255,255,255,0,113,34,2,65,1,70,4,64,32,0,65,16,106,16,53,32,0,32,0,40,2,0,65,1,114,54,2,0,35,0,32,0,16,2,5,32,0,32,2,65,1,107,32,1,65,128,128,128,128,127,113,114,54,2,4,11,11,58,0,2,64,2,64,2,64,32,0,65,8,107,40,2,0,14,7,0,0,1,1,1,1,1,2,11,15,11,32,0,40,2,0,34,0,4,64,32,0,65,172,3,79,4,64,32,0,65,16,107,16,52,11,11,15,11,0,11,11,137,3,7,0,65,16,11,55,40,0,0,0,1,0,0,0,1,0,0,0,40,0,0,0,97,0,108,0,108,0,111,0,99,0,97,0,116,0,105,0,111,0,110,0,32,0,116,0,111,0,111,0,32,0,108,0,97,0,114,0,103,0,101,0,65,208,0,11,45,30,0,0,0,1,0,0,0,1,0,0,0,30,0,0,0,126,0,108,0,105,0,98,0,47,0,114,0,116,0,47,0,116,0,108,0,115,0,102,0,46,0,116,0,115,0,65,128,1,11,43,28,0,0,0,1,0,0,0,1,0,0,0,28,0,0,0,73,0,110,0,118,0,97,0,108,0,105,0,100,0,32,0,108,0,101,0,110,0,103,0,116,0,104,0,65,176,1,11,53,38,0,0,0,1,0,0,0,1,0,0,0,38,0,0,0,126,0,108,0,105,0,98,0,47,0,97,0,114,0,114,0,97,0,121,0,98,0,117,0,102,0,102,0,101,0,114,0,46,0,116,0,115,0,65,240,1,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,73,0,110,0,100,0,101,0,120,0,32,0,111,0,117,0,116,0,32,0,111,0,102,0,32,0,114,0,97,0,110,0,103,0,101,0,65,176,2,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,126,0,108,0,105,0,98,0,47,0,116,0,121,0,112,0,101,0,100,0,97,0,114,0,114,0,97,0,121,0,46,0,116,0,115,0,65,240,2,11,53,7,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,145,4,0,0,2,0,0,0,49,0,0,0,2,0,0,0,17,1,0,0,2,0,0,0,16,0,34,16,115,111,117,114,99,101,77,97,112,112,105,110,103,85,82,76,16,46,47,114,97,98,105,110,46,119,97,115,109,46,109,97,112])\n  // make it work async because browsers throw when a wasm module is bigger than 4kb and load sync\n  return instantiate(new Response(new Blob([wasm], {type: 'application/wasm'})), imp)\n}\nmodule.exports = loadWebAssembly\n","const Rabin = require('./rabin')\nconst getRabin = require('../dist/rabin-wasm.node.js')\n\nconst create = async (avg, min, max, windowSize, polynomial) => {\n    const compiled = await getRabin()\n    return new Rabin(compiled, avg, min, max, windowSize, polynomial)\n}\n\nmodule.exports = {\n    Rabin,\n    create\n}\n","/**\n * Rabin fingerprinting\n *\n * @class Rabin\n */\nclass Rabin {\n    /**\n     * Creates an instance of Rabin.\n     * @param { import(\"./../dist/rabin-wasm\") } asModule\n     * @param {number} [bits=12]\n     * @param {number} [min=8 * 1024]\n     * @param {number} [max=32 * 1024]\n     * @param {number} polynomial\n     * @memberof Rabin\n     */\n    constructor(asModule, bits = 12, min = 8 * 1024, max = 32 * 1024, windowSize = 64, polynomial) {\n        this.bits = bits\n        this.min = min\n        this.max = max\n        this.asModule = asModule\n        this.rabin = new asModule.Rabin(bits, min, max, windowSize, polynomial)\n        this.polynomial = polynomial\n    }\n\n    /**\n     * Fingerprints the buffer\n     *\n     * @param {Uint8Array} buf\n     * @returns {Array<number>}\n     * @memberof Rabin\n     */\n    fingerprint(buf) {\n        const {\n            __retain,\n            __release,\n            __allocArray,\n            __getInt32Array,\n            Int32Array_ID,\n            Uint8Array_ID\n        } = this.asModule\n\n        const lengths = new Int32Array(Math.ceil(buf.length/this.min))\n        const lengthsPtr = __retain(__allocArray(Int32Array_ID, lengths))\n        const pointer = __retain(__allocArray(Uint8Array_ID, buf))\n\n        const out = this.rabin.fingerprint(pointer, lengthsPtr)\n        const processed = __getInt32Array(out)\n\n        __release(pointer)\n        __release(lengthsPtr)\n\n        const end = processed.indexOf(0);\n        return end >= 0 ? processed.subarray(0, end) : processed;\n    }\n}\n\nmodule.exports = Rabin","import { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport { isIP } from '@chainsafe/is-ip';\nexport const isV4 = isIPv4;\nexport const isV6 = isIPv6;\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const toBytes = function (ip) {\n    let offset = 0;\n    ip = ip.toString().trim();\n    if (isV4(ip)) {\n        const bytes = new Uint8Array(offset + 4);\n        ip.split(/\\./g).forEach((byte) => {\n            bytes[offset++] = parseInt(byte, 10) & 0xff;\n        });\n        return bytes;\n    }\n    if (isV6(ip)) {\n        const sections = ip.split(':', 8);\n        let i;\n        for (i = 0; i < sections.length; i++) {\n            const isv4 = isV4(sections[i]);\n            let v4Buffer;\n            if (isv4) {\n                v4Buffer = toBytes(sections[i]);\n                sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16');\n            }\n            if (v4Buffer != null && ++i < 8) {\n                sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'));\n            }\n        }\n        if (sections[0] === '') {\n            while (sections.length < 8)\n                sections.unshift('0');\n        }\n        else if (sections[sections.length - 1] === '') {\n            while (sections.length < 8)\n                sections.push('0');\n        }\n        else if (sections.length < 8) {\n            for (i = 0; i < sections.length && sections[i] !== ''; i++)\n                ;\n            const argv = [i, 1];\n            for (i = 9 - sections.length; i > 0; i--) {\n                argv.push('0');\n            }\n            sections.splice.apply(sections, argv);\n        }\n        const bytes = new Uint8Array(offset + 16);\n        for (i = 0; i < sections.length; i++) {\n            const word = parseInt(sections[i], 16);\n            bytes[offset++] = (word >> 8) & 0xff;\n            bytes[offset++] = word & 0xff;\n        }\n        return bytes;\n    }\n    throw new Error('invalid ip address');\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const toString = function (buf, offset = 0, length) {\n    offset = ~~offset;\n    length = length ?? (buf.length - offset);\n    const view = new DataView(buf.buffer);\n    if (length === 4) {\n        const result = [];\n        // IPv4\n        for (let i = 0; i < length; i++) {\n            result.push(buf[offset + i]);\n        }\n        return result.join('.');\n    }\n    if (length === 16) {\n        const result = [];\n        // IPv6\n        for (let i = 0; i < length; i += 2) {\n            result.push(view.getUint16(offset + i).toString(16));\n        }\n        return result.join(':')\n            .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n            .replace(/:{3,4}/, '::');\n    }\n    return '';\n};\n//# sourceMappingURL=ip.js.map","const V = -1;\nexport const names = {};\nexport const codes = {};\nexport const table = [\n    [4, 32, 'ip4'],\n    [6, 16, 'tcp'],\n    [33, 16, 'dccp'],\n    [41, 128, 'ip6'],\n    [42, V, 'ip6zone'],\n    [43, 8, 'ipcidr'],\n    [53, V, 'dns', true],\n    [54, V, 'dns4', true],\n    [55, V, 'dns6', true],\n    [56, V, 'dnsaddr', true],\n    [132, 16, 'sctp'],\n    [273, 16, 'udp'],\n    [275, 0, 'p2p-webrtc-star'],\n    [276, 0, 'p2p-webrtc-direct'],\n    [277, 0, 'p2p-stardust'],\n    [280, 0, 'webrtc-direct'],\n    [281, 0, 'webrtc'],\n    [290, 0, 'p2p-circuit'],\n    [301, 0, 'udt'],\n    [302, 0, 'utp'],\n    [400, V, 'unix', false, true],\n    // `ipfs` is added before `p2p` for legacy support.\n    // All text representations will default to `p2p`, but `ipfs` will\n    // still be supported\n    [421, V, 'ipfs'],\n    // `p2p` is the preferred name for 421, and is now the default\n    [421, V, 'p2p'],\n    [443, 0, 'https'],\n    [444, 96, 'onion'],\n    [445, 296, 'onion3'],\n    [446, V, 'garlic64'],\n    [448, 0, 'tls'],\n    [449, V, 'sni'],\n    [460, 0, 'quic'],\n    [461, 0, 'quic-v1'],\n    [465, 0, 'webtransport'],\n    [466, V, 'certhash'],\n    [477, 0, 'ws'],\n    [478, 0, 'wss'],\n    [479, 0, 'p2p-websocket-star'],\n    [480, 0, 'http'],\n    [777, V, 'memory']\n];\n// populate tables\ntable.forEach(row => {\n    const proto = createProtocol(...row);\n    codes[proto.code] = proto;\n    names[proto.name] = proto;\n});\nexport function createProtocol(code, size, name, resolvable, path) {\n    return {\n        code,\n        size,\n        name,\n        resolvable: Boolean(resolvable),\n        path: Boolean(path)\n    };\n}\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nexport function getProtocol(proto) {\n    if (typeof proto === 'number') {\n        if (codes[proto] != null) {\n            return codes[proto];\n        }\n        throw new Error(`no protocol with code: ${proto}`);\n    }\n    else if (typeof proto === 'string') {\n        if (names[proto] != null) {\n            return names[proto];\n        }\n        throw new Error(`no protocol with name: ${proto}`);\n    }\n    throw new Error(`invalid protocol id type: ${typeof proto}`);\n}\n//# sourceMappingURL=protocols-table.js.map","/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\nimport * as ip from './ip.js';\nimport { getProtocol } from './protocols-table.js';\nimport { CID } from 'multiformats/cid';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { bases } from 'multiformats/basics';\nimport * as Digest from 'multiformats/hashes/digest';\nimport varint from 'varint';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { IpNet } from '@chainsafe/netmask';\nconst ip4Protocol = getProtocol('ip4');\nconst ip6Protocol = getProtocol('ip6');\nconst ipcidrProtocol = getProtocol('ipcidr');\nexport function convert(proto, a) {\n    if (a instanceof Uint8Array) {\n        return convertToString(proto, a);\n    }\n    else {\n        return convertToBytes(proto, a);\n    }\n}\n/**\n * Convert [code,Uint8Array] to string\n */\nexport function convertToString(proto, buf) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n        case 41: // ipv6\n            return bytes2ip(buf);\n        case 42: // ipv6zone\n            return bytes2str(buf);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return bytes2port(buf).toString();\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return bytes2str(buf);\n        case 421: // ipfs\n            return bytes2mh(buf);\n        case 444: // onion\n            return bytes2onion(buf);\n        case 445: // onion3\n            return bytes2onion(buf);\n        case 466: // certhash\n            return bytes2mb(buf);\n        default:\n            return uint8ArrayToString(buf, 'base16'); // no clue. convert to hex\n    }\n}\nexport function convertToBytes(proto, str) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n            return ip2bytes(str);\n        case 41: // ipv6\n            return ip2bytes(str);\n        case 42: // ipv6zone\n            return str2bytes(str);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return port2bytes(parseInt(str, 10));\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return str2bytes(str);\n        case 421: // ipfs\n            return mh2bytes(str);\n        case 444: // onion\n            return onion2bytes(str);\n        case 445: // onion3\n            return onion32bytes(str);\n        case 466: // certhash\n            return mb2bytes(str);\n        default:\n            return uint8ArrayFromString(str, 'base16'); // no clue. convert from hex\n    }\n}\nexport function convertToIpNet(multiaddr) {\n    let mask;\n    let addr;\n    multiaddr.stringTuples().forEach(([code, value]) => {\n        if (code === ip4Protocol.code || code === ip6Protocol.code) {\n            addr = value;\n        }\n        if (code === ipcidrProtocol.code) {\n            mask = value;\n        }\n    });\n    if (mask == null || addr == null) {\n        throw new Error('Invalid multiaddr');\n    }\n    return new IpNet(addr, mask);\n}\nconst decoders = Object.values(bases).map((c) => c.decoder);\nconst anybaseDecoder = (function () {\n    let acc = decoders[0].or(decoders[1]);\n    decoders.slice(2).forEach((d) => (acc = acc.or(d)));\n    return acc;\n})();\nfunction ip2bytes(ipString) {\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ip.toBytes(ipString);\n}\nfunction bytes2ip(ipBuff) {\n    const ipString = ip.toString(ipBuff, 0, ipBuff.length);\n    if (ipString == null) {\n        throw new Error('ipBuff is required');\n    }\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ipString;\n}\nfunction port2bytes(port) {\n    const buf = new ArrayBuffer(2);\n    const view = new DataView(buf);\n    view.setUint16(0, port);\n    return new Uint8Array(buf);\n}\nfunction bytes2port(buf) {\n    const view = new DataView(buf.buffer);\n    return view.getUint16(buf.byteOffset);\n}\nfunction str2bytes(str) {\n    const buf = uint8ArrayFromString(str);\n    const size = Uint8Array.from(varint.encode(buf.length));\n    return uint8ArrayConcat([size, buf], size.length + buf.length);\n}\nfunction bytes2str(buf) {\n    const size = varint.decode(buf);\n    buf = buf.slice(varint.decode.bytes);\n    if (buf.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(buf);\n}\nfunction mh2bytes(hash) {\n    let mh;\n    if (hash[0] === 'Q' || hash[0] === '1') {\n        mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes;\n    }\n    else {\n        mh = CID.parse(hash).multihash.bytes;\n    }\n    // the address is a varint prefixed multihash string representation\n    const size = Uint8Array.from(varint.encode(mh.length));\n    return uint8ArrayConcat([size, mh], size.length + mh.length);\n}\nfunction mb2bytes(mbstr) {\n    const mb = anybaseDecoder.decode(mbstr);\n    const size = Uint8Array.from(varint.encode(mb.length));\n    return uint8ArrayConcat([size, mb], size.length + mb.length);\n}\nfunction bytes2mb(buf) {\n    const size = varint.decode(buf);\n    const hash = buf.slice(varint.decode.bytes);\n    if (hash.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return 'u' + uint8ArrayToString(hash, 'base64url');\n}\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh(buf) {\n    const size = varint.decode(buf);\n    const address = buf.slice(varint.decode.bytes);\n    if (address.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(address, 'base58btc');\n}\nfunction onion2bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 16) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode('b' + addr[0]);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction onion32bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 56) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode(`b${addr[0]}`);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction bytes2onion(buf) {\n    const addrBytes = buf.slice(0, buf.length - 2);\n    const portBytes = buf.slice(buf.length - 2);\n    const addr = uint8ArrayToString(addrBytes, 'base32');\n    const port = bytes2port(portBytes);\n    return `${addr}:${port}`;\n}\n//# sourceMappingURL=convert.js.map","import { convertToBytes, convertToString } from './convert.js';\nimport { getProtocol } from './protocols-table.js';\nimport varint from 'varint';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\n/**\n * string -> [[str name, str addr]... ]\n */\nexport function stringToStringTuples(str) {\n    const tuples = [];\n    const parts = str.split('/').slice(1); // skip first empty elem\n    if (parts.length === 1 && parts[0] === '') {\n        return [];\n    }\n    for (let p = 0; p < parts.length; p++) {\n        const part = parts[p];\n        const proto = getProtocol(part);\n        if (proto.size === 0) {\n            tuples.push([part]);\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        p++; // advance addr part\n        if (p >= parts.length) {\n            throw ParseError('invalid address: ' + str);\n        }\n        // if it's a path proto, take the rest\n        if (proto.path === true) {\n            tuples.push([\n                part,\n                // should we need to check each path part to see if it's a proto?\n                // This would allow for other protocols to be added after a unix path,\n                // however it would have issues if the path had a protocol name in the path\n                cleanPath(parts.slice(p).join('/'))\n            ]);\n            break;\n        }\n        tuples.push([part, parts[p]]);\n    }\n    return tuples;\n}\n/**\n * [[str name, str addr]... ] -> string\n */\nexport function stringTuplesToString(tuples) {\n    const parts = [];\n    tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        parts.push(proto.name);\n        if (tup.length > 1 && tup[1] != null) {\n            parts.push(tup[1]);\n        }\n        return null;\n    });\n    return cleanPath(parts.join('/'));\n}\n/**\n * [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n */\nexport function stringTuplesToTuples(tuples) {\n    return tuples.map((tup) => {\n        if (!Array.isArray(tup)) {\n            tup = [tup];\n        }\n        const proto = protoFromTuple(tup);\n        if (tup.length > 1) {\n            return [proto.code, convertToBytes(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * Convert tuples to string tuples\n *\n * [[int code, Uint8Array]... ] -> [[int code, str addr]... ]\n */\nexport function tuplesToStringTuples(tuples) {\n    return tuples.map(tup => {\n        const proto = protoFromTuple(tup);\n        if (tup[1] != null) {\n            return [proto.code, convertToString(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * [[int code, Uint8Array ]... ] -> Uint8Array\n */\nexport function tuplesToBytes(tuples) {\n    return fromBytes(uint8ArrayConcat(tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        let buf = Uint8Array.from(varint.encode(proto.code));\n        if (tup.length > 1 && tup[1] != null) {\n            buf = uint8ArrayConcat([buf, tup[1]]); // add address buffer\n        }\n        return buf;\n    })));\n}\n/**\n * For the passed address, return the serialized size\n */\nexport function sizeForAddr(p, addr) {\n    if (p.size > 0) {\n        return p.size / 8;\n    }\n    else if (p.size === 0) {\n        return 0;\n    }\n    else {\n        const size = varint.decode(addr);\n        return size + (varint.decode.bytes ?? 0);\n    }\n}\nexport function bytesToTuples(buf) {\n    const tuples = [];\n    let i = 0;\n    while (i < buf.length) {\n        const code = varint.decode(buf, i);\n        const n = varint.decode.bytes ?? 0;\n        const p = getProtocol(code);\n        const size = sizeForAddr(p, buf.slice(i + n));\n        if (size === 0) {\n            tuples.push([code]);\n            i += n;\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        const addr = buf.slice(i + n, i + n + size);\n        i += (size + n);\n        if (i > buf.length) { // did not end _exactly_ at buffer.length\n            throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'));\n        }\n        // ok, tuple seems good.\n        tuples.push([code, addr]);\n    }\n    return tuples;\n}\n/**\n * Uint8Array -> String\n */\nexport function bytesToString(buf) {\n    const a = bytesToTuples(buf);\n    const b = tuplesToStringTuples(a);\n    return stringTuplesToString(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function stringToBytes(str) {\n    str = cleanPath(str);\n    const a = stringToStringTuples(str);\n    const b = stringTuplesToTuples(a);\n    return tuplesToBytes(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function fromString(str) {\n    return stringToBytes(str);\n}\n/**\n * Uint8Array -> Uint8Array\n */\nexport function fromBytes(buf) {\n    const err = validateBytes(buf);\n    if (err != null) {\n        throw err;\n    }\n    return Uint8Array.from(buf); // copy\n}\nexport function validateBytes(buf) {\n    try {\n        bytesToTuples(buf); // try to parse. will throw if breaks\n    }\n    catch (err) {\n        return err;\n    }\n}\nexport function isValidBytes(buf) {\n    return validateBytes(buf) === undefined;\n}\nexport function cleanPath(str) {\n    return '/' + str.trim().split('/').filter((a) => a).join('/');\n}\nexport function ParseError(str) {\n    return new Error('Error parsing address: ' + str);\n}\nexport function protoFromTuple(tup) {\n    const proto = getProtocol(tup[0]);\n    return proto;\n}\n//# sourceMappingURL=codec.js.map","/**\n * @packageDocumentation\n *\n * An implementation of a Multiaddr in JavaScript\n *\n * @example\n *\n * ```js\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/1234')\n * ```\n */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _DefaultMultiaddr_string, _DefaultMultiaddr_tuples, _DefaultMultiaddr_stringTuples, _a;\nimport * as codec from './codec.js';\nimport { getProtocol, names } from './protocols-table.js';\nimport varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport { base58btc } from 'multiformats/bases/base58';\nimport errCode from 'err-code';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst DNS_CODES = [\n    getProtocol('dns').code,\n    getProtocol('dns4').code,\n    getProtocol('dns6').code,\n    getProtocol('dnsaddr').code\n];\n/**\n * All configured {@link Resolver}s\n */\nexport const resolvers = new Map();\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr');\nexport { MultiaddrFilter } from './filter/multiaddr-filter.js';\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @example\n * ```js\n * import { fromNodeAddress } from '@multiformats/multiaddr'\n *\n * fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n */\nexport function fromNodeAddress(addr, transport) {\n    if (addr == null) {\n        throw new Error('requires node address object');\n    }\n    if (transport == null) {\n        throw new Error('requires transport protocol');\n    }\n    let ip;\n    let host = addr.address;\n    switch (addr.family) {\n        case 4:\n            ip = 'ip4';\n            break;\n        case 6:\n            ip = 'ip6';\n            if (host.includes('%')) {\n                const parts = host.split('%');\n                if (parts.length !== 2) {\n                    throw Error('Multiple ip6 zones in multiaddr');\n                }\n                host = parts[0];\n                const zone = parts[1];\n                ip = `/ip6zone/${zone}/ip6`;\n            }\n            break;\n        default:\n            throw Error('Invalid addr family, should be 4 or 6.');\n    }\n    return new DefaultMultiaddr('/' + [ip, host, transport, addr.port].join('/'));\n}\n/**\n * Returns if something is a {@link Multiaddr} that is a resolvable name\n *\n * @example\n *\n * ```js\n * import { isName, multiaddr } from '@multiformats/multiaddr'\n *\n * isName(multiaddr('/ip4/127.0.0.1'))\n * // false\n * isName(multiaddr('/dns/ipfs.io'))\n * // true\n * ```\n */\nexport function isName(addr) {\n    if (!isMultiaddr(addr)) {\n        return false;\n    }\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable);\n}\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nexport function isMultiaddr(value) {\n    return Boolean(value?.[symbol]);\n}\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nclass DefaultMultiaddr {\n    constructor(addr) {\n        _DefaultMultiaddr_string.set(this, void 0);\n        _DefaultMultiaddr_tuples.set(this, void 0);\n        _DefaultMultiaddr_stringTuples.set(this, void 0);\n        this[_a] = true;\n        // default\n        if (addr == null) {\n            addr = '';\n        }\n        if (addr instanceof Uint8Array) {\n            this.bytes = codec.fromBytes(addr);\n        }\n        else if (typeof addr === 'string') {\n            if (addr.length > 0 && addr.charAt(0) !== '/') {\n                throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\n            }\n            this.bytes = codec.fromString(addr);\n        }\n        else if (isMultiaddr(addr)) { // Multiaddr\n            this.bytes = codec.fromBytes(addr.bytes); // validate + copy buffer\n        }\n        else {\n            throw new Error('addr must be a string, Buffer, or another Multiaddr');\n        }\n    }\n    toString() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_string, codec.bytesToString(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\");\n    }\n    toJSON() {\n        return this.toString();\n    }\n    toOptions() {\n        let family;\n        let transport;\n        let host;\n        let port;\n        let zone = '';\n        const tcp = getProtocol('tcp');\n        const udp = getProtocol('udp');\n        const ip4 = getProtocol('ip4');\n        const ip6 = getProtocol('ip6');\n        const dns6 = getProtocol('dns6');\n        const ip6zone = getProtocol('ip6zone');\n        for (const [code, value] of this.stringTuples()) {\n            if (code === ip6zone.code) {\n                zone = `%${value ?? ''}`;\n            }\n            // default to https when protocol & port are omitted from DNS addrs\n            if (DNS_CODES.includes(code)) {\n                transport = tcp.name;\n                port = 443;\n                host = `${value ?? ''}${zone}`;\n                family = code === dns6.code ? 6 : 4;\n            }\n            if (code === tcp.code || code === udp.code) {\n                transport = getProtocol(code).name;\n                port = parseInt(value ?? '');\n            }\n            if (code === ip4.code || code === ip6.code) {\n                transport = getProtocol(code).name;\n                host = `${value ?? ''}${zone}`;\n                family = code === ip6.code ? 6 : 4;\n            }\n        }\n        if (family == null || transport == null || host == null || port == null) {\n            throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".');\n        }\n        const opts = {\n            family,\n            host,\n            transport,\n            port\n        };\n        return opts;\n    }\n    protos() {\n        return this.protoCodes().map(code => Object.assign({}, getProtocol(code)));\n    }\n    protoCodes() {\n        const codes = [];\n        const buf = this.bytes;\n        let i = 0;\n        while (i < buf.length) {\n            const code = varint.decode(buf, i);\n            const n = varint.decode.bytes ?? 0;\n            const p = getProtocol(code);\n            const size = codec.sizeForAddr(p, buf.slice(i + n));\n            i += (size + n);\n            codes.push(code);\n        }\n        return codes;\n    }\n    protoNames() {\n        return this.protos().map(proto => proto.name);\n    }\n    tuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_tuples, codec.bytesToTuples(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\");\n    }\n    stringTuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_stringTuples, codec.tuplesToStringTuples(this.tuples()), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\");\n    }\n    encapsulate(addr) {\n        addr = new DefaultMultiaddr(addr);\n        return new DefaultMultiaddr(this.toString() + addr.toString());\n    }\n    decapsulate(addr) {\n        const addrString = addr.toString();\n        const s = this.toString();\n        const i = s.lastIndexOf(addrString);\n        if (i < 0) {\n            throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`);\n        }\n        return new DefaultMultiaddr(s.slice(0, i));\n    }\n    decapsulateCode(code) {\n        const tuples = this.tuples();\n        for (let i = tuples.length - 1; i >= 0; i--) {\n            if (tuples[i][0] === code) {\n                return new DefaultMultiaddr(codec.tuplesToBytes(tuples.slice(0, i)));\n            }\n        }\n        return this;\n    }\n    getPeerId() {\n        try {\n            const tuples = this.stringTuples().filter((tuple) => {\n                if (tuple[0] === names.ipfs.code) {\n                    return true;\n                }\n                return false;\n            });\n            // Get the last ipfs tuple ['ipfs', 'peerid string']\n            const tuple = tuples.pop();\n            if (tuple?.[1] != null) {\n                const peerIdStr = tuple[1];\n                // peer id is base58btc encoded string but not multibase encoded so add the `z`\n                // prefix so we can validate that it is correctly encoded\n                if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n                    return uint8ArrayToString(base58btc.decode(`z${peerIdStr}`), 'base58btc');\n                }\n                // try to parse peer id as CID\n                return uint8ArrayToString(CID.parse(peerIdStr).multihash.bytes, 'base58btc');\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    getPath() {\n        let path = null;\n        try {\n            path = this.stringTuples().filter((tuple) => {\n                const proto = getProtocol(tuple[0]);\n                if (proto.path === true) {\n                    return true;\n                }\n                return false;\n            })[0][1];\n            if (path == null) {\n                path = null;\n            }\n        }\n        catch {\n            path = null;\n        }\n        return path;\n    }\n    equals(addr) {\n        return uint8ArrayEquals(this.bytes, addr.bytes);\n    }\n    async resolve(options) {\n        const resolvableProto = this.protos().find((p) => p.resolvable);\n        // Multiaddr is not resolvable?\n        if (resolvableProto == null) {\n            return [this];\n        }\n        const resolver = resolvers.get(resolvableProto.name);\n        if (resolver == null) {\n            throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER');\n        }\n        const addresses = await resolver(this, options);\n        return addresses.map((a) => new DefaultMultiaddr(a));\n    }\n    nodeAddress() {\n        const options = this.toOptions();\n        if (options.transport !== 'tcp' && options.transport !== 'udp') {\n            throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`);\n        }\n        return {\n            family: options.family,\n            address: options.host,\n            port: options.port\n        };\n    }\n    isThinWaistAddress(addr) {\n        const protos = (addr ?? this).protos();\n        if (protos.length !== 2) {\n            return false;\n        }\n        if (protos[0].code !== 4 && protos[0].code !== 41) {\n            return false;\n        }\n        if (protos[1].code !== 6 && protos[1].code !== 273) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns Multiaddr as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { multiaddr } from '@multiformats/multiaddr'\n     *\n     * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n     * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n     * ```\n     */\n    [(_DefaultMultiaddr_string = new WeakMap(), _DefaultMultiaddr_tuples = new WeakMap(), _DefaultMultiaddr_stringTuples = new WeakMap(), _a = symbol, inspect)]() {\n        return `Multiaddr(${codec.bytesToString(this.bytes)})`;\n    }\n}\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nexport function multiaddr(addr) {\n    return new DefaultMultiaddr(addr);\n}\nexport { getProtocol as protocols };\n//# sourceMappingURL=index.js.map","import { multiaddr } from '@multiformats/multiaddr';\n/*\n * Valid combinations\n */\nexport const DNS4 = base('dns4');\nexport const DNS6 = base('dns6');\nexport const DNSADDR = base('dnsaddr');\nexport const DNS = or(base('dns'), DNSADDR, DNS4, DNS6);\nexport const IP = or(base('ip4'), base('ip6'));\nexport const TCP = or(and(IP, base('tcp')), and(DNS, base('tcp')));\nexport const UDP = and(IP, base('udp'));\nexport const UTP = and(UDP, base('utp'));\nexport const QUIC = and(UDP, base('quic'));\nexport const WebSockets = or(and(TCP, base('ws')), and(DNS, base('ws')));\nexport const WebSocketsSecure = or(and(TCP, base('wss')), and(DNS, base('wss')), and(TCP, base('tls'), base('ws')), and(DNS, base('tls'), base('ws')));\nexport const HTTP = or(and(TCP, base('http')), and(IP, base('http')), and(DNS, base('http')));\nexport const HTTPS = or(and(TCP, base('https')), and(IP, base('https')), and(DNS, base('https')));\nconst _WebRTC = and(UDP, base('webrtc'), base('certhash'));\nexport const WebRTC = or(and(_WebRTC, base('p2p')), _WebRTC);\nexport const WebRTCStar = or(and(WebSockets, base('p2p-webrtc-star'), base('p2p')), and(WebSocketsSecure, base('p2p-webrtc-star'), base('p2p')), and(WebSockets, base('p2p-webrtc-star')), and(WebSocketsSecure, base('p2p-webrtc-star')));\nexport const WebSocketStar = or(and(WebSockets, base('p2p-websocket-star'), base('p2p')), and(WebSocketsSecure, base('p2p-websocket-star'), base('p2p')), and(WebSockets, base('p2p-websocket-star')), and(WebSocketsSecure, base('p2p-websocket-star')));\nexport const WebRTCDirect = or(and(HTTP, base('p2p-webrtc-direct'), base('p2p')), and(HTTPS, base('p2p-webrtc-direct'), base('p2p')), and(HTTP, base('p2p-webrtc-direct')), and(HTTPS, base('p2p-webrtc-direct')));\nexport const Reliable = or(WebSockets, WebSocketsSecure, HTTP, HTTPS, WebRTCStar, WebRTCDirect, TCP, UTP, QUIC, DNS, WebRTC);\n// Unlike ws-star, stardust can run over any transport thus removing the requirement for websockets (but don't even think about running a stardust server over webrtc-star ;) )\nexport const Stardust = or(and(Reliable, base('p2p-stardust'), base('p2p')), and(Reliable, base('p2p-stardust')));\nconst _P2P = or(and(Reliable, base('p2p')), WebRTCStar, WebRTCDirect, WebRTC, base('p2p'));\nconst _Circuit = or(and(_P2P, base('p2p-circuit'), _P2P), and(_P2P, base('p2p-circuit')), and(base('p2p-circuit'), _P2P), and(Reliable, base('p2p-circuit')), and(base('p2p-circuit'), Reliable), base('p2p-circuit'));\nconst CircuitRecursive = () => or(and(_Circuit, CircuitRecursive), _Circuit);\nexport const Circuit = CircuitRecursive();\nexport const P2P = or(and(Circuit, _P2P, Circuit), and(_P2P, Circuit), and(Circuit, _P2P), Circuit, _P2P);\nexport const IPFS = P2P;\n/*\n * Validation funcs\n */\nfunction makeMatchesFunction(partialMatch) {\n    function matches(a) {\n        let ma;\n        try {\n            ma = multiaddr(a);\n        }\n        catch (err) { // catch error\n            return false; // also if it's invalid it's probably not matching as well so return false\n        }\n        const out = partialMatch(ma.protoNames());\n        if (out === null) {\n            return false;\n        }\n        if (out === true || out === false) {\n            return out;\n        }\n        return out.length === 0;\n    }\n    return matches;\n}\nfunction and(...args) {\n    function partialMatch(a) {\n        if (a.length < args.length) {\n            return null;\n        }\n        let out = a;\n        args.some((arg) => {\n            out = typeof arg === 'function'\n                ? arg().partialMatch(a)\n                : arg.partialMatch(a);\n            if (Array.isArray(out)) {\n                a = out;\n            }\n            if (out === null) {\n                return true;\n            }\n            return false;\n        });\n        return out;\n    }\n    return {\n        toString: function () { return '{ ' + args.join(' ') + ' }'; },\n        input: args,\n        matches: makeMatchesFunction(partialMatch),\n        partialMatch\n    };\n}\nfunction or(...args) {\n    function partialMatch(a) {\n        let out = null;\n        args.some((arg) => {\n            const res = typeof arg === 'function'\n                ? arg().partialMatch(a)\n                : arg.partialMatch(a);\n            if (res != null) {\n                out = res;\n                return true;\n            }\n            return false;\n        });\n        return out;\n    }\n    const result = {\n        toString: function () { return '{ ' + args.join(' ') + ' }'; },\n        input: args,\n        matches: makeMatchesFunction(partialMatch),\n        partialMatch\n    };\n    return result;\n}\nfunction base(n) {\n    const name = n;\n    function matches(a) {\n        let ma;\n        try {\n            ma = multiaddr(a);\n        }\n        catch (err) { // catch error\n            return false; // also if it's invalid it's probably not matching as well so return false\n        }\n        const pnames = ma.protoNames();\n        if (pnames.length === 1 && pnames[0] === name) {\n            return true;\n        }\n        return false;\n    }\n    function partialMatch(protos) {\n        if (protos.length === 0) {\n            return null;\n        }\n        if (protos[0] === name) {\n            return protos.slice(1);\n        }\n        return null;\n    }\n    return {\n        toString: function () { return name; },\n        matches,\n        partialMatch\n    };\n}\n//# sourceMappingURL=index.js.map","import { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport { isIP } from '@chainsafe/is-ip';\nexport const isV4 = isIPv4;\nexport const isV6 = isIPv6;\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const toBytes = function (ip) {\n    let offset = 0;\n    ip = ip.toString().trim();\n    if (isV4(ip)) {\n        const bytes = new Uint8Array(offset + 4);\n        ip.split(/\\./g).forEach((byte) => {\n            bytes[offset++] = parseInt(byte, 10) & 0xff;\n        });\n        return bytes;\n    }\n    if (isV6(ip)) {\n        const sections = ip.split(':', 8);\n        let i;\n        for (i = 0; i < sections.length; i++) {\n            const isv4 = isV4(sections[i]);\n            let v4Buffer;\n            if (isv4) {\n                v4Buffer = toBytes(sections[i]);\n                sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16');\n            }\n            if (v4Buffer != null && ++i < 8) {\n                sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'));\n            }\n        }\n        if (sections[0] === '') {\n            while (sections.length < 8)\n                sections.unshift('0');\n        }\n        else if (sections[sections.length - 1] === '') {\n            while (sections.length < 8)\n                sections.push('0');\n        }\n        else if (sections.length < 8) {\n            for (i = 0; i < sections.length && sections[i] !== ''; i++)\n                ;\n            const argv = [i, 1];\n            for (i = 9 - sections.length; i > 0; i--) {\n                argv.push('0');\n            }\n            sections.splice.apply(sections, argv);\n        }\n        const bytes = new Uint8Array(offset + 16);\n        for (i = 0; i < sections.length; i++) {\n            const word = parseInt(sections[i], 16);\n            bytes[offset++] = (word >> 8) & 0xff;\n            bytes[offset++] = word & 0xff;\n        }\n        return bytes;\n    }\n    throw new Error('invalid ip address');\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const toString = function (buf, offset = 0, length) {\n    offset = ~~offset;\n    length = length ?? (buf.length - offset);\n    const view = new DataView(buf.buffer);\n    if (length === 4) {\n        const result = [];\n        // IPv4\n        for (let i = 0; i < length; i++) {\n            result.push(buf[offset + i]);\n        }\n        return result.join('.');\n    }\n    if (length === 16) {\n        const result = [];\n        // IPv6\n        for (let i = 0; i < length; i += 2) {\n            result.push(view.getUint16(offset + i).toString(16));\n        }\n        return result.join(':')\n            .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n            .replace(/:{3,4}/, '::');\n    }\n    return '';\n};\n//# sourceMappingURL=ip.js.map","const V = -1;\nexport const names = {};\nexport const codes = {};\nexport const table = [\n    [4, 32, 'ip4'],\n    [6, 16, 'tcp'],\n    [33, 16, 'dccp'],\n    [41, 128, 'ip6'],\n    [42, V, 'ip6zone'],\n    [43, 8, 'ipcidr'],\n    [53, V, 'dns', true],\n    [54, V, 'dns4', true],\n    [55, V, 'dns6', true],\n    [56, V, 'dnsaddr', true],\n    [132, 16, 'sctp'],\n    [273, 16, 'udp'],\n    [275, 0, 'p2p-webrtc-star'],\n    [276, 0, 'p2p-webrtc-direct'],\n    [277, 0, 'p2p-stardust'],\n    [280, 0, 'webrtc-direct'],\n    [281, 0, 'webrtc'],\n    [290, 0, 'p2p-circuit'],\n    [301, 0, 'udt'],\n    [302, 0, 'utp'],\n    [400, V, 'unix', false, true],\n    // `ipfs` is added before `p2p` for legacy support.\n    // All text representations will default to `p2p`, but `ipfs` will\n    // still be supported\n    [421, V, 'ipfs'],\n    // `p2p` is the preferred name for 421, and is now the default\n    [421, V, 'p2p'],\n    [443, 0, 'https'],\n    [444, 96, 'onion'],\n    [445, 296, 'onion3'],\n    [446, V, 'garlic64'],\n    [448, 0, 'tls'],\n    [449, V, 'sni'],\n    [460, 0, 'quic'],\n    [461, 0, 'quic-v1'],\n    [465, 0, 'webtransport'],\n    [466, V, 'certhash'],\n    [477, 0, 'ws'],\n    [478, 0, 'wss'],\n    [479, 0, 'p2p-websocket-star'],\n    [480, 0, 'http'],\n    [777, V, 'memory']\n];\n// populate tables\ntable.forEach(row => {\n    const proto = createProtocol(...row);\n    codes[proto.code] = proto;\n    names[proto.name] = proto;\n});\nexport function createProtocol(code, size, name, resolvable, path) {\n    return {\n        code,\n        size,\n        name,\n        resolvable: Boolean(resolvable),\n        path: Boolean(path)\n    };\n}\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nexport function getProtocol(proto) {\n    if (typeof proto === 'number') {\n        if (codes[proto] != null) {\n            return codes[proto];\n        }\n        throw new Error(`no protocol with code: ${proto}`);\n    }\n    else if (typeof proto === 'string') {\n        if (names[proto] != null) {\n            return names[proto];\n        }\n        throw new Error(`no protocol with name: ${proto}`);\n    }\n    throw new Error(`invalid protocol id type: ${typeof proto}`);\n}\n//# sourceMappingURL=protocols-table.js.map","/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\nimport * as ip from './ip.js';\nimport { getProtocol } from './protocols-table.js';\nimport { CID } from 'multiformats/cid';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { bases } from 'multiformats/basics';\nimport * as Digest from 'multiformats/hashes/digest';\nimport varint from 'varint';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { IpNet } from '@chainsafe/netmask';\nconst ip4Protocol = getProtocol('ip4');\nconst ip6Protocol = getProtocol('ip6');\nconst ipcidrProtocol = getProtocol('ipcidr');\nexport function convert(proto, a) {\n    if (a instanceof Uint8Array) {\n        return convertToString(proto, a);\n    }\n    else {\n        return convertToBytes(proto, a);\n    }\n}\n/**\n * Convert [code,Uint8Array] to string\n */\nexport function convertToString(proto, buf) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n        case 41: // ipv6\n            return bytes2ip(buf);\n        case 42: // ipv6zone\n            return bytes2str(buf);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return bytes2port(buf).toString();\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return bytes2str(buf);\n        case 421: // ipfs\n            return bytes2mh(buf);\n        case 444: // onion\n            return bytes2onion(buf);\n        case 445: // onion3\n            return bytes2onion(buf);\n        case 466: // certhash\n            return bytes2mb(buf);\n        default:\n            return uint8ArrayToString(buf, 'base16'); // no clue. convert to hex\n    }\n}\nexport function convertToBytes(proto, str) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n            return ip2bytes(str);\n        case 41: // ipv6\n            return ip2bytes(str);\n        case 42: // ipv6zone\n            return str2bytes(str);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return port2bytes(parseInt(str, 10));\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return str2bytes(str);\n        case 421: // ipfs\n            return mh2bytes(str);\n        case 444: // onion\n            return onion2bytes(str);\n        case 445: // onion3\n            return onion32bytes(str);\n        case 466: // certhash\n            return mb2bytes(str);\n        default:\n            return uint8ArrayFromString(str, 'base16'); // no clue. convert from hex\n    }\n}\nexport function convertToIpNet(multiaddr) {\n    let mask;\n    let addr;\n    multiaddr.stringTuples().forEach(([code, value]) => {\n        if (code === ip4Protocol.code || code === ip6Protocol.code) {\n            addr = value;\n        }\n        if (code === ipcidrProtocol.code) {\n            mask = value;\n        }\n    });\n    if (mask == null || addr == null) {\n        throw new Error('Invalid multiaddr');\n    }\n    return new IpNet(addr, mask);\n}\nconst decoders = Object.values(bases).map((c) => c.decoder);\nconst anybaseDecoder = (function () {\n    let acc = decoders[0].or(decoders[1]);\n    decoders.slice(2).forEach((d) => (acc = acc.or(d)));\n    return acc;\n})();\nfunction ip2bytes(ipString) {\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ip.toBytes(ipString);\n}\nfunction bytes2ip(ipBuff) {\n    const ipString = ip.toString(ipBuff, 0, ipBuff.length);\n    if (ipString == null) {\n        throw new Error('ipBuff is required');\n    }\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ipString;\n}\nfunction port2bytes(port) {\n    const buf = new ArrayBuffer(2);\n    const view = new DataView(buf);\n    view.setUint16(0, port);\n    return new Uint8Array(buf);\n}\nfunction bytes2port(buf) {\n    const view = new DataView(buf.buffer);\n    return view.getUint16(buf.byteOffset);\n}\nfunction str2bytes(str) {\n    const buf = uint8ArrayFromString(str);\n    const size = Uint8Array.from(varint.encode(buf.length));\n    return uint8ArrayConcat([size, buf], size.length + buf.length);\n}\nfunction bytes2str(buf) {\n    const size = varint.decode(buf);\n    buf = buf.slice(varint.decode.bytes);\n    if (buf.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(buf);\n}\nfunction mh2bytes(hash) {\n    let mh;\n    if (hash[0] === 'Q' || hash[0] === '1') {\n        mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes;\n    }\n    else {\n        mh = CID.parse(hash).multihash.bytes;\n    }\n    // the address is a varint prefixed multihash string representation\n    const size = Uint8Array.from(varint.encode(mh.length));\n    return uint8ArrayConcat([size, mh], size.length + mh.length);\n}\nfunction mb2bytes(mbstr) {\n    const mb = anybaseDecoder.decode(mbstr);\n    const size = Uint8Array.from(varint.encode(mb.length));\n    return uint8ArrayConcat([size, mb], size.length + mb.length);\n}\nfunction bytes2mb(buf) {\n    const size = varint.decode(buf);\n    const hash = buf.slice(varint.decode.bytes);\n    if (hash.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return 'u' + uint8ArrayToString(hash, 'base64url');\n}\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh(buf) {\n    const size = varint.decode(buf);\n    const address = buf.slice(varint.decode.bytes);\n    if (address.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(address, 'base58btc');\n}\nfunction onion2bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 16) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode('b' + addr[0]);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction onion32bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 56) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode(`b${addr[0]}`);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction bytes2onion(buf) {\n    const addrBytes = buf.slice(0, buf.length - 2);\n    const portBytes = buf.slice(buf.length - 2);\n    const addr = uint8ArrayToString(addrBytes, 'base32');\n    const port = bytes2port(portBytes);\n    return `${addr}:${port}`;\n}\n//# sourceMappingURL=convert.js.map","import { convertToBytes, convertToString } from './convert.js';\nimport { getProtocol } from './protocols-table.js';\nimport varint from 'varint';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\n/**\n * string -> [[str name, str addr]... ]\n */\nexport function stringToStringTuples(str) {\n    const tuples = [];\n    const parts = str.split('/').slice(1); // skip first empty elem\n    if (parts.length === 1 && parts[0] === '') {\n        return [];\n    }\n    for (let p = 0; p < parts.length; p++) {\n        const part = parts[p];\n        const proto = getProtocol(part);\n        if (proto.size === 0) {\n            tuples.push([part]);\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        p++; // advance addr part\n        if (p >= parts.length) {\n            throw ParseError('invalid address: ' + str);\n        }\n        // if it's a path proto, take the rest\n        if (proto.path === true) {\n            tuples.push([\n                part,\n                // should we need to check each path part to see if it's a proto?\n                // This would allow for other protocols to be added after a unix path,\n                // however it would have issues if the path had a protocol name in the path\n                cleanPath(parts.slice(p).join('/'))\n            ]);\n            break;\n        }\n        tuples.push([part, parts[p]]);\n    }\n    return tuples;\n}\n/**\n * [[str name, str addr]... ] -> string\n */\nexport function stringTuplesToString(tuples) {\n    const parts = [];\n    tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        parts.push(proto.name);\n        if (tup.length > 1 && tup[1] != null) {\n            parts.push(tup[1]);\n        }\n        return null;\n    });\n    return cleanPath(parts.join('/'));\n}\n/**\n * [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n */\nexport function stringTuplesToTuples(tuples) {\n    return tuples.map((tup) => {\n        if (!Array.isArray(tup)) {\n            tup = [tup];\n        }\n        const proto = protoFromTuple(tup);\n        if (tup.length > 1) {\n            return [proto.code, convertToBytes(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * Convert tuples to string tuples\n *\n * [[int code, Uint8Array]... ] -> [[int code, str addr]... ]\n */\nexport function tuplesToStringTuples(tuples) {\n    return tuples.map(tup => {\n        const proto = protoFromTuple(tup);\n        if (tup[1] != null) {\n            return [proto.code, convertToString(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * [[int code, Uint8Array ]... ] -> Uint8Array\n */\nexport function tuplesToBytes(tuples) {\n    return fromBytes(uint8ArrayConcat(tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        let buf = Uint8Array.from(varint.encode(proto.code));\n        if (tup.length > 1 && tup[1] != null) {\n            buf = uint8ArrayConcat([buf, tup[1]]); // add address buffer\n        }\n        return buf;\n    })));\n}\n/**\n * For the passed address, return the serialized size\n */\nexport function sizeForAddr(p, addr) {\n    if (p.size > 0) {\n        return p.size / 8;\n    }\n    else if (p.size === 0) {\n        return 0;\n    }\n    else {\n        const size = varint.decode(addr);\n        return size + (varint.decode.bytes ?? 0);\n    }\n}\nexport function bytesToTuples(buf) {\n    const tuples = [];\n    let i = 0;\n    while (i < buf.length) {\n        const code = varint.decode(buf, i);\n        const n = varint.decode.bytes ?? 0;\n        const p = getProtocol(code);\n        const size = sizeForAddr(p, buf.slice(i + n));\n        if (size === 0) {\n            tuples.push([code]);\n            i += n;\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        const addr = buf.slice(i + n, i + n + size);\n        i += (size + n);\n        if (i > buf.length) { // did not end _exactly_ at buffer.length\n            throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'));\n        }\n        // ok, tuple seems good.\n        tuples.push([code, addr]);\n    }\n    return tuples;\n}\n/**\n * Uint8Array -> String\n */\nexport function bytesToString(buf) {\n    const a = bytesToTuples(buf);\n    const b = tuplesToStringTuples(a);\n    return stringTuplesToString(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function stringToBytes(str) {\n    str = cleanPath(str);\n    const a = stringToStringTuples(str);\n    const b = stringTuplesToTuples(a);\n    return tuplesToBytes(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function fromString(str) {\n    return stringToBytes(str);\n}\n/**\n * Uint8Array -> Uint8Array\n */\nexport function fromBytes(buf) {\n    const err = validateBytes(buf);\n    if (err != null) {\n        throw err;\n    }\n    return Uint8Array.from(buf); // copy\n}\nexport function validateBytes(buf) {\n    try {\n        bytesToTuples(buf); // try to parse. will throw if breaks\n    }\n    catch (err) {\n        return err;\n    }\n}\nexport function isValidBytes(buf) {\n    return validateBytes(buf) === undefined;\n}\nexport function cleanPath(str) {\n    return '/' + str.trim().split('/').filter((a) => a).join('/');\n}\nexport function ParseError(str) {\n    return new Error('Error parsing address: ' + str);\n}\nexport function protoFromTuple(tup) {\n    const proto = getProtocol(tup[0]);\n    return proto;\n}\n//# sourceMappingURL=codec.js.map","/**\n * @packageDocumentation\n *\n * An implementation of a Multiaddr in JavaScript\n *\n * @example\n *\n * ```js\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/1234')\n * ```\n */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _DefaultMultiaddr_string, _DefaultMultiaddr_tuples, _DefaultMultiaddr_stringTuples, _a;\nimport * as codec from './codec.js';\nimport { getProtocol, names } from './protocols-table.js';\nimport varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport { base58btc } from 'multiformats/bases/base58';\nimport errCode from 'err-code';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst DNS_CODES = [\n    getProtocol('dns').code,\n    getProtocol('dns4').code,\n    getProtocol('dns6').code,\n    getProtocol('dnsaddr').code\n];\n/**\n * All configured {@link Resolver}s\n */\nexport const resolvers = new Map();\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr');\nexport { MultiaddrFilter } from './filter/multiaddr-filter.js';\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @example\n * ```js\n * import { fromNodeAddress } from '@multiformats/multiaddr'\n *\n * fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n */\nexport function fromNodeAddress(addr, transport) {\n    if (addr == null) {\n        throw new Error('requires node address object');\n    }\n    if (transport == null) {\n        throw new Error('requires transport protocol');\n    }\n    let ip;\n    let host = addr.address;\n    switch (addr.family) {\n        case 4:\n            ip = 'ip4';\n            break;\n        case 6:\n            ip = 'ip6';\n            if (host.includes('%')) {\n                const parts = host.split('%');\n                if (parts.length !== 2) {\n                    throw Error('Multiple ip6 zones in multiaddr');\n                }\n                host = parts[0];\n                const zone = parts[1];\n                ip = `/ip6zone/${zone}/ip6`;\n            }\n            break;\n        default:\n            throw Error('Invalid addr family, should be 4 or 6.');\n    }\n    return new DefaultMultiaddr('/' + [ip, host, transport, addr.port].join('/'));\n}\n/**\n * Returns if something is a {@link Multiaddr} that is a resolvable name\n *\n * @example\n *\n * ```js\n * import { isName, multiaddr } from '@multiformats/multiaddr'\n *\n * isName(multiaddr('/ip4/127.0.0.1'))\n * // false\n * isName(multiaddr('/dns/ipfs.io'))\n * // true\n * ```\n */\nexport function isName(addr) {\n    if (!isMultiaddr(addr)) {\n        return false;\n    }\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable);\n}\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nexport function isMultiaddr(value) {\n    return Boolean(value?.[symbol]);\n}\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nclass DefaultMultiaddr {\n    constructor(addr) {\n        _DefaultMultiaddr_string.set(this, void 0);\n        _DefaultMultiaddr_tuples.set(this, void 0);\n        _DefaultMultiaddr_stringTuples.set(this, void 0);\n        this[_a] = true;\n        // default\n        if (addr == null) {\n            addr = '';\n        }\n        if (addr instanceof Uint8Array) {\n            this.bytes = codec.fromBytes(addr);\n        }\n        else if (typeof addr === 'string') {\n            if (addr.length > 0 && addr.charAt(0) !== '/') {\n                throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\n            }\n            this.bytes = codec.fromString(addr);\n        }\n        else if (isMultiaddr(addr)) { // Multiaddr\n            this.bytes = codec.fromBytes(addr.bytes); // validate + copy buffer\n        }\n        else {\n            throw new Error('addr must be a string, Buffer, or another Multiaddr');\n        }\n    }\n    toString() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_string, codec.bytesToString(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\");\n    }\n    toJSON() {\n        return this.toString();\n    }\n    toOptions() {\n        let family;\n        let transport;\n        let host;\n        let port;\n        let zone = '';\n        const tcp = getProtocol('tcp');\n        const udp = getProtocol('udp');\n        const ip4 = getProtocol('ip4');\n        const ip6 = getProtocol('ip6');\n        const dns6 = getProtocol('dns6');\n        const ip6zone = getProtocol('ip6zone');\n        for (const [code, value] of this.stringTuples()) {\n            if (code === ip6zone.code) {\n                zone = `%${value ?? ''}`;\n            }\n            // default to https when protocol & port are omitted from DNS addrs\n            if (DNS_CODES.includes(code)) {\n                transport = tcp.name;\n                port = 443;\n                host = `${value ?? ''}${zone}`;\n                family = code === dns6.code ? 6 : 4;\n            }\n            if (code === tcp.code || code === udp.code) {\n                transport = getProtocol(code).name;\n                port = parseInt(value ?? '');\n            }\n            if (code === ip4.code || code === ip6.code) {\n                transport = getProtocol(code).name;\n                host = `${value ?? ''}${zone}`;\n                family = code === ip6.code ? 6 : 4;\n            }\n        }\n        if (family == null || transport == null || host == null || port == null) {\n            throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".');\n        }\n        const opts = {\n            family,\n            host,\n            transport,\n            port\n        };\n        return opts;\n    }\n    protos() {\n        return this.protoCodes().map(code => Object.assign({}, getProtocol(code)));\n    }\n    protoCodes() {\n        const codes = [];\n        const buf = this.bytes;\n        let i = 0;\n        while (i < buf.length) {\n            const code = varint.decode(buf, i);\n            const n = varint.decode.bytes ?? 0;\n            const p = getProtocol(code);\n            const size = codec.sizeForAddr(p, buf.slice(i + n));\n            i += (size + n);\n            codes.push(code);\n        }\n        return codes;\n    }\n    protoNames() {\n        return this.protos().map(proto => proto.name);\n    }\n    tuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_tuples, codec.bytesToTuples(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\");\n    }\n    stringTuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_stringTuples, codec.tuplesToStringTuples(this.tuples()), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\");\n    }\n    encapsulate(addr) {\n        addr = new DefaultMultiaddr(addr);\n        return new DefaultMultiaddr(this.toString() + addr.toString());\n    }\n    decapsulate(addr) {\n        const addrString = addr.toString();\n        const s = this.toString();\n        const i = s.lastIndexOf(addrString);\n        if (i < 0) {\n            throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`);\n        }\n        return new DefaultMultiaddr(s.slice(0, i));\n    }\n    decapsulateCode(code) {\n        const tuples = this.tuples();\n        for (let i = tuples.length - 1; i >= 0; i--) {\n            if (tuples[i][0] === code) {\n                return new DefaultMultiaddr(codec.tuplesToBytes(tuples.slice(0, i)));\n            }\n        }\n        return this;\n    }\n    getPeerId() {\n        try {\n            const tuples = this.stringTuples().filter((tuple) => {\n                if (tuple[0] === names.ipfs.code) {\n                    return true;\n                }\n                return false;\n            });\n            // Get the last ipfs tuple ['ipfs', 'peerid string']\n            const tuple = tuples.pop();\n            if (tuple?.[1] != null) {\n                const peerIdStr = tuple[1];\n                // peer id is base58btc encoded string but not multibase encoded so add the `z`\n                // prefix so we can validate that it is correctly encoded\n                if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n                    return uint8ArrayToString(base58btc.decode(`z${peerIdStr}`), 'base58btc');\n                }\n                // try to parse peer id as CID\n                return uint8ArrayToString(CID.parse(peerIdStr).multihash.bytes, 'base58btc');\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    getPath() {\n        let path = null;\n        try {\n            path = this.stringTuples().filter((tuple) => {\n                const proto = getProtocol(tuple[0]);\n                if (proto.path === true) {\n                    return true;\n                }\n                return false;\n            })[0][1];\n            if (path == null) {\n                path = null;\n            }\n        }\n        catch {\n            path = null;\n        }\n        return path;\n    }\n    equals(addr) {\n        return uint8ArrayEquals(this.bytes, addr.bytes);\n    }\n    async resolve(options) {\n        const resolvableProto = this.protos().find((p) => p.resolvable);\n        // Multiaddr is not resolvable?\n        if (resolvableProto == null) {\n            return [this];\n        }\n        const resolver = resolvers.get(resolvableProto.name);\n        if (resolver == null) {\n            throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER');\n        }\n        const addresses = await resolver(this, options);\n        return addresses.map((a) => new DefaultMultiaddr(a));\n    }\n    nodeAddress() {\n        const options = this.toOptions();\n        if (options.transport !== 'tcp' && options.transport !== 'udp') {\n            throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`);\n        }\n        return {\n            family: options.family,\n            address: options.host,\n            port: options.port\n        };\n    }\n    isThinWaistAddress(addr) {\n        const protos = (addr ?? this).protos();\n        if (protos.length !== 2) {\n            return false;\n        }\n        if (protos[0].code !== 4 && protos[0].code !== 41) {\n            return false;\n        }\n        if (protos[1].code !== 6 && protos[1].code !== 273) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns Multiaddr as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { multiaddr } from '@multiformats/multiaddr'\n     *\n     * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n     * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n     * ```\n     */\n    [(_DefaultMultiaddr_string = new WeakMap(), _DefaultMultiaddr_tuples = new WeakMap(), _DefaultMultiaddr_stringTuples = new WeakMap(), _a = symbol, inspect)]() {\n        return `Multiaddr(${codec.bytesToString(this.bytes)})`;\n    }\n}\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nexport function multiaddr(addr) {\n    return new DefaultMultiaddr(addr);\n}\nexport { getProtocol as protocols };\n//# sourceMappingURL=index.js.map","import { multiaddr } from '@multiformats/multiaddr';\nconst reduceValue = (_, v) => v;\nconst tcpUri = (str, port, parts, opts) => {\n    // return tcp when explicitly requested\n    if ((opts != null) && opts.assumeHttp === false)\n        return `tcp://${str}:${port}`;\n    // check if tcp is the last protocol in multiaddr\n    let protocol = 'tcp';\n    let explicitPort = `:${port}`;\n    const last = parts[parts.length - 1];\n    if (last.protocol === 'tcp') {\n        // assume http and produce clean urls\n        protocol = port === '443' ? 'https' : 'http';\n        explicitPort = port === '443' || port === '80' ? '' : explicitPort;\n    }\n    return `${protocol}://${str}${explicitPort}`;\n};\nconst Reducers = {\n    ip4: reduceValue,\n    ip6: (str, content, i, parts) => (parts.length === 1 && parts[0].protocol === 'ip6'\n        ? content\n        : `[${content}]`),\n    tcp: (str, content, i, parts, opts) => (parts.some(p => ['http', 'https', 'ws', 'wss'].includes(p.protocol))\n        ? `${str}:${content}`\n        : tcpUri(str, content, parts, opts)),\n    udp: (str, content) => `udp://${str}:${content}`,\n    dnsaddr: reduceValue,\n    dns4: reduceValue,\n    dns6: reduceValue,\n    ipfs: (str, content) => `${str}/ipfs/${content}`,\n    p2p: (str, content) => `${str}/p2p/${content}`,\n    http: str => `http://${str}`,\n    https: str => `https://${str}`,\n    ws: str => `ws://${str}`,\n    wss: str => `wss://${str}`,\n    'p2p-websocket-star': str => `${str}/p2p-websocket-star`,\n    'p2p-webrtc-star': str => `${str}/p2p-webrtc-star`,\n    'p2p-webrtc-direct': str => `${str}/p2p-webrtc-direct`\n};\nexport function multiaddrToUri(input, opts) {\n    const ma = multiaddr(input);\n    const parts = ma.toString().split('/').slice(1);\n    return ma\n        .tuples()\n        .map(tuple => ({\n        protocol: parts.shift() ?? '',\n        content: (tuple[1] != null) ? parts.shift() ?? '' : ''\n    }))\n        .reduce((str, part, i, parts) => {\n        const reduce = Reducers[part.protocol];\n        if (reduce == null) {\n            throw new Error(`Unsupported protocol ${part.protocol}`);\n        }\n        return reduce(str, part.content, i, parts, opts);\n    }, '');\n}\n//# sourceMappingURL=index.js.map","import { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport { isIP } from '@chainsafe/is-ip';\nexport const isV4 = isIPv4;\nexport const isV6 = isIPv6;\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const toBytes = function (ip) {\n    let offset = 0;\n    ip = ip.toString().trim();\n    if (isV4(ip)) {\n        const bytes = new Uint8Array(offset + 4);\n        ip.split(/\\./g).forEach((byte) => {\n            bytes[offset++] = parseInt(byte, 10) & 0xff;\n        });\n        return bytes;\n    }\n    if (isV6(ip)) {\n        const sections = ip.split(':', 8);\n        let i;\n        for (i = 0; i < sections.length; i++) {\n            const isv4 = isV4(sections[i]);\n            let v4Buffer;\n            if (isv4) {\n                v4Buffer = toBytes(sections[i]);\n                sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16');\n            }\n            if (v4Buffer != null && ++i < 8) {\n                sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'));\n            }\n        }\n        if (sections[0] === '') {\n            while (sections.length < 8)\n                sections.unshift('0');\n        }\n        else if (sections[sections.length - 1] === '') {\n            while (sections.length < 8)\n                sections.push('0');\n        }\n        else if (sections.length < 8) {\n            for (i = 0; i < sections.length && sections[i] !== ''; i++)\n                ;\n            const argv = [i, 1];\n            for (i = 9 - sections.length; i > 0; i--) {\n                argv.push('0');\n            }\n            sections.splice.apply(sections, argv);\n        }\n        const bytes = new Uint8Array(offset + 16);\n        for (i = 0; i < sections.length; i++) {\n            const word = parseInt(sections[i], 16);\n            bytes[offset++] = (word >> 8) & 0xff;\n            bytes[offset++] = word & 0xff;\n        }\n        return bytes;\n    }\n    throw new Error('invalid ip address');\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const toString = function (buf, offset = 0, length) {\n    offset = ~~offset;\n    length = length ?? (buf.length - offset);\n    const view = new DataView(buf.buffer);\n    if (length === 4) {\n        const result = [];\n        // IPv4\n        for (let i = 0; i < length; i++) {\n            result.push(buf[offset + i]);\n        }\n        return result.join('.');\n    }\n    if (length === 16) {\n        const result = [];\n        // IPv6\n        for (let i = 0; i < length; i += 2) {\n            result.push(view.getUint16(offset + i).toString(16));\n        }\n        return result.join(':')\n            .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n            .replace(/:{3,4}/, '::');\n    }\n    return '';\n};\n//# sourceMappingURL=ip.js.map","/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\nimport * as ip from './ip.js';\nimport { getProtocol } from './protocols-table.js';\nimport { CID } from 'multiformats/cid';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { bases } from 'multiformats/basics';\nimport * as Digest from 'multiformats/hashes/digest';\nimport varint from 'varint';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nexport function convert(proto, a) {\n    if (a instanceof Uint8Array) {\n        return convertToString(proto, a);\n    }\n    else {\n        return convertToBytes(proto, a);\n    }\n}\n/**\n * Convert [code,Uint8Array] to string\n */\nexport function convertToString(proto, buf) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n        case 41: // ipv6\n            return bytes2ip(buf);\n        case 42: // ipv6zone\n            return bytes2str(buf);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return bytes2port(buf).toString();\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return bytes2str(buf);\n        case 421: // ipfs\n            return bytes2mh(buf);\n        case 444: // onion\n            return bytes2onion(buf);\n        case 445: // onion3\n            return bytes2onion(buf);\n        case 466: // certhash\n            return bytes2mb(buf);\n        default:\n            return uint8ArrayToString(buf, 'base16'); // no clue. convert to hex\n    }\n}\nexport function convertToBytes(proto, str) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n            return ip2bytes(str);\n        case 41: // ipv6\n            return ip2bytes(str);\n        case 42: // ipv6zone\n            return str2bytes(str);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return port2bytes(parseInt(str, 10));\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return str2bytes(str);\n        case 421: // ipfs\n            return mh2bytes(str);\n        case 444: // onion\n            return onion2bytes(str);\n        case 445: // onion3\n            return onion32bytes(str);\n        case 466: // certhash\n            return mb2bytes(str);\n        default:\n            return uint8ArrayFromString(str, 'base16'); // no clue. convert from hex\n    }\n}\nconst decoders = Object.values(bases).map((c) => c.decoder);\nconst anybaseDecoder = (function () {\n    let acc = decoders[0].or(decoders[1]);\n    decoders.slice(2).forEach((d) => (acc = acc.or(d)));\n    return acc;\n})();\nfunction ip2bytes(ipString) {\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ip.toBytes(ipString);\n}\nfunction bytes2ip(ipBuff) {\n    const ipString = ip.toString(ipBuff, 0, ipBuff.length);\n    if (ipString == null) {\n        throw new Error('ipBuff is required');\n    }\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ipString;\n}\nfunction port2bytes(port) {\n    const buf = new ArrayBuffer(2);\n    const view = new DataView(buf);\n    view.setUint16(0, port);\n    return new Uint8Array(buf);\n}\nfunction bytes2port(buf) {\n    const view = new DataView(buf.buffer);\n    return view.getUint16(buf.byteOffset);\n}\nfunction str2bytes(str) {\n    const buf = uint8ArrayFromString(str);\n    const size = Uint8Array.from(varint.encode(buf.length));\n    return uint8ArrayConcat([size, buf], size.length + buf.length);\n}\nfunction bytes2str(buf) {\n    const size = varint.decode(buf);\n    buf = buf.slice(varint.decode.bytes);\n    if (buf.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(buf);\n}\nfunction mh2bytes(hash) {\n    let mh;\n    if (hash[0] === 'Q' || hash[0] === '1') {\n        mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes;\n    }\n    else {\n        mh = CID.parse(hash).multihash.bytes;\n    }\n    // the address is a varint prefixed multihash string representation\n    const size = Uint8Array.from(varint.encode(mh.length));\n    return uint8ArrayConcat([size, mh], size.length + mh.length);\n}\nfunction mb2bytes(mbstr) {\n    const mb = anybaseDecoder.decode(mbstr);\n    const size = Uint8Array.from(varint.encode(mb.length));\n    return uint8ArrayConcat([size, mb], size.length + mb.length);\n}\nfunction bytes2mb(buf) {\n    const size = varint.decode(buf);\n    const hash = buf.slice(varint.decode.bytes);\n    if (hash.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return 'u' + uint8ArrayToString(hash, 'base64url');\n}\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh(buf) {\n    const size = varint.decode(buf);\n    const address = buf.slice(varint.decode.bytes);\n    if (address.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(address, 'base58btc');\n}\nfunction onion2bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 16) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode('b' + addr[0]);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction onion32bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 56) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode(`b${addr[0]}`);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction bytes2onion(buf) {\n    const addrBytes = buf.slice(0, buf.length - 2);\n    const portBytes = buf.slice(buf.length - 2);\n    const addr = uint8ArrayToString(addrBytes, 'base32');\n    const port = bytes2port(portBytes);\n    return `${addr}:${port}`;\n}\n//# sourceMappingURL=convert.js.map","import { convertToBytes, convertToString } from './convert.js';\nimport { getProtocol } from './protocols-table.js';\nimport varint from 'varint';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\n/**\n * string -> [[str name, str addr]... ]\n */\nexport function stringToStringTuples(str) {\n    const tuples = [];\n    const parts = str.split('/').slice(1); // skip first empty elem\n    if (parts.length === 1 && parts[0] === '') {\n        return [];\n    }\n    for (let p = 0; p < parts.length; p++) {\n        const part = parts[p];\n        const proto = getProtocol(part);\n        if (proto.size === 0) {\n            tuples.push([part]);\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        p++; // advance addr part\n        if (p >= parts.length) {\n            throw ParseError('invalid address: ' + str);\n        }\n        // if it's a path proto, take the rest\n        if (proto.path === true) {\n            tuples.push([\n                part,\n                // should we need to check each path part to see if it's a proto?\n                // This would allow for other protocols to be added after a unix path,\n                // however it would have issues if the path had a protocol name in the path\n                cleanPath(parts.slice(p).join('/'))\n            ]);\n            break;\n        }\n        tuples.push([part, parts[p]]);\n    }\n    return tuples;\n}\n/**\n * [[str name, str addr]... ] -> string\n */\nexport function stringTuplesToString(tuples) {\n    const parts = [];\n    tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        parts.push(proto.name);\n        if (tup.length > 1 && tup[1] != null) {\n            parts.push(tup[1]);\n        }\n        return null;\n    });\n    return cleanPath(parts.join('/'));\n}\n/**\n * [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n */\nexport function stringTuplesToTuples(tuples) {\n    return tuples.map((tup) => {\n        if (!Array.isArray(tup)) {\n            tup = [tup];\n        }\n        const proto = protoFromTuple(tup);\n        if (tup.length > 1) {\n            return [proto.code, convertToBytes(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * Convert tuples to string tuples\n *\n * [[int code, Uint8Array]... ] -> [[int code, str addr]... ]\n */\nexport function tuplesToStringTuples(tuples) {\n    return tuples.map(tup => {\n        const proto = protoFromTuple(tup);\n        if (tup[1] != null) {\n            return [proto.code, convertToString(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * [[int code, Uint8Array ]... ] -> Uint8Array\n */\nexport function tuplesToBytes(tuples) {\n    return fromBytes(uint8ArrayConcat(tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        let buf = Uint8Array.from(varint.encode(proto.code));\n        if (tup.length > 1 && tup[1] != null) {\n            buf = uint8ArrayConcat([buf, tup[1]]); // add address buffer\n        }\n        return buf;\n    })));\n}\n/**\n * For the passed address, return the serialized size\n */\nexport function sizeForAddr(p, addr) {\n    if (p.size > 0) {\n        return p.size / 8;\n    }\n    else if (p.size === 0) {\n        return 0;\n    }\n    else {\n        const size = varint.decode(addr);\n        return size + (varint.decode.bytes ?? 0);\n    }\n}\nexport function bytesToTuples(buf) {\n    const tuples = [];\n    let i = 0;\n    while (i < buf.length) {\n        const code = varint.decode(buf, i);\n        const n = varint.decode.bytes ?? 0;\n        const p = getProtocol(code);\n        const size = sizeForAddr(p, buf.slice(i + n));\n        if (size === 0) {\n            tuples.push([code]);\n            i += n;\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        const addr = buf.slice(i + n, i + n + size);\n        i += (size + n);\n        if (i > buf.length) { // did not end _exactly_ at buffer.length\n            throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'));\n        }\n        // ok, tuple seems good.\n        tuples.push([code, addr]);\n    }\n    return tuples;\n}\n/**\n * Uint8Array -> String\n */\nexport function bytesToString(buf) {\n    const a = bytesToTuples(buf);\n    const b = tuplesToStringTuples(a);\n    return stringTuplesToString(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function stringToBytes(str) {\n    str = cleanPath(str);\n    const a = stringToStringTuples(str);\n    const b = stringTuplesToTuples(a);\n    return tuplesToBytes(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function fromString(str) {\n    return stringToBytes(str);\n}\n/**\n * Uint8Array -> Uint8Array\n */\nexport function fromBytes(buf) {\n    const err = validateBytes(buf);\n    if (err != null) {\n        throw err;\n    }\n    return Uint8Array.from(buf); // copy\n}\nexport function validateBytes(buf) {\n    try {\n        bytesToTuples(buf); // try to parse. will throw if breaks\n    }\n    catch (err) {\n        return err;\n    }\n}\nexport function isValidBytes(buf) {\n    return validateBytes(buf) === undefined;\n}\nexport function cleanPath(str) {\n    return '/' + str.trim().split('/').filter((a) => a).join('/');\n}\nexport function ParseError(str) {\n    return new Error('Error parsing address: ' + str);\n}\nexport function protoFromTuple(tup) {\n    const proto = getProtocol(tup[0]);\n    return proto;\n}\n//# sourceMappingURL=codec.js.map","/**\n * @packageDocumentation\n *\n * An implementation of a Multiaddr in JavaScript\n *\n * @example\n *\n * ```js\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/1234')\n * ```\n */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _DefaultMultiaddr_string, _DefaultMultiaddr_tuples, _DefaultMultiaddr_stringTuples, _a;\nimport * as codec from './codec.js';\nimport { getProtocol, names } from './protocols-table.js';\nimport varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport { base58btc } from 'multiformats/bases/base58';\nimport errCode from 'err-code';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst DNS_CODES = [\n    getProtocol('dns').code,\n    getProtocol('dns4').code,\n    getProtocol('dns6').code,\n    getProtocol('dnsaddr').code\n];\n/**\n * All configured {@link Resolver}s\n */\nexport const resolvers = new Map();\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr');\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @example\n * ```js\n * import { fromNodeAddress } from '@multiformats/multiaddr'\n *\n * fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n */\nexport function fromNodeAddress(addr, transport) {\n    if (addr == null) {\n        throw new Error('requires node address object');\n    }\n    if (transport == null) {\n        throw new Error('requires transport protocol');\n    }\n    let ip;\n    let host = addr.address;\n    switch (addr.family) {\n        case 4:\n            ip = 'ip4';\n            break;\n        case 6:\n            ip = 'ip6';\n            if (host.includes('%')) {\n                const parts = host.split('%');\n                if (parts.length !== 2) {\n                    throw Error('Multiple ip6 zones in multiaddr');\n                }\n                host = parts[0];\n                const zone = parts[1];\n                ip = `/ip6zone/${zone}/ip6`;\n            }\n            break;\n        default:\n            throw Error('Invalid addr family, should be 4 or 6.');\n    }\n    return new DefaultMultiaddr('/' + [ip, host, transport, addr.port].join('/'));\n}\n/**\n * Returns if something is a {@link Multiaddr} that is a resolvable name\n *\n * @example\n *\n * ```js\n * import { isName, multiaddr } from '@multiformats/multiaddr'\n *\n * isName(multiaddr('/ip4/127.0.0.1'))\n * // false\n * isName(multiaddr('/dns/ipfs.io'))\n * // true\n * ```\n */\nexport function isName(addr) {\n    if (!isMultiaddr(addr)) {\n        return false;\n    }\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable);\n}\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nexport function isMultiaddr(value) {\n    return Boolean(value?.[symbol]);\n}\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nclass DefaultMultiaddr {\n    constructor(addr) {\n        _DefaultMultiaddr_string.set(this, void 0);\n        _DefaultMultiaddr_tuples.set(this, void 0);\n        _DefaultMultiaddr_stringTuples.set(this, void 0);\n        this[_a] = true;\n        // default\n        if (addr == null) {\n            addr = '';\n        }\n        if (addr instanceof Uint8Array) {\n            this.bytes = codec.fromBytes(addr);\n        }\n        else if (typeof addr === 'string') {\n            if (addr.length > 0 && addr.charAt(0) !== '/') {\n                throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\n            }\n            this.bytes = codec.fromString(addr);\n        }\n        else if (isMultiaddr(addr)) { // Multiaddr\n            this.bytes = codec.fromBytes(addr.bytes); // validate + copy buffer\n        }\n        else {\n            throw new Error('addr must be a string, Buffer, or another Multiaddr');\n        }\n    }\n    toString() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_string, codec.bytesToString(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\");\n    }\n    toJSON() {\n        return this.toString();\n    }\n    toOptions() {\n        let family;\n        let transport;\n        let host;\n        let port;\n        let zone = '';\n        const tcp = getProtocol('tcp');\n        const udp = getProtocol('udp');\n        const ip4 = getProtocol('ip4');\n        const ip6 = getProtocol('ip6');\n        const dns6 = getProtocol('dns6');\n        const ip6zone = getProtocol('ip6zone');\n        for (const [code, value] of this.stringTuples()) {\n            if (code === ip6zone.code) {\n                zone = `%${value ?? ''}`;\n            }\n            // default to https when protocol & port are omitted from DNS addrs\n            if (DNS_CODES.includes(code)) {\n                transport = tcp.name;\n                port = 443;\n                host = `${value ?? ''}${zone}`;\n                family = code === dns6.code ? 6 : 4;\n            }\n            if (code === tcp.code || code === udp.code) {\n                transport = getProtocol(code).name;\n                port = parseInt(value ?? '');\n            }\n            if (code === ip4.code || code === ip6.code) {\n                transport = getProtocol(code).name;\n                host = `${value ?? ''}${zone}`;\n                family = code === ip6.code ? 6 : 4;\n            }\n        }\n        if (family == null || transport == null || host == null || port == null) {\n            throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".');\n        }\n        const opts = {\n            family,\n            host,\n            transport,\n            port\n        };\n        return opts;\n    }\n    protos() {\n        return this.protoCodes().map(code => Object.assign({}, getProtocol(code)));\n    }\n    protoCodes() {\n        const codes = [];\n        const buf = this.bytes;\n        let i = 0;\n        while (i < buf.length) {\n            const code = varint.decode(buf, i);\n            const n = varint.decode.bytes ?? 0;\n            const p = getProtocol(code);\n            const size = codec.sizeForAddr(p, buf.slice(i + n));\n            i += (size + n);\n            codes.push(code);\n        }\n        return codes;\n    }\n    protoNames() {\n        return this.protos().map(proto => proto.name);\n    }\n    tuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_tuples, codec.bytesToTuples(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\");\n    }\n    stringTuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_stringTuples, codec.tuplesToStringTuples(this.tuples()), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\");\n    }\n    encapsulate(addr) {\n        addr = new DefaultMultiaddr(addr);\n        return new DefaultMultiaddr(this.toString() + addr.toString());\n    }\n    decapsulate(addr) {\n        const addrString = addr.toString();\n        const s = this.toString();\n        const i = s.lastIndexOf(addrString);\n        if (i < 0) {\n            throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`);\n        }\n        return new DefaultMultiaddr(s.slice(0, i));\n    }\n    decapsulateCode(code) {\n        const tuples = this.tuples();\n        for (let i = tuples.length - 1; i >= 0; i--) {\n            if (tuples[i][0] === code) {\n                return new DefaultMultiaddr(codec.tuplesToBytes(tuples.slice(0, i)));\n            }\n        }\n        return this;\n    }\n    getPeerId() {\n        try {\n            const tuples = this.stringTuples().filter((tuple) => {\n                if (tuple[0] === names.ipfs.code) {\n                    return true;\n                }\n                return false;\n            });\n            // Get the last ipfs tuple ['ipfs', 'peerid string']\n            const tuple = tuples.pop();\n            if (tuple?.[1] != null) {\n                const peerIdStr = tuple[1];\n                // peer id is base58btc encoded string but not multibase encoded so add the `z`\n                // prefix so we can validate that it is correctly encoded\n                if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n                    return uint8ArrayToString(base58btc.decode(`z${peerIdStr}`), 'base58btc');\n                }\n                // try to parse peer id as CID\n                return uint8ArrayToString(CID.parse(peerIdStr).multihash.bytes, 'base58btc');\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    getPath() {\n        let path = null;\n        try {\n            path = this.stringTuples().filter((tuple) => {\n                const proto = getProtocol(tuple[0]);\n                if (proto.path === true) {\n                    return true;\n                }\n                return false;\n            })[0][1];\n            if (path == null) {\n                path = null;\n            }\n        }\n        catch {\n            path = null;\n        }\n        return path;\n    }\n    equals(addr) {\n        return uint8ArrayEquals(this.bytes, addr.bytes);\n    }\n    async resolve(options) {\n        const resolvableProto = this.protos().find((p) => p.resolvable);\n        // Multiaddr is not resolvable?\n        if (resolvableProto == null) {\n            return [this];\n        }\n        const resolver = resolvers.get(resolvableProto.name);\n        if (resolver == null) {\n            throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER');\n        }\n        const addresses = await resolver(this, options);\n        return addresses.map((a) => new DefaultMultiaddr(a));\n    }\n    nodeAddress() {\n        const options = this.toOptions();\n        if (options.transport !== 'tcp' && options.transport !== 'udp') {\n            throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`);\n        }\n        return {\n            family: options.family,\n            address: options.host,\n            port: options.port\n        };\n    }\n    isThinWaistAddress(addr) {\n        const protos = (addr ?? this).protos();\n        if (protos.length !== 2) {\n            return false;\n        }\n        if (protos[0].code !== 4 && protos[0].code !== 41) {\n            return false;\n        }\n        if (protos[1].code !== 6 && protos[1].code !== 273) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns Multiaddr as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { multiaddr } from '@multiformats/multiaddr'\n     *\n     * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n     * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n     * ```\n     */\n    [(_DefaultMultiaddr_string = new WeakMap(), _DefaultMultiaddr_tuples = new WeakMap(), _DefaultMultiaddr_stringTuples = new WeakMap(), _a = symbol, inspect)]() {\n        return `Multiaddr(${codec.bytesToString(this.bytes)})`;\n    }\n}\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nexport function multiaddr(addr) {\n    return new DefaultMultiaddr(addr);\n}\nexport { getProtocol as protocols };\n//# sourceMappingURL=index.js.map","const V = -1;\nexport const names = {};\nexport const codes = {};\nexport const table = [\n    [4, 32, 'ip4'],\n    [6, 16, 'tcp'],\n    [33, 16, 'dccp'],\n    [41, 128, 'ip6'],\n    [42, V, 'ip6zone'],\n    [43, 8, 'ipcidr'],\n    [53, V, 'dns', true],\n    [54, V, 'dns4', true],\n    [55, V, 'dns6', true],\n    [56, V, 'dnsaddr', true],\n    [132, 16, 'sctp'],\n    [273, 16, 'udp'],\n    [275, 0, 'p2p-webrtc-star'],\n    [276, 0, 'p2p-webrtc-direct'],\n    [277, 0, 'p2p-stardust'],\n    [280, 0, 'webrtc'],\n    [281, 0, 'webrtc-w3c'],\n    [290, 0, 'p2p-circuit'],\n    [301, 0, 'udt'],\n    [302, 0, 'utp'],\n    [400, V, 'unix', false, true],\n    // `ipfs` is added before `p2p` for legacy support.\n    // All text representations will default to `p2p`, but `ipfs` will\n    // still be supported\n    [421, V, 'ipfs'],\n    // `p2p` is the preferred name for 421, and is now the default\n    [421, V, 'p2p'],\n    [443, 0, 'https'],\n    [444, 96, 'onion'],\n    [445, 296, 'onion3'],\n    [446, V, 'garlic64'],\n    [448, 0, 'tls'],\n    [449, V, 'sni'],\n    [460, 0, 'quic'],\n    [461, 0, 'quic-v1'],\n    [465, 0, 'webtransport'],\n    [466, V, 'certhash'],\n    [477, 0, 'ws'],\n    [478, 0, 'wss'],\n    [479, 0, 'p2p-websocket-star'],\n    [480, 0, 'http'],\n    [777, V, 'memory']\n];\n// populate tables\ntable.forEach(row => {\n    const proto = createProtocol(...row);\n    codes[proto.code] = proto;\n    names[proto.name] = proto;\n});\nexport function createProtocol(code, size, name, resolvable, path) {\n    return {\n        code,\n        size,\n        name,\n        resolvable: Boolean(resolvable),\n        path: Boolean(path)\n    };\n}\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nexport function getProtocol(proto) {\n    if (typeof proto === 'number') {\n        if (codes[proto] != null) {\n            return codes[proto];\n        }\n        throw new Error(`no protocol with code: ${proto}`);\n    }\n    else if (typeof proto === 'string') {\n        if (names[proto] != null) {\n            return names[proto];\n        }\n        throw new Error(`no protocol with name: ${proto}`);\n    }\n    throw new Error(`invalid protocol id type: ${typeof proto}`);\n}\n//# sourceMappingURL=protocols-table.js.map","import dns from 'dns-over-http-resolver';\nexport default dns;\n//# sourceMappingURL=dns.browser.js.map","/**\n * @packageDocumentation\n *\n * Provides strategies for resolving multiaddrs.\n */\nimport { getProtocol } from '../protocols-table.js';\nimport Resolver from './dns.js';\nconst { code: dnsaddrCode } = getProtocol('dnsaddr');\n/**\n * Resolver for dnsaddr addresses.\n *\n * @example\n *\n * ```typescript\n * import { dnsaddrResolver } from '@multiformats/multiaddr/resolvers'\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/dnsaddr/bootstrap.libp2p.io')\n * const addresses = await dnsaddrResolver(ma)\n *\n * console.info(addresses)\n * //[\n * //  '/dnsaddr/am6.bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb',\n * //  '/dnsaddr/ny5.bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa',\n * //  '/dnsaddr/sg1.bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt',\n * //  '/dnsaddr/sv15.bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN'\n * //]\n * ```\n */\nexport async function dnsaddrResolver(addr, options = {}) {\n    const resolver = new Resolver();\n    if (options.signal != null) {\n        options.signal.addEventListener('abort', () => {\n            resolver.cancel();\n        });\n    }\n    const peerId = addr.getPeerId();\n    const [, hostname] = addr.stringTuples().find(([proto]) => proto === dnsaddrCode) ?? [];\n    if (hostname == null) {\n        throw new Error('No hostname found in multiaddr');\n    }\n    const records = await resolver.resolveTxt(`_dnsaddr.${hostname}`);\n    let addresses = records.flat().map((a) => a.split('=')[1]).filter(Boolean);\n    if (peerId != null) {\n        addresses = addresses.filter((entry) => entry.includes(peerId));\n    }\n    return addresses;\n}\n//# sourceMappingURL=index.js.map","import { from } from 'multiformats/hashes/hasher'\nimport { bytes } from 'multiformats'\n// @ts-expect-error no types\nimport mur from 'murmurhash3js-revisited'\n\n/**\n * @param {number} number\n * @returns {Uint8Array}\n */\nfunction fromNumberTo32BitBuf (number) {\n  const bytes = new Array(4)\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n  return new Uint8Array(bytes)\n}\n\nexport const murmur332 = from({\n  name: 'murmur3-32',\n  code: 0x23,\n  encode: (input) => fromNumberTo32BitBuf(mur.x86.hash32(input))\n})\n\nexport const murmur3128 = from({\n  name: 'murmur3-128',\n  code: 0x22,\n  encode: (input) => bytes.fromHex(mur.x64.hash128(input))\n})\n\n// A special-use 0x22 that truncates 64 bits, specifically for use in the UnixFS HAMT\nexport const murmur364 = from({\n  name: 'murmur3-x64-64',\n  code: 0x22,\n  encode: (input) => bytes.fromHex(mur.x64.hash128(input)).subarray(0, 8)\n})\n","/* eslint-env browser */\n\nimport * as API from './interface.js'\n\n/**\n * Gets cluster version\n *\n * @param {API.Config} cluster\n * @param {API.RequestOptions} [options]\n * @returns {Promise<string>}\n */\nexport const version = async (cluster, { signal } = {}) => {\n  const result = await request(cluster, 'version', {\n    method: 'GET',\n    signal\n  })\n\n  if (typeof result.version !== 'string') {\n    throw new Error(\n      `failed to parse version from response the body: ${JSON.stringify(\n        result,\n        null,\n        2\n      )}`\n    )\n  }\n\n  return result.version\n}\n\n/**\n * Gets cluster information\n *\n * @param {API.Config} cluster\n * @param {API.RequestOptions} [options]\n * @returns {Promise<API.ClusterInfo>}\n */\nexport const info = async (cluster, { signal } = {}) => {\n  const result = await request(cluster, 'id', {\n    method: 'GET',\n    signal\n  })\n\n  const failure = result.error || result.ipfs?.error || ''\n  if (failure.length > 0) {\n    throw new Error(\n      `cluster id response has failure: ${JSON.stringify(result, null, 2)}`\n    )\n  }\n\n  return toClusterInfo(result)\n}\n\n/**\n * Import a file to the cluster. First argument must be a `File` or `Blob`.\n * Note: by default this module uses v1 CIDs and raw leaves enabled.\n *\n * @param {API.Config} cluster\n * @param {File|Blob} file\n * @param {API.AddParams} [options]\n * @returns {Promise<API.AddResponse>}\n */\nexport const add = async (cluster, file, options = {}) => {\n  if (!(file instanceof File) && !(file instanceof Blob)) {\n    throw new Error('invalid file')\n  }\n\n  const body = new FormData()\n  body.append('file', file, getName(file))\n\n  const params = encodeAddParams(options)\n\n  try {\n    const result = await request(cluster, 'add', {\n      params,\n      method: 'POST',\n      body,\n      signal: options.signal\n    })\n    const data = params['stream-channels'] ? result : result[0]\n    return { ...data, cid: data.cid }\n  } catch (err) {\n    const error = /** @type {Error & {response?:Response}}  */ (err)\n    if (error.response?.ok) {\n      throw new Error(\n        `failed to parse response body from cluster add ${error.stack}`\n      )\n    } else {\n      throw error\n    }\n  }\n}\n\n/**\n * @param {API.Config} cluster\n * @param {Iterable<File|Blob>} files\n * @param {API.PinOptions} [options]\n * @returns {Promise<API.AddDirectoryResponse>}\n */\nexport const addDirectory = async (cluster, files, options = {}) => {\n  const body = new FormData()\n\n  for (const f of files) {\n    if (!(f instanceof File) && !(f instanceof Blob)) {\n      throw new Error('invalid file')\n    }\n    body.append('file', f, getName(f))\n  }\n\n  const results = await request(cluster, 'add', {\n    params: {\n      ...encodeAddParams(options),\n      'stream-channels': false,\n      'wrap-with-directory': true\n    },\n    method: 'POST',\n    body,\n    signal: options.signal\n  })\n\n  return results\n}\n\n/**\n * @param {API.Config} cluster\n * @param {Blob} car\n * @param {API.AddParams} [options]\n * @returns {Promise<API.AddResponse>}\n */\nexport const addCAR = (cluster, car, options = {}) =>\n  add(cluster, car, { ...options, format: 'car' })\n\n/**\n * @param {API.Config} cluster\n * @param {string} cid CID or IPFS/IPNS path to pin to the cluster.\n * @param {API.PinOptions} [options]\n * @returns {Promise<API.PinResponse>}\n */\nexport const pin = async (cluster, cid, options = {}) => {\n  const path = cid.startsWith('/') ? `pins${cid}` : `pins/${cid}`\n\n  const data = await request(cluster, path, {\n    params: encodePinOptions(options),\n    method: 'POST',\n    signal: options.signal\n  })\n\n  return toPinResponse(data)\n}\n\n/**\n * @param {API.Config} cluster\n * @param {string} cid CID or IPFS/IPNS path to unpin from the cluster.\n * @param {API.RequestOptions} [options]\n * @returns {Promise<API.PinResponse>}\n */\nexport const unpin = async (cluster, cid, { signal } = {}) => {\n  const path = cid.startsWith('/') ? `pins${cid}` : `pins/${cid}`\n  const data = await request(cluster, path, {\n    method: 'DELETE',\n    signal\n  })\n\n  return toPinResponse(data)\n}\n\n/**\n * @param {API.Config} cluster\n * @param {string} cid The CID to get pin status information for.\n * @param {API.StatusOptions} [options]\n * @returns {Promise<API.StatusResponse>}\n */\nexport const status = async (cluster, cid, { local, signal } = {}) => {\n  const path = `pins/${encodeURIComponent(cid)}`\n\n  const data = await request(cluster, path, {\n    params: local != null ? { local } : undefined,\n    signal\n  })\n\n  return toStatusResponse(data)\n}\n\n/**\n * @param {API.Config} cluster\n * @param {API.StatusAllOptions} [options]\n * @returns {Promise<API.StatusResponse[]>}\n */\nexport const statusAll = async (\n  cluster,\n  { local, filter, cids, signal } = {}\n) => {\n  const stream = streamRequest(cluster, 'pins', {\n    params: {\n      local,\n      filter: filter ? String(filter) : null,\n      cids: cids ? String(cids) : null\n    },\n    signal\n  })\n  const statuses = []\n  for await (const d of stream) {\n    statuses.push(toStatusResponse(d))\n  }\n  return statuses\n}\n\n/**\n * @param {API.Config} cluster\n * @param {string} cid The CID to get pin status information for.\n * @param {API.RequestOptions} [options]\n * @returns {Promise<API.PinResponse>}\n */\nexport const allocation = async (cluster, cid, { signal } = {}) => {\n  const path = `allocations/${encodeURIComponent(cid)}`\n  const data = await request(cluster, path, { signal })\n\n  return toPinResponse(data)\n}\n\n/**\n * @param {API.Config} cluster\n * @param {string} cid The CID to get pin status information for.\n * @param {API.RecoverOptions} [options]\n * @returns {Promise<API.StatusResponse>}\n */\nexport const recover = async (cluster, cid, { local, signal } = {}) => {\n  const path = `pins/${encodeURIComponent(cid)}/recover`\n\n  const data = await request(cluster, path, {\n    method: 'POST',\n    params: local != null ? { local } : undefined,\n    signal\n  })\n\n  return toStatusResponse(data)\n}\n\n/**\n * @param {API.Config} cluster\n * @param {API.RequestOptions} [options]\n * @returns {Promise<string[]>}\n */\nexport const metricNames = (cluster, { signal } = {}) =>\n  request(cluster, 'monitor/metrics', { signal })\n\n/**\n * @param {API.Config} cluster\n * @param {API.RequestOptions} [options]\n * @returns {Promise<API.ClusterInfo[]>}\n */\nexport const peerList = async (cluster, options = {}) => {\n  const stream = streamRequest(cluster, 'peers', { signal: options.signal })\n  const infos = []\n  for await (const d of stream) {\n    infos.push(toClusterInfo(d))\n  }\n  return infos\n}\n\n/**\n * @param {API.Config} cluster\n * @param {string} path\n * @param {Object} [options]\n * @param {string} [options.method]\n * @param {Record<string, string|number|boolean|null|undefined>} [options.params]\n * @param {BodyInit} [options.body]\n * @param {AbortSignal} [options.signal]\n */\nconst request = async (\n  { url, headers },\n  path,\n  { method, params, body, signal }\n) => {\n  const endpoint = new URL(path, url)\n  for (const [key, value] of Object.entries(params || {})) {\n    if (value != null) {\n      endpoint.searchParams.set(key, String(value))\n    }\n  }\n\n  const response = await fetch(endpoint.href, {\n    method: method || 'GET',\n    headers,\n    body,\n    signal\n  })\n\n  if (response.ok) {\n    return await response.json()\n  } else {\n    throw Object.assign(\n      new Error(`${response.status}: ${response.statusText}`),\n      { response }\n    )\n  }\n}\n\n/**\n * @param {API.Config} cluster\n * @param {string} path\n * @param {Object} init\n * @param {string} [init.method]\n * @param {Record<string, string|number|boolean|null|undefined>} [init.params]\n * @param {BodyInit} [init.body]\n * @param {AbortSignal} [init.signal]\n */\nconst streamRequest = async function* (\n  { url, headers },\n  path,\n  { method, params, body, signal }\n) {\n  const endpoint = new URL(path, url)\n  for (const [key, value] of Object.entries(params || {})) {\n    if (value != null) {\n      endpoint.searchParams.set(key, String(value))\n    }\n  }\n\n  method = method || 'GET'\n  const res = await fetch(endpoint.href, { method, headers, body, signal })\n\n  if (!res.ok) {\n    const msg = `${res.status}: ${res.statusText}`\n    throw Object.assign(new Error(msg), { response: res })\n  }\n\n  if (!res.body) {\n    throw Object.assign(new Error('Missing response body'), { response: res })\n  }\n\n  yield* ndjsonParse(res.body)\n}\n\nexport class Cluster {\n  /**\n   * Create a new instance of the cluster client.\n   * @param {URL|string} url Cluster HTTP API root URL.\n   * @param {{ headers?: Record<string, string> }} [options]\n   */\n  constructor(url, { headers } = {}) {\n    /**\n     * @readonly\n     */\n    this.url = new URL(url)\n    /**\n     * @readonly\n     */\n    this.headers = headers\n  }\n\n  /**\n   * Get Cluster version.\n   * @param {API.RequestOptions} [options]\n   */\n  version(options) {\n    return version(this, options)\n  }\n\n  /**\n   * Get Cluster peer information.\n   * @param {API.RequestOptions} [options]\n   * @returns {Promise<API.ClusterInfo>}\n   */\n  info(options) {\n    return info(this, options)\n  }\n\n  /**\n   * Imports a file to the cluster. First argument must be a `File` or `Blob`.\n   * Note: by default this module uses v1 CIDs and raw leaves enabled.\n   * @param {File|Blob} file\n   * @param {API.AddParams} [options]\n   */\n  add(file, options) {\n    return add(this, file, options)\n  }\n\n  /**\n   * Imports multiple files to the cluster. First argument must be an array of\n   * `File` or `Blob`. Note: by default this module uses v1 CIDs and raw leaves\n   * enabled.\n   * @param {Iterable<File|Blob>} files\n   * @param {API.PinOptions} [options]\n   * @returns {Promise<API.AddDirectoryResponse>}\n   */\n  addDirectory(files, options) {\n    return addDirectory(this, files, options)\n  }\n\n  /**\n   * Imports blocks encoded in the given CAR file and pins them (similarly to\n   * ipfs dag import). At the moment only CAR files MUST have only one root (the\n   * one that will be pinned). . CAR files allow adding arbitrary IPLD-DAGs\n   * through the Cluster API.\n   * @param {Blob} car\n   * @param {API.AddParams} [options]\n   * @returns {Promise<API.AddResponse>}\n   */\n  addCAR(car, options = {}) {\n    return addCAR(this, car, { ...options, format: 'car' })\n  }\n\n  /**\n   * Tracks a CID with the given replication factor and a name for\n   * human-friendliness.\n   * @param {string} cid CID or IPFS/IPNS path to pin to the cluster.\n   * @param {API.PinOptions} [options]\n   * @returns {Promise<API.PinResponse>}\n   */\n  pin(cid, options) {\n    return pin(this, cid, options)\n  }\n\n  /**\n   * Untracks a CID from cluster.\n   * @param {string} cid CID or IPFS/IPNS path to unpin from the cluster.\n   * @param {API.RequestOptions} [options]\n   * @returns {Promise<API.PinResponse>}\n   */\n  unpin(cid, options) {\n    return unpin(this, cid, options)\n  }\n\n  /**\n   * Returns the current IPFS state for a given CID.\n   * @param {string} cid The CID to get pin status information for.\n   * @param {API.StatusOptions} [options]\n   * @returns {Promise<API.StatusResponse>}\n   */\n  status(cid, options) {\n    return status(this, cid, options)\n  }\n\n  /**\n   * Status of all tracked CIDs. Note: this is an expensive operation. Use the optional filters when possible.\n   * @param {API.StatusAllOptions} [options]\n   * @returns {Promise<API.StatusResponse[]>}\n   */\n  statusAll(options) {\n    return statusAll(this, options)\n  }\n\n  /**\n   * Returns the current allocation for a given CID.\n   * @param {string} cid The CID to get pin status information for.\n   * @param {API.RequestOptions} [options]\n   * @returns {Promise<API.PinResponse>}\n   */\n  allocation(cid, options) {\n    return allocation(this, cid, options)\n  }\n\n  /**\n   * Re-triggers pin or unpin IPFS operations for a CID in error state.\n   * @param {string} cid The CID to get pin status information for.\n   * @param {API.RecoverOptions} [options]\n   * @returns {Promise<API.StatusResponse>}\n   */\n  recover(cid, options) {\n    return recover(this, cid, options)\n  }\n\n  /**\n   * Get a list of metric types known to the peer.\n   * @param {API.RequestOptions} [options]\n   * @returns {Promise<string[]>}\n   */\n  metricNames(options) {\n    return metricNames(this, options)\n  }\n\n  /**\n   * Get a list of Cluster peer info.\n   * @param {API.RequestOptions} [options]\n   * @returns {Promise<API.ClusterInfo[]>}\n   */\n  peerList(options) {\n    return peerList(this, options)\n  }\n}\n\n/**\n * @param {API.AddParams} options\n */\nconst encodeAddParams = (options = {}) =>\n  encodeParams({\n    ...encodePinOptions(options),\n    local: options.local,\n    recursive: options.recursive,\n    hidden: options.hidden,\n    wrap: options.wrap,\n    shard: options.shard,\n    // stream-channels=false means buffer entire response in cluster before returning.\n    // MAY avoid weird edge-cases with prematurely closed streams\n    // see: https://github.com/web3-storage/web3.storage/issues/323\n    'stream-channels':\n      options.streamChannels != null ? options.streamChannels : false,\n    format: options.format,\n    // IPFSAddParams\n    layout: options.layout,\n\n    chunker: options.chunker,\n    'raw-leaves': options.rawLeaves != null ? options.rawLeaves : true,\n    progress: options.progress,\n    'cid-version': options.cidVersion != null ? options.cidVersion : 1,\n    hash: options.hashFun,\n    'no-copy': options.noCopy\n  })\n\n/**\n * @param {API.PinOptions} options\n */\nconst encodePinOptions = (options = {}) =>\n  encodeParams({\n    name: options.name,\n    mode: options.mode,\n    'replication-min': options.replicationFactorMin,\n    'replication-max': options.replicationFactorMax,\n    'shard-size': options.shardSize,\n    'user-allocations': options.userAllocations?.join(','),\n    'expire-at': options.expireAt?.toISOString(),\n    'pin-update': options.pinUpdate,\n    origins: options.origins?.join(','),\n    ...encodeMetadata(options.metadata || {})\n  })\n\n/**\n *\n * @param {Record<string, string>} metadata\n */\nconst encodeMetadata = (metadata = {}) =>\n  Object.fromEntries(Object.entries(metadata).map(([k, v]) => [`meta-${k}`, v]))\n\n/**\n * @template {Object} T\n * @param {T} options\n * @returns {{[K in keyof T]: Exclude<T[K], undefined>}}\n */\nconst encodeParams = (options) =>\n  // @ts-ignore - it can't infer this\n  Object.fromEntries(Object.entries(options).filter(([, v]) => v != null))\n\n/**\n * @param {any} data\n * @returns {API.PinResponse}\n */\nconst toPinResponse = (data) => {\n  return {\n    replicationFactorMin: data.replication_factor_min,\n    replicationFactorMax: data.replication_factor_max,\n    name: data.name,\n    mode: data.mode,\n    shardSize: data.shard_size,\n    userAllocations: data.user_allocations,\n    expireAt: new Date(data.expire_at),\n    metadata: data.metadata,\n    pinUpdate: data.pin_update,\n    cid: data.cid,\n    type: data.type,\n    allocations: data.allocations,\n    maxDepth: data.max_depth,\n    reference: data.reference\n  }\n}\n\n/**\n * @param {any} data\n * @returns {API.StatusResponse}\n */\nconst toStatusResponse = (data) => {\n  let peerMap = data.peer_map\n  if (peerMap) {\n    peerMap = Object.fromEntries(\n      Object.entries(peerMap).map(([k, v]) => [\n        k,\n        {\n          peerName: v.peername,\n          ipfsPeerId: v.ipfs_peer_id,\n          status: v.status,\n          timestamp: new Date(v.timestamp),\n          error: v.error\n        }\n      ])\n    )\n  }\n  return { cid: data.cid, name: data.name, peerMap }\n}\n\n/**\n * @param {any} data\n * @returns {API.ClusterInfo}\n */\nconst toClusterInfo = ({\n  id,\n  addresses,\n  version,\n  commit,\n  peername: peerName,\n  rpc_protocol_version: rpcProtocolVersion,\n  cluster_peers: clusterPeers,\n  cluster_peers_addresses: clusterPeersAddresses,\n  ipfs,\n  error\n}) => ({\n  id,\n  addresses,\n  version,\n  commit,\n  peerName,\n  rpcProtocolVersion,\n  clusterPeers,\n  clusterPeersAddresses,\n  ipfs,\n  error\n})\n\n/**\n * @param {File|(Blob&{name?:string})} file\n */\nconst getName = (file) => file.name\n\n/**\n * @param {ReadableStream<Uint8Array>} stream\n */\nconst ndjsonParse = async function* (stream) {\n  const reader = stream.getReader()\n  const matcher = /\\r?\\n/\n  const decoder = new TextDecoder('utf8')\n  let buffer = ''\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        break\n      }\n\n      buffer += decoder.decode(result.value, { stream: true })\n      const parts = buffer.split(matcher)\n      buffer = parts.pop() || ''\n      for (const part of parts) yield JSON.parse(part)\n    }\n  } finally {\n    reader.cancel()\n    reader.releaseLock()\n  }\n  buffer += decoder.decode(undefined, { stream: false })\n  if (buffer) yield JSON.parse(buffer)\n}\n\nexport const PinTypeBad = 1\nexport const PinTypeData = 2\nexport const PinTypeMeta = 3\nexport const PinTypeClusterDag = 4\nexport const PinTypeShard = 5\n\nexport const TrackerStatusUndefined = 'undefined'\nexport const TrackerStatusClusterError = 'cluster_error'\nexport const TrackerStatusPinError = 'pin_error'\nexport const TrackerStatusUnpinError = 'unpin_error'\nexport const TrackerStatusPinned = 'pinned'\nexport const TrackerStatusPinning = 'pinning'\nexport const TrackerStatusUnpinning = 'unpinning'\nexport const TrackerStatusUnpinned = 'unpinned'\nexport const TrackerStatusRemote = 'remote'\nexport const TrackerStatusPinQueued = 'pin_queued'\nexport const TrackerStatusUnpinQueued = 'unpin_queued'\nexport const TrackerStatusSharded = 'sharded'\nexport const TrackerStatusUnexpectedlyUnpinned = 'unexpectedly_unpinned'\n\nexport { API }\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _8n = BigInt(8);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.BASE;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        let p = this.multiplyUnsafe(CURVE.l / _2n).double();\n        if (CURVE.l % _2n)\n            p = p.add(this);\n        return p.equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(ExtendedPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import { baseX } from './base.js'\n\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n})\n\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n})\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","// @ts-check\n\nimport { from } from './base.js'\nimport { fromString, toString } from '../bytes.js'\n\nexport const identity = from({\n  prefix: '\\x00',\n  name: 'identity',\n  encode: (buf) => toString(buf),\n  decode: (str) => fromString(str)\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n})\n","import { baseX } from './base.js'\n\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n})\n\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n})\n","import { from } from './base.js'\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂')\nconst alphabetBytesToChars = /** @type {string[]} */ (alphabet.reduce((p, c, i) => { p[i] = c; return p }, /** @type {string[]} */([])))\nconst alphabetCharsToBytes = /** @type {number[]} */ (alphabet.reduce((p, c, i) => { p[/** @type {number} */ (c.codePointAt(0))] = i; return p }, /** @type {number[]} */([])))\n\n/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nfunction encode (data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c]\n    return p\n  }, '')\n}\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nfunction decode (str) {\n  const byts = []\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[/** @type {number} */ (char.codePointAt(0))]\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${char}`)\n    }\n    byts.push(byt)\n  }\n  return new Uint8Array(byts)\n}\n\nexport const base256emoji = from({\n  prefix: '🚀',\n  name: 'base256emoji',\n  encode,\n  decode\n})\n","// @ts-check\n\nimport * as identityBase from './bases/identity.js'\nimport * as base2 from './bases/base2.js'\nimport * as base8 from './bases/base8.js'\nimport * as base10 from './bases/base10.js'\nimport * as base16 from './bases/base16.js'\nimport * as base32 from './bases/base32.js'\nimport * as base36 from './bases/base36.js'\nimport * as base58 from './bases/base58.js'\nimport * as base64 from './bases/base64.js'\nimport * as base256emoji from './bases/base256emoji.js'\nimport * as sha2 from './hashes/sha2.js'\nimport * as identity from './hashes/identity.js'\n\nimport * as raw from './codecs/raw.js'\nimport * as json from './codecs/json.js'\n\nimport { CID, hasher, digest, varint, bytes } from './index.js'\n\nconst bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji }\nconst hashes = { ...sha2, ...identity }\nconst codecs = { raw, json }\n\nexport { CID, hasher, digest, varint, bytes, hashes, bases, codecs }\n","import { bytes as binary, CID } from './index.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\nfunction readonly ({ enumerable = true, configurable = false } = {}) {\n  return { enumerable, configurable, writable: false }\n}\n\n/**\n * @param {[string|number, string]} path\n * @param {any} value\n * @returns {Iterable<[string, CID]>}\n */\nfunction * linksWithin (path, value) {\n  if (value != null && typeof value === 'object') {\n    if (Array.isArray(value)) {\n      for (const [index, element] of value.entries()) {\n        const elementPath = [...path, index]\n        const cid = CID.asCID(element)\n        if (cid) {\n          yield [elementPath.join('/'), cid]\n        } else if (typeof element === 'object') {\n          yield * links(element, elementPath)\n        }\n      }\n    } else {\n      const cid = CID.asCID(value)\n      if (cid) {\n        yield [path.join('/'), cid]\n      } else {\n        yield * links(value, path)\n      }\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} source\n * @param {Array<string|number>} base\n * @returns {Iterable<[string, CID]>}\n */\nfunction * links (source, base) {\n  if (source == null || source instanceof Uint8Array) {\n    return\n  }\n  const cid = CID.asCID(source)\n  if (cid) {\n    yield [base.join('/'), cid]\n  }\n  for (const [key, value] of Object.entries(source)) {\n    const path = /** @type {[string|number, string]} */ ([...base, key])\n    yield * linksWithin(path, value)\n  }\n}\n\n/**\n * @param {[string|number, string]} path\n * @param {any} value\n * @returns {Iterable<string>}\n */\nfunction * treeWithin (path, value) {\n  if (Array.isArray(value)) {\n    for (const [index, element] of value.entries()) {\n      const elementPath = [...path, index]\n      yield elementPath.join('/')\n      if (typeof element === 'object' && !CID.asCID(element)) {\n        yield * tree(element, elementPath)\n      }\n    }\n  } else {\n    yield * tree(value, path)\n  }\n}\n\n/**\n * @template T\n * @param {T} source\n * @param {Array<string|number>} base\n * @returns {Iterable<string>}\n */\nfunction * tree (source, base) {\n  if (source == null || typeof source !== 'object') {\n    return\n  }\n  for (const [key, value] of Object.entries(source)) {\n    const path = /** @type {[string|number, string]} */ ([...base, key])\n    yield path.join('/')\n    if (value != null && !(value instanceof Uint8Array) && typeof value === 'object' && !CID.asCID(value)) {\n      yield * treeWithin(path, value)\n    }\n  }\n}\n\n/**\n *\n * @template T\n * @param {T} source\n * @param {string[]} path\n * @returns {API.BlockCursorView<unknown>}\n */\nfunction get (source, path) {\n  let node = /** @type {Record<string, any>} */(source)\n  for (const [index, key] of path.entries()) {\n    node = node[key]\n    if (node == null) {\n      throw new Error(`Object has no property at ${path.slice(0, index + 1).map(part => `[${JSON.stringify(part)}]`).join('')}`)\n    }\n    const cid = CID.asCID(node)\n    if (cid) {\n      return { value: cid, remaining: path.slice(index + 1).join('/') }\n    }\n  }\n  return { value: node }\n}\n\n/**\n * @template {unknown} T - Logical type of the data encoded in the block\n * @template {number} C - multicodec code corresponding to codec used to encode the block\n * @template {number} A - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template {API.Version} V - CID version\n * @implements {API.BlockView<T, C, A, V>}\n */\nclass Block {\n  /**\n   * @param {object} options\n   * @param {CID<T, C, A, V>} options.cid\n   * @param {API.ByteView<T>} options.bytes\n   * @param {T} options.value\n   */\n  constructor ({ cid, bytes, value }) {\n    if (!cid || !bytes || typeof value === 'undefined') { throw new Error('Missing required argument') }\n\n    this.cid = cid\n    this.bytes = bytes\n    this.value = value\n    this.asBlock = this\n\n    // Mark all the properties immutable\n    Object.defineProperties(this, {\n      cid: readonly(),\n      bytes: readonly(),\n      value: readonly(),\n      asBlock: readonly()\n    })\n  }\n\n  links () {\n    return links(this.value, [])\n  }\n\n  tree () {\n    return tree(this.value, [])\n  }\n\n  /**\n   *\n   * @param {string} [path]\n   * @returns {API.BlockCursorView<unknown>}\n   */\n  get (path = '/') {\n    return get(this.value, path.split('/').filter(Boolean))\n  }\n}\n\n/**\n * @template {unknown} T - Logical type of the data encoded in the block\n * @template {number} Code - multicodec code corresponding to codec used to encode the block\n * @template {number} Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @param {object} options\n * @param {T} options.value\n * @param {API.BlockEncoder<Code, T>} options.codec\n * @param {API.MultihashHasher<Alg>} options.hasher\n * @returns {Promise<API.BlockView<T, Code, Alg>>}\n */\nasync function encode ({ value, codec, hasher }) {\n  if (typeof value === 'undefined') throw new Error('Missing required argument \"value\"')\n  if (!codec || !hasher) throw new Error('Missing required argument: codec or hasher')\n\n  const bytes = codec.encode(value)\n  const hash = await hasher.digest(bytes)\n  /** @type {CID<T, Code, Alg, 1>} */\n  const cid = CID.create(\n    1,\n    codec.code,\n    hash\n  )\n\n  return new Block({ value, bytes, cid })\n}\n\n/**\n * @template {unknown} T - Logical type of the data encoded in the block\n * @template {number} Code - multicodec code corresponding to codec used to encode the block\n * @template {number} Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @param {object} options\n * @param {API.ByteView<T>} options.bytes\n * @param {API.BlockDecoder<Code, T>} options.codec\n * @param {API.MultihashHasher<Alg>} options.hasher\n * @returns {Promise<API.BlockView<T, Code, Alg>>}\n */\nasync function decode ({ bytes, codec, hasher }) {\n  if (!bytes) throw new Error('Missing required argument \"bytes\"')\n  if (!codec || !hasher) throw new Error('Missing required argument: codec or hasher')\n\n  const value = codec.decode(bytes)\n  const hash = await hasher.digest(bytes)\n  /** @type {CID<T, Code, Alg, 1>} */\n  const cid = CID.create(1, codec.code, hash)\n\n  return new Block({ value, bytes, cid })\n}\n\n/**\n * @typedef {object} RequiredCreateOptions\n * @property {CID} options.cid\n */\n\n/**\n * @template {unknown} T - Logical type of the data encoded in the block\n * @template {number} Code - multicodec code corresponding to codec used to encode the block\n * @template {number} Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template {API.Version} V - CID version\n * @param {{ cid: API.Link<T, Code, Alg, V>, value:T, codec?: API.BlockDecoder<Code, T>, bytes: API.ByteView<T> }|{cid:API.Link<T, Code, Alg, V>, bytes:API.ByteView<T>, value?:void, codec:API.BlockDecoder<Code, T>}} options\n * @returns {API.BlockView<T, Code, Alg, V>}\n */\nfunction createUnsafe ({ bytes, cid, value: maybeValue, codec }) {\n  const value = maybeValue !== undefined\n    ? maybeValue\n    : (codec && codec.decode(bytes))\n\n  if (value === undefined) throw new Error('Missing required argument, must either provide \"value\" or \"codec\"')\n\n  return new Block({\n    // eslint-disable-next-line object-shorthand\n    cid: /** @type {CID<T, Code, Alg, V>} */ (cid),\n    bytes,\n    value\n  })\n}\n\n/**\n * @template {unknown} T - Logical type of the data encoded in the block\n * @template {number} Code - multicodec code corresponding to codec used to encode the block\n * @template {number} Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template {API.Version} V - CID version\n * @param {object} options\n * @param {API.Link<T, Code, Alg, V>} options.cid\n * @param {API.ByteView<T>} options.bytes\n * @param {API.BlockDecoder<Code, T>} options.codec\n * @param {API.MultihashHasher<Alg>} options.hasher\n * @returns {Promise<API.BlockView<T, Code, Alg, V>>}\n */\nasync function create ({ bytes, cid, hasher, codec }) {\n  if (!bytes) throw new Error('Missing required argument \"bytes\"')\n  if (!hasher) throw new Error('Missing required argument \"hasher\"')\n  const value = codec.decode(bytes)\n  const hash = await hasher.digest(bytes)\n  if (!binary.equals(cid.multihash.bytes, hash.bytes)) {\n    throw new Error('CID hash does not match bytes')\n  }\n\n  return createUnsafe({\n    bytes,\n    cid,\n    value,\n    codec\n  })\n}\n\nexport { encode, decode, create, createUnsafe, Block }\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import * as varint from './varint.js'\nimport * as Digest from './hashes/digest.js'\nimport { base58btc } from './bases/base58.js'\nimport { base32 } from './bases/base32.js'\nimport { coerce } from './bytes.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/**\n * @template {API.UnknownLink} Link\n * @param {Link} link\n * @returns {API.LinkJSON<Link>}\n */\nexport const toJSON = (link) => ({\n  '/': format(link)\n})\n\n/**\n * @template {API.UnknownLink} Link\n * @param {API.LinkJSON<Link>} json\n */\nexport const fromJSON = (json) =>\n  CID.parse(json['/'])\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   *\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  toJSON () {\n    return { '/': format(this) }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n","// @ts-check\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nexport const name = 'json'\nexport const code = 0x0200\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => textEncoder.encode(JSON.stringify(node))\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => JSON.parse(textDecoder.decode(data))\n","// @ts-check\n\nimport { coerce } from '../bytes.js'\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport const name = 'raw'\nexport const code = 0x55\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nexport const encode = (node) => coerce(node)\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nexport const decode = (data) => coerce(data)\n","import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n","import * as Digest from './digest.js'\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nexport const from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nexport class Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n","import { coerce } from '../bytes.js'\nimport * as Digest from './digest.js'\n\nconst code = 0x0\nconst name = 'identity'\n\n/** @type {(input:Uint8Array) => Uint8Array} */\nconst encode = coerce\n\n/**\n * @param {Uint8Array} input\n * @returns {Digest.Digest<typeof code, number>}\n */\nconst digest = (input) => Digest.create(code, encode(input))\n\nexport const identity = { code, name, encode, digest }\n","/* global crypto */\n\nimport { from } from './hasher.js'\n\n/**\n * @param {AlgorithmIdentifier} name\n */\nconst sha = name =>\n  /**\n   * @param {Uint8Array} data\n   */\n  async data => new Uint8Array(await crypto.subtle.digest(name, data))\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n})\n","import { base58btc } from './bases/base58.js'\n\n/**\n * @template [C=number] - multicodec code corresponding to codec used to encode the block\n * @template [A=number] - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template [V=0|1] - CID version\n * @typedef {import('./cid').CID<unknown, C, A, V>} CID\n */\n\n/**\n * @template [T=unknown] - Logical type of the data encoded in the block\n * @template [C=number] - multicodec code corresponding to codec used to encode the block\n * @template [A=number] - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template [V=0|1] - CID version\n * @typedef {import('./block/interface.js').BlockView<T, C, A, V>} BlockView\n */\n\n/**\n * @param {object} options\n * @param {CID} options.cid\n * @param {(cid: CID) => Promise<BlockView|null>} options.load\n * @param {Set<string>} [options.seen]\n */\nconst walk = async ({ cid, load, seen }) => {\n  seen = seen || new Set()\n  const b58Cid = cid.toString(base58btc)\n  if (seen.has(b58Cid)) {\n    return\n  }\n\n  const block = await load(cid)\n  seen.add(b58Cid)\n\n  if (block === null) { // the loader signals with `null` that we should skip this block\n    return\n  }\n\n  for (const [, cid] of block.links()) {\n    await walk({ cid, load, seen })\n  }\n}\n\nexport { walk }\n","var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n","import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","const events = {};\nconst observable = (worker) => {\n    worker.addEventListener('message', (event) => {\n        observable.dispatchEvent('message', worker, event);\n    });\n    if (worker.port != null) {\n        worker.port.addEventListener('message', (event) => {\n            observable.dispatchEvent('message', worker, event);\n        });\n    }\n};\nobservable.addEventListener = (type, fn) => {\n    if (events[type] == null) {\n        events[type] = [];\n    }\n    events[type].push(fn);\n};\nobservable.removeEventListener = (type, fn) => {\n    if (events[type] == null) {\n        return;\n    }\n    events[type] = events[type]\n        .filter(listener => listener === fn);\n};\nobservable.dispatchEvent = function (type, worker, event) {\n    if (events[type] == null) {\n        return;\n    }\n    events[type].forEach(fn => fn(worker, event));\n};\nexport default observable;\n//# sourceMappingURL=index.js.map","export default function pDefer() {\n\tconst deferred = {};\n\n\tdeferred.promise = new Promise((resolve, reject) => {\n\t\tdeferred.resolve = resolve;\n\t\tdeferred.reject = reject;\n\t});\n\n\treturn deferred;\n}\n","import pTimeout from 'p-timeout';\n\nconst normalizeEmitter = emitter => {\n\tconst addListener = emitter.on || emitter.addListener || emitter.addEventListener;\n\tconst removeListener = emitter.off || emitter.removeListener || emitter.removeEventListener;\n\n\tif (!addListener || !removeListener) {\n\t\tthrow new TypeError('Emitter is not compatible');\n\t}\n\n\treturn {\n\t\taddListener: addListener.bind(emitter),\n\t\tremoveListener: removeListener.bind(emitter),\n\t};\n};\n\nexport function pEventMultiple(emitter, event, options) {\n\tlet cancel;\n\tconst returnValue = new Promise((resolve, reject) => {\n\t\toptions = {\n\t\t\trejectionEvents: ['error'],\n\t\t\tmultiArgs: false,\n\t\t\tresolveImmediately: false,\n\t\t\t...options,\n\t\t};\n\n\t\tif (!(options.count >= 0 && (options.count === Number.POSITIVE_INFINITY || Number.isInteger(options.count)))) {\n\t\t\tthrow new TypeError('The `count` option should be at least 0 or more');\n\t\t}\n\n\t\t// Allow multiple events\n\t\tconst events = [event].flat();\n\n\t\tconst items = [];\n\t\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\t\tconst onItem = (...arguments_) => {\n\t\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\t\t// eslint-disable-next-line unicorn/no-array-callback-reference\n\t\t\tif (options.filter && !options.filter(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\titems.push(value);\n\n\t\t\tif (options.count === items.length) {\n\t\t\t\tcancel();\n\t\t\t\tresolve(items);\n\t\t\t}\n\t\t};\n\n\t\tconst rejectHandler = error => {\n\t\t\tcancel();\n\t\t\treject(error);\n\t\t};\n\n\t\tcancel = () => {\n\t\t\tfor (const event of events) {\n\t\t\t\tremoveListener(event, onItem);\n\t\t\t}\n\n\t\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t\t}\n\t\t};\n\n\t\tfor (const event of events) {\n\t\t\taddListener(event, onItem);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\taddListener(rejectionEvent, rejectHandler);\n\t\t}\n\n\t\tif (options.resolveImmediately) {\n\t\t\tresolve(items);\n\t\t}\n\t});\n\n\treturnValue.cancel = cancel;\n\n\tif (typeof options.timeout === 'number') {\n\t\tconst timeout = pTimeout(returnValue, options.timeout);\n\t\ttimeout.cancel = cancel;\n\t\treturn timeout;\n\t}\n\n\treturn returnValue;\n}\n\nexport function pEvent(emitter, event, options) {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\toptions = {\n\t\t...options,\n\t\tcount: 1,\n\t\tresolveImmediately: false,\n\t};\n\n\tconst arrayPromise = pEventMultiple(emitter, event, options);\n\tconst promise = arrayPromise.then(array => array[0]); // eslint-disable-line promise/prefer-await-to-then\n\tpromise.cancel = arrayPromise.cancel;\n\n\treturn promise;\n}\n\nexport function pEventIterator(emitter, event, options) {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\t// Allow multiple events\n\tconst events = [event].flat();\n\n\toptions = {\n\t\trejectionEvents: ['error'],\n\t\tresolutionEvents: [],\n\t\tlimit: Number.POSITIVE_INFINITY,\n\t\tmultiArgs: false,\n\t\t...options,\n\t};\n\n\tconst {limit} = options;\n\tconst isValidLimit = limit >= 0 && (limit === Number.POSITIVE_INFINITY || Number.isInteger(limit));\n\tif (!isValidLimit) {\n\t\tthrow new TypeError('The `limit` option should be a non-negative integer or Infinity');\n\t}\n\n\tif (limit === 0) {\n\t\t// Return an empty async iterator to avoid any further cost\n\t\treturn {\n\t\t\t[Symbol.asyncIterator]() {\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tasync next() {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t}\n\n\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\tlet isDone = false;\n\tlet error;\n\tlet hasPendingError = false;\n\tconst nextQueue = [];\n\tconst valueQueue = [];\n\tlet eventCount = 0;\n\tlet isLimitReached = false;\n\n\tconst valueHandler = (...arguments_) => {\n\t\teventCount++;\n\t\tisLimitReached = eventCount === limit;\n\n\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\n\t\t\tresolve({done: false, value});\n\n\t\t\tif (isLimitReached) {\n\t\t\t\tcancel();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueQueue.push(value);\n\n\t\tif (isLimitReached) {\n\t\t\tcancel();\n\t\t}\n\t};\n\n\tconst cancel = () => {\n\t\tisDone = true;\n\n\t\tfor (const event of events) {\n\t\t\tremoveListener(event, valueHandler);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t}\n\n\t\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\t\tremoveListener(resolutionEvent, resolveHandler);\n\t\t}\n\n\t\twhile (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value: undefined});\n\t\t}\n\t};\n\n\tconst rejectHandler = (...arguments_) => {\n\t\terror = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {reject} = nextQueue.shift();\n\t\t\treject(error);\n\t\t} else {\n\t\t\thasPendingError = true;\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tconst resolveHandler = (...arguments_) => {\n\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\t// eslint-disable-next-line unicorn/no-array-callback-reference\n\t\tif (options.filter && !options.filter(value)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value});\n\t\t} else {\n\t\t\tvalueQueue.push(value);\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tfor (const event of events) {\n\t\taddListener(event, valueHandler);\n\t}\n\n\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\taddListener(rejectionEvent, rejectHandler);\n\t}\n\n\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\taddListener(resolutionEvent, resolveHandler);\n\t}\n\n\treturn {\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t},\n\t\tasync next() {\n\t\t\tif (valueQueue.length > 0) {\n\t\t\t\tconst value = valueQueue.shift();\n\t\t\t\treturn {\n\t\t\t\t\tdone: isDone && valueQueue.length === 0 && !isLimitReached,\n\t\t\t\t\tvalue,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (hasPendingError) {\n\t\t\t\thasPendingError = false;\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (isDone) {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tnextQueue.push({resolve, reject});\n\t\t\t});\n\t\t},\n\t\tasync return(value) {\n\t\t\tcancel();\n\t\t\treturn {\n\t\t\t\tdone: isDone,\n\t\t\t\tvalue,\n\t\t\t};\n\t\t},\n\t};\n}\n\nexport {TimeoutError} from 'p-timeout';\n","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PriorityQueue_queue;\nimport lowerBound from './lower-bound.js';\nexport default class PriorityQueue {\n    constructor() {\n        _PriorityQueue_queue.set(this, []);\n    }\n    enqueue(run, options) {\n        options = {\n            priority: 0,\n            ...options,\n        };\n        const element = {\n            priority: options.priority,\n            run,\n        };\n        if (this.size && __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\")[this.size - 1].priority >= options.priority) {\n            __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").push(element);\n            return;\n        }\n        const index = lowerBound(__classPrivateFieldGet(this, _PriorityQueue_queue, \"f\"), element, (a, b) => b.priority - a.priority);\n        __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").splice(index, 0, element);\n    }\n    dequeue() {\n        const item = __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").shift();\n        return item === null || item === void 0 ? void 0 : item.run;\n    }\n    filter(options) {\n        return __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").length;\n    }\n}\n_PriorityQueue_queue = new WeakMap();\n","// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nexport default function lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = Math.trunc(count / 2);\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PQueue_instances, _PQueue_carryoverConcurrencyCount, _PQueue_isIntervalIgnored, _PQueue_intervalCount, _PQueue_intervalCap, _PQueue_interval, _PQueue_intervalEnd, _PQueue_intervalId, _PQueue_timeoutId, _PQueue_queue, _PQueue_queueClass, _PQueue_pending, _PQueue_concurrency, _PQueue_isPaused, _PQueue_throwOnTimeout, _PQueue_doesIntervalAllowAnother_get, _PQueue_doesConcurrentAllowAnother_get, _PQueue_next, _PQueue_onResumeInterval, _PQueue_isIntervalPaused_get, _PQueue_tryToStartAnother, _PQueue_initializeIntervalIfNeeded, _PQueue_onInterval, _PQueue_processQueue, _PQueue_throwOnAbort, _PQueue_onEvent;\nimport EventEmitter from 'eventemitter3';\nimport pTimeout, { TimeoutError } from 'p-timeout';\nimport PriorityQueue from './priority-queue.js';\n/**\nThe error thrown by `queue.add()` when a job is aborted before it is run. See `signal`.\n*/\nexport class AbortError extends Error {\n}\n/**\nPromise queue with concurrency control.\n*/\nexport default class PQueue extends EventEmitter {\n    // TODO: The `throwOnTimeout` option should affect the return types of `add()` and `addAll()`\n    constructor(options) {\n        var _a, _b, _c, _d;\n        super();\n        _PQueue_instances.add(this);\n        _PQueue_carryoverConcurrencyCount.set(this, void 0);\n        _PQueue_isIntervalIgnored.set(this, void 0);\n        _PQueue_intervalCount.set(this, 0);\n        _PQueue_intervalCap.set(this, void 0);\n        _PQueue_interval.set(this, void 0);\n        _PQueue_intervalEnd.set(this, 0);\n        _PQueue_intervalId.set(this, void 0);\n        _PQueue_timeoutId.set(this, void 0);\n        _PQueue_queue.set(this, void 0);\n        _PQueue_queueClass.set(this, void 0);\n        _PQueue_pending.set(this, 0);\n        // The `!` is needed because of https://github.com/microsoft/TypeScript/issues/32194\n        _PQueue_concurrency.set(this, void 0);\n        _PQueue_isPaused.set(this, void 0);\n        _PQueue_throwOnTimeout.set(this, void 0);\n        /**\n        Per-operation timeout in milliseconds. Operations fulfill once `timeout` elapses if they haven't already.\n    \n        Applies to each future operation.\n        */\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = {\n            carryoverConcurrencyCount: false,\n            intervalCap: Number.POSITIVE_INFINITY,\n            interval: 0,\n            concurrency: Number.POSITIVE_INFINITY,\n            autoStart: true,\n            queueClass: PriorityQueue,\n            ...options,\n        };\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\\` (${typeof options.interval})`);\n        }\n        __classPrivateFieldSet(this, _PQueue_carryoverConcurrencyCount, options.carryoverConcurrencyCount, \"f\");\n        __classPrivateFieldSet(this, _PQueue_isIntervalIgnored, options.intervalCap === Number.POSITIVE_INFINITY || options.interval === 0, \"f\");\n        __classPrivateFieldSet(this, _PQueue_intervalCap, options.intervalCap, \"f\");\n        __classPrivateFieldSet(this, _PQueue_interval, options.interval, \"f\");\n        __classPrivateFieldSet(this, _PQueue_queue, new options.queueClass(), \"f\");\n        __classPrivateFieldSet(this, _PQueue_queueClass, options.queueClass, \"f\");\n        this.concurrency = options.concurrency;\n        this.timeout = options.timeout;\n        __classPrivateFieldSet(this, _PQueue_throwOnTimeout, options.throwOnTimeout === true, \"f\");\n        __classPrivateFieldSet(this, _PQueue_isPaused, options.autoStart === false, \"f\");\n    }\n    get concurrency() {\n        return __classPrivateFieldGet(this, _PQueue_concurrency, \"f\");\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        __classPrivateFieldSet(this, _PQueue_concurrency, newConcurrency, \"f\");\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n    }\n    async add(function_, options = {}) {\n        options = {\n            timeout: this.timeout,\n            throwOnTimeout: __classPrivateFieldGet(this, _PQueue_throwOnTimeout, \"f\"),\n            ...options,\n        };\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldGet(this, _PQueue_queue, \"f\").enqueue(async () => {\n                var _a;\n                var _b, _c;\n                __classPrivateFieldSet(this, _PQueue_pending, (_b = __classPrivateFieldGet(this, _PQueue_pending, \"f\"), _b++, _b), \"f\");\n                __classPrivateFieldSet(this, _PQueue_intervalCount, (_c = __classPrivateFieldGet(this, _PQueue_intervalCount, \"f\"), _c++, _c), \"f\");\n                try {\n                    // TODO: Use options.signal?.throwIfAborted() when targeting Node.js 18\n                    if ((_a = options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                        // TODO: Use ABORT_ERR code when targeting Node.js 16 (https://nodejs.org/docs/latest-v16.x/api/errors.html#abort_err)\n                        throw new AbortError('The task was aborted.');\n                    }\n                    let operation = function_({ signal: options.signal });\n                    if (options.timeout) {\n                        operation = pTimeout(Promise.resolve(operation), options.timeout);\n                    }\n                    if (options.signal) {\n                        operation = Promise.race([operation, __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_throwOnAbort).call(this, options.signal)]);\n                    }\n                    const result = await operation;\n                    resolve(result);\n                    this.emit('completed', result);\n                }\n                catch (error) {\n                    if (error instanceof TimeoutError && !options.throwOnTimeout) {\n                        resolve();\n                        return;\n                    }\n                    reject(error);\n                    this.emit('error', error);\n                }\n                finally {\n                    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_next).call(this);\n                }\n            }, options);\n            this.emit('add');\n            __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this);\n        });\n    }\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!__classPrivateFieldGet(this, _PQueue_isPaused, \"f\")) {\n            return this;\n        }\n        __classPrivateFieldSet(this, _PQueue_isPaused, false, \"f\");\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        __classPrivateFieldSet(this, _PQueue_isPaused, true, \"f\");\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        __classPrivateFieldSet(this, _PQueue_queue, new (__classPrivateFieldGet(this, _PQueue_queueClass, \"f\"))(), \"f\");\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'empty');\n    }\n    /**\n    @returns A promise that settles when the queue size is less than the given limit: `queue.size < limit`.\n\n    If you want to avoid having the queue grow beyond a certain size you can `await queue.onSizeLessThan()` before adding a new item.\n\n    Note that this only limits the number of items waiting to start. There could still be up to `concurrency` jobs already running that this call does not include in its calculation.\n    */\n    async onSizeLessThan(limit) {\n        // Instantly resolve if the queue is empty.\n        if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size < limit) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'next', () => __classPrivateFieldGet(this, _PQueue_queue, \"f\").size < limit);\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (__classPrivateFieldGet(this, _PQueue_pending, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'idle');\n    }\n    /**\n    Size of the queue, the number of queued items waiting to run.\n    */\n    get size() {\n        return __classPrivateFieldGet(this, _PQueue_queue, \"f\").size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-array-callback-reference\n        return __classPrivateFieldGet(this, _PQueue_queue, \"f\").filter(options).length;\n    }\n    /**\n    Number of running items (no longer in the queue).\n    */\n    get pending() {\n        return __classPrivateFieldGet(this, _PQueue_pending, \"f\");\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return __classPrivateFieldGet(this, _PQueue_isPaused, \"f\");\n    }\n}\n_PQueue_carryoverConcurrencyCount = new WeakMap(), _PQueue_isIntervalIgnored = new WeakMap(), _PQueue_intervalCount = new WeakMap(), _PQueue_intervalCap = new WeakMap(), _PQueue_interval = new WeakMap(), _PQueue_intervalEnd = new WeakMap(), _PQueue_intervalId = new WeakMap(), _PQueue_timeoutId = new WeakMap(), _PQueue_queue = new WeakMap(), _PQueue_queueClass = new WeakMap(), _PQueue_pending = new WeakMap(), _PQueue_concurrency = new WeakMap(), _PQueue_isPaused = new WeakMap(), _PQueue_throwOnTimeout = new WeakMap(), _PQueue_instances = new WeakSet(), _PQueue_doesIntervalAllowAnother_get = function _PQueue_doesIntervalAllowAnother_get() {\n    return __classPrivateFieldGet(this, _PQueue_isIntervalIgnored, \"f\") || __classPrivateFieldGet(this, _PQueue_intervalCount, \"f\") < __classPrivateFieldGet(this, _PQueue_intervalCap, \"f\");\n}, _PQueue_doesConcurrentAllowAnother_get = function _PQueue_doesConcurrentAllowAnother_get() {\n    return __classPrivateFieldGet(this, _PQueue_pending, \"f\") < __classPrivateFieldGet(this, _PQueue_concurrency, \"f\");\n}, _PQueue_next = function _PQueue_next() {\n    var _a;\n    __classPrivateFieldSet(this, _PQueue_pending, (_a = __classPrivateFieldGet(this, _PQueue_pending, \"f\"), _a--, _a), \"f\");\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this);\n    this.emit('next');\n}, _PQueue_onResumeInterval = function _PQueue_onResumeInterval() {\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onInterval).call(this);\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_initializeIntervalIfNeeded).call(this);\n    __classPrivateFieldSet(this, _PQueue_timeoutId, undefined, \"f\");\n}, _PQueue_isIntervalPaused_get = function _PQueue_isIntervalPaused_get() {\n    const now = Date.now();\n    if (__classPrivateFieldGet(this, _PQueue_intervalId, \"f\") === undefined) {\n        const delay = __classPrivateFieldGet(this, _PQueue_intervalEnd, \"f\") - now;\n        if (delay < 0) {\n            // Act as the interval was done\n            // We don't need to resume it here because it will be resumed on line 160\n            __classPrivateFieldSet(this, _PQueue_intervalCount, (__classPrivateFieldGet(this, _PQueue_carryoverConcurrencyCount, \"f\")) ? __classPrivateFieldGet(this, _PQueue_pending, \"f\") : 0, \"f\");\n        }\n        else {\n            // Act as the interval is pending\n            if (__classPrivateFieldGet(this, _PQueue_timeoutId, \"f\") === undefined) {\n                __classPrivateFieldSet(this, _PQueue_timeoutId, setTimeout(() => {\n                    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onResumeInterval).call(this);\n                }, delay), \"f\");\n            }\n            return true;\n        }\n    }\n    return false;\n}, _PQueue_tryToStartAnother = function _PQueue_tryToStartAnother() {\n    if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n        // We can clear the interval (\"pause\")\n        // Because we can redo it later (\"resume\")\n        if (__classPrivateFieldGet(this, _PQueue_intervalId, \"f\")) {\n            clearInterval(__classPrivateFieldGet(this, _PQueue_intervalId, \"f\"));\n        }\n        __classPrivateFieldSet(this, _PQueue_intervalId, undefined, \"f\");\n        this.emit('empty');\n        if (__classPrivateFieldGet(this, _PQueue_pending, \"f\") === 0) {\n            this.emit('idle');\n        }\n        return false;\n    }\n    if (!__classPrivateFieldGet(this, _PQueue_isPaused, \"f\")) {\n        const canInitializeInterval = !__classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_isIntervalPaused_get);\n        if (__classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_doesIntervalAllowAnother_get) && __classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_doesConcurrentAllowAnother_get)) {\n            const job = __classPrivateFieldGet(this, _PQueue_queue, \"f\").dequeue();\n            if (!job) {\n                return false;\n            }\n            this.emit('active');\n            job();\n            if (canInitializeInterval) {\n                __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_initializeIntervalIfNeeded).call(this);\n            }\n            return true;\n        }\n    }\n    return false;\n}, _PQueue_initializeIntervalIfNeeded = function _PQueue_initializeIntervalIfNeeded() {\n    if (__classPrivateFieldGet(this, _PQueue_isIntervalIgnored, \"f\") || __classPrivateFieldGet(this, _PQueue_intervalId, \"f\") !== undefined) {\n        return;\n    }\n    __classPrivateFieldSet(this, _PQueue_intervalId, setInterval(() => {\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onInterval).call(this);\n    }, __classPrivateFieldGet(this, _PQueue_interval, \"f\")), \"f\");\n    __classPrivateFieldSet(this, _PQueue_intervalEnd, Date.now() + __classPrivateFieldGet(this, _PQueue_interval, \"f\"), \"f\");\n}, _PQueue_onInterval = function _PQueue_onInterval() {\n    if (__classPrivateFieldGet(this, _PQueue_intervalCount, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_pending, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_intervalId, \"f\")) {\n        clearInterval(__classPrivateFieldGet(this, _PQueue_intervalId, \"f\"));\n        __classPrivateFieldSet(this, _PQueue_intervalId, undefined, \"f\");\n    }\n    __classPrivateFieldSet(this, _PQueue_intervalCount, __classPrivateFieldGet(this, _PQueue_carryoverConcurrencyCount, \"f\") ? __classPrivateFieldGet(this, _PQueue_pending, \"f\") : 0, \"f\");\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n}, _PQueue_processQueue = function _PQueue_processQueue() {\n    // eslint-disable-next-line no-empty\n    while (__classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this)) { }\n}, _PQueue_throwOnAbort = async function _PQueue_throwOnAbort(signal) {\n    return new Promise((_resolve, reject) => {\n        signal.addEventListener('abort', () => {\n            // TODO: Reject with signal.throwIfAborted() when targeting Node.js 18\n            // TODO: Use ABORT_ERR code when targeting Node.js 16 (https://nodejs.org/docs/latest-v16.x/api/errors.html#abort_err)\n            reject(new AbortError('The task was aborted.'));\n        }, { once: true });\n    });\n}, _PQueue_onEvent = async function _PQueue_onEvent(event, filter) {\n    return new Promise(resolve => {\n        const listener = () => {\n            if (filter && !filter()) {\n                return;\n            }\n            this.off(event, listener);\n            resolve();\n        };\n        this.on(event, listener);\n    });\n};\n","export default async function pReflect(promise) {\n\ttry {\n\t\tconst value = await promise;\n\n\t\treturn {\n\t\t\tstatus: 'fulfilled',\n\t\t\tvalue,\n\t\t\tisFulfilled: true,\n\t\t\tisRejected: false\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\tstatus: 'rejected',\n\t\t\treason: error,\n\t\t\tisFulfilled: false,\n\t\t\tisRejected: true\n\t\t};\n\t}\n}\n\nexport function isFulfilled(promiseResult) {\n\treturn 'value' in promiseResult;\n}\n\nexport function isRejected(promiseResult) {\n\treturn 'reason' in promiseResult;\n}\n","/*\nHow it works:\n`this.#head` is an instance of `Node` which keeps track of its current value and nests another instance of `Node` that keeps the value that comes after it. When a value is provided to `.enqueue()`, the code needs to iterate through `this.#head`, going deeper and deeper to find the last value. However, iterating through every single item is slow. This problem is solved by saving a reference to the last value as `this.#tail` so that it can reference it to add a new value.\n*/\n\nclass Node {\n\tvalue;\n\tnext;\n\n\tconstructor(value) {\n\t\tthis.value = value;\n\t}\n}\n\nexport default class Queue {\n\t#head;\n\t#tail;\n\t#size;\n\n\tconstructor() {\n\t\tthis.clear();\n\t}\n\n\tenqueue(value) {\n\t\tconst node = new Node(value);\n\n\t\tif (this.#head) {\n\t\t\tthis.#tail.next = node;\n\t\t\tthis.#tail = node;\n\t\t} else {\n\t\t\tthis.#head = node;\n\t\t\tthis.#tail = node;\n\t\t}\n\n\t\tthis.#size++;\n\t}\n\n\tdequeue() {\n\t\tconst current = this.#head;\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#head = this.#head.next;\n\t\tthis.#size--;\n\t\treturn current.value;\n\t}\n\n\tclear() {\n\t\tthis.#head = undefined;\n\t\tthis.#tail = undefined;\n\t\tthis.#size = 0;\n\t}\n\n\tget size() {\n\t\treturn this.#size;\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tlet current = this.#head;\n\n\t\twhile (current) {\n\t\t\tyield current.value;\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n}\n","import Queue from 'yocto-queue';\n\nexport default function pLimit(concurrency) {\n\tif (!((Number.isInteger(concurrency) || concurrency === Number.POSITIVE_INFINITY) && concurrency > 0)) {\n\t\tthrow new TypeError('Expected `concurrency` to be a number from 1 and up');\n\t}\n\n\tconst queue = new Queue();\n\tlet activeCount = 0;\n\n\tconst next = () => {\n\t\tactiveCount--;\n\n\t\tif (queue.size > 0) {\n\t\t\tqueue.dequeue()();\n\t\t}\n\t};\n\n\tconst run = async (fn, resolve, args) => {\n\t\tactiveCount++;\n\n\t\tconst result = (async () => fn(...args))();\n\n\t\tresolve(result);\n\n\t\ttry {\n\t\t\tawait result;\n\t\t} catch {}\n\n\t\tnext();\n\t};\n\n\tconst enqueue = (fn, resolve, args) => {\n\t\tqueue.enqueue(run.bind(undefined, fn, resolve, args));\n\n\t\t(async () => {\n\t\t\t// This function needs to wait until the next microtask before comparing\n\t\t\t// `activeCount` to `concurrency`, because `activeCount` is updated asynchronously\n\t\t\t// when the run function is dequeued and called. The comparison in the if-statement\n\t\t\t// needs to happen asynchronously as well to get an up-to-date value for `activeCount`.\n\t\t\tawait Promise.resolve();\n\n\t\t\tif (activeCount < concurrency && queue.size > 0) {\n\t\t\t\tqueue.dequeue()();\n\t\t\t}\n\t\t})();\n\t};\n\n\tconst generator = (fn, ...args) => new Promise(resolve => {\n\t\tenqueue(fn, resolve, args);\n\t});\n\n\tObject.defineProperties(generator, {\n\t\tactiveCount: {\n\t\t\tget: () => activeCount,\n\t\t},\n\t\tpendingCount: {\n\t\t\tget: () => queue.size,\n\t\t},\n\t\tclearQueue: {\n\t\t\tvalue: () => {\n\t\t\t\tqueue.clear();\n\t\t\t},\n\t\t},\n\t});\n\n\treturn generator;\n}\n","import pReflect from 'p-reflect';\nimport pLimit from 'p-limit';\n\nexport default async function pSettle(array, options = {}) {\n\tconst {concurrency = Number.POSITIVE_INFINITY} = options;\n\tconst limit = pLimit(concurrency);\n\n\treturn Promise.all(array.map(element => {\n\t\tif (element && typeof element.then === 'function') {\n\t\t\treturn pReflect(element);\n\t\t}\n\n\t\tif (typeof element === 'function') {\n\t\t\treturn pReflect(limit(() => element()));\n\t\t}\n\n\t\treturn pReflect(Promise.resolve(element));\n\t}));\n}\n","export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined ?\n\tnew AbortError(errorMessage) :\n\tnew DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined ?\n\t\tgetDOMException('This operation was aborted.') :\n\t\tsignal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, milliseconds, fallback, options) {\n\tlet timer;\n\n\tconst cancelablePromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tresolve(promise);\n\t\t\treturn;\n\t\t}\n\n\t\toptions = {\n\t\t\tcustomTimers: {setTimeout, clearTimeout},\n\t\t\t...options\n\t\t};\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\ttimer = options.customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (typeof fallback === 'function') {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\treject(timeoutError);\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t} finally {\n\t\t\t\toptions.customTimers.clearTimeout.call(undefined, timer);\n\t\t\t}\n\t\t})();\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tclearTimeout(timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n","export const defaultMessages = 'End-Of-Stream';\n/**\n * Thrown on read operation of the end of file or stream has been reached\n */\nexport class EndOfStreamError extends Error {\n    constructor() {\n        super(defaultMessages);\n    }\n}\n","import { Netmask } from 'netmask';\nimport ip_regex from 'ip-regex';\nimport { isIP } from '@chainsafe/is-ip';\nimport ipaddr from 'ipaddr.js';\nconst { isValid: is_valid, parse } = ipaddr;\nconst PRIVATE_IP_RANGES = [\n    '0.0.0.0/8',\n    '10.0.0.0/8',\n    '100.64.0.0/10',\n    '127.0.0.0/8',\n    '169.254.0.0/16',\n    '172.16.0.0/12',\n    '192.0.0.0/24',\n    '192.0.0.0/29',\n    '192.0.0.8/32',\n    '192.0.0.9/32',\n    '192.0.0.10/32',\n    '192.0.0.170/32',\n    '192.0.0.171/32',\n    '192.0.2.0/24',\n    '192.31.196.0/24',\n    '192.52.193.0/24',\n    '192.88.99.0/24',\n    '192.168.0.0/16',\n    '192.175.48.0/24',\n    '198.18.0.0/15',\n    '198.51.100.0/24',\n    '203.0.113.0/24',\n    '240.0.0.0/4',\n    '255.255.255.255/32'\n];\nconst NETMASK_RANGES = PRIVATE_IP_RANGES.map(ip_range => new Netmask(ip_range));\nfunction ipv4_check(ip_addr) {\n    for (let r of NETMASK_RANGES) {\n        if (r.contains(ip_addr))\n            return true;\n    }\n    return false;\n}\nfunction ipv6_check(ip_addr) {\n    return /^::$/.test(ip_addr) ||\n        /^::1$/.test(ip_addr) ||\n        /^::f{4}:([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) ||\n        /^::f{4}:0.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) ||\n        /^64:ff9b::([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) ||\n        /^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^f[c-d]([0-9a-fA-F]{2,2}):/i.test(ip_addr) ||\n        /^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(ip_addr) ||\n        /^ff([0-9a-fA-F]{2,2}):/i.test(ip_addr);\n}\nexport default (ip) => {\n    if (is_valid(ip)) {\n        const parsed = parse(ip);\n        if (parsed.kind() === 'ipv4')\n            return ipv4_check(parsed.toNormalizedString());\n        else if (parsed.kind() === 'ipv6')\n            return ipv6_check(ip);\n    }\n    else if (isIP(ip) && ip_regex.v6().test(ip))\n        return ipv6_check(ip);\n    return undefined;\n};\n","'use strict'\n\nimport is_ip_private from './lib/index.js'\nexport default is_ip_private","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","// @ts-expect-error no types\nimport ReaderClass from 'protobufjs/src/reader.js';\n// @ts-expect-error no types\nimport ReaderBufferClass from 'protobufjs/src/reader_buffer.js';\n// @ts-expect-error no types\nimport util from 'protobufjs/src/util/minimal.js';\n// @ts-expect-error no types\nimport WriterClass from 'protobufjs/src/writer.js';\n// @ts-expect-error no types\nimport WriterBufferClass from 'protobufjs/src/writer_buffer.js';\nfunction configure() {\n    util._configure();\n    ReaderClass._configure(ReaderBufferClass);\n    WriterClass._configure(WriterBufferClass);\n}\n// Set up buffer utility according to the environment\nconfigure();\n// monkey patch the reader to add native bigint support\nconst methods = [\n    'uint64', 'int64', 'sint64', 'fixed64', 'sfixed64'\n];\nfunction patchReader(obj) {\n    for (const method of methods) {\n        if (obj[method] == null) {\n            continue;\n        }\n        const original = obj[method];\n        obj[method] = function () {\n            return BigInt(original.call(this).toString());\n        };\n    }\n    return obj;\n}\nexport function reader(buf) {\n    return patchReader(new ReaderClass(buf));\n}\nfunction patchWriter(obj) {\n    for (const method of methods) {\n        if (obj[method] == null) {\n            continue;\n        }\n        const original = obj[method];\n        obj[method] = function (val) {\n            return original.call(this, val.toString());\n        };\n    }\n    return obj;\n}\nexport function writer() {\n    return patchWriter(WriterClass.create());\n}\n//# sourceMappingURL=utils.js.map","import { reader } from './utils.js';\nexport function decodeMessage(buf, codec) {\n    const r = reader(buf instanceof Uint8Array ? buf : buf.subarray());\n    return codec.decode(r);\n}\n//# sourceMappingURL=decode.js.map","import { writer } from './utils.js';\nexport function encodeMessage(message, codec) {\n    const w = writer();\n    codec.encode(message, w, {\n        lengthDelimited: false\n    });\n    return w.finish();\n}\n//# sourceMappingURL=encode.js.map","// https://developers.google.com/protocol-buffers/docs/encoding#structure\nexport var CODEC_TYPES;\n(function (CODEC_TYPES) {\n    CODEC_TYPES[CODEC_TYPES[\"VARINT\"] = 0] = \"VARINT\";\n    CODEC_TYPES[CODEC_TYPES[\"BIT64\"] = 1] = \"BIT64\";\n    CODEC_TYPES[CODEC_TYPES[\"LENGTH_DELIMITED\"] = 2] = \"LENGTH_DELIMITED\";\n    CODEC_TYPES[CODEC_TYPES[\"START_GROUP\"] = 3] = \"START_GROUP\";\n    CODEC_TYPES[CODEC_TYPES[\"END_GROUP\"] = 4] = \"END_GROUP\";\n    CODEC_TYPES[CODEC_TYPES[\"BIT32\"] = 5] = \"BIT32\";\n})(CODEC_TYPES || (CODEC_TYPES = {}));\nexport function createCodec(name, type, encode, decode) {\n    return {\n        name,\n        type,\n        encode,\n        decode\n    };\n}\n//# sourceMappingURL=codec.js.map","import { createCodec, CODEC_TYPES } from '../codec.js';\nexport function enumeration(v) {\n    function findValue(val) {\n        // Use the reverse mapping to look up the enum key for the stored value\n        // https://www.typescriptlang.org/docs/handbook/enums.html#reverse-mappings\n        if (v[val.toString()] == null) {\n            throw new Error('Invalid enum value');\n        }\n        return v[val];\n    }\n    const encode = function enumEncode(val, writer) {\n        const enumValue = findValue(val);\n        writer.int32(enumValue);\n    };\n    const decode = function enumDecode(reader) {\n        const val = reader.int32();\n        return findValue(val);\n    };\n    // @ts-expect-error yeah yeah\n    return createCodec('enum', CODEC_TYPES.VARINT, encode, decode);\n}\n//# sourceMappingURL=enum.js.map","import { createCodec, CODEC_TYPES } from '../codec.js';\nexport function message(encode, decode) {\n    return createCodec('message', CODEC_TYPES.LENGTH_DELIMITED, encode, decode);\n}\n//# sourceMappingURL=message.js.map"],"names":["module","exports","read","buf","offset","b","res","shift","counter","l","length","bytes","RangeError","REST","Math","pow","MSB","encode","num","out","Number","MAX_SAFE_INTEGER","oldOffset","INT","MSBALL","decode","encodingLength","N1","N2","N3","N4","N5","N6","N7","N8","N9","value","number","n","isSafeInteger","Error","bool","lengths","Uint8Array","TypeError","includes","hash","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","min","Object","defineProperty","assert","SHA2","_assert_js_1","utils_js_1","Hash","constructor","padOffset","isLE","super","this","pos","buffer","view","createView","update","data","default","len","toBytes","take","set","subarray","process","dataView","roundClean","digestInto","fill","i","byteOffset","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","setUint32","oview","outLen","state","get","digest","slice","destroy","_cloneInto","to","add","toBig","split","fromBig","U32_MASK64","le","lst","Ah","Uint32Array","Al","Bh","Bl","u64","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","crypto","globalThis","undefined","hmac","HMAC","_key","key","iHash","pad","oHash","getPrototypeOf","message","pbkdf2Async","pbkdf2","hmac_js_1","pbkdf2Init","_password","_salt","_opts","opts","checkOpts","dkLen","asyncTick","c","password","salt","DK","PRF","PRFSalt","pbkdf2Output","prfW","u","arr","ti","Ti","setInt32","ui","async","asyncLoop","ripemd160","RIPEMD160","_sha2_js_1","Rho","Id","from","_","Pi","map","idxL","idxR","j","push","k","shifts","shiftsL","idx","shiftsR","Kl","Kr","rotl","word","f","group","x","y","z","BUF","h0","h1","h2","h3","h4","getUint32","al","ar","bl","br","cl","cr","dl","dr","el","er","rGroup","hbl","hbr","rl","rr","sl","sr","tl","tr","wrapConstructor","sha224","sha256","Maj","a","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","W15","W2","s0","rotr","s1","T1","T2","SHA224","shake256","shake128","keccak_512","keccak_384","keccak_256","keccak_224","sha3_512","sha3_384","sha3_256","sha3_224","Keccak","keccakP","_u64_js_1","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","t","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","suffix","enableXOF","posOut","state32","u32","keccak","finish","writeInto","bufferOut","xofInto","xof","gen","genShake","wrapConstructorWithOpts","sha384","sha512_256","sha512_224","sha512","SHA512","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","randomBytes","concatBytes","utf8ToBytes","nextTick","hexToBytes","bytesToHex","u8","crypto_1","byteLength","floor","DataView","hexes","Array","v","toString","padStart","uint8a","hex","array","hexByte","byte","parseInt","isNaN","str","TextEncoder","iters","tick","cb","ts","Date","now","diff","arrays","every","reduce","result","clone","defaults","obj","prototype","call","assign","hashConstructor","hashC","tmp","hashCons","msg","bytesLength","getRandomValues","getWindow","node","window","ownerDocument","defaultView","isElement","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","max","getUAString","uaData","navigator","userAgentData","brands","isArray","item","brand","version","join","userAgent","isLayoutViewport","test","getBoundingClientRect","element","includeScale","isFixedStrategy","clientRect","scaleX","scaleY","offsetWidth","width","offsetHeight","height","visualViewport","addVisualOffsets","left","offsetLeft","top","offsetTop","right","bottom","getWindowScroll","win","scrollLeft","pageXOffset","scrollTop","pageYOffset","getNodeName","nodeName","toLowerCase","getDocumentElement","document","documentElement","getWindowScrollBarX","getComputedStyle","isScrollParent","_getComputedStyle","overflow","overflowX","overflowY","getCompositeRect","elementOrVirtualElement","offsetParent","isFixed","isOffsetParentAnElement","offsetParentIsScaled","rect","isElementScaled","scroll","offsets","clientLeft","clientTop","getLayoutRect","abs","getParentNode","assignedSlot","parentNode","host","getScrollParent","indexOf","body","listScrollParents","list","_element$ownerDocumen","scrollParent","isBody","target","concat","updatedList","isTableElement","getTrueOffsetParent","position","getOffsetParent","isFirefox","currentNode","css","transform","perspective","contain","willChange","filter","getContainingBlock","auto","basePlacements","start","end","clippingParents","viewport","popper","reference","variationPlacements","acc","placement","modifierPhases","order","modifiers","Map","visited","Set","sort","modifier","name","requires","requiresIfExists","forEach","dep","has","depModifier","DEFAULT_OPTIONS","strategy","areValidElements","_len","arguments","args","some","popperGenerator","generatorOptions","_generatorOptions","_generatorOptions$def","defaultModifiers","_generatorOptions$def2","defaultOptions","options","fn","pending","orderedModifiers","modifiersData","elements","attributes","styles","effectCleanupFns","isDestroyed","setOptions","setOptionsAction","cleanupModifierEffects","scrollParents","contextElement","phase","orderModifiers","merged","current","existing","keys","mergeByName","m","enabled","_ref3","_ref3$options","effect","cleanupFn","noopFn","forceUpdate","_state$elements","rects","reset","index","_state$orderedModifie","_state$orderedModifie2","_options","Promise","resolve","then","onFirstUpdate","passive","getBasePlacement","getVariation","getMainAxisFromPlacement","computeOffsets","_ref","basePlacement","variation","commonX","commonY","mainAxis","unsetSides","mapToStyles","_ref2","_Object$assign2","popperRect","gpuAcceleration","adaptive","roundOffsets","_offsets$x","_offsets$y","hasX","hasOwnProperty","hasY","sideX","sideY","heightProp","widthProp","_Object$assign","commonStyles","_ref4","dpr","devicePixelRatio","roundOffsetsByDPR","_options$offset","invertDistance","skidding","distance","distanceAndSkiddingToXY","_data$state$placement","popperOffsets","getOppositePlacement","replace","matched","getOppositeVariationPlacement","contains","parent","child","rootNode","getRootNode","next","isSameNode","rectToClientRect","getClientRectFromMixedType","clippingParent","html","clientWidth","clientHeight","layoutViewport","getViewportRect","getInnerBoundingClientRect","winScroll","scrollWidth","scrollHeight","direction","getDocumentRect","getClippingRect","boundary","rootBoundary","mainClippingParents","clipperElement","getClippingParents","firstClippingParent","clippingRect","accRect","mergePaddingObject","paddingObject","expandToHashMap","hashMap","detectOverflow","_options$placement","_options$strategy","_options$boundary","_options$rootBoundary","_options$elementConte","elementContext","_options$altBoundary","altBoundary","_options$padding","padding","altContext","clippingClientRect","referenceClientRect","popperClientRect","elementClientRect","overflowOffsets","offsetData","multiply","axis","within","_options$mainAxis","checkMainAxis","_options$altAxis","altAxis","checkAltAxis","_options$tether","tether","_options$tetherOffset","tetherOffset","isBasePlacement","referenceRect","tetherOffsetValue","normalizedTetherOffsetValue","offsetModifierState","_offsetModifierState$","mainSide","altSide","additive","minLen","maxLen","arrowElement","arrow","arrowRect","arrowPaddingObject","arrowPaddingMin","arrowPaddingMax","arrowLen","minOffset","maxOffset","arrowOffsetParent","clientOffset","offsetModifierValue","tetherMax","preventedOffset","_offsetModifierState$2","_mainSide","_altSide","_offset","_min","_max","isOriginSide","_offsetModifierValue","_tetherMin","_tetherMax","_preventedOffset","withinMaxClamp","_state$modifiersData$","toPaddingObject","minProp","maxProp","endDiff","startDiff","clientSize","centerToReference","center","axisProp","centerOffset","_options$element","querySelector","getSideOffsets","preventedOffsets","isAnySideFullyClipped","side","_options$scroll","_options$resize","resize","addEventListener","removeEventListener","_ref5","_options$gpuAccelerat","_options$adaptive","_options$roundOffsets","style","removeAttribute","setAttribute","initialStyles","margin","property","attribute","_skip","specifiedFallbackPlacements","fallbackPlacements","_options$flipVariatio","flipVariations","allowedAutoPlacements","preferredPlacement","oppositePlacement","getExpandedFallbackPlacements","placements","_options$allowedAutoP","allowedPlacements","overflows","computeAutoPlacement","checksMap","makeFallbackChecks","firstFittingPlacement","_basePlacement","isStartVariation","isVertical","mainVariationSide","altVariationSide","checks","check","_loop","_i","fittingPlacement","find","preventOverflow","referenceOverflow","popperAltOverflow","referenceClippingOffsets","popperEscapeOffsets","isReferenceHidden","hasPopperEscaped","ctx","params","reject","err","apply","base64","string","p","charAt","ceil","b64","s64","parts","chunk","String","fromCharCode","invalidEncoding","charCodeAt","EventEmitter","_listeners","on","evt","off","listeners","splice","emit","factory","Float32Array","f32","f8b","writeFloat_f32_cpy","val","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","exponent","log","LN2","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","e","alloc","size","SIZE","MAX","slab","utf8","write","c1","c2","d","w","plural","ms","msAbs","isPlural","type","match","exec","parseFloat","parse","isFinite","long","fmtLong","fmtShort","JSON","stringify","code","implementation","alphabet","engine","stringOrBuffer","isImplemented","Buffer","input","char","substring","bits","RegExp","url","Base","baseX","base16","base32","constants","names","prev","tupple","codes","multibase","nameOrCode","base","getBase","bufOrString","isBuffer","isEncoded","freeze","errNotSupported","codeBuf","validEncode","defaultLengths","varint","cs","validate","multihash","toHexString","fromHexString","toB58String","fromB58String","encoded","isValidCode","hashfn","coerceCode","isAppCode","prefix","blake","toCallback","blake2b","init","blake2bInit","blake2bUpdate","blake2bFinal","blake2s","blake2sInit","blake2sUpdate","blake2sFinal","makeB2Hash","hf","table","nodeify","webCrypto","self","subtle","webkitSubtle","msCrypto","getWebCrypto","webCryptoHash","callback","onerror","oncomplete","raw","sha1","sha2256","sha2512","sha3","murmur3","utils","sha","toBuf","fromString","fromNumberTo32BitBuf","sha3512","sha3384","sha3256","sha3224","shake_128","shake_256","keccak224","keccak256","keccak384","keccak512","murmur3128","x64","hash128","murmur332","x86","hash32","addBlake","dblSha2256","firstHash","Multihashing","func","createHash","functions","doWork","other","_input","root","library","_validBytes","ArrayBuffer","isView","isInteger","_x86Multiply","_x86Rotl","_x86Fmix","_x64Add","o","_x64Multiply","_x64Rotl","_x64LeftShift","_x64Xor","_x64Fmix","seed","inputValidation","remainder","blocks","k1","k2","k3","k4","c3","c4","murmurHash3","fetch","Headers","Request","Response","Netmask","atob","chr","chr0","chrA","chra","ip2long","long2ip","ip","ref","dmax","net","mask","maskLong","error1","bitmask","netLong","hostmask","first","last","broadcast","count","lastLong","emitter","once","subject","reservedWords","validateSubject","eventsStorage","registeredEvents","eventName","handlers","callbacks","fire","fireArguments","callbackInfo","createEventsStorage","graph","physicsSettings","physicsSimulator","createSimulator","nodeMass","nodeId","links","getLinks","nodeBodies","springs","bodiesCount","springTransform","settings","noop","forEachNode","initBody","id","forEachLink","initLink","onGraphChanged","wasStable","api","step","updateStableStatus","lastMove","isStableNow","getNodePosition","getInitializedBody","setNodePosition","setPosition","getLinkPosition","linkId","spring","getGraphRect","getBBox","forEachBody","pinNode","isPinned","isNodePinned","dispose","getBody","getSpring","fromId","toId","link","hasLink","getForceVectorLength","fx","fy","force","sqrt","simulator","eventify","isStable","changes","change","changeType","releaseNode","releaseLink","getNodesCount","getNode","neighbors","maxNeighbors","otherBody","getNeighborBodies","getBestNewBodyPosition","addBodyAt","updateBodyMass","isNodeOriginallyPinned","delete","removeBody","fromBody","toBody","addSpring","removeSpring","mass","getVariableName","dimension","template","config","indent","indentString","variableName","generateBoundsFunctionBody","Function","generateFunctionBody","createPatternBuilder","pattern","generateCreateBodyFunctionBody","debugSetters","getVectorCode","getBodyCode","variableList","setters","Body","generateCreateDragForceFunctionBody","generateCreateSpringForceFunctionBody","generateIntegratorFunctionBody","generateQuadTreeFunctionBody","quadCount","getInsertStackCode","getQuadNodeCode","isSamePosition","getChildBodyCode","setChildBodyCode","quads","assignQuads","recursiveCode","runRecursiveOnChildren","indentCount","insertionCode","assignInsertionQuadIndex","childBody","setChildBody","getChildBody","Spring","merge","springCoeff","dragCoeff","springLength","springCoefficient","gravity","theta","dragCoefficient","timeStep","adaptiveTimeStepWeight","dimensions","debug","dimensionalCache","generateCreateBodyFunction","createQuadTree","generateQuadTreeFunction","createBounds","generateBoundsFunction","createDragForce","generateCreateDragForceFunction","createSpringForce","generateCreateSpringForceFunction","integrate","generateIntegratorFunction","random","bodies","quadTree","bounds","springForce","dragForce","forces","forceMap","iterationNumber","addForce","insertBodies","updateBodyForce","publicApi","removeForce","forceName","forceIndex","getForces","movement","addBody","createBody","body1","body2","getTotalMovement","getBestNewPosition","getBoundingBox","invalidateBBox","console","warn","augment","expose","box","forceFunction","source","sourceIsNumber","coefficient","multigraph","uniqueLinkId","nodes","multiEdges","suspendEvents","createLink","makeLinkId","isMultiEdge","getLink","Link","prevLink","recordLinkChange","recordNodeChange","enterModification","exitModification","graphPart","addNode","addLink","fromNode","toNode","isUpdate","addLinkToNode","removeLink","otherId","removeLinkInstance","removeNode","getNodeCount","getLinkCount","getEdgeCount","getLinksCount","forEachLinkedNode","oriented","valuesIterator","values","nextValue","done","forEachOrientedLink","linkedNodeId","forEachNonOrientedLink","beginUpdate","endUpdate","clear","hasNode","realOn","enterModificationReal","exitModificationReal","recordLinkChangeReal","recordNodeChangeReal","monitorSubscribers","Node","prevLinks","fromNodeId","toNodeId","targetHasIt","optionsValueType","inputSeed","Generator","gamma","nextDouble","randomIterator","customRandom","localRandom","shuffle","maxValue","uniform","gaussian","r","levy","beta","sigma","sin","globalObject","g","getGlobal","forge","registerAlgorithm","mode","cipher","aes","Algorithm","startEncrypting","iv","_createCipher","decrypt","createEncryptionCipher","startDecrypting","createDecryptionCipher","initialize","blockSize","encrypt","inBlock","outBlock","_updateBlock","_w","_init","util","createBuffer","putByte","getInt32","encryptOp","_expandKey","modes","ecb","cbc","cfb","ofb","ctr","gcm","sbox","isbox","rcon","mix","imix","Nb","xtime","e2","e4","e8","sx","sx2","me","ime","ei","temp","iNk","Nk","m0","m1","m2","m3","wnew","wi","sub","a2","b2","Nr","algorithm","toUpperCase","createDecipher","createCipher","ByteBuffer","asn1","_checkBufferLength","remaining","error","available","requested","Class","UNIVERSAL","APPLICATION","CONTEXT_SPECIFIC","PRIVATE","Type","NONE","BOOLEAN","INTEGER","BITSTRING","OCTETSTRING","NULL","OID","ODESC","EXTERNAL","REAL","ENUMERATED","EMBEDDED","UTF8","ROID","SEQUENCE","SET","PRINTABLESTRING","IA5STRING","UTCTIME","GENERALIZEDTIME","BMPSTRING","tagClass","constructed","composed","bitStringContents","original","copy","excludeBitStringContents","equals","obj1","obj2","equal","includeBitStringContents","getBerValueLength","getByte","getInt","_fromDer","depth","b1","longFormBytes","_getValueLength","strict","getBytes","decodeBitStrings","savedRead","savedRemaining","unused","used","tc","ex","getInt16","asn1Options","fromDer","parseAllBytes","byteCount","toDer","useBitStringContents","putBytes","putBuffer","putInt16","substr","lenBytes","oidToDer","oid","valueBytes","derToOid","utcTimeToDate","utc","date","year","MM","DD","hh","mm","ss","setUTCFullYear","setUTCHours","setTime","generalizedTimeToDate","gentime","YYYY","fff","isUTC","setFullYear","setHours","dateToUtcTime","rval","format","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","dateToGeneralizedTime","integerToDer","putSignedInt","integer","derToInteger","getSignedInt","capture","errors","optional","captureAsn1","captureBitStringContents","captureBitStringValue","_nonLatinRegex","prettyPrint","level","indentation","IA5String","subvalues","pki","oids","decodeUtf8","_reverseAlphabets","maxline","digits","carry","at","_encodeWithByteBuffer","regex","reverse","algorithms","getAlgorithm","BlockCipher","_finish","_op","_decrypt","compact","unpad","afterFinish","transformIV","ints","inc32","block","from64To32","_ints","_inBlock","_outBlock","putInt32","fillWithByte","truncate","_prev","_iv","_partialBlock","_partialOutput","_partialBytes","inputLength","partialBytes","_R","additionalData","_cipherLength","_tagLength","tagLength","_tag","tag","_hashBlock","_hashSubkey","componentBits","_m","generateHashTable","ivLength","_j0","ghash","_aDataLength","_s","z_i","v_i","lsb","tableMultiply","x_i","ah","multiplier","perInt","shft","generateSubHashTable","mid","half","m_i","m_j","des","_keys","pc2bytes0","pc2bytes1","pc2bytes2","pc2bytes3","pc2bytes4","pc2bytes5","pc2bytes6","pc2bytes7","pc2bytes8","pc2bytes9","pc2bytes10","pc2bytes11","pc2bytes12","pc2bytes13","iterations","lefttmp","righttmp","_createKeys","spfunction1","spfunction2","spfunction3","spfunction4","spfunction5","spfunction6","spfunction7","spfunction8","looping","endloop","loopinc","right1","right2","usePureJavaScript","_md","_ipadding","_opadding","md","keylen","blockLength","inner","getMac","dbits","jsbn","BigInteger","fromNumber","nbi","am3","xl","xh","am","appName","DB","DM","DV","FV","F1","F2","vv","BI_RM","BI_RC","int2char","intAt","nbv","fromInt","nbits","Classic","Montgomery","mp","invDigit","mpl","mph","um","mt2","op_and","op_or","op_xor","op_andnot","lbit","cbit","NullExp","nNop","Barrett","r2","q3","ONE","dlShiftTo","mu","divide","convert","compareTo","revert","divRemTo","mulTo","multiplyTo","sqrTo","squareTo","ZERO","subTo","copyTo","u0","clamp","drShiftTo","fromRadix","mi","sh","lShiftTo","bs","cbs","bm","ds","rShiftTo","q","pm","pt","nsh","ys","y0","yt","d1","d2","qd","isEven","exp","negate","toRadix","km","bitLength","modPowInt","multiplyUpperTo","multiplyLowerTo","dAddOffset","lowprimes","lplim","chunkSize","signum","intValue","dMultiply","testBit","bitwiseTo","shiftLeft","isProbablePrime","nextBytes","op","changeBit","addTo","modInt","millerRabin","n1","subtract","getLowestSetBit","shiftRight","prng","modPow","byteValue","shortValue","toByteArray","and","or","xor","andNot","not","bitCount","setBit","clearBit","flipBit","divideAndRemainder","g2","is1","modInverse","ac","gcd","mgf","mgf1","generate","maskLen","digestLength","_IN","_I_","pbe","encryptedPrivateKeyValidator","PBES2AlgorithmsValidator","pkcs12PbeParamsValidator","prfOidToMessageDigest","prfOid","prfAlgorithm","supported","prfAlgorithmToMessageDigest","encryptPrivateKeyInfo","saltSize","encryptionAlgorithm","encryptedData","getBytesSync","countBytes","ivLen","encOid","cipherFn","dk","pkcs5","createPbkdf2Params","saltBytes","generatePkcs12Key","decryptPrivateKeyInfo","encryptionOid","getCipher","encryptionParams","encrypted","encryptedPrivateKeyToPem","epki","pem","encryptedPrivateKeyFromPem","headerType","procType","encryptRsaPrivateKey","rsaKey","legacy","wrapRsaPrivateKey","privateKeyToAsn1","opensslDeriveBytes","dekInfo","parameters","decryptRsaPrivateKey","rc2","privateKeyFromAsn1","iter","passBuf","Slen","S","Plen","P","I","Inew","setAt","getCipherForPBES2","getCipherForPKCS12PBE","supportedOids","kdfOid","kdfSalt","kdfIterationCount","encIv","dIvLen","md5","digests","isNodejs","pbkdf2Sync","hLen","prf","u_c","u_c1","int32ToBytes","xorBytes","outer","setImmediate","foldHeader","header","insertSpace","$1","candidate","insert","ltrim","contentDomain","headers","encode64","rMessage","rHeader","rCRLF","decode64","lines","li","line","nl","vi","pkcs1","rsa_mgf1","maskLength","encode_rsa_oaep","label","mgf1Md","keyLength","maxLength","lHash","PS","PS_length","seedLength","dbMask","maskedDB","seedMask","decode_rsa_oaep","em","expectedLength","maskedSeed","db","lHashPrime","in_ps","p7","pkcs7","_recipientFromAsn1","recipientInfoValidator","issuer","RDNAttributesAsArray","serialNumber","serial","toHex","encryptedContent","encAlgorithm","parameter","encParameter","content","encKey","_recipientsToAsn1","recipients","ret","distinguishedNameToAsn1","_signerToAsn1","digestAlgorithm","authenticatedAttributesAsn1","signatureAlgorithm","signature","unauthenticatedAttributes","attrsAsn1","attr","_attributeToAsn1","contentType","messageDigest","signingTime","jan_1_1950","jan_1_2050","timestamp","_fromAsn1","validator","rawCapture","_decryptContent","ciph","messageFromPem","messageFromAsn1","messageToPem","pemObj","toAsn1","contentInfoValidator","envelopedData","createEnvelopedData","createEncryptedData","signedData","createSignedData","fromAsn1","certificates","crls","signers","digestAlgorithmIdentifiers","contentInfo","signerInfos","signedDataValidator","certs","certificateFromAsn1","certificateToAsn1","addSigner","signer","certificate","cert","certificateFromPem","privateKeyFromPem","authenticatedAttributes","rsaEncryption","encodeUtf8","detached","detachedContent","mds","ai","_signersToAsn1","addSignerInfos","addDigestAlgorithmIds","verify","addCertificate","addCertificateRevokationList","crl","encryptedDataValidator","envelopedDataValidator","infos","_recipientsFromAsn1","recipientInfos","ec","findRecipient","sAttr","rAttr","recipient","privKey","desCBC","addRecipient","publicKey","keyLen","ciphFn","p7v","pkcs7asn1","encryptedContentInfoValidator","signerValidator","prime","GCD_30_DELTA","THIRTY","generateProbablePrime","rng","Worker","primeincFindPrimeWithoutWorkers","generateRandom","numWorkers","workers","workLoad","range","workerScript","estimateCores","cores","workerMessage","found","terminate","postMessage","primeincFindPrimeWithWorkers","primeincFindPrime","mrTests","getMillerRabinTests","millerRabinTests","maxBlockTime","_primeinc","deltaIdx","bits1","_crypto","versions","plugin","time","reseeds","generated","keyBytes","pools","_reseedSync","messageLength","_seed","needed","collect","seedFileSync","_2powK","seedBytes","formatKey","formatSeed","defaultSeedFile","globalScope","entropy","QuotaExceededError","pool","generateSync","increment","seedFile","_reseed","collectInt","registerWorker","worker","listener","pss","saltLength","sLen","salt_","pssobj","modBits","emBits","emLen","mHash","m_","ps","checkLen","jQuery","prng_aes","_prng_aes_output","_prng_aes_buffer","spawnPrng","_ctx","_navBytes","mousemove","clientX","clientY","keypress","charCode","createInstance","piTable","rol","ror","expandKey","effKeyBits","L","T","T8","TM","mixRound","mashRound","_output","K","getInt16Le","runPlan","plan","putInt16Le","ptr","rsa","privateKeyValidator","rsaPrivateKeyValidator","rsaPublicKeyValidator","publicKeyValidator","digestInfoValidator","emsaPkcs1v15encode","oidBytes","digestInfo","_modPow","pub","dP","dQ","qInv","xp","xq","_encodePkcs1_v1_5","bt","eb","padByte","padNum","numZeros","padBytes","_decodePkcs1_v1_5","ml","_bnToBytes","_getMillerRabinTests","_detectNodeCrypto","_detectSubtleCrypto","_detectSubtleMsCrypto","_intToUint8Array","yhex","ed","zeros","expected","xhex","createKeyPairGenerationState","eInt","qBits","pBits","pqState","stepKeyPairGenerationState","t2","t1","total","p1","q1","phi","privateKey","setPrivateKey","setPublicKey","generateKeyPair","modulusLength","publicExponent","publicKeyEncoding","privateKeyEncoding","priv","publicKeyFromPem","generateKey","pair","exportKey","pkcs8","setRsaPublicKey","genOp","exportOp","keypair","generateKeyPairSync","getPrime","_generateKeyPair","scheme","schemeOptions","_parseAllDigestBytes","algorithmIdentifier","md2","setRsaPrivateKey","privateKeyModulus","privateKeyPublicExponent","privateKeyPrivateExponent","privateKeyPrime1","privateKeyPrime2","privateKeyExponent1","privateKeyExponent2","privateKeyCoefficient","privateKeyToRSAPrivateKey","publicKeyFromAsn1","publicKeyOid","rsaPublicKey","publicKeyModulus","publicKeyExponent","publicKeyToAsn1","publicKeyToSubjectPublicKeyInfo","publicKeyToRSAPublicKey","_initialized","_padding","fillString","_state","fullMessageLength","messageLengthSize","messageLength64","int32s","encoding","_update","finalBlock","s2","_k","h5","h6","h7","maj","_states","_h","messageLength128","hlen","t1_hi","t1_lo","t2_hi","t2_lo","s0_hi","s0_lo","s1_hi","ch_hi","maj_hi","maj_lo","a_hi","a_lo","b_hi","b_lo","c_hi","c_lo","d_hi","d_lo","e_hi","e_lo","f_hi","f_lo","g_hi","g_lo","h_hi","h_lo","w2","w7","w15","w16","baseN","_checkBitsParam","ByteStringBuffer","isArrayBuffer","isArrayBufferView","_constructedStringLength","browser","setTimeout","event","stopPropagation","MutationObserver","div","createElement","observe","oldSetImmediate","_optimizeConstructedString","isEmpty","putString","putInt24","putInt24Le","putInt32Le","putInt","getInt24","getInt24Le","getInt32Le","DataBuffer","readOffset","growSize","writeOffset","accommodate","amount","src","dst","setUint8","binary","Uint16Array","text","utf16","setInt16","setInt8","getInt8","getUint8","s3","_base64","_base64Idx","_base58","chr1","chr2","chr3","enc1","enc2","enc3","enc4","unescape","encodeURIComponent","decodeURIComponent","escape","base58","deflate","inflate","_setStorageObject","removeItem","setItem","_getStorageObject","getItem","_setItem","_getItem","_removeItem","empty","prop","_clearItems","_callStorageFunction","location","exception","localStorage","clearItems","part","re","argi","lastIndex","formatNumber","decimals","dec_point","thousands_sep","toFixed","formatSize","bytesFromIP","bytesFromIPv4","bytesFromIPv6","blanks","bytesToIP","bytesToIPv4","bytesToIPv6","zeroGroups","zeroMaxGroup","unshift","hardwareConcurrency","Blob","blobUrl","URL","createObjectURL","st","et","sample","samples","avg","revokeObjectURL","results","overlaps","r1","overlap","_shortNames","x509CertificateValidator","rsassaPssParameterValidator","certificationRequestInfoValidator","certificationRequestValidator","_getAttribute","shortName","rdn","si","valueTagClass","CRIAttributesAsArray","seq","extensionRequest","extensions","certificateExtensionFromAsn1","_readSignatureParameters","fillDefaults","algorithmOid","hashOid","maskGenOid","maskGenHashOid","_createSignatureDigest","signatureOid","_verifySignature","sha1WithRSAEncryption","sha1WithRSASignature","signatureParameters","_dnToAsn1","attrs","_fillMissingFields","valueConstructed","certificateExtensionToAsn1","_fillMissingExtensionFields","extension","b3","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","keyAgreement","keyCertSign","cRLSign","encipherOnly","decipherOnly","cA","pathLenConstraint","client","server","email","objsign","reserved","sslCA","emailCA","objCA","altNames","altName","comment","ski","generateSubjectKeyIdentifier","subjectKeyIdentifier","keyIdentifier","authorityCertIssuer","subSeq","fullNameGeneralNames","_signatureParametersToAsn1","_CRIAttributesToAsn1","csr","computeHash","certificateToPem","publicKeyToPem","publicKeyToRSAPublicKeyPem","getPublicKeyFingerprint","delimiter","certificationRequestFromPem","certificationRequestFromAsn1","certificationRequestToPem","certificationRequestToAsn1","createCertificate","siginfo","validity","notBefore","notAfter","getField","sn","addField","setSubject","uniqueId","setIssuer","setExtensions","exts","getExtension","ext","tbsCertificate","getTBSCertificate","issued","expectedIssuer","actualIssuer","isIssuer","iattr","sattr","verifySubjectKeyIdentifier","certVersion","certSerialNumber","certSignatureOid","certSignatureParams","certinfoSignatureOid","certinfoSignatureParams","certSignature","certValidity1UTCTime","certValidity2GeneralizedTime","certValidity3UTCTime","certValidity4GeneralizedTime","imd","ibytes","certIssuer","certIssuerUniqueId","smd","sbytes","certSubject","certSubjectUniqueId","certExtensions","certificateExtensionsFromAsn1","subjectPublicKeyInfo","extseq","critical","ev","gn","createCertificationRequest","csrVersion","csrSignatureOid","csrSignatureParams","csrSignature","certificationRequestInfo","certificationRequestInfoSubject","getAttribute","addAttribute","certificationRequestInfoAttributes","setAttributes","getCertificationRequestInfo","cri","_dateToAsn1","tbs","certificateExtensionsToAsn1","dn","createCaStore","caStore","getBySubject","ensureSubjectHasHash","getIssuer","hasCertificate","der1","listAllCertificates","certList","removeCertificate","certificateError","bad_certificate","unsupported_certificate","certificate_revoked","certificate_expired","certificate_unknown","unknown_ca","verifyCertificateChain","chain","validityCheckDate","selfSigned","parents","verified","se","keyUsage","basicConstraints","bcExt","keyUsageExt","vfd","ieee754","customInspectSymbol","Symbol","K_MAX_LENGTH","setPrototypeOf","arg","encodingOrOffset","allocUnsafe","isEncoding","actual","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","checked","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","loweredCase","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","hexWrite","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","utf16leToBytes","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","enumerable","poolSize","allocUnsafeSlow","_isBuffer","compare","swap16","swap32","swap64","toLocaleString","inspect","trim","thisStart","thisEnd","thisCopy","targetCopy","toJSON","_arr","hexSliceLookupTable","checkOffset","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUIntLE","mul","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","writeUIntLE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","sym","getMessage","writable","configurable","stack","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","INVALID_BASE64_RE","leadSurrogate","base64clean","i16","BufferBigIntNotDefined","isPromise","promise","nodeifyThis","extend","prom","NodeifyPromise","setImediate","resolver","isResolved","isFulfilled","waiting","running","skipTimeout","timeoutDone","fulfill","use","inherits","ctor","superCtor","super_","TempCtor","BN","endian","isBN","negative","words","red","wordSize","parseHex","parseBase","cmp","_initNumber","_initArray","_parseHex","_parseBase","strip","toArray","limbLen","limbPow","imuln","_iaddn","dest","_expand","_normSign","groupSizes","groupBases","smallMulTo","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","toNumber","toBuffer","toArrayLike","ArrayType","reqLength","andln","iushrn","clz32","_countBits","_zeroBits","zeroBits","toTwos","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","uor","iuand","iand","uand","iuxor","ixor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","a0","al0","ah0","a1","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w3","w4","w5","w6","w8","w9","w10","w11","w12","w13","w14","w17","w18","jumboMulTo","FFTM","mulp","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","rtwdf","cos","itwdf","rtwdf_","itwdf_","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","convert13b","stub","ph","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","bhi","qj","divmod","positive","divn","umod","divRound","dm","egcd","yp","im","isOdd","jm","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","mod3","one","nOne","lpow","inv","wnd","currentLen","mont","stripHexPrefix","formattedString","isHexPrefixed","stringArg","pop","dividedToIntegerBy","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","getOwnPropertyNames","test2","test3","letter","shouldUseNative","symbols","toObject","define","callBind","getPolyfill","shim","polyfill","is","keysShim","toStr","isArgs","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","object","isObject","isFunction","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","origKeys","originalKeys","keysWorksWithArguments","callee","partialComplete","varArgs","numBoundArgs","callArgs","fns","fnsList","arrayAsList","curFn","startParams","foldR","compose2","f1","f2","lazyUnion","maybeValue","numberOfFixedArguments","argsHolder","lazyIntersection","fn1","fn2","param","always","isOfType","maybeSomething","defined","hasAllProperties","fieldList","all","field","cons","xs","emptyList","head","tail","inputArray","reverseList","listAsArray","arraySoFar","listItem","startValue","without","removedFn","withoutInner","subList","applyEach","fnList","reverseInner","reversedAlready","clarinet","eventBus","latestError","emitSaxKey","SAX_KEY","emitValueOpen","SAX_VALUE_OPEN","emitValueClose","SAX_VALUE_CLOSE","emitFail","FAIL_EVENT","MAX_BUFFER_LENGTH","stringTokenPattern","_n","BEGIN","VALUE","OPEN_OBJECT","CLOSE_OBJECT","OPEN_ARRAY","CLOSE_ARRAY","STRING","OPEN_KEY","CLOSE_KEY","TRUE","TRUE2","TRUE3","FALSE","FALSE2","FALSE3","FALSE4","NULL2","NULL3","NUMBER_DECIMAL_POINT","bufferCheckPosition","textNode","numberNode","slashed","closed","unicodeS","unicodeI","column","emitError","errorString","errorReport","whitespace","STREAM_DATA","starti","STRING_BIGLOOP","reResult","maxActual","STREAM_END","jsonPathClause","possiblyCapturing","optionalFieldList","jsonPathNamedNodeInObjectNotation","jsonPathNamedNodeInArrayNotation","jsonPathNumberedNodeInArrayNotation","jsonPathPureDuckTyping","jsonPathDoubleDot","jsonPathDot","jsonPathBang","emptyString","jsonPathSyntax","componentRegexes","namedNode","keyOf","nodeOf","ROOT_PATH","incrementalContentBuilder","oboeBus","emitNodeOpened","NODE_OPENED","emitNodeClosed","NODE_CLOSED","emitRootOpened","ROOT_PATH_FOUND","emitRootClosed","ROOT_NODE_FOUND","appendBuiltContent","ancestorBranches","keyFound","ascent","newDeepestName","maybeNewDeepestNode","ascentWithNewPath","contentBuilderHandlers","newDeepestNode","arrayConsistentAscent","possiblyInconsistentAscent","arrayIndicesAreKeys","previouslyUnmappedName","jsonPathCompiler","pathNodeSyntax","doubleDotSyntax","dotSyntax","bangSyntax","emptySyntax","headKey","headNode","previousExpr","detection","skip1","rootExpr","generateClauseReaderIfTokenFound","tokenDetector","clauseEvaluatorGenerators","jsonPath","parserGeneratedSoFar","onSuccess","detected","compiledParser","exprs","expr","expressionsReader","clauseMatcher","clauseForJsonPath","fieldListStr","terminalCaseWhenArrivingAtRoot","terminalCaseWhenPreviousExpressionIsSatisfied","recursiveCase","cases","lastClause","exprMatch","returnFoundParser","_remainingJsonPath","compileJsonPathToFunction","uncompiledJsonPath","singleEventPubSub","eventType","newListener","removeListener","listenerTupleList","listenerList","hasId","tuple","listenerId","un","removed","hasListener","_S","NODE_SWAP","NODE_DROP","HTTP_START","ABORTING","statusCode","jsonBody","thrown","patternAdapter","predicateEventMap","path","addUnderlyingListener","fullEventName","predicateEvent","compiledJsonPath","emitMatch","maybeMatchingMapping","descent","emitMatchingNode","removedEventName","instanceApi","contentSource","oboeApi","fullyQualifiedNamePattern","rootNodeFinishedEvent","emitNodeDrop","emitNodeSwap","addListener","eventId","addForgettableCallback","safeCallback","protectedCallback","discard","forget","addSingleNodeOrPathListener","effectiveCallback","returnValueFromCallback","oboe","drop","wrapCallbackToSwapNodeIfSomethingReturned","fullyQualifiedPatternMatchEvent","addNodeOrPathListenerApi","jsonPathOrListenerMap","listenerMap","addMultipleNodeOrPathListeners","_statusCode","p2","p3","fail","abort","wire","httpMethodName","withCredentials","singles","newSingle","pubSubInstance","methodName","pubSub","xhr","method","emitStreamData","numberOfCharsAlreadyGivenToCallback","stillToSendStartEvent","handleProgress","textSoFar","responseText","newText","onreadystatechange","onprogress","sendStartIfNotAlready","status","headerStr","headerPair","parseResponseHeaders","getAllResponseHeaders","readyState","headerName","open","setRequestHeader","pageLocation","ajaxHost","portOf","port","protocol","isCrossOrigin","urlHostMatch","parseUrlOrigin","send","streamingHttp","XMLHttpRequest","stateAfter","handler","newNode","oldHead","ancestors","ascentManager","applyDefaults","passthrough","cached","baseUrl","getTime","modifiedUrl","arg1","nodeStreamMethodNames","isStream","wrappy","called","onceStrict","onceError","defaultDispose","Cache","newest","oldest","entry","getEntry","older","newer","clean","parentEntrySlot","reusableEmptyArray","emptySetPool","POOL_TARGET_SIZE","condition","optionalMessage","valueGet","Entry","childValues","dirtyChildren","dirty","recomputing","recompute","getValue","mightBeDirty","reportDirtyChild","reportCleanChild","rememberParent","maybeReportOrphan","originalChildren","forgetChildren","withValue","recomputeNewValue","subscribe","maybeUnsubscribe","unsubscribe","setDirty","maybeSubscribe","reportClean","setClean","reallyRecompute","reportDirty","_this","forgetChild","childValue","removeDirtyChild","dc","reportOrphan","children","_value","KeyTrie","weakness","lookup","lookupArray","getChildTrie","isObjRef","weak","WeakMap","strong","keyTrie","defaultMakeCacheKey","caches","wrap","originalFunction","cache","disposable","makeCacheKey","optimistic","hasValue","endianness","hostname","loadavg","uptime","freemem","MAX_VALUE","totalmem","cpus","release","appVersion","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","homedir","Fifo","defer","_buffer","_waitingConsumers","_consume","nextConsumer","nextChunk","deferred","Events","EE","context","_events","_eventsCount","clearEvent","__proto__","eventNames","events","ee","listenerCount","removeAllListeners","prefixed","zero$1","LITERALS$1","L_CODES$1","D_CODES$1","MAX_BITS$1","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","MAX_MATCH$1","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","pending_buf","send_bits","bi_valid","bi_buf","send_code","tree","bi_reverse","gen_codes","bl_count","next_code","init_block","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","sym_next","matches","bi_windup","smaller","_n2","_m2","pqdownheap","heap","heap_len","compress_block","ltree","dtree","lc","extra","sym_buf","build_tree","desc","stree","heap_max","xbits","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block$1","stored_len","_tr_flush_block_1","opt_lenb","static_lenb","max_blindex","strm","data_type","block_mask","detect_data_type","l_desc","d_desc","bl_desc","BL_CODES$1","build_bl_tree","lcodes","dcodes","blcodes","rank","send_all_trees","trees","_tr_init","LENGTH_CODES$1","tr_static_init","_tr_stored_block","_tr_flush_block","_tr_tally","sym_end","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","crcTable","makeTable","crc32_1","crc","messages","constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","MAX_MATCH","MIN_LOOKAHEAD","INIT_STATE","BUSY_STATE","FINISH_STATE","errorCode","zero","slide_hash","wsize","w_size","hash_size","HASH","hash_shift","hash_mask","flush_pending","avail_out","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","avail_in","next_in","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","more","window_size","ins_h","deflate_stored","flush","have","min_block","pending_buf_size","high_water","deflate_fast","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","configuration_table","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","HEAP_SIZE","MAX_BITS","lit_bufsize","deflateStateCheck","deflateResetKeep","deflateReset","deflateInit2","windowBits","memLevel","deflate_1$2","deflateInit","deflateSetHeader","old_flush","level_flags","hcrc","os","beg","gzhead_extra","bstate","deflate_huff","deflate_rle","deflateEnd","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","deflateInfo","_has","common","sources","flattenChunks","chunks","STR_APPLY_UIA_OK","__","_utf8len","strings","string2buf","m_pos","str_len","buf_len","buf2string","TextDecoder","utf16buf","c_len","buf2binstring","utf8border","zstream","toString$1","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","Deflate$1","opt","gzip","ended","dict","_dict_set","deflate$1","deflator","flush_mode","_flush_mode","onData","onEnd","deflate_1$1","Deflate","deflateRaw","BAD$1","inffast","_in","_out","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","from_source","lencode","distcode","lenbits","distbits","dolen","dodist","sane","MAXBITS","lbase","lext","dbase","dext","inftrees","lens","lens_index","table_index","work","incr","curr","huff","offs","here_bits","here_op","here_val","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","HEAD","DICT","TYPE","TYPEDO","COPY_","LEN_","LEN","CHECK","BAD","zswap32","InflateState","havedict","flags","wbits","ncode","nlen","ndist","lendyn","distdyn","back","was","inflateStateCheck","inflateResetKeep","Int32Array","inflateReset","inflateReset2","inflateInit2","lenfix","distfix","virgin","fixedtables","updatewindow","inflate_1$2","inflateInit","put","last_bits","last_op","last_val","hbuf","inf_leave","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","dictid","inflateInfo","gzheader","Inflate$1","inflate$1","inflator","last_avail_out","next_out_utf8","utf8str","inflate_1$1","Inflate","inflateRaw","ungzip","pako","zlib_deflate","ZStream","zlib_inflate","GZheader","adler32","crc32","inflate_fast","inflate_table","MEM","LITERALS","L_CODES","D_CODES","LENGTH_CODES","BL_CODES","RSAPrivateKey","int","RSAPublicKey","PublicKey","AlgorithmIdentifier","bitstr","objid","null_","PrivateKeyInfo","octstr","PrivateKey","EncryptedPrivateKeyInfo","EncryptedPrivateKey","DSAPrivateKey","DSAparam","ECPrivateKey","explicit","ECParameters","choice","namedCurve","asn","Time","utcTime","utctime","generalTime","AttributeTypeValue","any","SubjectPublicKeyInfo","RelativeDistinguishedName","setof","RDNSequence","seqof","Name","rdnSequence","Validity","Extension","def","TBSCertificate","implicit","X509Certificate","findProc","startRegex","fullRegex","evp","ciphers","okey","decrypted","suite","cipherText","cipherKey","createDecipheriv","final","match2","aesid","fixProc","compat","parseKeys","passphrase","subtype","ndata","stripped","subjectPublicKey","subjectPrivateKey","pub_key","kde","kdeparams","algo","curve","priv_key","durationRE","unitRatio","nanosecond","ns","us","microsecond","millisecond","second","sec","minute","hour","hr","day","week","wk","month","yr","headersArr","row","ZERO_BUF","checkParameters","defaultEncoding","sync","toBrowser","getNextTick","queueMicrotask","browserPbkdf2","importKey","deriveBits","resolvePromise","catch","checkNative","resp","MAX_ALLOC","ZEROS","sizes","rmd160","Hmac","alg","saltLen","shaFunc","rmd160Func","getDigest","blocksize","ipad","opad","ipad1","ipad2","run","block1","destPos","U","thing","PolishedError","_Error","colorToInt","color","convertToInt","green","blue","hslToRgb","hue","saturation","lightness","huePrime","chroma","secondComponent","lightnessModification","namedColorMap","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hexRegex","hexRgbaRegex","reducedHexRegex","reducedRgbaHexRegex","rgbRegex","rgbaRegex","hslRegex","hslaRegex","parseToRgb","normalizedColor","normalizedColorName","nameToHex","alpha","_alpha","rgbMatched","rgbaMatched","hslMatched","rgbColorString","hslRgbMatched","hslaMatched","_rgbColorString","_hslRgbMatched","reduceHexValue$1","numberToHex","rgb","rgba","firstValue","secondValue","thirdValue","fourthValue","rgbValue","curried","combined","curry","guard","lowerBoundary","upperBoundary","opacify","parsedColor","curriedOpacify$1","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","marker","runClearTimeout","Item","title","env","argv","prependListener","prependOnceListener","binding","cwd","chdir","umask","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","props","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","bigint","symbol","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","protobuf","configure","_configure","Writer","BufferWriter","Reader","BufferReader","build","rpc","roots","LongBits","indexOutOfRange","reader","writeLength","create_array","readLongVarint","readFixed32_end","readFixed64","_slice","uint32","int32","sint32","fixed32","sfixed32","float","double","skip","skipType","wireType","BufferReader_","Long","int64","uint64","sint64","zzDecode","fixed64","sfixed64","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","requestCtor","responseCtor","request","asPromise","response","endedByRPC","zzEncode","zeroHash","high","unsigned","toLong","fromHash","toHash","part0","part1","part2","ifNotSet","newError","CustomError","properties","captureStackTrace","isNode","global","emptyArray","emptyObject","isset","isSet","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","lcFirst","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","Op","State","writer","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","fork","ldelim","BufferWriter_","writeStringBuffer","writeBytesBuffer","tokenize","PACKABLE_TYPES","onfieldoptionvalue","tokens","onfieldoptions","lastFieldName","onfield","oneof","required","repeated","onmessagebody","fields","extends","onenum","onmessage","onextensions","onextend","onoption","lvl","onpackagename","onsyntaxversion","onenumvalue","hasBracket","onoptionMap","onimport","file","onservice","service","methods","onrpc","input_type","output_type","client_streaming","server_streaming","schema","syntax","package","imports","firstline","services","fieldSplit","messageName","nestedEnumName","packed","en","oneofs","option","onservices","sch","inside","replacements","token","restoreQuotedLines","toSentenceCase","addPropertyAccessors","defaultValue","sentenceCaseName","defineProperties","coerceValue","enc","requiredFields","oneofFields","vals","resolved","decodeField","sentenceCase","decoded","defaultVal","packedEnd","oneofsKeys","encLength","encodeField","innerVal","objKeys","packedLen","hls","hl","svarint","bufferLength","encoder","make","subset","encodings","compileDecode","compileEncode","compileEncodingLength","extraEncodings","visit","compileMessage","nested","flatten","compile","Messages","publicEncrypt","privateDecrypt","privateEncrypt","publicDecrypt","i2ops","crt","withPublic","modulus","zBuffer","maskedDb","dif","oaep","paddedMsg","mLen","hLen2","dblen","cur","nonZero","eos","fs","ancient","isFn","destroyer","stream","reading","writing","readable","ReadStream","WriteStream","close","isFS","setHeader","isRequest","pipe","streams","destroys","qs","sep","regexp","maxKeys","kstr","vstr","stringifyPrimitive","ks","instantiate","loadWebAssembly","imp","wasm","WebAssembly","Rabin","getRabin","windowSize","polynomial","compiled","asModule","rabin","fingerprint","__retain","__release","__allocArray","__getInt32Array","Int32Array_ID","Uint8Array_ID","lengthsPtr","pointer","processed","isV4","isV6","sections","v4Buffer","getUint16","V","getProtocol","resolvable","createProtocol","convertToString","ipBuff","ipString","bytes2ip","bytes2str","bytes2port","address","bytes2mh","bytes2onion","bytes2mb","convertToBytes","ip2bytes","str2bytes","port2bytes","mh","base58btc","mh2bytes","addr","portBuf","onion2bytes","onion32bytes","mbstr","mb","anybaseDecoder","mb2bytes","decoders","decoder","setUint16","addrBytes","portBytes","tuplesToStringTuples","tuples","tup","protoFromTuple","tuplesToBytes","fromBytes","sizeForAddr","bytesToTuples","ParseError","bytesToString","cleanPath","stringTuplesToString","stringToBytes","stringToStringTuples","validateBytes","_DefaultMultiaddr_string","_DefaultMultiaddr_tuples","_DefaultMultiaddr_stringTuples","_a","__classPrivateFieldGet","receiver","kind","__classPrivateFieldSet","for","DNS_CODES","resolvers","isMultiaddr","DefaultMultiaddr","toOptions","family","transport","zone","tcp","udp","ip4","ip6","dns6","ip6zone","stringTuples","protos","protoCodes","protoNames","encapsulate","decapsulate","addrString","decapsulateCode","getPeerId","ipfs","peerIdStr","getPath","resolvableProto","nodeAddress","isThinWaistAddress","DNS4","DNS6","DNSADDR","DNS","IP","TCP","UDP","UTP","QUIC","WebSockets","WebSocketsSecure","HTTP","HTTPS","_WebRTC","WebRTC","WebRTCStar","WebRTCDirect","Reliable","_P2P","_Circuit","CircuitRecursive","Circuit","IPFS","makeMatchesFunction","partialMatch","ma","pnames","reduceValue","Reducers","assumeHttp","explicitPort","tcpUri","dnsaddr","dns4","p2p","http","https","wss","multiaddrToUri","fromNodeAddress","isName","multiaddr","dnsaddrCode","dnsaddrResolver","signal","cancel","peerId","addresses","resolveTxt","flat","cluster","File","FormData","append","getName","encodeAddParams","cid","ok","endpoint","entries","searchParams","href","statusText","streamRequest","ndjsonParse","Cluster","info","toClusterInfo","addDirectory","files","addCAR","car","pin","startsWith","encodePinOptions","toPinResponse","unpin","local","toStatusResponse","statusAll","cids","statuses","allocation","recover","metricNames","peerList","encodeParams","recursive","hidden","shard","streamChannels","layout","chunker","rawLeaves","progress","cidVersion","hashFun","noCopy","replicationFactorMin","replicationFactorMax","shardSize","userAllocations","expireAt","toISOString","pinUpdate","origins","encodeMetadata","metadata","fromEntries","replication_factor_min","replication_factor_max","shard_size","user_allocations","expire_at","pin_update","allocations","maxDepth","max_depth","peerMap","peer_map","peerName","peername","ipfsPeerId","ipfs_peer_id","commit","rpc_protocol_version","rpcProtocolVersion","cluster_peers","clusterPeers","cluster_peers_addresses","clusterPeersAddresses","getReader","matcher","releaseLock","_8n","CU_O","CURVE","Gx","Gy","POW_2_256","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","static","Point","points","toInv","nums","inverted","invert","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","X2Z1","Y1Z2","Y2Z1","x1y1","X3","Y3","T3","Z3","precomputeWindow","W","windows","wNAF","affinePoint","BASE","_WINDOW_SIZE","precomputes","pointPrecomputes","normalizeZ","maxNumber","shiftBy","offset1","offset2","cond1","cond2","constTimeNegate","scalar","normalizeScalar","multiplyUnsafe","P0","isSmallOrder","isTorsionFree","invZ","is0","ax","ay","zz","fromRistrettoBytes","legacyRist","toRistrettoBytes","fromRistrettoHash","assertRstPoint","RistrettoPoint","ep","r0","Ns","isValid","Ns_D_is_sq","uvRatio","s_","edIsNegative","Nt","W0","W1","W3","bytes255ToNumberLE","ensureBytes","R1","calcElligatorRistrettoMap","R2","emsg","equalBytes","numberTo32BytesLE","u1","u2","u1_2","u2_2","invertSqrt","Dx","Dy","toRawBytes","u2sq","invsqrt","D1","D2","zInv","_x","_y","two","_setWindowSize","normed","bytesToNumberLE","y2","isXOdd","getExtendedPublicKey","point","toX25519","Signature","assertValidity","fromHex","numberTo32BytesBE","MAX_255B","modulo","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","adjustBytes25519","checkPrivateKey","getKeyFromHash","hashed","pointBytes","_sha512Sync","getPublicKey","prepareVerification","sig","SB","finishVerification","kA","web","TORSION_SUBGROUP","hashToPrivateScalar","randomPrivateKey","precompute","sha512Sync","_3n","divNearest","endo","splitScalar","POW_2_128","k1neg","k2neg","fieldLen","groupLen","hashLen","compressedLen","uncompressedLen","weierstrass","x3","USE_ENDOMORPHISM","ShaError","assertJacPoint","JacobianPoint","scratch","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","HH","HHH","k1p","k2p","fake","f1p","f2p","iz1","iz2","iz3","hasEvenY","isShort","bytesToNumber","isValidFieldElement","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","rt","sqrtMod","isYOdd","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","recovery","normalizeSignature","truncateHash","radj","numTo32bStr","Q","multiplyAndAddUnsafe","isCompressed","toHexX","toRawX","aP","bQ","sum","sliceDER","parseDERInt","hexToNumber","sBytes","rBytesLeft","parseDERSignature","fromDER","isWithinCurveOrder","hasHighS","HALF","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","sHexL","rHexL","rLen","toCompactRawBytes","toCompactHex","numTo32b","truncateOnly","bits2int_2","_sha256Sync","_hmacSha256Sync","HmacDrbg","qByteLen","hmacSha256","hmacSync","checkSync","reseedSync","kmdToSig","kBytes","lowS","kinv","normalizePublicKey","fromCompact","fromPrivateKey","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","seedArgs","finalizeSig","recSig","der","recovered","canonical","drbg","reseed","vopts","sinv","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","ckey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","tagH","taggedHashSync","_JacobianPoint","ALPHABET","BASE_MAP","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","Encoder","baseEncode","Decoder","baseDecode","codePointAt","prefixCodePoint","ComposedDecoder","Codec","coerce","rfc4648","bitsPerChar","written","SyntaxError","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","base36","base36upper","base58flickr","base64pad","base64url","base64urlpad","identity","base2","base8","base10","base16upper","alphabetBytesToChars","alphabetCharsToBytes","base256emoji","byts","byt","bases","hashes","codecs","readonly","linksWithin","elementPath","treeWithin","Block","asBlock","createUnsafe","codec","aa","bb","ii","isBinary","toStringV0","baseCache","toStringV1","CID","asCID","toV0","DAG_PB_CODE","SHA_256_CODE","createV0","toV1","createV1","unknown","toStringTag","encodeCID","cidSymbol","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","multihashCode","initialBytes","parseCIDtoBytes","codeOffset","hashOffset","textEncoder","textDecoder","sizeOffset","digestOffset","Digest","Hasher","walk","load","seen","b58Cid","encode_1","REST$1","MSB$1","encodeTo","nanoid","observable","dispatchEvent","pDefer","normalizeEmitter","pEvent","arrayPromise","returnValue","rejectionEvents","multiArgs","resolveImmediately","POSITIVE_INFINITY","items","onItem","arguments_","rejectHandler","rejectionEvent","pEventMultiple","_PriorityQueue_queue","PriorityQueue","enqueue","priority","comparator","trunc","it","lowerBound","dequeue","_PQueue_instances","_PQueue_carryoverConcurrencyCount","_PQueue_isIntervalIgnored","_PQueue_intervalCount","_PQueue_intervalCap","_PQueue_interval","_PQueue_intervalEnd","_PQueue_intervalId","_PQueue_timeoutId","_PQueue_queue","_PQueue_queueClass","_PQueue_pending","_PQueue_concurrency","_PQueue_isPaused","_PQueue_throwOnTimeout","_PQueue_doesIntervalAllowAnother_get","_PQueue_doesConcurrentAllowAnother_get","_PQueue_next","_PQueue_onResumeInterval","_PQueue_isIntervalPaused_get","_PQueue_tryToStartAnother","_PQueue_initializeIntervalIfNeeded","_PQueue_onInterval","_PQueue_processQueue","_PQueue_throwOnAbort","_PQueue_onEvent","AbortError","PQueue","_b","_c","_d","carryoverConcurrencyCount","intervalCap","interval","concurrency","autoStart","queueClass","throwOnTimeout","newConcurrency","function_","aborted","operation","race","pause","sizeBy","isPaused","WeakSet","delay","clearInterval","canInitializeInterval","job","setInterval","_resolve","pReflect","isRejected","reason","Queue","iterator","pLimit","activeCount","generator","pendingCount","clearQueue","pSettle","TimeoutError","getDOMException","errorMessage","DOMException","getAbortedReason","pTimeout","milliseconds","fallback","timer","cancelablePromise","customTimers","timeoutError","is_valid","ipaddr","NETMASK_RANGES","ip_range","ipv6_check","ip_addr","ipv4_check","toNormalizedString","ip_regex","Schema","normal","space","definitions","own","definition","mustUseProperty","normalize","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","spaceSeparated","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","commaSeparated","acceptCharset","accessKey","action","allow","allowFullScreen","boolean","allowPaymentRequest","allowUserMedia","alt","as","autoCapitalize","autoComplete","autoFocus","autoPlay","charSet","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","dirName","disabled","download","overloadedBoolean","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","lang","language","loading","loop","manifest","media","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","align","aLink","archive","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","codeBase","codeType","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","rules","scrolling","standby","summary","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","commaOrSpaceSeparated","accumulate","alphabetic","amplitude","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","diffuseConstant","display","dur","divisor","dx","dy","edgeMode","editable","elevation","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","fr","g1","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","opacity","operator","orient","orientation","origin","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","pitch","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","ry","scale","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","unicode","viewBox","viewTarget","visibility","widths","xChannelSelector","y1","yChannelSelector","zoomAndPan","valid","dash","cap","rest","camelcase","dashes","kebab","$0","hastToReact","DefinedInfo","mark","Info","powers","patchReader","patchWriter","decodeMessage","encodeMessage","lengthDelimited","CODEC_TYPES","createCodec","enumeration","findValue","VARINT","enumValue","LENGTH_DELIMITED"],"sourceRoot":""}