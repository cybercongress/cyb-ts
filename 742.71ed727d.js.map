{"version":3,"file":"742.71ed727d.js","mappings":"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","sources":["webpack://cyb/./node_modules/@apollo/client/node_modules/tslib/tslib.es6.mjs","webpack://cyb/./node_modules/@confio/ics23/build/compress.js","webpack://cyb/./node_modules/@confio/ics23/build/generated/codecimpl.js","webpack://cyb/./node_modules/@confio/ics23/build/ics23.js","webpack://cyb/./node_modules/@confio/ics23/build/index.js","webpack://cyb/./node_modules/@confio/ics23/build/ops.js","webpack://cyb/./node_modules/@confio/ics23/build/proofs.js","webpack://cyb/./node_modules/@confio/ics23/build/specs.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/@noble/hashes/_assert.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/@noble/hashes/_md.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/@noble/hashes/_u64.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/@noble/hashes/crypto.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/@noble/hashes/ripemd160.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/@noble/hashes/sha256.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/@noble/hashes/sha512.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/@noble/hashes/utils.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/protobufjs/minimal.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/protobufjs/src/index-minimal.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/protobufjs/src/reader.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/protobufjs/src/reader_buffer.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/protobufjs/src/roots.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/protobufjs/src/rpc.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/protobufjs/src/rpc/service.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/protobufjs/src/util/longbits.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/protobufjs/src/util/minimal.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/protobufjs/src/writer.js","webpack://cyb/./node_modules/@confio/ics23/node_modules/protobufjs/src/writer_buffer.js","webpack://cyb/./node_modules/cosmjs-types/binary.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/auth/v1beta1/auth.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/auth/v1beta1/query.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/authz/v1beta1/authz.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/authz/v1beta1/query.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/authz/v1beta1/tx.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/bank/v1beta1/bank.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/bank/v1beta1/query.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/bank/v1beta1/tx.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/base/abci/v1beta1/abci.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/base/query/v1beta1/pagination.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/base/v1beta1/coin.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/crypto/ed25519/keys.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/crypto/multisig/keys.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/crypto/multisig/v1beta1/multisig.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/crypto/secp256k1/keys.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/distribution/v1beta1/distribution.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/distribution/v1beta1/query.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/distribution/v1beta1/tx.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/feegrant/v1beta1/feegrant.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/feegrant/v1beta1/query.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/feegrant/v1beta1/tx.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/gov/v1/gov.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/gov/v1/tx.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/gov/v1beta1/query.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/gov/v1beta1/tx.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/group/v1/tx.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/group/v1/types.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/ics23/v1/proofs.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/mint/v1beta1/mint.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/mint/v1beta1/query.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/slashing/v1beta1/query.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/slashing/v1beta1/slashing.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/staking/v1beta1/query.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/staking/v1beta1/tx.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/tx/signing/v1beta1/signing.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/upgrade/v1beta1/upgrade.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/vesting/v1beta1/tx.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/vesting/v1beta1/vesting.js","webpack://cyb/./node_modules/cosmjs-types/cosmwasm/wasm/v1/query.js","webpack://cyb/./node_modules/cosmjs-types/cosmwasm/wasm/v1/tx.js","webpack://cyb/./node_modules/cosmjs-types/cosmwasm/wasm/v1/types.js","webpack://cyb/./node_modules/cosmjs-types/google/protobuf/any.js","webpack://cyb/./node_modules/cosmjs-types/google/protobuf/duration.js","webpack://cyb/./node_modules/cosmjs-types/google/protobuf/timestamp.js","webpack://cyb/./node_modules/cosmjs-types/helpers.js","webpack://cyb/./node_modules/cosmjs-types/ibc/applications/transfer/v1/query.js","webpack://cyb/./node_modules/cosmjs-types/ibc/applications/transfer/v1/transfer.js","webpack://cyb/./node_modules/cosmjs-types/ibc/applications/transfer/v1/tx.js","webpack://cyb/./node_modules/cosmjs-types/ibc/core/channel/v1/query.js","webpack://cyb/./node_modules/cosmjs-types/ibc/core/channel/v1/tx.js","webpack://cyb/./node_modules/cosmjs-types/ibc/core/client/v1/client.js","webpack://cyb/./node_modules/cosmjs-types/ibc/core/client/v1/query.js","webpack://cyb/./node_modules/cosmjs-types/ibc/core/client/v1/tx.js","webpack://cyb/./node_modules/cosmjs-types/ibc/core/commitment/v1/commitment.js","webpack://cyb/./node_modules/cosmjs-types/ibc/core/connection/v1/connection.js","webpack://cyb/./node_modules/cosmjs-types/ibc/core/connection/v1/query.js","webpack://cyb/./node_modules/cosmjs-types/ibc/core/connection/v1/tx.js","webpack://cyb/./node_modules/cosmjs-types/ibc/lightclients/tendermint/v1/tendermint.js","webpack://cyb/./node_modules/cosmjs-types/tendermint/abci/types.js","webpack://cyb/./node_modules/cosmjs-types/tendermint/crypto/keys.js","webpack://cyb/./node_modules/cosmjs-types/tendermint/crypto/proof.js","webpack://cyb/./node_modules/cosmjs-types/tendermint/types/block.js","webpack://cyb/./node_modules/cosmjs-types/tendermint/types/evidence.js","webpack://cyb/./node_modules/cosmjs-types/tendermint/types/params.js","webpack://cyb/./node_modules/cosmjs-types/tendermint/types/types.js","webpack://cyb/./node_modules/cosmjs-types/tendermint/types/validator.js","webpack://cyb/./node_modules/cosmjs-types/tendermint/version/types.js","webpack://cyb/./node_modules/cosmjs-types/utf8.js","webpack://cyb/./node_modules/cosmjs-types/varint.js","webpack://cyb/./node_modules/axios/dist/browser/axios.cjs","webpack://cyb/./node_modules/@apollo/client/cache/core/cache.js","webpack://cyb/./node_modules/@apollo/client/cache/core/types/common.js","webpack://cyb/./node_modules/@apollo/client/cache/inmemory/helpers.js","webpack://cyb/./node_modules/@apollo/client/cache/inmemory/entityStore.js","webpack://cyb/./node_modules/@apollo/client/cache/inmemory/object-canon.js","webpack://cyb/./node_modules/@apollo/client/cache/inmemory/readFromStore.js","webpack://cyb/./node_modules/@apollo/client/cache/inmemory/key-extractor.js","webpack://cyb/./node_modules/@apollo/client/cache/inmemory/policies.js","webpack://cyb/./node_modules/@apollo/client/cache/inmemory/writeToStore.js","webpack://cyb/./node_modules/@apollo/client/cache/inmemory/inMemoryCache.js","webpack://cyb/./node_modules/@apollo/client/cache/inmemory/reactiveVars.js","webpack://cyb/./node_modules/@apollo/client/link/core/execute.js","webpack://cyb/./node_modules/@apollo/client/utilities/observables/asyncMap.js","webpack://cyb/./node_modules/@apollo/client/utilities/common/errorHandling.js","webpack://cyb/./node_modules/@apollo/client/utilities/observables/iteration.js","webpack://cyb/./node_modules/@apollo/client/utilities/observables/subclassing.js","webpack://cyb/./node_modules/@apollo/client/utilities/observables/Concast.js","webpack://cyb/./node_modules/@apollo/client/core/equalByQuery.js","webpack://cyb/./node_modules/@apollo/client/core/ObservableQuery.js","webpack://cyb/./node_modules/@apollo/client/core/LocalState.js","webpack://cyb/./node_modules/@apollo/client/core/QueryInfo.js","webpack://cyb/./node_modules/@apollo/client/core/QueryManager.js","webpack://cyb/./node_modules/@apollo/client/core/ApolloClient.js","webpack://cyb/./node_modules/@apollo/client/core/networkStatus.js","webpack://cyb/./node_modules/@apollo/client/errors/index.js","webpack://cyb/./node_modules/@apollo/client/link/core/ApolloLink.js","webpack://cyb/./node_modules/@apollo/client/link/utils/createOperation.js","webpack://cyb/./node_modules/@apollo/client/link/utils/transformOperation.js","webpack://cyb/./node_modules/@apollo/client/link/utils/validateOperation.js","webpack://cyb/./node_modules/@apollo/client/link/http/serializeFetchParameter.js","webpack://cyb/./node_modules/@apollo/client/link/http/iterators/nodeStream.js","webpack://cyb/./node_modules/@apollo/client/link/http/iterators/reader.js","webpack://cyb/./node_modules/@apollo/client/link/http/responseIterator.js","webpack://cyb/./node_modules/@apollo/client/link/http/iterators/async.js","webpack://cyb/./node_modules/@apollo/client/link/http/iterators/promise.js","webpack://cyb/./node_modules/@apollo/client/link/utils/throwServerError.js","webpack://cyb/./node_modules/@apollo/client/link/http/parseAndCheckHttpResponse.js","webpack://cyb/./node_modules/@apollo/client/link/http/checkFetcher.js","webpack://cyb/./node_modules/@apollo/client/link/http/selectHttpOptionsAndBody.js","webpack://cyb/./node_modules/@apollo/client/link/utils/fromError.js","webpack://cyb/./node_modules/@apollo/client/link/http/createHttpLink.js","webpack://cyb/./node_modules/@apollo/client/link/http/selectURI.js","webpack://cyb/./node_modules/@apollo/client/link/utils/filterOperationVariables.js","webpack://cyb/./node_modules/@apollo/client/link/http/rewriteURIForGET.js","webpack://cyb/./node_modules/@apollo/client/link/http/HttpLink.js","webpack://cyb/./node_modules/@apollo/client/link/subscriptions/index.js","webpack://cyb/./node_modules/@apollo/client/utilities/caching/caches.js","webpack://cyb/./node_modules/@apollo/client/utilities/caching/getMemoryInternals.js","webpack://cyb/./node_modules/@apollo/client/utilities/caching/sizes.js","webpack://cyb/./node_modules/@apollo/client/utilities/common/arrays.js","webpack://cyb/./node_modules/@apollo/client/utilities/common/canonicalStringify.js","webpack://cyb/./node_modules/@apollo/client/utilities/common/cloneDeep.js","webpack://cyb/./node_modules/@apollo/client/utilities/common/compact.js","webpack://cyb/./node_modules/@apollo/client/utilities/common/incrementalResult.js","webpack://cyb/./node_modules/@apollo/client/utilities/common/makeUniqueId.js","webpack://cyb/./node_modules/@apollo/client/utilities/common/maybeDeepFreeze.js","webpack://cyb/./node_modules/@apollo/client/utilities/common/mergeDeep.js","webpack://cyb/./node_modules/@apollo/client/utilities/common/mergeOptions.js","webpack://cyb/./node_modules/@apollo/client/utilities/common/objects.js","webpack://cyb/./node_modules/@apollo/client/utilities/common/stringifyForDisplay.js","webpack://cyb/./node_modules/@apollo/client/utilities/globals/maybe.js","webpack://cyb/./node_modules/@apollo/client/utilities/globals/global.js","webpack://cyb/./node_modules/@apollo/client/utilities/globals/invariantWrappers.js","webpack://cyb/./node_modules/@apollo/client/utilities/globals/index.js","webpack://cyb/./node_modules/@apollo/client/utilities/graphql/DocumentTransform.js","webpack://cyb/./node_modules/@apollo/client/utilities/graphql/directives.js","webpack://cyb/./node_modules/@apollo/client/utilities/graphql/fragments.js","webpack://cyb/./node_modules/@apollo/client/utilities/graphql/getFromAST.js","webpack://cyb/./node_modules/@apollo/client/utilities/graphql/print.js","webpack://cyb/./node_modules/@apollo/client/utilities/graphql/storeUtils.js","webpack://cyb/./node_modules/@apollo/client/utilities/graphql/transform.js","webpack://cyb/./node_modules/@apollo/client/version.js"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decompress = exports.compress = void 0;\nconst codecimpl_1 = require(\"./generated/codecimpl\");\nfunction compress(proof) {\n    if (!proof.batch) {\n        return proof;\n    }\n    return { compressed: compressBatch(proof.batch) };\n}\nexports.compress = compress;\nfunction decompress(proof) {\n    if (!proof.compressed) {\n        return proof;\n    }\n    return { batch: decompressBatch(proof.compressed) };\n}\nexports.decompress = decompress;\nfunction compressBatch(proof) {\n    const centries = [];\n    const lookup = [];\n    const registry = new Map();\n    for (const entry of proof.entries) {\n        if (entry.exist) {\n            const centry = { exist: compressExist(entry.exist, lookup, registry) };\n            centries.push(centry);\n        }\n        else if (entry.nonexist) {\n            const non = entry.nonexist;\n            const centry = {\n                nonexist: {\n                    key: non.key,\n                    left: compressExist(non.left, lookup, registry),\n                    right: compressExist(non.right, lookup, registry),\n                },\n            };\n            centries.push(centry);\n        }\n        else {\n            throw new Error(\"Unexpected batch entry during compress\");\n        }\n    }\n    return {\n        entries: centries,\n        lookupInners: lookup,\n    };\n}\nfunction compressExist(exist, lookup, registry) {\n    if (!exist) {\n        return undefined;\n    }\n    const path = exist.path.map((inner) => {\n        const sig = codecimpl_1.ics23.InnerOp.encode(inner).finish();\n        let idx = registry.get(sig);\n        if (idx === undefined) {\n            idx = lookup.length;\n            lookup.push(inner);\n            registry.set(sig, idx);\n        }\n        return idx;\n    });\n    return {\n        key: exist.key,\n        value: exist.value,\n        leaf: exist.leaf,\n        path,\n    };\n}\nfunction decompressBatch(proof) {\n    const lookup = proof.lookupInners;\n    const entries = proof.entries.map((comp) => {\n        if (comp.exist) {\n            return { exist: decompressExist(comp.exist, lookup) };\n        }\n        else if (comp.nonexist) {\n            const non = comp.nonexist;\n            return {\n                nonexist: {\n                    key: non.key,\n                    left: decompressExist(non.left, lookup),\n                    right: decompressExist(non.right, lookup),\n                },\n            };\n        }\n        else {\n            throw new Error(\"Unexpected batch entry during compress\");\n        }\n    });\n    return {\n        entries,\n    };\n}\nfunction decompressExist(exist, lookup) {\n    if (!exist) {\n        return undefined;\n    }\n    const { key, value, leaf, path } = exist;\n    const newPath = (path || []).map((idx) => lookup[idx]);\n    return { key, value, leaf, path: newPath };\n}\n//# sourceMappingURL=compress.js.map","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.ics23 = (function() {\n\n    /**\n     * Namespace ics23.\n     * @exports ics23\n     * @namespace\n     */\n    var ics23 = {};\n\n    /**\n     * HashOp enum.\n     * @name ics23.HashOp\n     * @enum {string}\n     * @property {number} NO_HASH=0 NO_HASH value\n     * @property {number} SHA256=1 SHA256 value\n     * @property {number} SHA512=2 SHA512 value\n     * @property {number} KECCAK=3 KECCAK value\n     * @property {number} RIPEMD160=4 RIPEMD160 value\n     * @property {number} BITCOIN=5 BITCOIN value\n     * @property {number} SHA512_256=6 SHA512_256 value\n     */\n    ics23.HashOp = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"NO_HASH\"] = 0;\n        values[valuesById[1] = \"SHA256\"] = 1;\n        values[valuesById[2] = \"SHA512\"] = 2;\n        values[valuesById[3] = \"KECCAK\"] = 3;\n        values[valuesById[4] = \"RIPEMD160\"] = 4;\n        values[valuesById[5] = \"BITCOIN\"] = 5;\n        values[valuesById[6] = \"SHA512_256\"] = 6;\n        return values;\n    })();\n\n    /**\n     * LengthOp defines how to process the key and value of the LeafOp\n     * to include length information. After encoding the length with the given\n     * algorithm, the length will be prepended to the key and value bytes.\n     * (Each one with it's own encoded length)\n     * @name ics23.LengthOp\n     * @enum {string}\n     * @property {number} NO_PREFIX=0 NO_PREFIX value\n     * @property {number} VAR_PROTO=1 VAR_PROTO value\n     * @property {number} VAR_RLP=2 VAR_RLP value\n     * @property {number} FIXED32_BIG=3 FIXED32_BIG value\n     * @property {number} FIXED32_LITTLE=4 FIXED32_LITTLE value\n     * @property {number} FIXED64_BIG=5 FIXED64_BIG value\n     * @property {number} FIXED64_LITTLE=6 FIXED64_LITTLE value\n     * @property {number} REQUIRE_32_BYTES=7 REQUIRE_32_BYTES value\n     * @property {number} REQUIRE_64_BYTES=8 REQUIRE_64_BYTES value\n     */\n    ics23.LengthOp = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"NO_PREFIX\"] = 0;\n        values[valuesById[1] = \"VAR_PROTO\"] = 1;\n        values[valuesById[2] = \"VAR_RLP\"] = 2;\n        values[valuesById[3] = \"FIXED32_BIG\"] = 3;\n        values[valuesById[4] = \"FIXED32_LITTLE\"] = 4;\n        values[valuesById[5] = \"FIXED64_BIG\"] = 5;\n        values[valuesById[6] = \"FIXED64_LITTLE\"] = 6;\n        values[valuesById[7] = \"REQUIRE_32_BYTES\"] = 7;\n        values[valuesById[8] = \"REQUIRE_64_BYTES\"] = 8;\n        return values;\n    })();\n\n    ics23.ExistenceProof = (function() {\n\n        /**\n         * Properties of an ExistenceProof.\n         * @memberof ics23\n         * @interface IExistenceProof\n         * @property {Uint8Array|null} [key] ExistenceProof key\n         * @property {Uint8Array|null} [value] ExistenceProof value\n         * @property {ics23.ILeafOp|null} [leaf] ExistenceProof leaf\n         * @property {Array.<ics23.IInnerOp>|null} [path] ExistenceProof path\n         */\n\n        /**\n         * Constructs a new ExistenceProof.\n         * @memberof ics23\n         * @classdesc ExistenceProof takes a key and a value and a set of steps to perform on it.\n         * The result of peforming all these steps will provide a \"root hash\", which can\n         * be compared to the value in a header.\n         * \n         * Since it is computationally infeasible to produce a hash collission for any of the used\n         * cryptographic hash functions, if someone can provide a series of operations to transform\n         * a given key and value into a root hash that matches some trusted root, these key and values\n         * must be in the referenced merkle tree.\n         * \n         * The only possible issue is maliablity in LeafOp, such as providing extra prefix data,\n         * which should be controlled by a spec. Eg. with lengthOp as NONE,\n         * prefix = FOO, key = BAR, value = CHOICE\n         * and\n         * prefix = F, key = OOBAR, value = CHOICE\n         * would produce the same value.\n         * \n         * With LengthOp this is tricker but not impossible. Which is why the \"leafPrefixEqual\" field\n         * in the ProofSpec is valuable to prevent this mutability. And why all trees should\n         * length-prefix the data before hashing it.\n         * @implements IExistenceProof\n         * @constructor\n         * @param {ics23.IExistenceProof=} [properties] Properties to set\n         */\n        function ExistenceProof(properties) {\n            this.path = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ExistenceProof key.\n         * @member {Uint8Array} key\n         * @memberof ics23.ExistenceProof\n         * @instance\n         */\n        ExistenceProof.prototype.key = $util.newBuffer([]);\n\n        /**\n         * ExistenceProof value.\n         * @member {Uint8Array} value\n         * @memberof ics23.ExistenceProof\n         * @instance\n         */\n        ExistenceProof.prototype.value = $util.newBuffer([]);\n\n        /**\n         * ExistenceProof leaf.\n         * @member {ics23.ILeafOp|null|undefined} leaf\n         * @memberof ics23.ExistenceProof\n         * @instance\n         */\n        ExistenceProof.prototype.leaf = null;\n\n        /**\n         * ExistenceProof path.\n         * @member {Array.<ics23.IInnerOp>} path\n         * @memberof ics23.ExistenceProof\n         * @instance\n         */\n        ExistenceProof.prototype.path = $util.emptyArray;\n\n        /**\n         * Creates a new ExistenceProof instance using the specified properties.\n         * @function create\n         * @memberof ics23.ExistenceProof\n         * @static\n         * @param {ics23.IExistenceProof=} [properties] Properties to set\n         * @returns {ics23.ExistenceProof} ExistenceProof instance\n         */\n        ExistenceProof.create = function create(properties) {\n            return new ExistenceProof(properties);\n        };\n\n        /**\n         * Encodes the specified ExistenceProof message. Does not implicitly {@link ics23.ExistenceProof.verify|verify} messages.\n         * @function encode\n         * @memberof ics23.ExistenceProof\n         * @static\n         * @param {ics23.IExistenceProof} message ExistenceProof message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ExistenceProof.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);\n            if (message.leaf != null && message.hasOwnProperty(\"leaf\"))\n                $root.ics23.LeafOp.encode(message.leaf, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.path != null && message.path.length)\n                for (var i = 0; i < message.path.length; ++i)\n                    $root.ics23.InnerOp.encode(message.path[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ExistenceProof message, length delimited. Does not implicitly {@link ics23.ExistenceProof.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ics23.ExistenceProof\n         * @static\n         * @param {ics23.IExistenceProof} message ExistenceProof message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ExistenceProof.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an ExistenceProof message from the specified reader or buffer.\n         * @function decode\n         * @memberof ics23.ExistenceProof\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ics23.ExistenceProof} ExistenceProof\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ExistenceProof.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ics23.ExistenceProof();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = $root.ics23.LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.path && message.path.length))\n                        message.path = [];\n                    message.path.push($root.ics23.InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an ExistenceProof message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ics23.ExistenceProof\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ics23.ExistenceProof} ExistenceProof\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ExistenceProof.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an ExistenceProof message.\n         * @function verify\n         * @memberof ics23.ExistenceProof\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ExistenceProof.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!(message.key && typeof message.key.length === \"number\" || $util.isString(message.key)))\n                    return \"key: buffer expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!(message.value && typeof message.value.length === \"number\" || $util.isString(message.value)))\n                    return \"value: buffer expected\";\n            if (message.leaf != null && message.hasOwnProperty(\"leaf\")) {\n                var error = $root.ics23.LeafOp.verify(message.leaf);\n                if (error)\n                    return \"leaf.\" + error;\n            }\n            if (message.path != null && message.hasOwnProperty(\"path\")) {\n                if (!Array.isArray(message.path))\n                    return \"path: array expected\";\n                for (var i = 0; i < message.path.length; ++i) {\n                    var error = $root.ics23.InnerOp.verify(message.path[i]);\n                    if (error)\n                        return \"path.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an ExistenceProof message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ics23.ExistenceProof\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ics23.ExistenceProof} ExistenceProof\n         */\n        ExistenceProof.fromObject = function fromObject(object) {\n            if (object instanceof $root.ics23.ExistenceProof)\n                return object;\n            var message = new $root.ics23.ExistenceProof();\n            if (object.key != null)\n                if (typeof object.key === \"string\")\n                    $util.base64.decode(object.key, message.key = $util.newBuffer($util.base64.length(object.key)), 0);\n                else if (object.key.length)\n                    message.key = object.key;\n            if (object.value != null)\n                if (typeof object.value === \"string\")\n                    $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);\n                else if (object.value.length)\n                    message.value = object.value;\n            if (object.leaf != null) {\n                if (typeof object.leaf !== \"object\")\n                    throw TypeError(\".ics23.ExistenceProof.leaf: object expected\");\n                message.leaf = $root.ics23.LeafOp.fromObject(object.leaf);\n            }\n            if (object.path) {\n                if (!Array.isArray(object.path))\n                    throw TypeError(\".ics23.ExistenceProof.path: array expected\");\n                message.path = [];\n                for (var i = 0; i < object.path.length; ++i) {\n                    if (typeof object.path[i] !== \"object\")\n                        throw TypeError(\".ics23.ExistenceProof.path: object expected\");\n                    message.path[i] = $root.ics23.InnerOp.fromObject(object.path[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an ExistenceProof message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ics23.ExistenceProof\n         * @static\n         * @param {ics23.ExistenceProof} message ExistenceProof\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ExistenceProof.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.path = [];\n            if (options.defaults) {\n                if (options.bytes === String)\n                    object.key = \"\";\n                else {\n                    object.key = [];\n                    if (options.bytes !== Array)\n                        object.key = $util.newBuffer(object.key);\n                }\n                if (options.bytes === String)\n                    object.value = \"\";\n                else {\n                    object.value = [];\n                    if (options.bytes !== Array)\n                        object.value = $util.newBuffer(object.value);\n                }\n                object.leaf = null;\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = options.bytes === String ? $util.base64.encode(message.key, 0, message.key.length) : options.bytes === Array ? Array.prototype.slice.call(message.key) : message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;\n            if (message.leaf != null && message.hasOwnProperty(\"leaf\"))\n                object.leaf = $root.ics23.LeafOp.toObject(message.leaf, options);\n            if (message.path && message.path.length) {\n                object.path = [];\n                for (var j = 0; j < message.path.length; ++j)\n                    object.path[j] = $root.ics23.InnerOp.toObject(message.path[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ExistenceProof to JSON.\n         * @function toJSON\n         * @memberof ics23.ExistenceProof\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ExistenceProof.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ExistenceProof;\n    })();\n\n    ics23.NonExistenceProof = (function() {\n\n        /**\n         * Properties of a NonExistenceProof.\n         * @memberof ics23\n         * @interface INonExistenceProof\n         * @property {Uint8Array|null} [key] NonExistenceProof key\n         * @property {ics23.IExistenceProof|null} [left] NonExistenceProof left\n         * @property {ics23.IExistenceProof|null} [right] NonExistenceProof right\n         */\n\n        /**\n         * Constructs a new NonExistenceProof.\n         * @memberof ics23\n         * @classdesc Represents a NonExistenceProof.\n         * @implements INonExistenceProof\n         * @constructor\n         * @param {ics23.INonExistenceProof=} [properties] Properties to set\n         */\n        function NonExistenceProof(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NonExistenceProof key.\n         * @member {Uint8Array} key\n         * @memberof ics23.NonExistenceProof\n         * @instance\n         */\n        NonExistenceProof.prototype.key = $util.newBuffer([]);\n\n        /**\n         * NonExistenceProof left.\n         * @member {ics23.IExistenceProof|null|undefined} left\n         * @memberof ics23.NonExistenceProof\n         * @instance\n         */\n        NonExistenceProof.prototype.left = null;\n\n        /**\n         * NonExistenceProof right.\n         * @member {ics23.IExistenceProof|null|undefined} right\n         * @memberof ics23.NonExistenceProof\n         * @instance\n         */\n        NonExistenceProof.prototype.right = null;\n\n        /**\n         * Creates a new NonExistenceProof instance using the specified properties.\n         * @function create\n         * @memberof ics23.NonExistenceProof\n         * @static\n         * @param {ics23.INonExistenceProof=} [properties] Properties to set\n         * @returns {ics23.NonExistenceProof} NonExistenceProof instance\n         */\n        NonExistenceProof.create = function create(properties) {\n            return new NonExistenceProof(properties);\n        };\n\n        /**\n         * Encodes the specified NonExistenceProof message. Does not implicitly {@link ics23.NonExistenceProof.verify|verify} messages.\n         * @function encode\n         * @memberof ics23.NonExistenceProof\n         * @static\n         * @param {ics23.INonExistenceProof} message NonExistenceProof message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NonExistenceProof.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.key);\n            if (message.left != null && message.hasOwnProperty(\"left\"))\n                $root.ics23.ExistenceProof.encode(message.left, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.right != null && message.hasOwnProperty(\"right\"))\n                $root.ics23.ExistenceProof.encode(message.right, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NonExistenceProof message, length delimited. Does not implicitly {@link ics23.NonExistenceProof.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ics23.NonExistenceProof\n         * @static\n         * @param {ics23.INonExistenceProof} message NonExistenceProof message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NonExistenceProof.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NonExistenceProof message from the specified reader or buffer.\n         * @function decode\n         * @memberof ics23.NonExistenceProof\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ics23.NonExistenceProof} NonExistenceProof\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NonExistenceProof.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ics23.NonExistenceProof();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = $root.ics23.ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = $root.ics23.ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NonExistenceProof message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ics23.NonExistenceProof\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ics23.NonExistenceProof} NonExistenceProof\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NonExistenceProof.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NonExistenceProof message.\n         * @function verify\n         * @memberof ics23.NonExistenceProof\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NonExistenceProof.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!(message.key && typeof message.key.length === \"number\" || $util.isString(message.key)))\n                    return \"key: buffer expected\";\n            if (message.left != null && message.hasOwnProperty(\"left\")) {\n                var error = $root.ics23.ExistenceProof.verify(message.left);\n                if (error)\n                    return \"left.\" + error;\n            }\n            if (message.right != null && message.hasOwnProperty(\"right\")) {\n                var error = $root.ics23.ExistenceProof.verify(message.right);\n                if (error)\n                    return \"right.\" + error;\n            }\n            return null;\n        };\n\n        /**\n         * Creates a NonExistenceProof message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ics23.NonExistenceProof\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ics23.NonExistenceProof} NonExistenceProof\n         */\n        NonExistenceProof.fromObject = function fromObject(object) {\n            if (object instanceof $root.ics23.NonExistenceProof)\n                return object;\n            var message = new $root.ics23.NonExistenceProof();\n            if (object.key != null)\n                if (typeof object.key === \"string\")\n                    $util.base64.decode(object.key, message.key = $util.newBuffer($util.base64.length(object.key)), 0);\n                else if (object.key.length)\n                    message.key = object.key;\n            if (object.left != null) {\n                if (typeof object.left !== \"object\")\n                    throw TypeError(\".ics23.NonExistenceProof.left: object expected\");\n                message.left = $root.ics23.ExistenceProof.fromObject(object.left);\n            }\n            if (object.right != null) {\n                if (typeof object.right !== \"object\")\n                    throw TypeError(\".ics23.NonExistenceProof.right: object expected\");\n                message.right = $root.ics23.ExistenceProof.fromObject(object.right);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NonExistenceProof message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ics23.NonExistenceProof\n         * @static\n         * @param {ics23.NonExistenceProof} message NonExistenceProof\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NonExistenceProof.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                if (options.bytes === String)\n                    object.key = \"\";\n                else {\n                    object.key = [];\n                    if (options.bytes !== Array)\n                        object.key = $util.newBuffer(object.key);\n                }\n                object.left = null;\n                object.right = null;\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = options.bytes === String ? $util.base64.encode(message.key, 0, message.key.length) : options.bytes === Array ? Array.prototype.slice.call(message.key) : message.key;\n            if (message.left != null && message.hasOwnProperty(\"left\"))\n                object.left = $root.ics23.ExistenceProof.toObject(message.left, options);\n            if (message.right != null && message.hasOwnProperty(\"right\"))\n                object.right = $root.ics23.ExistenceProof.toObject(message.right, options);\n            return object;\n        };\n\n        /**\n         * Converts this NonExistenceProof to JSON.\n         * @function toJSON\n         * @memberof ics23.NonExistenceProof\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NonExistenceProof.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NonExistenceProof;\n    })();\n\n    ics23.CommitmentProof = (function() {\n\n        /**\n         * Properties of a CommitmentProof.\n         * @memberof ics23\n         * @interface ICommitmentProof\n         * @property {ics23.IExistenceProof|null} [exist] CommitmentProof exist\n         * @property {ics23.INonExistenceProof|null} [nonexist] CommitmentProof nonexist\n         * @property {ics23.IBatchProof|null} [batch] CommitmentProof batch\n         * @property {ics23.ICompressedBatchProof|null} [compressed] CommitmentProof compressed\n         */\n\n        /**\n         * Constructs a new CommitmentProof.\n         * @memberof ics23\n         * @classdesc Represents a CommitmentProof.\n         * @implements ICommitmentProof\n         * @constructor\n         * @param {ics23.ICommitmentProof=} [properties] Properties to set\n         */\n        function CommitmentProof(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * CommitmentProof exist.\n         * @member {ics23.IExistenceProof|null|undefined} exist\n         * @memberof ics23.CommitmentProof\n         * @instance\n         */\n        CommitmentProof.prototype.exist = null;\n\n        /**\n         * CommitmentProof nonexist.\n         * @member {ics23.INonExistenceProof|null|undefined} nonexist\n         * @memberof ics23.CommitmentProof\n         * @instance\n         */\n        CommitmentProof.prototype.nonexist = null;\n\n        /**\n         * CommitmentProof batch.\n         * @member {ics23.IBatchProof|null|undefined} batch\n         * @memberof ics23.CommitmentProof\n         * @instance\n         */\n        CommitmentProof.prototype.batch = null;\n\n        /**\n         * CommitmentProof compressed.\n         * @member {ics23.ICompressedBatchProof|null|undefined} compressed\n         * @memberof ics23.CommitmentProof\n         * @instance\n         */\n        CommitmentProof.prototype.compressed = null;\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * CommitmentProof proof.\n         * @member {\"exist\"|\"nonexist\"|\"batch\"|\"compressed\"|undefined} proof\n         * @memberof ics23.CommitmentProof\n         * @instance\n         */\n        Object.defineProperty(CommitmentProof.prototype, \"proof\", {\n            get: $util.oneOfGetter($oneOfFields = [\"exist\", \"nonexist\", \"batch\", \"compressed\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new CommitmentProof instance using the specified properties.\n         * @function create\n         * @memberof ics23.CommitmentProof\n         * @static\n         * @param {ics23.ICommitmentProof=} [properties] Properties to set\n         * @returns {ics23.CommitmentProof} CommitmentProof instance\n         */\n        CommitmentProof.create = function create(properties) {\n            return new CommitmentProof(properties);\n        };\n\n        /**\n         * Encodes the specified CommitmentProof message. Does not implicitly {@link ics23.CommitmentProof.verify|verify} messages.\n         * @function encode\n         * @memberof ics23.CommitmentProof\n         * @static\n         * @param {ics23.ICommitmentProof} message CommitmentProof message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CommitmentProof.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.exist != null && message.hasOwnProperty(\"exist\"))\n                $root.ics23.ExistenceProof.encode(message.exist, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.nonexist != null && message.hasOwnProperty(\"nonexist\"))\n                $root.ics23.NonExistenceProof.encode(message.nonexist, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.batch != null && message.hasOwnProperty(\"batch\"))\n                $root.ics23.BatchProof.encode(message.batch, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.compressed != null && message.hasOwnProperty(\"compressed\"))\n                $root.ics23.CompressedBatchProof.encode(message.compressed, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified CommitmentProof message, length delimited. Does not implicitly {@link ics23.CommitmentProof.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ics23.CommitmentProof\n         * @static\n         * @param {ics23.ICommitmentProof} message CommitmentProof message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CommitmentProof.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a CommitmentProof message from the specified reader or buffer.\n         * @function decode\n         * @memberof ics23.CommitmentProof\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ics23.CommitmentProof} CommitmentProof\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CommitmentProof.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ics23.CommitmentProof();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.exist = $root.ics23.ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = $root.ics23.NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = $root.ics23.BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = $root.ics23.CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a CommitmentProof message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ics23.CommitmentProof\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ics23.CommitmentProof} CommitmentProof\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CommitmentProof.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a CommitmentProof message.\n         * @function verify\n         * @memberof ics23.CommitmentProof\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        CommitmentProof.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.exist != null && message.hasOwnProperty(\"exist\")) {\n                properties.proof = 1;\n                {\n                    var error = $root.ics23.ExistenceProof.verify(message.exist);\n                    if (error)\n                        return \"exist.\" + error;\n                }\n            }\n            if (message.nonexist != null && message.hasOwnProperty(\"nonexist\")) {\n                if (properties.proof === 1)\n                    return \"proof: multiple values\";\n                properties.proof = 1;\n                {\n                    var error = $root.ics23.NonExistenceProof.verify(message.nonexist);\n                    if (error)\n                        return \"nonexist.\" + error;\n                }\n            }\n            if (message.batch != null && message.hasOwnProperty(\"batch\")) {\n                if (properties.proof === 1)\n                    return \"proof: multiple values\";\n                properties.proof = 1;\n                {\n                    var error = $root.ics23.BatchProof.verify(message.batch);\n                    if (error)\n                        return \"batch.\" + error;\n                }\n            }\n            if (message.compressed != null && message.hasOwnProperty(\"compressed\")) {\n                if (properties.proof === 1)\n                    return \"proof: multiple values\";\n                properties.proof = 1;\n                {\n                    var error = $root.ics23.CompressedBatchProof.verify(message.compressed);\n                    if (error)\n                        return \"compressed.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a CommitmentProof message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ics23.CommitmentProof\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ics23.CommitmentProof} CommitmentProof\n         */\n        CommitmentProof.fromObject = function fromObject(object) {\n            if (object instanceof $root.ics23.CommitmentProof)\n                return object;\n            var message = new $root.ics23.CommitmentProof();\n            if (object.exist != null) {\n                if (typeof object.exist !== \"object\")\n                    throw TypeError(\".ics23.CommitmentProof.exist: object expected\");\n                message.exist = $root.ics23.ExistenceProof.fromObject(object.exist);\n            }\n            if (object.nonexist != null) {\n                if (typeof object.nonexist !== \"object\")\n                    throw TypeError(\".ics23.CommitmentProof.nonexist: object expected\");\n                message.nonexist = $root.ics23.NonExistenceProof.fromObject(object.nonexist);\n            }\n            if (object.batch != null) {\n                if (typeof object.batch !== \"object\")\n                    throw TypeError(\".ics23.CommitmentProof.batch: object expected\");\n                message.batch = $root.ics23.BatchProof.fromObject(object.batch);\n            }\n            if (object.compressed != null) {\n                if (typeof object.compressed !== \"object\")\n                    throw TypeError(\".ics23.CommitmentProof.compressed: object expected\");\n                message.compressed = $root.ics23.CompressedBatchProof.fromObject(object.compressed);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a CommitmentProof message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ics23.CommitmentProof\n         * @static\n         * @param {ics23.CommitmentProof} message CommitmentProof\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        CommitmentProof.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (message.exist != null && message.hasOwnProperty(\"exist\")) {\n                object.exist = $root.ics23.ExistenceProof.toObject(message.exist, options);\n                if (options.oneofs)\n                    object.proof = \"exist\";\n            }\n            if (message.nonexist != null && message.hasOwnProperty(\"nonexist\")) {\n                object.nonexist = $root.ics23.NonExistenceProof.toObject(message.nonexist, options);\n                if (options.oneofs)\n                    object.proof = \"nonexist\";\n            }\n            if (message.batch != null && message.hasOwnProperty(\"batch\")) {\n                object.batch = $root.ics23.BatchProof.toObject(message.batch, options);\n                if (options.oneofs)\n                    object.proof = \"batch\";\n            }\n            if (message.compressed != null && message.hasOwnProperty(\"compressed\")) {\n                object.compressed = $root.ics23.CompressedBatchProof.toObject(message.compressed, options);\n                if (options.oneofs)\n                    object.proof = \"compressed\";\n            }\n            return object;\n        };\n\n        /**\n         * Converts this CommitmentProof to JSON.\n         * @function toJSON\n         * @memberof ics23.CommitmentProof\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        CommitmentProof.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return CommitmentProof;\n    })();\n\n    ics23.LeafOp = (function() {\n\n        /**\n         * Properties of a LeafOp.\n         * @memberof ics23\n         * @interface ILeafOp\n         * @property {ics23.HashOp|null} [hash] LeafOp hash\n         * @property {ics23.HashOp|null} [prehashKey] LeafOp prehashKey\n         * @property {ics23.HashOp|null} [prehashValue] LeafOp prehashValue\n         * @property {ics23.LengthOp|null} [length] LeafOp length\n         * @property {Uint8Array|null} [prefix] LeafOp prefix\n         */\n\n        /**\n         * Constructs a new LeafOp.\n         * @memberof ics23\n         * @classdesc LeafOp represents the raw key-value data we wish to prove, and\n         * must be flexible to represent the internal transformation from\n         * the original key-value pairs into the basis hash, for many existing\n         * merkle trees.\n         * \n         * key and value are passed in. So that the signature of this operation is:\n         * leafOp(key, value) -> output\n         * \n         * To process this, first prehash the keys and values if needed (ANY means no hash in this case):\n         * hkey = prehashKey(key)\n         * hvalue = prehashValue(value)\n         * \n         * Then combine the bytes, and hash it\n         * output = hash(prefix || length(hkey) || hkey || length(hvalue) || hvalue)\n         * @implements ILeafOp\n         * @constructor\n         * @param {ics23.ILeafOp=} [properties] Properties to set\n         */\n        function LeafOp(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * LeafOp hash.\n         * @member {ics23.HashOp} hash\n         * @memberof ics23.LeafOp\n         * @instance\n         */\n        LeafOp.prototype.hash = 0;\n\n        /**\n         * LeafOp prehashKey.\n         * @member {ics23.HashOp} prehashKey\n         * @memberof ics23.LeafOp\n         * @instance\n         */\n        LeafOp.prototype.prehashKey = 0;\n\n        /**\n         * LeafOp prehashValue.\n         * @member {ics23.HashOp} prehashValue\n         * @memberof ics23.LeafOp\n         * @instance\n         */\n        LeafOp.prototype.prehashValue = 0;\n\n        /**\n         * LeafOp length.\n         * @member {ics23.LengthOp} length\n         * @memberof ics23.LeafOp\n         * @instance\n         */\n        LeafOp.prototype.length = 0;\n\n        /**\n         * LeafOp prefix.\n         * @member {Uint8Array} prefix\n         * @memberof ics23.LeafOp\n         * @instance\n         */\n        LeafOp.prototype.prefix = $util.newBuffer([]);\n\n        /**\n         * Creates a new LeafOp instance using the specified properties.\n         * @function create\n         * @memberof ics23.LeafOp\n         * @static\n         * @param {ics23.ILeafOp=} [properties] Properties to set\n         * @returns {ics23.LeafOp} LeafOp instance\n         */\n        LeafOp.create = function create(properties) {\n            return new LeafOp(properties);\n        };\n\n        /**\n         * Encodes the specified LeafOp message. Does not implicitly {@link ics23.LeafOp.verify|verify} messages.\n         * @function encode\n         * @memberof ics23.LeafOp\n         * @static\n         * @param {ics23.ILeafOp} message LeafOp message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        LeafOp.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.hash != null && message.hasOwnProperty(\"hash\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.hash);\n            if (message.prehashKey != null && message.hasOwnProperty(\"prehashKey\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.prehashKey);\n            if (message.prehashValue != null && message.hasOwnProperty(\"prehashValue\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.prehashValue);\n            if (message.length != null && message.hasOwnProperty(\"length\"))\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.length);\n            if (message.prefix != null && message.hasOwnProperty(\"prefix\"))\n                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.prefix);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified LeafOp message, length delimited. Does not implicitly {@link ics23.LeafOp.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ics23.LeafOp\n         * @static\n         * @param {ics23.ILeafOp} message LeafOp message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        LeafOp.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a LeafOp message from the specified reader or buffer.\n         * @function decode\n         * @memberof ics23.LeafOp\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ics23.LeafOp} LeafOp\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        LeafOp.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ics23.LeafOp();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a LeafOp message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ics23.LeafOp\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ics23.LeafOp} LeafOp\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        LeafOp.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a LeafOp message.\n         * @function verify\n         * @memberof ics23.LeafOp\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        LeafOp.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.hash != null && message.hasOwnProperty(\"hash\"))\n                switch (message.hash) {\n                default:\n                    return \"hash: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                    break;\n                }\n            if (message.prehashKey != null && message.hasOwnProperty(\"prehashKey\"))\n                switch (message.prehashKey) {\n                default:\n                    return \"prehashKey: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                    break;\n                }\n            if (message.prehashValue != null && message.hasOwnProperty(\"prehashValue\"))\n                switch (message.prehashValue) {\n                default:\n                    return \"prehashValue: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                    break;\n                }\n            if (message.length != null && message.hasOwnProperty(\"length\"))\n                switch (message.length) {\n                default:\n                    return \"length: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                    break;\n                }\n            if (message.prefix != null && message.hasOwnProperty(\"prefix\"))\n                if (!(message.prefix && typeof message.prefix.length === \"number\" || $util.isString(message.prefix)))\n                    return \"prefix: buffer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a LeafOp message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ics23.LeafOp\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ics23.LeafOp} LeafOp\n         */\n        LeafOp.fromObject = function fromObject(object) {\n            if (object instanceof $root.ics23.LeafOp)\n                return object;\n            var message = new $root.ics23.LeafOp();\n            switch (object.hash) {\n            case \"NO_HASH\":\n            case 0:\n                message.hash = 0;\n                break;\n            case \"SHA256\":\n            case 1:\n                message.hash = 1;\n                break;\n            case \"SHA512\":\n            case 2:\n                message.hash = 2;\n                break;\n            case \"KECCAK\":\n            case 3:\n                message.hash = 3;\n                break;\n            case \"RIPEMD160\":\n            case 4:\n                message.hash = 4;\n                break;\n            case \"BITCOIN\":\n            case 5:\n                message.hash = 5;\n                break;\n            case \"SHA512_256\":\n            case 6:\n                message.hash = 6;\n                break;\n            }\n            switch (object.prehashKey) {\n            case \"NO_HASH\":\n            case 0:\n                message.prehashKey = 0;\n                break;\n            case \"SHA256\":\n            case 1:\n                message.prehashKey = 1;\n                break;\n            case \"SHA512\":\n            case 2:\n                message.prehashKey = 2;\n                break;\n            case \"KECCAK\":\n            case 3:\n                message.prehashKey = 3;\n                break;\n            case \"RIPEMD160\":\n            case 4:\n                message.prehashKey = 4;\n                break;\n            case \"BITCOIN\":\n            case 5:\n                message.prehashKey = 5;\n                break;\n            case \"SHA512_256\":\n            case 6:\n                message.prehashKey = 6;\n                break;\n            }\n            switch (object.prehashValue) {\n            case \"NO_HASH\":\n            case 0:\n                message.prehashValue = 0;\n                break;\n            case \"SHA256\":\n            case 1:\n                message.prehashValue = 1;\n                break;\n            case \"SHA512\":\n            case 2:\n                message.prehashValue = 2;\n                break;\n            case \"KECCAK\":\n            case 3:\n                message.prehashValue = 3;\n                break;\n            case \"RIPEMD160\":\n            case 4:\n                message.prehashValue = 4;\n                break;\n            case \"BITCOIN\":\n            case 5:\n                message.prehashValue = 5;\n                break;\n            case \"SHA512_256\":\n            case 6:\n                message.prehashValue = 6;\n                break;\n            }\n            switch (object.length) {\n            case \"NO_PREFIX\":\n            case 0:\n                message.length = 0;\n                break;\n            case \"VAR_PROTO\":\n            case 1:\n                message.length = 1;\n                break;\n            case \"VAR_RLP\":\n            case 2:\n                message.length = 2;\n                break;\n            case \"FIXED32_BIG\":\n            case 3:\n                message.length = 3;\n                break;\n            case \"FIXED32_LITTLE\":\n            case 4:\n                message.length = 4;\n                break;\n            case \"FIXED64_BIG\":\n            case 5:\n                message.length = 5;\n                break;\n            case \"FIXED64_LITTLE\":\n            case 6:\n                message.length = 6;\n                break;\n            case \"REQUIRE_32_BYTES\":\n            case 7:\n                message.length = 7;\n                break;\n            case \"REQUIRE_64_BYTES\":\n            case 8:\n                message.length = 8;\n                break;\n            }\n            if (object.prefix != null)\n                if (typeof object.prefix === \"string\")\n                    $util.base64.decode(object.prefix, message.prefix = $util.newBuffer($util.base64.length(object.prefix)), 0);\n                else if (object.prefix.length)\n                    message.prefix = object.prefix;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a LeafOp message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ics23.LeafOp\n         * @static\n         * @param {ics23.LeafOp} message LeafOp\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        LeafOp.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.hash = options.enums === String ? \"NO_HASH\" : 0;\n                object.prehashKey = options.enums === String ? \"NO_HASH\" : 0;\n                object.prehashValue = options.enums === String ? \"NO_HASH\" : 0;\n                object.length = options.enums === String ? \"NO_PREFIX\" : 0;\n                if (options.bytes === String)\n                    object.prefix = \"\";\n                else {\n                    object.prefix = [];\n                    if (options.bytes !== Array)\n                        object.prefix = $util.newBuffer(object.prefix);\n                }\n            }\n            if (message.hash != null && message.hasOwnProperty(\"hash\"))\n                object.hash = options.enums === String ? $root.ics23.HashOp[message.hash] : message.hash;\n            if (message.prehashKey != null && message.hasOwnProperty(\"prehashKey\"))\n                object.prehashKey = options.enums === String ? $root.ics23.HashOp[message.prehashKey] : message.prehashKey;\n            if (message.prehashValue != null && message.hasOwnProperty(\"prehashValue\"))\n                object.prehashValue = options.enums === String ? $root.ics23.HashOp[message.prehashValue] : message.prehashValue;\n            if (message.length != null && message.hasOwnProperty(\"length\"))\n                object.length = options.enums === String ? $root.ics23.LengthOp[message.length] : message.length;\n            if (message.prefix != null && message.hasOwnProperty(\"prefix\"))\n                object.prefix = options.bytes === String ? $util.base64.encode(message.prefix, 0, message.prefix.length) : options.bytes === Array ? Array.prototype.slice.call(message.prefix) : message.prefix;\n            return object;\n        };\n\n        /**\n         * Converts this LeafOp to JSON.\n         * @function toJSON\n         * @memberof ics23.LeafOp\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        LeafOp.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return LeafOp;\n    })();\n\n    ics23.InnerOp = (function() {\n\n        /**\n         * Properties of an InnerOp.\n         * @memberof ics23\n         * @interface IInnerOp\n         * @property {ics23.HashOp|null} [hash] InnerOp hash\n         * @property {Uint8Array|null} [prefix] InnerOp prefix\n         * @property {Uint8Array|null} [suffix] InnerOp suffix\n         */\n\n        /**\n         * Constructs a new InnerOp.\n         * @memberof ics23\n         * @classdesc InnerOp represents a merkle-proof step that is not a leaf.\n         * It represents concatenating two children and hashing them to provide the next result.\n         * \n         * The result of the previous step is passed in, so the signature of this op is:\n         * innerOp(child) -> output\n         * \n         * The result of applying InnerOp should be:\n         * output = op.hash(op.prefix || child || op.suffix)\n         * \n         * where the || operator is concatenation of binary data,\n         * and child is the result of hashing all the tree below this step.\n         * \n         * Any special data, like prepending child with the length, or prepending the entire operation with\n         * some value to differentiate from leaf nodes, should be included in prefix and suffix.\n         * If either of prefix or suffix is empty, we just treat it as an empty string\n         * @implements IInnerOp\n         * @constructor\n         * @param {ics23.IInnerOp=} [properties] Properties to set\n         */\n        function InnerOp(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * InnerOp hash.\n         * @member {ics23.HashOp} hash\n         * @memberof ics23.InnerOp\n         * @instance\n         */\n        InnerOp.prototype.hash = 0;\n\n        /**\n         * InnerOp prefix.\n         * @member {Uint8Array} prefix\n         * @memberof ics23.InnerOp\n         * @instance\n         */\n        InnerOp.prototype.prefix = $util.newBuffer([]);\n\n        /**\n         * InnerOp suffix.\n         * @member {Uint8Array} suffix\n         * @memberof ics23.InnerOp\n         * @instance\n         */\n        InnerOp.prototype.suffix = $util.newBuffer([]);\n\n        /**\n         * Creates a new InnerOp instance using the specified properties.\n         * @function create\n         * @memberof ics23.InnerOp\n         * @static\n         * @param {ics23.IInnerOp=} [properties] Properties to set\n         * @returns {ics23.InnerOp} InnerOp instance\n         */\n        InnerOp.create = function create(properties) {\n            return new InnerOp(properties);\n        };\n\n        /**\n         * Encodes the specified InnerOp message. Does not implicitly {@link ics23.InnerOp.verify|verify} messages.\n         * @function encode\n         * @memberof ics23.InnerOp\n         * @static\n         * @param {ics23.IInnerOp} message InnerOp message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        InnerOp.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.hash != null && message.hasOwnProperty(\"hash\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.hash);\n            if (message.prefix != null && message.hasOwnProperty(\"prefix\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.prefix);\n            if (message.suffix != null && message.hasOwnProperty(\"suffix\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.suffix);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified InnerOp message, length delimited. Does not implicitly {@link ics23.InnerOp.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ics23.InnerOp\n         * @static\n         * @param {ics23.IInnerOp} message InnerOp message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        InnerOp.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an InnerOp message from the specified reader or buffer.\n         * @function decode\n         * @memberof ics23.InnerOp\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ics23.InnerOp} InnerOp\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        InnerOp.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ics23.InnerOp();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an InnerOp message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ics23.InnerOp\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ics23.InnerOp} InnerOp\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        InnerOp.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an InnerOp message.\n         * @function verify\n         * @memberof ics23.InnerOp\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        InnerOp.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.hash != null && message.hasOwnProperty(\"hash\"))\n                switch (message.hash) {\n                default:\n                    return \"hash: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                    break;\n                }\n            if (message.prefix != null && message.hasOwnProperty(\"prefix\"))\n                if (!(message.prefix && typeof message.prefix.length === \"number\" || $util.isString(message.prefix)))\n                    return \"prefix: buffer expected\";\n            if (message.suffix != null && message.hasOwnProperty(\"suffix\"))\n                if (!(message.suffix && typeof message.suffix.length === \"number\" || $util.isString(message.suffix)))\n                    return \"suffix: buffer expected\";\n            return null;\n        };\n\n        /**\n         * Creates an InnerOp message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ics23.InnerOp\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ics23.InnerOp} InnerOp\n         */\n        InnerOp.fromObject = function fromObject(object) {\n            if (object instanceof $root.ics23.InnerOp)\n                return object;\n            var message = new $root.ics23.InnerOp();\n            switch (object.hash) {\n            case \"NO_HASH\":\n            case 0:\n                message.hash = 0;\n                break;\n            case \"SHA256\":\n            case 1:\n                message.hash = 1;\n                break;\n            case \"SHA512\":\n            case 2:\n                message.hash = 2;\n                break;\n            case \"KECCAK\":\n            case 3:\n                message.hash = 3;\n                break;\n            case \"RIPEMD160\":\n            case 4:\n                message.hash = 4;\n                break;\n            case \"BITCOIN\":\n            case 5:\n                message.hash = 5;\n                break;\n            case \"SHA512_256\":\n            case 6:\n                message.hash = 6;\n                break;\n            }\n            if (object.prefix != null)\n                if (typeof object.prefix === \"string\")\n                    $util.base64.decode(object.prefix, message.prefix = $util.newBuffer($util.base64.length(object.prefix)), 0);\n                else if (object.prefix.length)\n                    message.prefix = object.prefix;\n            if (object.suffix != null)\n                if (typeof object.suffix === \"string\")\n                    $util.base64.decode(object.suffix, message.suffix = $util.newBuffer($util.base64.length(object.suffix)), 0);\n                else if (object.suffix.length)\n                    message.suffix = object.suffix;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an InnerOp message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ics23.InnerOp\n         * @static\n         * @param {ics23.InnerOp} message InnerOp\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        InnerOp.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.hash = options.enums === String ? \"NO_HASH\" : 0;\n                if (options.bytes === String)\n                    object.prefix = \"\";\n                else {\n                    object.prefix = [];\n                    if (options.bytes !== Array)\n                        object.prefix = $util.newBuffer(object.prefix);\n                }\n                if (options.bytes === String)\n                    object.suffix = \"\";\n                else {\n                    object.suffix = [];\n                    if (options.bytes !== Array)\n                        object.suffix = $util.newBuffer(object.suffix);\n                }\n            }\n            if (message.hash != null && message.hasOwnProperty(\"hash\"))\n                object.hash = options.enums === String ? $root.ics23.HashOp[message.hash] : message.hash;\n            if (message.prefix != null && message.hasOwnProperty(\"prefix\"))\n                object.prefix = options.bytes === String ? $util.base64.encode(message.prefix, 0, message.prefix.length) : options.bytes === Array ? Array.prototype.slice.call(message.prefix) : message.prefix;\n            if (message.suffix != null && message.hasOwnProperty(\"suffix\"))\n                object.suffix = options.bytes === String ? $util.base64.encode(message.suffix, 0, message.suffix.length) : options.bytes === Array ? Array.prototype.slice.call(message.suffix) : message.suffix;\n            return object;\n        };\n\n        /**\n         * Converts this InnerOp to JSON.\n         * @function toJSON\n         * @memberof ics23.InnerOp\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        InnerOp.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return InnerOp;\n    })();\n\n    ics23.ProofSpec = (function() {\n\n        /**\n         * Properties of a ProofSpec.\n         * @memberof ics23\n         * @interface IProofSpec\n         * @property {ics23.ILeafOp|null} [leafSpec] ProofSpec leafSpec\n         * @property {ics23.IInnerSpec|null} [innerSpec] ProofSpec innerSpec\n         * @property {number|null} [maxDepth] ProofSpec maxDepth\n         * @property {number|null} [minDepth] ProofSpec minDepth\n         */\n\n        /**\n         * Constructs a new ProofSpec.\n         * @memberof ics23\n         * @classdesc ProofSpec defines what the expected parameters are for a given proof type.\n         * This can be stored in the client and used to validate any incoming proofs.\n         * \n         * verify(ProofSpec, Proof) -> Proof | Error\n         * \n         * As demonstrated in tests, if we don't fix the algorithm used to calculate the\n         * LeafHash for a given tree, there are many possible key-value pairs that can\n         * generate a given hash (by interpretting the preimage differently).\n         * We need this for proper security, requires client knows a priori what\n         * tree format server uses. But not in code, rather a configuration object.\n         * @implements IProofSpec\n         * @constructor\n         * @param {ics23.IProofSpec=} [properties] Properties to set\n         */\n        function ProofSpec(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ProofSpec leafSpec.\n         * @member {ics23.ILeafOp|null|undefined} leafSpec\n         * @memberof ics23.ProofSpec\n         * @instance\n         */\n        ProofSpec.prototype.leafSpec = null;\n\n        /**\n         * ProofSpec innerSpec.\n         * @member {ics23.IInnerSpec|null|undefined} innerSpec\n         * @memberof ics23.ProofSpec\n         * @instance\n         */\n        ProofSpec.prototype.innerSpec = null;\n\n        /**\n         * ProofSpec maxDepth.\n         * @member {number} maxDepth\n         * @memberof ics23.ProofSpec\n         * @instance\n         */\n        ProofSpec.prototype.maxDepth = 0;\n\n        /**\n         * ProofSpec minDepth.\n         * @member {number} minDepth\n         * @memberof ics23.ProofSpec\n         * @instance\n         */\n        ProofSpec.prototype.minDepth = 0;\n\n        /**\n         * Creates a new ProofSpec instance using the specified properties.\n         * @function create\n         * @memberof ics23.ProofSpec\n         * @static\n         * @param {ics23.IProofSpec=} [properties] Properties to set\n         * @returns {ics23.ProofSpec} ProofSpec instance\n         */\n        ProofSpec.create = function create(properties) {\n            return new ProofSpec(properties);\n        };\n\n        /**\n         * Encodes the specified ProofSpec message. Does not implicitly {@link ics23.ProofSpec.verify|verify} messages.\n         * @function encode\n         * @memberof ics23.ProofSpec\n         * @static\n         * @param {ics23.IProofSpec} message ProofSpec message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ProofSpec.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.leafSpec != null && message.hasOwnProperty(\"leafSpec\"))\n                $root.ics23.LeafOp.encode(message.leafSpec, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.innerSpec != null && message.hasOwnProperty(\"innerSpec\"))\n                $root.ics23.InnerSpec.encode(message.innerSpec, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.maxDepth != null && message.hasOwnProperty(\"maxDepth\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxDepth);\n            if (message.minDepth != null && message.hasOwnProperty(\"minDepth\"))\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.minDepth);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ProofSpec message, length delimited. Does not implicitly {@link ics23.ProofSpec.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ics23.ProofSpec\n         * @static\n         * @param {ics23.IProofSpec} message ProofSpec message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ProofSpec.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ProofSpec message from the specified reader or buffer.\n         * @function decode\n         * @memberof ics23.ProofSpec\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ics23.ProofSpec} ProofSpec\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ProofSpec.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ics23.ProofSpec();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = $root.ics23.LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = $root.ics23.InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ProofSpec message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ics23.ProofSpec\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ics23.ProofSpec} ProofSpec\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ProofSpec.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ProofSpec message.\n         * @function verify\n         * @memberof ics23.ProofSpec\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ProofSpec.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.leafSpec != null && message.hasOwnProperty(\"leafSpec\")) {\n                var error = $root.ics23.LeafOp.verify(message.leafSpec);\n                if (error)\n                    return \"leafSpec.\" + error;\n            }\n            if (message.innerSpec != null && message.hasOwnProperty(\"innerSpec\")) {\n                var error = $root.ics23.InnerSpec.verify(message.innerSpec);\n                if (error)\n                    return \"innerSpec.\" + error;\n            }\n            if (message.maxDepth != null && message.hasOwnProperty(\"maxDepth\"))\n                if (!$util.isInteger(message.maxDepth))\n                    return \"maxDepth: integer expected\";\n            if (message.minDepth != null && message.hasOwnProperty(\"minDepth\"))\n                if (!$util.isInteger(message.minDepth))\n                    return \"minDepth: integer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ProofSpec message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ics23.ProofSpec\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ics23.ProofSpec} ProofSpec\n         */\n        ProofSpec.fromObject = function fromObject(object) {\n            if (object instanceof $root.ics23.ProofSpec)\n                return object;\n            var message = new $root.ics23.ProofSpec();\n            if (object.leafSpec != null) {\n                if (typeof object.leafSpec !== \"object\")\n                    throw TypeError(\".ics23.ProofSpec.leafSpec: object expected\");\n                message.leafSpec = $root.ics23.LeafOp.fromObject(object.leafSpec);\n            }\n            if (object.innerSpec != null) {\n                if (typeof object.innerSpec !== \"object\")\n                    throw TypeError(\".ics23.ProofSpec.innerSpec: object expected\");\n                message.innerSpec = $root.ics23.InnerSpec.fromObject(object.innerSpec);\n            }\n            if (object.maxDepth != null)\n                message.maxDepth = object.maxDepth | 0;\n            if (object.minDepth != null)\n                message.minDepth = object.minDepth | 0;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ProofSpec message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ics23.ProofSpec\n         * @static\n         * @param {ics23.ProofSpec} message ProofSpec\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ProofSpec.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.leafSpec = null;\n                object.innerSpec = null;\n                object.maxDepth = 0;\n                object.minDepth = 0;\n            }\n            if (message.leafSpec != null && message.hasOwnProperty(\"leafSpec\"))\n                object.leafSpec = $root.ics23.LeafOp.toObject(message.leafSpec, options);\n            if (message.innerSpec != null && message.hasOwnProperty(\"innerSpec\"))\n                object.innerSpec = $root.ics23.InnerSpec.toObject(message.innerSpec, options);\n            if (message.maxDepth != null && message.hasOwnProperty(\"maxDepth\"))\n                object.maxDepth = message.maxDepth;\n            if (message.minDepth != null && message.hasOwnProperty(\"minDepth\"))\n                object.minDepth = message.minDepth;\n            return object;\n        };\n\n        /**\n         * Converts this ProofSpec to JSON.\n         * @function toJSON\n         * @memberof ics23.ProofSpec\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ProofSpec.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ProofSpec;\n    })();\n\n    ics23.InnerSpec = (function() {\n\n        /**\n         * Properties of an InnerSpec.\n         * @memberof ics23\n         * @interface IInnerSpec\n         * @property {Array.<number>|null} [childOrder] InnerSpec childOrder\n         * @property {number|null} [childSize] InnerSpec childSize\n         * @property {number|null} [minPrefixLength] InnerSpec minPrefixLength\n         * @property {number|null} [maxPrefixLength] InnerSpec maxPrefixLength\n         * @property {Uint8Array|null} [emptyChild] InnerSpec emptyChild\n         * @property {ics23.HashOp|null} [hash] InnerSpec hash\n         */\n\n        /**\n         * Constructs a new InnerSpec.\n         * @memberof ics23\n         * @classdesc Represents an InnerSpec.\n         * @implements IInnerSpec\n         * @constructor\n         * @param {ics23.IInnerSpec=} [properties] Properties to set\n         */\n        function InnerSpec(properties) {\n            this.childOrder = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * InnerSpec childOrder.\n         * @member {Array.<number>} childOrder\n         * @memberof ics23.InnerSpec\n         * @instance\n         */\n        InnerSpec.prototype.childOrder = $util.emptyArray;\n\n        /**\n         * InnerSpec childSize.\n         * @member {number} childSize\n         * @memberof ics23.InnerSpec\n         * @instance\n         */\n        InnerSpec.prototype.childSize = 0;\n\n        /**\n         * InnerSpec minPrefixLength.\n         * @member {number} minPrefixLength\n         * @memberof ics23.InnerSpec\n         * @instance\n         */\n        InnerSpec.prototype.minPrefixLength = 0;\n\n        /**\n         * InnerSpec maxPrefixLength.\n         * @member {number} maxPrefixLength\n         * @memberof ics23.InnerSpec\n         * @instance\n         */\n        InnerSpec.prototype.maxPrefixLength = 0;\n\n        /**\n         * InnerSpec emptyChild.\n         * @member {Uint8Array} emptyChild\n         * @memberof ics23.InnerSpec\n         * @instance\n         */\n        InnerSpec.prototype.emptyChild = $util.newBuffer([]);\n\n        /**\n         * InnerSpec hash.\n         * @member {ics23.HashOp} hash\n         * @memberof ics23.InnerSpec\n         * @instance\n         */\n        InnerSpec.prototype.hash = 0;\n\n        /**\n         * Creates a new InnerSpec instance using the specified properties.\n         * @function create\n         * @memberof ics23.InnerSpec\n         * @static\n         * @param {ics23.IInnerSpec=} [properties] Properties to set\n         * @returns {ics23.InnerSpec} InnerSpec instance\n         */\n        InnerSpec.create = function create(properties) {\n            return new InnerSpec(properties);\n        };\n\n        /**\n         * Encodes the specified InnerSpec message. Does not implicitly {@link ics23.InnerSpec.verify|verify} messages.\n         * @function encode\n         * @memberof ics23.InnerSpec\n         * @static\n         * @param {ics23.IInnerSpec} message InnerSpec message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        InnerSpec.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.childOrder != null && message.childOrder.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.childOrder.length; ++i)\n                    writer.int32(message.childOrder[i]);\n                writer.ldelim();\n            }\n            if (message.childSize != null && message.hasOwnProperty(\"childSize\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.childSize);\n            if (message.minPrefixLength != null && message.hasOwnProperty(\"minPrefixLength\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.minPrefixLength);\n            if (message.maxPrefixLength != null && message.hasOwnProperty(\"maxPrefixLength\"))\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.maxPrefixLength);\n            if (message.emptyChild != null && message.hasOwnProperty(\"emptyChild\"))\n                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.emptyChild);\n            if (message.hash != null && message.hasOwnProperty(\"hash\"))\n                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.hash);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified InnerSpec message, length delimited. Does not implicitly {@link ics23.InnerSpec.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ics23.InnerSpec\n         * @static\n         * @param {ics23.IInnerSpec} message InnerSpec message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        InnerSpec.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an InnerSpec message from the specified reader or buffer.\n         * @function decode\n         * @memberof ics23.InnerSpec\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ics23.InnerSpec} InnerSpec\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        InnerSpec.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ics23.InnerSpec();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.childOrder && message.childOrder.length))\n                        message.childOrder = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.childOrder.push(reader.int32());\n                    } else\n                        message.childOrder.push(reader.int32());\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an InnerSpec message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ics23.InnerSpec\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ics23.InnerSpec} InnerSpec\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        InnerSpec.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an InnerSpec message.\n         * @function verify\n         * @memberof ics23.InnerSpec\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        InnerSpec.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.childOrder != null && message.hasOwnProperty(\"childOrder\")) {\n                if (!Array.isArray(message.childOrder))\n                    return \"childOrder: array expected\";\n                for (var i = 0; i < message.childOrder.length; ++i)\n                    if (!$util.isInteger(message.childOrder[i]))\n                        return \"childOrder: integer[] expected\";\n            }\n            if (message.childSize != null && message.hasOwnProperty(\"childSize\"))\n                if (!$util.isInteger(message.childSize))\n                    return \"childSize: integer expected\";\n            if (message.minPrefixLength != null && message.hasOwnProperty(\"minPrefixLength\"))\n                if (!$util.isInteger(message.minPrefixLength))\n                    return \"minPrefixLength: integer expected\";\n            if (message.maxPrefixLength != null && message.hasOwnProperty(\"maxPrefixLength\"))\n                if (!$util.isInteger(message.maxPrefixLength))\n                    return \"maxPrefixLength: integer expected\";\n            if (message.emptyChild != null && message.hasOwnProperty(\"emptyChild\"))\n                if (!(message.emptyChild && typeof message.emptyChild.length === \"number\" || $util.isString(message.emptyChild)))\n                    return \"emptyChild: buffer expected\";\n            if (message.hash != null && message.hasOwnProperty(\"hash\"))\n                switch (message.hash) {\n                default:\n                    return \"hash: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                    break;\n                }\n            return null;\n        };\n\n        /**\n         * Creates an InnerSpec message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ics23.InnerSpec\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ics23.InnerSpec} InnerSpec\n         */\n        InnerSpec.fromObject = function fromObject(object) {\n            if (object instanceof $root.ics23.InnerSpec)\n                return object;\n            var message = new $root.ics23.InnerSpec();\n            if (object.childOrder) {\n                if (!Array.isArray(object.childOrder))\n                    throw TypeError(\".ics23.InnerSpec.childOrder: array expected\");\n                message.childOrder = [];\n                for (var i = 0; i < object.childOrder.length; ++i)\n                    message.childOrder[i] = object.childOrder[i] | 0;\n            }\n            if (object.childSize != null)\n                message.childSize = object.childSize | 0;\n            if (object.minPrefixLength != null)\n                message.minPrefixLength = object.minPrefixLength | 0;\n            if (object.maxPrefixLength != null)\n                message.maxPrefixLength = object.maxPrefixLength | 0;\n            if (object.emptyChild != null)\n                if (typeof object.emptyChild === \"string\")\n                    $util.base64.decode(object.emptyChild, message.emptyChild = $util.newBuffer($util.base64.length(object.emptyChild)), 0);\n                else if (object.emptyChild.length)\n                    message.emptyChild = object.emptyChild;\n            switch (object.hash) {\n            case \"NO_HASH\":\n            case 0:\n                message.hash = 0;\n                break;\n            case \"SHA256\":\n            case 1:\n                message.hash = 1;\n                break;\n            case \"SHA512\":\n            case 2:\n                message.hash = 2;\n                break;\n            case \"KECCAK\":\n            case 3:\n                message.hash = 3;\n                break;\n            case \"RIPEMD160\":\n            case 4:\n                message.hash = 4;\n                break;\n            case \"BITCOIN\":\n            case 5:\n                message.hash = 5;\n                break;\n            case \"SHA512_256\":\n            case 6:\n                message.hash = 6;\n                break;\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an InnerSpec message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ics23.InnerSpec\n         * @static\n         * @param {ics23.InnerSpec} message InnerSpec\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        InnerSpec.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.childOrder = [];\n            if (options.defaults) {\n                object.childSize = 0;\n                object.minPrefixLength = 0;\n                object.maxPrefixLength = 0;\n                if (options.bytes === String)\n                    object.emptyChild = \"\";\n                else {\n                    object.emptyChild = [];\n                    if (options.bytes !== Array)\n                        object.emptyChild = $util.newBuffer(object.emptyChild);\n                }\n                object.hash = options.enums === String ? \"NO_HASH\" : 0;\n            }\n            if (message.childOrder && message.childOrder.length) {\n                object.childOrder = [];\n                for (var j = 0; j < message.childOrder.length; ++j)\n                    object.childOrder[j] = message.childOrder[j];\n            }\n            if (message.childSize != null && message.hasOwnProperty(\"childSize\"))\n                object.childSize = message.childSize;\n            if (message.minPrefixLength != null && message.hasOwnProperty(\"minPrefixLength\"))\n                object.minPrefixLength = message.minPrefixLength;\n            if (message.maxPrefixLength != null && message.hasOwnProperty(\"maxPrefixLength\"))\n                object.maxPrefixLength = message.maxPrefixLength;\n            if (message.emptyChild != null && message.hasOwnProperty(\"emptyChild\"))\n                object.emptyChild = options.bytes === String ? $util.base64.encode(message.emptyChild, 0, message.emptyChild.length) : options.bytes === Array ? Array.prototype.slice.call(message.emptyChild) : message.emptyChild;\n            if (message.hash != null && message.hasOwnProperty(\"hash\"))\n                object.hash = options.enums === String ? $root.ics23.HashOp[message.hash] : message.hash;\n            return object;\n        };\n\n        /**\n         * Converts this InnerSpec to JSON.\n         * @function toJSON\n         * @memberof ics23.InnerSpec\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        InnerSpec.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return InnerSpec;\n    })();\n\n    ics23.BatchProof = (function() {\n\n        /**\n         * Properties of a BatchProof.\n         * @memberof ics23\n         * @interface IBatchProof\n         * @property {Array.<ics23.IBatchEntry>|null} [entries] BatchProof entries\n         */\n\n        /**\n         * Constructs a new BatchProof.\n         * @memberof ics23\n         * @classdesc Represents a BatchProof.\n         * @implements IBatchProof\n         * @constructor\n         * @param {ics23.IBatchProof=} [properties] Properties to set\n         */\n        function BatchProof(properties) {\n            this.entries = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * BatchProof entries.\n         * @member {Array.<ics23.IBatchEntry>} entries\n         * @memberof ics23.BatchProof\n         * @instance\n         */\n        BatchProof.prototype.entries = $util.emptyArray;\n\n        /**\n         * Creates a new BatchProof instance using the specified properties.\n         * @function create\n         * @memberof ics23.BatchProof\n         * @static\n         * @param {ics23.IBatchProof=} [properties] Properties to set\n         * @returns {ics23.BatchProof} BatchProof instance\n         */\n        BatchProof.create = function create(properties) {\n            return new BatchProof(properties);\n        };\n\n        /**\n         * Encodes the specified BatchProof message. Does not implicitly {@link ics23.BatchProof.verify|verify} messages.\n         * @function encode\n         * @memberof ics23.BatchProof\n         * @static\n         * @param {ics23.IBatchProof} message BatchProof message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        BatchProof.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.entries != null && message.entries.length)\n                for (var i = 0; i < message.entries.length; ++i)\n                    $root.ics23.BatchEntry.encode(message.entries[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified BatchProof message, length delimited. Does not implicitly {@link ics23.BatchProof.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ics23.BatchProof\n         * @static\n         * @param {ics23.IBatchProof} message BatchProof message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        BatchProof.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a BatchProof message from the specified reader or buffer.\n         * @function decode\n         * @memberof ics23.BatchProof\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ics23.BatchProof} BatchProof\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        BatchProof.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ics23.BatchProof();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.entries && message.entries.length))\n                        message.entries = [];\n                    message.entries.push($root.ics23.BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a BatchProof message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ics23.BatchProof\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ics23.BatchProof} BatchProof\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        BatchProof.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a BatchProof message.\n         * @function verify\n         * @memberof ics23.BatchProof\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        BatchProof.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.entries != null && message.hasOwnProperty(\"entries\")) {\n                if (!Array.isArray(message.entries))\n                    return \"entries: array expected\";\n                for (var i = 0; i < message.entries.length; ++i) {\n                    var error = $root.ics23.BatchEntry.verify(message.entries[i]);\n                    if (error)\n                        return \"entries.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a BatchProof message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ics23.BatchProof\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ics23.BatchProof} BatchProof\n         */\n        BatchProof.fromObject = function fromObject(object) {\n            if (object instanceof $root.ics23.BatchProof)\n                return object;\n            var message = new $root.ics23.BatchProof();\n            if (object.entries) {\n                if (!Array.isArray(object.entries))\n                    throw TypeError(\".ics23.BatchProof.entries: array expected\");\n                message.entries = [];\n                for (var i = 0; i < object.entries.length; ++i) {\n                    if (typeof object.entries[i] !== \"object\")\n                        throw TypeError(\".ics23.BatchProof.entries: object expected\");\n                    message.entries[i] = $root.ics23.BatchEntry.fromObject(object.entries[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a BatchProof message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ics23.BatchProof\n         * @static\n         * @param {ics23.BatchProof} message BatchProof\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        BatchProof.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.entries = [];\n            if (message.entries && message.entries.length) {\n                object.entries = [];\n                for (var j = 0; j < message.entries.length; ++j)\n                    object.entries[j] = $root.ics23.BatchEntry.toObject(message.entries[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this BatchProof to JSON.\n         * @function toJSON\n         * @memberof ics23.BatchProof\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        BatchProof.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return BatchProof;\n    })();\n\n    ics23.BatchEntry = (function() {\n\n        /**\n         * Properties of a BatchEntry.\n         * @memberof ics23\n         * @interface IBatchEntry\n         * @property {ics23.IExistenceProof|null} [exist] BatchEntry exist\n         * @property {ics23.INonExistenceProof|null} [nonexist] BatchEntry nonexist\n         */\n\n        /**\n         * Constructs a new BatchEntry.\n         * @memberof ics23\n         * @classdesc Represents a BatchEntry.\n         * @implements IBatchEntry\n         * @constructor\n         * @param {ics23.IBatchEntry=} [properties] Properties to set\n         */\n        function BatchEntry(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * BatchEntry exist.\n         * @member {ics23.IExistenceProof|null|undefined} exist\n         * @memberof ics23.BatchEntry\n         * @instance\n         */\n        BatchEntry.prototype.exist = null;\n\n        /**\n         * BatchEntry nonexist.\n         * @member {ics23.INonExistenceProof|null|undefined} nonexist\n         * @memberof ics23.BatchEntry\n         * @instance\n         */\n        BatchEntry.prototype.nonexist = null;\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * BatchEntry proof.\n         * @member {\"exist\"|\"nonexist\"|undefined} proof\n         * @memberof ics23.BatchEntry\n         * @instance\n         */\n        Object.defineProperty(BatchEntry.prototype, \"proof\", {\n            get: $util.oneOfGetter($oneOfFields = [\"exist\", \"nonexist\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new BatchEntry instance using the specified properties.\n         * @function create\n         * @memberof ics23.BatchEntry\n         * @static\n         * @param {ics23.IBatchEntry=} [properties] Properties to set\n         * @returns {ics23.BatchEntry} BatchEntry instance\n         */\n        BatchEntry.create = function create(properties) {\n            return new BatchEntry(properties);\n        };\n\n        /**\n         * Encodes the specified BatchEntry message. Does not implicitly {@link ics23.BatchEntry.verify|verify} messages.\n         * @function encode\n         * @memberof ics23.BatchEntry\n         * @static\n         * @param {ics23.IBatchEntry} message BatchEntry message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        BatchEntry.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.exist != null && message.hasOwnProperty(\"exist\"))\n                $root.ics23.ExistenceProof.encode(message.exist, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.nonexist != null && message.hasOwnProperty(\"nonexist\"))\n                $root.ics23.NonExistenceProof.encode(message.nonexist, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified BatchEntry message, length delimited. Does not implicitly {@link ics23.BatchEntry.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ics23.BatchEntry\n         * @static\n         * @param {ics23.IBatchEntry} message BatchEntry message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        BatchEntry.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a BatchEntry message from the specified reader or buffer.\n         * @function decode\n         * @memberof ics23.BatchEntry\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ics23.BatchEntry} BatchEntry\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        BatchEntry.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ics23.BatchEntry();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.exist = $root.ics23.ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = $root.ics23.NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a BatchEntry message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ics23.BatchEntry\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ics23.BatchEntry} BatchEntry\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        BatchEntry.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a BatchEntry message.\n         * @function verify\n         * @memberof ics23.BatchEntry\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        BatchEntry.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.exist != null && message.hasOwnProperty(\"exist\")) {\n                properties.proof = 1;\n                {\n                    var error = $root.ics23.ExistenceProof.verify(message.exist);\n                    if (error)\n                        return \"exist.\" + error;\n                }\n            }\n            if (message.nonexist != null && message.hasOwnProperty(\"nonexist\")) {\n                if (properties.proof === 1)\n                    return \"proof: multiple values\";\n                properties.proof = 1;\n                {\n                    var error = $root.ics23.NonExistenceProof.verify(message.nonexist);\n                    if (error)\n                        return \"nonexist.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a BatchEntry message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ics23.BatchEntry\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ics23.BatchEntry} BatchEntry\n         */\n        BatchEntry.fromObject = function fromObject(object) {\n            if (object instanceof $root.ics23.BatchEntry)\n                return object;\n            var message = new $root.ics23.BatchEntry();\n            if (object.exist != null) {\n                if (typeof object.exist !== \"object\")\n                    throw TypeError(\".ics23.BatchEntry.exist: object expected\");\n                message.exist = $root.ics23.ExistenceProof.fromObject(object.exist);\n            }\n            if (object.nonexist != null) {\n                if (typeof object.nonexist !== \"object\")\n                    throw TypeError(\".ics23.BatchEntry.nonexist: object expected\");\n                message.nonexist = $root.ics23.NonExistenceProof.fromObject(object.nonexist);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a BatchEntry message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ics23.BatchEntry\n         * @static\n         * @param {ics23.BatchEntry} message BatchEntry\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        BatchEntry.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (message.exist != null && message.hasOwnProperty(\"exist\")) {\n                object.exist = $root.ics23.ExistenceProof.toObject(message.exist, options);\n                if (options.oneofs)\n                    object.proof = \"exist\";\n            }\n            if (message.nonexist != null && message.hasOwnProperty(\"nonexist\")) {\n                object.nonexist = $root.ics23.NonExistenceProof.toObject(message.nonexist, options);\n                if (options.oneofs)\n                    object.proof = \"nonexist\";\n            }\n            return object;\n        };\n\n        /**\n         * Converts this BatchEntry to JSON.\n         * @function toJSON\n         * @memberof ics23.BatchEntry\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        BatchEntry.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return BatchEntry;\n    })();\n\n    ics23.CompressedBatchProof = (function() {\n\n        /**\n         * Properties of a CompressedBatchProof.\n         * @memberof ics23\n         * @interface ICompressedBatchProof\n         * @property {Array.<ics23.ICompressedBatchEntry>|null} [entries] CompressedBatchProof entries\n         * @property {Array.<ics23.IInnerOp>|null} [lookupInners] CompressedBatchProof lookupInners\n         */\n\n        /**\n         * Constructs a new CompressedBatchProof.\n         * @memberof ics23\n         * @classdesc Represents a CompressedBatchProof.\n         * @implements ICompressedBatchProof\n         * @constructor\n         * @param {ics23.ICompressedBatchProof=} [properties] Properties to set\n         */\n        function CompressedBatchProof(properties) {\n            this.entries = [];\n            this.lookupInners = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * CompressedBatchProof entries.\n         * @member {Array.<ics23.ICompressedBatchEntry>} entries\n         * @memberof ics23.CompressedBatchProof\n         * @instance\n         */\n        CompressedBatchProof.prototype.entries = $util.emptyArray;\n\n        /**\n         * CompressedBatchProof lookupInners.\n         * @member {Array.<ics23.IInnerOp>} lookupInners\n         * @memberof ics23.CompressedBatchProof\n         * @instance\n         */\n        CompressedBatchProof.prototype.lookupInners = $util.emptyArray;\n\n        /**\n         * Creates a new CompressedBatchProof instance using the specified properties.\n         * @function create\n         * @memberof ics23.CompressedBatchProof\n         * @static\n         * @param {ics23.ICompressedBatchProof=} [properties] Properties to set\n         * @returns {ics23.CompressedBatchProof} CompressedBatchProof instance\n         */\n        CompressedBatchProof.create = function create(properties) {\n            return new CompressedBatchProof(properties);\n        };\n\n        /**\n         * Encodes the specified CompressedBatchProof message. Does not implicitly {@link ics23.CompressedBatchProof.verify|verify} messages.\n         * @function encode\n         * @memberof ics23.CompressedBatchProof\n         * @static\n         * @param {ics23.ICompressedBatchProof} message CompressedBatchProof message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CompressedBatchProof.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.entries != null && message.entries.length)\n                for (var i = 0; i < message.entries.length; ++i)\n                    $root.ics23.CompressedBatchEntry.encode(message.entries[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.lookupInners != null && message.lookupInners.length)\n                for (var i = 0; i < message.lookupInners.length; ++i)\n                    $root.ics23.InnerOp.encode(message.lookupInners[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified CompressedBatchProof message, length delimited. Does not implicitly {@link ics23.CompressedBatchProof.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ics23.CompressedBatchProof\n         * @static\n         * @param {ics23.ICompressedBatchProof} message CompressedBatchProof message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CompressedBatchProof.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a CompressedBatchProof message from the specified reader or buffer.\n         * @function decode\n         * @memberof ics23.CompressedBatchProof\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ics23.CompressedBatchProof} CompressedBatchProof\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CompressedBatchProof.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ics23.CompressedBatchProof();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.entries && message.entries.length))\n                        message.entries = [];\n                    message.entries.push($root.ics23.CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    if (!(message.lookupInners && message.lookupInners.length))\n                        message.lookupInners = [];\n                    message.lookupInners.push($root.ics23.InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a CompressedBatchProof message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ics23.CompressedBatchProof\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ics23.CompressedBatchProof} CompressedBatchProof\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CompressedBatchProof.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a CompressedBatchProof message.\n         * @function verify\n         * @memberof ics23.CompressedBatchProof\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        CompressedBatchProof.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.entries != null && message.hasOwnProperty(\"entries\")) {\n                if (!Array.isArray(message.entries))\n                    return \"entries: array expected\";\n                for (var i = 0; i < message.entries.length; ++i) {\n                    var error = $root.ics23.CompressedBatchEntry.verify(message.entries[i]);\n                    if (error)\n                        return \"entries.\" + error;\n                }\n            }\n            if (message.lookupInners != null && message.hasOwnProperty(\"lookupInners\")) {\n                if (!Array.isArray(message.lookupInners))\n                    return \"lookupInners: array expected\";\n                for (var i = 0; i < message.lookupInners.length; ++i) {\n                    var error = $root.ics23.InnerOp.verify(message.lookupInners[i]);\n                    if (error)\n                        return \"lookupInners.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a CompressedBatchProof message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ics23.CompressedBatchProof\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ics23.CompressedBatchProof} CompressedBatchProof\n         */\n        CompressedBatchProof.fromObject = function fromObject(object) {\n            if (object instanceof $root.ics23.CompressedBatchProof)\n                return object;\n            var message = new $root.ics23.CompressedBatchProof();\n            if (object.entries) {\n                if (!Array.isArray(object.entries))\n                    throw TypeError(\".ics23.CompressedBatchProof.entries: array expected\");\n                message.entries = [];\n                for (var i = 0; i < object.entries.length; ++i) {\n                    if (typeof object.entries[i] !== \"object\")\n                        throw TypeError(\".ics23.CompressedBatchProof.entries: object expected\");\n                    message.entries[i] = $root.ics23.CompressedBatchEntry.fromObject(object.entries[i]);\n                }\n            }\n            if (object.lookupInners) {\n                if (!Array.isArray(object.lookupInners))\n                    throw TypeError(\".ics23.CompressedBatchProof.lookupInners: array expected\");\n                message.lookupInners = [];\n                for (var i = 0; i < object.lookupInners.length; ++i) {\n                    if (typeof object.lookupInners[i] !== \"object\")\n                        throw TypeError(\".ics23.CompressedBatchProof.lookupInners: object expected\");\n                    message.lookupInners[i] = $root.ics23.InnerOp.fromObject(object.lookupInners[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a CompressedBatchProof message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ics23.CompressedBatchProof\n         * @static\n         * @param {ics23.CompressedBatchProof} message CompressedBatchProof\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        CompressedBatchProof.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.entries = [];\n                object.lookupInners = [];\n            }\n            if (message.entries && message.entries.length) {\n                object.entries = [];\n                for (var j = 0; j < message.entries.length; ++j)\n                    object.entries[j] = $root.ics23.CompressedBatchEntry.toObject(message.entries[j], options);\n            }\n            if (message.lookupInners && message.lookupInners.length) {\n                object.lookupInners = [];\n                for (var j = 0; j < message.lookupInners.length; ++j)\n                    object.lookupInners[j] = $root.ics23.InnerOp.toObject(message.lookupInners[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this CompressedBatchProof to JSON.\n         * @function toJSON\n         * @memberof ics23.CompressedBatchProof\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        CompressedBatchProof.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return CompressedBatchProof;\n    })();\n\n    ics23.CompressedBatchEntry = (function() {\n\n        /**\n         * Properties of a CompressedBatchEntry.\n         * @memberof ics23\n         * @interface ICompressedBatchEntry\n         * @property {ics23.ICompressedExistenceProof|null} [exist] CompressedBatchEntry exist\n         * @property {ics23.ICompressedNonExistenceProof|null} [nonexist] CompressedBatchEntry nonexist\n         */\n\n        /**\n         * Constructs a new CompressedBatchEntry.\n         * @memberof ics23\n         * @classdesc Represents a CompressedBatchEntry.\n         * @implements ICompressedBatchEntry\n         * @constructor\n         * @param {ics23.ICompressedBatchEntry=} [properties] Properties to set\n         */\n        function CompressedBatchEntry(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * CompressedBatchEntry exist.\n         * @member {ics23.ICompressedExistenceProof|null|undefined} exist\n         * @memberof ics23.CompressedBatchEntry\n         * @instance\n         */\n        CompressedBatchEntry.prototype.exist = null;\n\n        /**\n         * CompressedBatchEntry nonexist.\n         * @member {ics23.ICompressedNonExistenceProof|null|undefined} nonexist\n         * @memberof ics23.CompressedBatchEntry\n         * @instance\n         */\n        CompressedBatchEntry.prototype.nonexist = null;\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * CompressedBatchEntry proof.\n         * @member {\"exist\"|\"nonexist\"|undefined} proof\n         * @memberof ics23.CompressedBatchEntry\n         * @instance\n         */\n        Object.defineProperty(CompressedBatchEntry.prototype, \"proof\", {\n            get: $util.oneOfGetter($oneOfFields = [\"exist\", \"nonexist\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new CompressedBatchEntry instance using the specified properties.\n         * @function create\n         * @memberof ics23.CompressedBatchEntry\n         * @static\n         * @param {ics23.ICompressedBatchEntry=} [properties] Properties to set\n         * @returns {ics23.CompressedBatchEntry} CompressedBatchEntry instance\n         */\n        CompressedBatchEntry.create = function create(properties) {\n            return new CompressedBatchEntry(properties);\n        };\n\n        /**\n         * Encodes the specified CompressedBatchEntry message. Does not implicitly {@link ics23.CompressedBatchEntry.verify|verify} messages.\n         * @function encode\n         * @memberof ics23.CompressedBatchEntry\n         * @static\n         * @param {ics23.ICompressedBatchEntry} message CompressedBatchEntry message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CompressedBatchEntry.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.exist != null && message.hasOwnProperty(\"exist\"))\n                $root.ics23.CompressedExistenceProof.encode(message.exist, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.nonexist != null && message.hasOwnProperty(\"nonexist\"))\n                $root.ics23.CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified CompressedBatchEntry message, length delimited. Does not implicitly {@link ics23.CompressedBatchEntry.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ics23.CompressedBatchEntry\n         * @static\n         * @param {ics23.ICompressedBatchEntry} message CompressedBatchEntry message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CompressedBatchEntry.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a CompressedBatchEntry message from the specified reader or buffer.\n         * @function decode\n         * @memberof ics23.CompressedBatchEntry\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ics23.CompressedBatchEntry} CompressedBatchEntry\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CompressedBatchEntry.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ics23.CompressedBatchEntry();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.exist = $root.ics23.CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = $root.ics23.CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a CompressedBatchEntry message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ics23.CompressedBatchEntry\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ics23.CompressedBatchEntry} CompressedBatchEntry\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CompressedBatchEntry.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a CompressedBatchEntry message.\n         * @function verify\n         * @memberof ics23.CompressedBatchEntry\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        CompressedBatchEntry.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.exist != null && message.hasOwnProperty(\"exist\")) {\n                properties.proof = 1;\n                {\n                    var error = $root.ics23.CompressedExistenceProof.verify(message.exist);\n                    if (error)\n                        return \"exist.\" + error;\n                }\n            }\n            if (message.nonexist != null && message.hasOwnProperty(\"nonexist\")) {\n                if (properties.proof === 1)\n                    return \"proof: multiple values\";\n                properties.proof = 1;\n                {\n                    var error = $root.ics23.CompressedNonExistenceProof.verify(message.nonexist);\n                    if (error)\n                        return \"nonexist.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a CompressedBatchEntry message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ics23.CompressedBatchEntry\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ics23.CompressedBatchEntry} CompressedBatchEntry\n         */\n        CompressedBatchEntry.fromObject = function fromObject(object) {\n            if (object instanceof $root.ics23.CompressedBatchEntry)\n                return object;\n            var message = new $root.ics23.CompressedBatchEntry();\n            if (object.exist != null) {\n                if (typeof object.exist !== \"object\")\n                    throw TypeError(\".ics23.CompressedBatchEntry.exist: object expected\");\n                message.exist = $root.ics23.CompressedExistenceProof.fromObject(object.exist);\n            }\n            if (object.nonexist != null) {\n                if (typeof object.nonexist !== \"object\")\n                    throw TypeError(\".ics23.CompressedBatchEntry.nonexist: object expected\");\n                message.nonexist = $root.ics23.CompressedNonExistenceProof.fromObject(object.nonexist);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a CompressedBatchEntry message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ics23.CompressedBatchEntry\n         * @static\n         * @param {ics23.CompressedBatchEntry} message CompressedBatchEntry\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        CompressedBatchEntry.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (message.exist != null && message.hasOwnProperty(\"exist\")) {\n                object.exist = $root.ics23.CompressedExistenceProof.toObject(message.exist, options);\n                if (options.oneofs)\n                    object.proof = \"exist\";\n            }\n            if (message.nonexist != null && message.hasOwnProperty(\"nonexist\")) {\n                object.nonexist = $root.ics23.CompressedNonExistenceProof.toObject(message.nonexist, options);\n                if (options.oneofs)\n                    object.proof = \"nonexist\";\n            }\n            return object;\n        };\n\n        /**\n         * Converts this CompressedBatchEntry to JSON.\n         * @function toJSON\n         * @memberof ics23.CompressedBatchEntry\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        CompressedBatchEntry.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return CompressedBatchEntry;\n    })();\n\n    ics23.CompressedExistenceProof = (function() {\n\n        /**\n         * Properties of a CompressedExistenceProof.\n         * @memberof ics23\n         * @interface ICompressedExistenceProof\n         * @property {Uint8Array|null} [key] CompressedExistenceProof key\n         * @property {Uint8Array|null} [value] CompressedExistenceProof value\n         * @property {ics23.ILeafOp|null} [leaf] CompressedExistenceProof leaf\n         * @property {Array.<number>|null} [path] CompressedExistenceProof path\n         */\n\n        /**\n         * Constructs a new CompressedExistenceProof.\n         * @memberof ics23\n         * @classdesc Represents a CompressedExistenceProof.\n         * @implements ICompressedExistenceProof\n         * @constructor\n         * @param {ics23.ICompressedExistenceProof=} [properties] Properties to set\n         */\n        function CompressedExistenceProof(properties) {\n            this.path = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * CompressedExistenceProof key.\n         * @member {Uint8Array} key\n         * @memberof ics23.CompressedExistenceProof\n         * @instance\n         */\n        CompressedExistenceProof.prototype.key = $util.newBuffer([]);\n\n        /**\n         * CompressedExistenceProof value.\n         * @member {Uint8Array} value\n         * @memberof ics23.CompressedExistenceProof\n         * @instance\n         */\n        CompressedExistenceProof.prototype.value = $util.newBuffer([]);\n\n        /**\n         * CompressedExistenceProof leaf.\n         * @member {ics23.ILeafOp|null|undefined} leaf\n         * @memberof ics23.CompressedExistenceProof\n         * @instance\n         */\n        CompressedExistenceProof.prototype.leaf = null;\n\n        /**\n         * CompressedExistenceProof path.\n         * @member {Array.<number>} path\n         * @memberof ics23.CompressedExistenceProof\n         * @instance\n         */\n        CompressedExistenceProof.prototype.path = $util.emptyArray;\n\n        /**\n         * Creates a new CompressedExistenceProof instance using the specified properties.\n         * @function create\n         * @memberof ics23.CompressedExistenceProof\n         * @static\n         * @param {ics23.ICompressedExistenceProof=} [properties] Properties to set\n         * @returns {ics23.CompressedExistenceProof} CompressedExistenceProof instance\n         */\n        CompressedExistenceProof.create = function create(properties) {\n            return new CompressedExistenceProof(properties);\n        };\n\n        /**\n         * Encodes the specified CompressedExistenceProof message. Does not implicitly {@link ics23.CompressedExistenceProof.verify|verify} messages.\n         * @function encode\n         * @memberof ics23.CompressedExistenceProof\n         * @static\n         * @param {ics23.ICompressedExistenceProof} message CompressedExistenceProof message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CompressedExistenceProof.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);\n            if (message.leaf != null && message.hasOwnProperty(\"leaf\"))\n                $root.ics23.LeafOp.encode(message.leaf, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.path != null && message.path.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.path.length; ++i)\n                    writer.int32(message.path[i]);\n                writer.ldelim();\n            }\n            return writer;\n        };\n\n        /**\n         * Encodes the specified CompressedExistenceProof message, length delimited. Does not implicitly {@link ics23.CompressedExistenceProof.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ics23.CompressedExistenceProof\n         * @static\n         * @param {ics23.ICompressedExistenceProof} message CompressedExistenceProof message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CompressedExistenceProof.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a CompressedExistenceProof message from the specified reader or buffer.\n         * @function decode\n         * @memberof ics23.CompressedExistenceProof\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ics23.CompressedExistenceProof} CompressedExistenceProof\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CompressedExistenceProof.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ics23.CompressedExistenceProof();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = $root.ics23.LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.path && message.path.length))\n                        message.path = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.path.push(reader.int32());\n                    } else\n                        message.path.push(reader.int32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a CompressedExistenceProof message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ics23.CompressedExistenceProof\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ics23.CompressedExistenceProof} CompressedExistenceProof\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CompressedExistenceProof.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a CompressedExistenceProof message.\n         * @function verify\n         * @memberof ics23.CompressedExistenceProof\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        CompressedExistenceProof.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!(message.key && typeof message.key.length === \"number\" || $util.isString(message.key)))\n                    return \"key: buffer expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!(message.value && typeof message.value.length === \"number\" || $util.isString(message.value)))\n                    return \"value: buffer expected\";\n            if (message.leaf != null && message.hasOwnProperty(\"leaf\")) {\n                var error = $root.ics23.LeafOp.verify(message.leaf);\n                if (error)\n                    return \"leaf.\" + error;\n            }\n            if (message.path != null && message.hasOwnProperty(\"path\")) {\n                if (!Array.isArray(message.path))\n                    return \"path: array expected\";\n                for (var i = 0; i < message.path.length; ++i)\n                    if (!$util.isInteger(message.path[i]))\n                        return \"path: integer[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a CompressedExistenceProof message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ics23.CompressedExistenceProof\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ics23.CompressedExistenceProof} CompressedExistenceProof\n         */\n        CompressedExistenceProof.fromObject = function fromObject(object) {\n            if (object instanceof $root.ics23.CompressedExistenceProof)\n                return object;\n            var message = new $root.ics23.CompressedExistenceProof();\n            if (object.key != null)\n                if (typeof object.key === \"string\")\n                    $util.base64.decode(object.key, message.key = $util.newBuffer($util.base64.length(object.key)), 0);\n                else if (object.key.length)\n                    message.key = object.key;\n            if (object.value != null)\n                if (typeof object.value === \"string\")\n                    $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);\n                else if (object.value.length)\n                    message.value = object.value;\n            if (object.leaf != null) {\n                if (typeof object.leaf !== \"object\")\n                    throw TypeError(\".ics23.CompressedExistenceProof.leaf: object expected\");\n                message.leaf = $root.ics23.LeafOp.fromObject(object.leaf);\n            }\n            if (object.path) {\n                if (!Array.isArray(object.path))\n                    throw TypeError(\".ics23.CompressedExistenceProof.path: array expected\");\n                message.path = [];\n                for (var i = 0; i < object.path.length; ++i)\n                    message.path[i] = object.path[i] | 0;\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a CompressedExistenceProof message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ics23.CompressedExistenceProof\n         * @static\n         * @param {ics23.CompressedExistenceProof} message CompressedExistenceProof\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        CompressedExistenceProof.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.path = [];\n            if (options.defaults) {\n                if (options.bytes === String)\n                    object.key = \"\";\n                else {\n                    object.key = [];\n                    if (options.bytes !== Array)\n                        object.key = $util.newBuffer(object.key);\n                }\n                if (options.bytes === String)\n                    object.value = \"\";\n                else {\n                    object.value = [];\n                    if (options.bytes !== Array)\n                        object.value = $util.newBuffer(object.value);\n                }\n                object.leaf = null;\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = options.bytes === String ? $util.base64.encode(message.key, 0, message.key.length) : options.bytes === Array ? Array.prototype.slice.call(message.key) : message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;\n            if (message.leaf != null && message.hasOwnProperty(\"leaf\"))\n                object.leaf = $root.ics23.LeafOp.toObject(message.leaf, options);\n            if (message.path && message.path.length) {\n                object.path = [];\n                for (var j = 0; j < message.path.length; ++j)\n                    object.path[j] = message.path[j];\n            }\n            return object;\n        };\n\n        /**\n         * Converts this CompressedExistenceProof to JSON.\n         * @function toJSON\n         * @memberof ics23.CompressedExistenceProof\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        CompressedExistenceProof.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return CompressedExistenceProof;\n    })();\n\n    ics23.CompressedNonExistenceProof = (function() {\n\n        /**\n         * Properties of a CompressedNonExistenceProof.\n         * @memberof ics23\n         * @interface ICompressedNonExistenceProof\n         * @property {Uint8Array|null} [key] CompressedNonExistenceProof key\n         * @property {ics23.ICompressedExistenceProof|null} [left] CompressedNonExistenceProof left\n         * @property {ics23.ICompressedExistenceProof|null} [right] CompressedNonExistenceProof right\n         */\n\n        /**\n         * Constructs a new CompressedNonExistenceProof.\n         * @memberof ics23\n         * @classdesc Represents a CompressedNonExistenceProof.\n         * @implements ICompressedNonExistenceProof\n         * @constructor\n         * @param {ics23.ICompressedNonExistenceProof=} [properties] Properties to set\n         */\n        function CompressedNonExistenceProof(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * CompressedNonExistenceProof key.\n         * @member {Uint8Array} key\n         * @memberof ics23.CompressedNonExistenceProof\n         * @instance\n         */\n        CompressedNonExistenceProof.prototype.key = $util.newBuffer([]);\n\n        /**\n         * CompressedNonExistenceProof left.\n         * @member {ics23.ICompressedExistenceProof|null|undefined} left\n         * @memberof ics23.CompressedNonExistenceProof\n         * @instance\n         */\n        CompressedNonExistenceProof.prototype.left = null;\n\n        /**\n         * CompressedNonExistenceProof right.\n         * @member {ics23.ICompressedExistenceProof|null|undefined} right\n         * @memberof ics23.CompressedNonExistenceProof\n         * @instance\n         */\n        CompressedNonExistenceProof.prototype.right = null;\n\n        /**\n         * Creates a new CompressedNonExistenceProof instance using the specified properties.\n         * @function create\n         * @memberof ics23.CompressedNonExistenceProof\n         * @static\n         * @param {ics23.ICompressedNonExistenceProof=} [properties] Properties to set\n         * @returns {ics23.CompressedNonExistenceProof} CompressedNonExistenceProof instance\n         */\n        CompressedNonExistenceProof.create = function create(properties) {\n            return new CompressedNonExistenceProof(properties);\n        };\n\n        /**\n         * Encodes the specified CompressedNonExistenceProof message. Does not implicitly {@link ics23.CompressedNonExistenceProof.verify|verify} messages.\n         * @function encode\n         * @memberof ics23.CompressedNonExistenceProof\n         * @static\n         * @param {ics23.ICompressedNonExistenceProof} message CompressedNonExistenceProof message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CompressedNonExistenceProof.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.key);\n            if (message.left != null && message.hasOwnProperty(\"left\"))\n                $root.ics23.CompressedExistenceProof.encode(message.left, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.right != null && message.hasOwnProperty(\"right\"))\n                $root.ics23.CompressedExistenceProof.encode(message.right, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified CompressedNonExistenceProof message, length delimited. Does not implicitly {@link ics23.CompressedNonExistenceProof.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ics23.CompressedNonExistenceProof\n         * @static\n         * @param {ics23.ICompressedNonExistenceProof} message CompressedNonExistenceProof message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CompressedNonExistenceProof.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a CompressedNonExistenceProof message from the specified reader or buffer.\n         * @function decode\n         * @memberof ics23.CompressedNonExistenceProof\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ics23.CompressedNonExistenceProof} CompressedNonExistenceProof\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CompressedNonExistenceProof.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ics23.CompressedNonExistenceProof();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = $root.ics23.CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = $root.ics23.CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a CompressedNonExistenceProof message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ics23.CompressedNonExistenceProof\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ics23.CompressedNonExistenceProof} CompressedNonExistenceProof\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CompressedNonExistenceProof.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a CompressedNonExistenceProof message.\n         * @function verify\n         * @memberof ics23.CompressedNonExistenceProof\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        CompressedNonExistenceProof.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!(message.key && typeof message.key.length === \"number\" || $util.isString(message.key)))\n                    return \"key: buffer expected\";\n            if (message.left != null && message.hasOwnProperty(\"left\")) {\n                var error = $root.ics23.CompressedExistenceProof.verify(message.left);\n                if (error)\n                    return \"left.\" + error;\n            }\n            if (message.right != null && message.hasOwnProperty(\"right\")) {\n                var error = $root.ics23.CompressedExistenceProof.verify(message.right);\n                if (error)\n                    return \"right.\" + error;\n            }\n            return null;\n        };\n\n        /**\n         * Creates a CompressedNonExistenceProof message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ics23.CompressedNonExistenceProof\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ics23.CompressedNonExistenceProof} CompressedNonExistenceProof\n         */\n        CompressedNonExistenceProof.fromObject = function fromObject(object) {\n            if (object instanceof $root.ics23.CompressedNonExistenceProof)\n                return object;\n            var message = new $root.ics23.CompressedNonExistenceProof();\n            if (object.key != null)\n                if (typeof object.key === \"string\")\n                    $util.base64.decode(object.key, message.key = $util.newBuffer($util.base64.length(object.key)), 0);\n                else if (object.key.length)\n                    message.key = object.key;\n            if (object.left != null) {\n                if (typeof object.left !== \"object\")\n                    throw TypeError(\".ics23.CompressedNonExistenceProof.left: object expected\");\n                message.left = $root.ics23.CompressedExistenceProof.fromObject(object.left);\n            }\n            if (object.right != null) {\n                if (typeof object.right !== \"object\")\n                    throw TypeError(\".ics23.CompressedNonExistenceProof.right: object expected\");\n                message.right = $root.ics23.CompressedExistenceProof.fromObject(object.right);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a CompressedNonExistenceProof message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ics23.CompressedNonExistenceProof\n         * @static\n         * @param {ics23.CompressedNonExistenceProof} message CompressedNonExistenceProof\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        CompressedNonExistenceProof.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                if (options.bytes === String)\n                    object.key = \"\";\n                else {\n                    object.key = [];\n                    if (options.bytes !== Array)\n                        object.key = $util.newBuffer(object.key);\n                }\n                object.left = null;\n                object.right = null;\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = options.bytes === String ? $util.base64.encode(message.key, 0, message.key.length) : options.bytes === Array ? Array.prototype.slice.call(message.key) : message.key;\n            if (message.left != null && message.hasOwnProperty(\"left\"))\n                object.left = $root.ics23.CompressedExistenceProof.toObject(message.left, options);\n            if (message.right != null && message.hasOwnProperty(\"right\"))\n                object.right = $root.ics23.CompressedExistenceProof.toObject(message.right, options);\n            return object;\n        };\n\n        /**\n         * Converts this CompressedNonExistenceProof to JSON.\n         * @function toJSON\n         * @memberof ics23.CompressedNonExistenceProof\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        CompressedNonExistenceProof.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return CompressedNonExistenceProof;\n    })();\n\n    return ics23;\n})();\n\nmodule.exports = $root;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.batchVerifyNonMembership = exports.batchVerifyMembership = exports.verifyNonMembership = exports.verifyMembership = void 0;\nconst compress_1 = require(\"./compress\");\nconst proofs_1 = require(\"./proofs\");\nconst specs_1 = require(\"./specs\");\n/*\nThis implements the client side functions as specified in\nhttps://github.com/cosmos/ics/tree/master/spec/ics-023-vector-commitments\n\nIn particular:\n\n  // Assumes ExistenceProof\n  type verifyMembership = (root: CommitmentRoot, proof: CommitmentProof, key: Key, value: Value) => boolean\n\n  // Assumes NonExistenceProof\n  type verifyNonMembership = (root: CommitmentRoot, proof: CommitmentProof, key: Key) => boolean\n\n  // Assumes BatchProof - required ExistenceProofs may be a subset of all items proven\n  type batchVerifyMembership = (root: CommitmentRoot, proof: CommitmentProof, items: Map<Key, Value>) => boolean\n\n  // Assumes BatchProof - required NonExistenceProofs may be a subset of all items proven\n  type batchVerifyNonMembership = (root: CommitmentRoot, proof: CommitmentProof, keys: Set<Key>) => boolean\n\nWe make an adjustment to accept a Spec to ensure the provided proof is in the format of the expected merkle store.\nThis can avoid an range of attacks on fake preimages, as we need to be careful on how to map key, value -> leaf\nand determine neighbors\n*/\n/**\n * verifyMembership ensures proof is (contains) a valid existence proof for the given\n */\nfunction verifyMembership(proof, spec, root, key, value) {\n    const norm = (0, compress_1.decompress)(proof);\n    const exist = getExistForKey(norm, key);\n    if (!exist) {\n        return false;\n    }\n    try {\n        (0, proofs_1.verifyExistence)(exist, spec, root, key, value);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexports.verifyMembership = verifyMembership;\n/**\n * verifyNonMembership ensures proof is (contains) a valid non-existence proof for the given key\n */\nfunction verifyNonMembership(proof, spec, root, key) {\n    const norm = (0, compress_1.decompress)(proof);\n    const nonexist = getNonExistForKey(norm, key);\n    if (!nonexist) {\n        return false;\n    }\n    try {\n        (0, proofs_1.verifyNonExistence)(nonexist, spec, root, key);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexports.verifyNonMembership = verifyNonMembership;\n/**\n * batchVerifyMembership ensures proof is (contains) a valid existence proof for the given\n */\nfunction batchVerifyMembership(proof, spec, root, items) {\n    const norm = (0, compress_1.decompress)(proof);\n    for (const [key, value] of items.entries()) {\n        if (!verifyMembership(norm, spec, root, key, value)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.batchVerifyMembership = batchVerifyMembership;\n/**\n * batchVerifyNonMembership ensures proof is (contains) a valid existence proof for the given\n */\nfunction batchVerifyNonMembership(proof, spec, root, keys) {\n    const norm = (0, compress_1.decompress)(proof);\n    for (const key of keys) {\n        if (!verifyNonMembership(norm, spec, root, key)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.batchVerifyNonMembership = batchVerifyNonMembership;\nfunction getExistForKey(proof, key) {\n    const match = (p) => !!p && (0, specs_1.bytesEqual)(key, p.key);\n    if (match(proof.exist)) {\n        return proof.exist;\n    }\n    else if (proof.batch) {\n        return proof.batch.entries.map((x) => x.exist || null).find(match);\n    }\n    return undefined;\n}\nfunction getNonExistForKey(proof, key) {\n    const match = (p) => {\n        return (!!p &&\n            (!p.left || (0, specs_1.bytesBefore)(p.left.key, key)) &&\n            (!p.right || (0, specs_1.bytesBefore)(key, p.right.key)));\n    };\n    if (match(proof.nonexist)) {\n        return proof.nonexist;\n    }\n    else if (proof.batch) {\n        return proof.batch.entries.map((x) => x.nonexist || null).find(match);\n    }\n    return undefined;\n}\n//# sourceMappingURL=ics23.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyNonExistence = exports.verifyExistence = exports.tendermintSpec = exports.iavlSpec = exports.calculateExistenceRoot = exports.verifyNonMembership = exports.verifyMembership = exports.ics23 = void 0;\nvar codecimpl_1 = require(\"./generated/codecimpl\");\nObject.defineProperty(exports, \"ics23\", { enumerable: true, get: function () { return codecimpl_1.ics23; } });\nvar ics23_1 = require(\"./ics23\");\nObject.defineProperty(exports, \"verifyMembership\", { enumerable: true, get: function () { return ics23_1.verifyMembership; } });\nObject.defineProperty(exports, \"verifyNonMembership\", { enumerable: true, get: function () { return ics23_1.verifyNonMembership; } });\nvar proofs_1 = require(\"./proofs\");\nObject.defineProperty(exports, \"calculateExistenceRoot\", { enumerable: true, get: function () { return proofs_1.calculateExistenceRoot; } });\nObject.defineProperty(exports, \"iavlSpec\", { enumerable: true, get: function () { return proofs_1.iavlSpec; } });\nObject.defineProperty(exports, \"tendermintSpec\", { enumerable: true, get: function () { return proofs_1.tendermintSpec; } });\nObject.defineProperty(exports, \"verifyExistence\", { enumerable: true, get: function () { return proofs_1.verifyExistence; } });\nObject.defineProperty(exports, \"verifyNonExistence\", { enumerable: true, get: function () { return proofs_1.verifyNonExistence; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.doHash = exports.applyInner = exports.applyLeaf = void 0;\nconst ripemd160_1 = require(\"@noble/hashes/ripemd160\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst codecimpl_1 = require(\"./generated/codecimpl\");\nfunction applyLeaf(leaf, key, value) {\n    if (key.length === 0) {\n        throw new Error(\"Missing key\");\n    }\n    if (value.length === 0) {\n        throw new Error(\"Missing value\");\n    }\n    const pkey = prepareLeafData(ensureHash(leaf.prehashKey), ensureLength(leaf.length), key);\n    const pvalue = prepareLeafData(ensureHash(leaf.prehashValue), ensureLength(leaf.length), value);\n    const data = new Uint8Array([\n        ...ensureBytes(leaf.prefix),\n        ...pkey,\n        ...pvalue,\n    ]);\n    return doHash(ensureHash(leaf.hash), data);\n}\nexports.applyLeaf = applyLeaf;\nfunction applyInner(inner, child) {\n    if (child.length === 0) {\n        throw new Error(\"Inner op needs child value\");\n    }\n    const preimage = new Uint8Array([\n        ...ensureBytes(inner.prefix),\n        ...child,\n        ...ensureBytes(inner.suffix),\n    ]);\n    return doHash(ensureHash(inner.hash), preimage);\n}\nexports.applyInner = applyInner;\nfunction ensure(maybe, value) {\n    return maybe === undefined || maybe === null ? value : maybe;\n}\nconst ensureHash = (h) => ensure(h, codecimpl_1.ics23.HashOp.NO_HASH);\nconst ensureLength = (l) => ensure(l, codecimpl_1.ics23.LengthOp.NO_PREFIX);\nconst ensureBytes = (b) => ensure(b, new Uint8Array([]));\nfunction prepareLeafData(hashOp, lengthOp, data) {\n    const h = doHashOrNoop(hashOp, data);\n    return doLengthOp(lengthOp, h);\n}\n// doHashOrNoop will return the preimage untouched if hashOp == NONE,\n// otherwise, perform doHash\nfunction doHashOrNoop(hashOp, preimage) {\n    if (hashOp === codecimpl_1.ics23.HashOp.NO_HASH) {\n        return preimage;\n    }\n    return doHash(hashOp, preimage);\n}\n// doHash will preform the specified hash on the preimage.\n// if hashOp == NONE, it will return an error (use doHashOrNoop if you want different behavior)\nfunction doHash(hashOp, preimage) {\n    switch (hashOp) {\n        case codecimpl_1.ics23.HashOp.SHA256:\n            return (0, sha256_1.sha256)(preimage);\n        case codecimpl_1.ics23.HashOp.SHA512:\n            return (0, sha512_1.sha512)(preimage);\n        case codecimpl_1.ics23.HashOp.RIPEMD160:\n            return (0, ripemd160_1.ripemd160)(preimage);\n        case codecimpl_1.ics23.HashOp.BITCOIN:\n            return (0, ripemd160_1.ripemd160)((0, sha256_1.sha256)(preimage));\n        case codecimpl_1.ics23.HashOp.SHA512_256:\n            return (0, sha512_1.sha512_256)(preimage);\n    }\n    throw new Error(`Unsupported hashop: ${hashOp}`);\n}\nexports.doHash = doHash;\n// doLengthOp will calculate the proper prefix and return it prepended\n//   doLengthOp(op, data) -> length(data) || data\nfunction doLengthOp(lengthOp, data) {\n    switch (lengthOp) {\n        case codecimpl_1.ics23.LengthOp.NO_PREFIX:\n            return data;\n        case codecimpl_1.ics23.LengthOp.VAR_PROTO:\n            return new Uint8Array([...encodeVarintProto(data.length), ...data]);\n        case codecimpl_1.ics23.LengthOp.REQUIRE_32_BYTES:\n            if (data.length !== 32) {\n                throw new Error(`Length is ${data.length}, not 32 bytes`);\n            }\n            return data;\n        case codecimpl_1.ics23.LengthOp.REQUIRE_64_BYTES:\n            if (data.length !== 64) {\n                throw new Error(`Length is ${data.length}, not 64 bytes`);\n            }\n            return data;\n        case codecimpl_1.ics23.LengthOp.FIXED32_LITTLE:\n            return new Uint8Array([...encodeFixed32Le(data.length), ...data]);\n        // TODO\n        // case LengthOp_VAR_RLP:\n        // case LengthOp_FIXED32_BIG:\n        // case LengthOp_FIXED64_BIG:\n        // case LengthOp_FIXED64_LITTLE:\n    }\n    throw new Error(`Unsupported lengthop: ${lengthOp}`);\n}\nfunction encodeVarintProto(n) {\n    let enc = [];\n    let l = n;\n    while (l >= 128) {\n        const b = (l % 128) + 128;\n        enc = [...enc, b];\n        l = l / 128;\n    }\n    enc = [...enc, l];\n    return new Uint8Array(enc);\n}\nfunction encodeFixed32Le(n) {\n    const enc = new Uint8Array(4);\n    let l = n;\n    for (let i = enc.length; i > 0; i--) {\n        enc[Math.abs(i - enc.length)] = l % 256;\n        l = Math.floor(l / 256);\n    }\n    return enc;\n}\n//# sourceMappingURL=ops.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ensureLeftNeighbor = exports.ensureSpec = exports.calculateExistenceRoot = exports.verifyNonExistence = exports.verifyExistence = exports.smtSpec = exports.tendermintSpec = exports.iavlSpec = void 0;\nconst codecimpl_1 = require(\"./generated/codecimpl\");\nconst ops_1 = require(\"./ops\");\nconst specs_1 = require(\"./specs\");\nexports.iavlSpec = {\n    leafSpec: {\n        prefix: Uint8Array.from([0]),\n        hash: codecimpl_1.ics23.HashOp.SHA256,\n        prehashValue: codecimpl_1.ics23.HashOp.SHA256,\n        prehashKey: codecimpl_1.ics23.HashOp.NO_HASH,\n        length: codecimpl_1.ics23.LengthOp.VAR_PROTO,\n    },\n    innerSpec: {\n        childOrder: [0, 1],\n        minPrefixLength: 4,\n        maxPrefixLength: 12,\n        childSize: 33,\n        hash: codecimpl_1.ics23.HashOp.SHA256,\n    },\n};\nexports.tendermintSpec = {\n    leafSpec: {\n        prefix: Uint8Array.from([0]),\n        hash: codecimpl_1.ics23.HashOp.SHA256,\n        prehashValue: codecimpl_1.ics23.HashOp.SHA256,\n        prehashKey: codecimpl_1.ics23.HashOp.NO_HASH,\n        length: codecimpl_1.ics23.LengthOp.VAR_PROTO,\n    },\n    innerSpec: {\n        childOrder: [0, 1],\n        minPrefixLength: 1,\n        maxPrefixLength: 1,\n        childSize: 32,\n        hash: codecimpl_1.ics23.HashOp.SHA256,\n    },\n};\nexports.smtSpec = {\n    leafSpec: {\n        hash: codecimpl_1.ics23.HashOp.SHA256,\n        prehashKey: codecimpl_1.ics23.HashOp.NO_HASH,\n        prehashValue: codecimpl_1.ics23.HashOp.SHA256,\n        length: codecimpl_1.ics23.LengthOp.NO_PREFIX,\n        prefix: Uint8Array.from([0]),\n    },\n    innerSpec: {\n        childOrder: [0, 1],\n        childSize: 32,\n        minPrefixLength: 1,\n        maxPrefixLength: 1,\n        emptyChild: new Uint8Array(32),\n        hash: codecimpl_1.ics23.HashOp.SHA256,\n    },\n    maxDepth: 256,\n};\n// verifyExistence will throw an error if the proof doesn't link key, value -> root\n// or if it doesn't fulfill the spec\nfunction verifyExistence(proof, spec, root, key, value) {\n    ensureSpec(proof, spec);\n    const calc = calculateExistenceRoot(proof);\n    (0, specs_1.ensureBytesEqual)(calc, root);\n    (0, specs_1.ensureBytesEqual)(key, proof.key);\n    (0, specs_1.ensureBytesEqual)(value, proof.value);\n}\nexports.verifyExistence = verifyExistence;\n// Verify does all checks to ensure the proof has valid non-existence proofs,\n// and they ensure the given key is not in the CommitmentState,\n// throwing an error if there is an issue\nfunction verifyNonExistence(proof, spec, root, key) {\n    let leftKey;\n    let rightKey;\n    if (proof.left) {\n        verifyExistence(proof.left, spec, root, proof.left.key, proof.left.value);\n        leftKey = proof.left.key;\n    }\n    if (proof.right) {\n        verifyExistence(proof.right, spec, root, proof.right.key, proof.right.value);\n        rightKey = proof.right.key;\n    }\n    if (!leftKey && !rightKey) {\n        throw new Error(\"neither left nor right proof defined\");\n    }\n    if (leftKey) {\n        (0, specs_1.ensureBytesBefore)(leftKey, key);\n    }\n    if (rightKey) {\n        (0, specs_1.ensureBytesBefore)(key, rightKey);\n    }\n    if (!spec.innerSpec) {\n        throw new Error(\"no inner spec\");\n    }\n    if (!leftKey) {\n        ensureLeftMost(spec.innerSpec, proof.right.path);\n    }\n    else if (!rightKey) {\n        ensureRightMost(spec.innerSpec, proof.left.path);\n    }\n    else {\n        ensureLeftNeighbor(spec.innerSpec, proof.left.path, proof.right.path);\n    }\n    return;\n}\nexports.verifyNonExistence = verifyNonExistence;\n// Calculate determines the root hash that matches the given proof.\n// You must validate the result is what you have in a header.\n// Returns error if the calculations cannot be performed.\nfunction calculateExistenceRoot(proof) {\n    if (!proof.key || !proof.value) {\n        throw new Error(\"Existence proof needs key and value set\");\n    }\n    if (!proof.leaf) {\n        throw new Error(\"Existence proof must start with a leaf operation\");\n    }\n    const path = proof.path || [];\n    let res = (0, ops_1.applyLeaf)(proof.leaf, proof.key, proof.value);\n    for (const inner of path) {\n        res = (0, ops_1.applyInner)(inner, res);\n    }\n    return res;\n}\nexports.calculateExistenceRoot = calculateExistenceRoot;\n// ensureSpec throws an Error if proof doesn't fulfill spec\nfunction ensureSpec(proof, spec) {\n    if (!proof.leaf) {\n        throw new Error(\"Existence proof must start with a leaf operation\");\n    }\n    if (!spec.leafSpec) {\n        throw new Error(\"Spec must include leafSpec\");\n    }\n    if (!spec.innerSpec) {\n        throw new Error(\"Spec must include innerSpec\");\n    }\n    (0, specs_1.ensureLeaf)(proof.leaf, spec.leafSpec);\n    const path = proof.path || [];\n    if (spec.minDepth && path.length < spec.minDepth) {\n        throw new Error(`Too few inner nodes ${path.length}`);\n    }\n    if (spec.maxDepth && path.length > spec.maxDepth) {\n        throw new Error(`Too many inner nodes ${path.length}`);\n    }\n    for (const inner of path) {\n        (0, specs_1.ensureInner)(inner, spec.leafSpec.prefix, spec.innerSpec);\n    }\n}\nexports.ensureSpec = ensureSpec;\nfunction ensureLeftMost(spec, path) {\n    const { minPrefix, maxPrefix, suffix } = getPadding(spec, 0);\n    // ensure every step has a prefix and suffix defined to be leftmost\n    for (const step of path) {\n        if (!hasPadding(step, minPrefix, maxPrefix, suffix)) {\n            throw new Error(\"Step not leftmost\");\n        }\n    }\n}\nfunction ensureRightMost(spec, path) {\n    const len = spec.childOrder.length - 1;\n    const { minPrefix, maxPrefix, suffix } = getPadding(spec, len);\n    // ensure every step has a prefix and suffix defined to be leftmost\n    for (const step of path) {\n        if (!hasPadding(step, minPrefix, maxPrefix, suffix)) {\n            throw new Error(\"Step not leftmost\");\n        }\n    }\n}\nfunction ensureLeftNeighbor(spec, left, right) {\n    const mutleft = [...left];\n    const mutright = [...right];\n    let topleft = mutleft.pop();\n    let topright = mutright.pop();\n    while ((0, specs_1.bytesEqual)(topleft.prefix, topright.prefix) &&\n        (0, specs_1.bytesEqual)(topleft.suffix, topright.suffix)) {\n        topleft = mutleft.pop();\n        topright = mutright.pop();\n    }\n    // now topleft and topright are the first divergent nodes\n    // make sure they are left and right of each other\n    if (!isLeftStep(spec, topleft, topright)) {\n        throw new Error(`Not left neightbor at first divergent step`);\n    }\n    // make sure the paths are left and right most possibilities respectively\n    ensureRightMost(spec, mutleft);\n    ensureLeftMost(spec, mutright);\n}\nexports.ensureLeftNeighbor = ensureLeftNeighbor;\n// isLeftStep assumes left and right have common parents\n// checks if left is exactly one slot to the left of right\nfunction isLeftStep(spec, left, right) {\n    const leftidx = orderFromPadding(spec, left);\n    const rightidx = orderFromPadding(spec, right);\n    return rightidx === leftidx + 1;\n}\nfunction orderFromPadding(spec, inner) {\n    for (let branch = 0; branch < spec.childOrder.length; branch++) {\n        const { minPrefix, maxPrefix, suffix } = getPadding(spec, branch);\n        if (hasPadding(inner, minPrefix, maxPrefix, suffix)) {\n            return branch;\n        }\n    }\n    throw new Error(`Cannot find any valid spacing for this node`);\n}\nfunction hasPadding(op, minPrefix, maxPrefix, suffix) {\n    if ((op.prefix || []).length < minPrefix) {\n        return false;\n    }\n    if ((op.prefix || []).length > maxPrefix) {\n        return false;\n    }\n    return (op.suffix || []).length === suffix;\n}\nfunction getPadding(spec, branch) {\n    const idx = getPosition(spec.childOrder, branch);\n    // count how many children are in the prefix\n    const prefix = idx * spec.childSize;\n    const minPrefix = prefix + spec.minPrefixLength;\n    const maxPrefix = prefix + spec.maxPrefixLength;\n    // count how many children are in the suffix\n    const suffix = (spec.childOrder.length - 1 - idx) * spec.childSize;\n    return { minPrefix, maxPrefix, suffix };\n}\nfunction getPosition(order, branch) {\n    if (branch < 0 || branch >= order.length) {\n        throw new Error(`Invalid branch: ${branch}`);\n    }\n    return order.findIndex((val) => val === branch);\n}\n//# sourceMappingURL=proofs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytesBefore = exports.ensureBytesBefore = exports.bytesEqual = exports.ensureBytesEqual = exports.ensureInner = exports.ensureLeaf = void 0;\nfunction ensureLeaf(leaf, spec) {\n    if (leaf.hash !== spec.hash) {\n        throw new Error(`Unexpected hashOp: ${leaf.hash}`);\n    }\n    if (leaf.prehashKey !== spec.prehashKey) {\n        throw new Error(`Unexpected prehashKey: ${leaf.prehashKey}`);\n    }\n    if (leaf.prehashValue !== spec.prehashValue) {\n        throw new Error(`Unexpected prehashValue: ${leaf.prehashValue}`);\n    }\n    if (leaf.length !== spec.length) {\n        throw new Error(`Unexpected length op: ${leaf.length}`);\n    }\n    ensurePrefix(leaf.prefix, spec.prefix);\n}\nexports.ensureLeaf = ensureLeaf;\nfunction ensureInner(inner, prefix, spec) {\n    if (inner.hash !== spec.hash) {\n        throw new Error(`Unexpected hashOp: ${inner.hash}`);\n    }\n    if (!inner.prefix) {\n        throw new Error(\"No prefix set for inner node\");\n    }\n    if (hasPrefix(inner.prefix, prefix)) {\n        throw new Error(`Inner node has leaf prefix`);\n    }\n    if (inner.prefix.length < (spec.minPrefixLength || 0)) {\n        throw new Error(`Prefix too short: ${inner.prefix.length} bytes`);\n    }\n    const maxLeftChildBytes = (spec.childOrder.length - 1) * spec.childSize;\n    if (inner.prefix.length > (spec.maxPrefixLength || 0) + maxLeftChildBytes) {\n        throw new Error(`Prefix too long: ${inner.prefix.length} bytes`);\n    }\n}\nexports.ensureInner = ensureInner;\nfunction ensurePrefix(check, prefix) {\n    // no prefix supplied, means everything passes\n    if (!prefix || prefix.length === 0) {\n        return;\n    }\n    if (!check) {\n        throw new Error(`Target bytes missing`);\n    }\n    ensureBytesEqual(prefix, check.slice(0, prefix.length));\n}\n// ensureBytesEqual throws an error if the arrays are different\nfunction ensureBytesEqual(a, b) {\n    if (a.length !== b.length) {\n        throw new Error(`Different lengths ${a.length} vs ${b.length}`);\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            throw new Error(`Arrays differ at index ${i}: ${a[i]} vs ${b[i]}`);\n        }\n    }\n}\nexports.ensureBytesEqual = ensureBytesEqual;\nfunction bytesEqual(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.bytesEqual = bytesEqual;\nfunction hasPrefix(check, prefix) {\n    // no prefix supplied, means everything passes\n    if (!prefix || prefix.length === 0) {\n        return false;\n    }\n    if (!check) {\n        return false;\n    }\n    if (check.length <= prefix.length) {\n        return false;\n    }\n    for (let i = 0; i < prefix.length; i++) {\n        if (check[i] !== prefix[i]) {\n            return false;\n        }\n    }\n    throw true;\n}\n// ensureBytesBefore throws an error if first >= last\n// we compare byte by byte\nfunction ensureBytesBefore(first, last) {\n    if (!bytesBefore(first, last)) {\n        throw new Error(\"first is after last\");\n    }\n}\nexports.ensureBytesBefore = ensureBytesBefore;\nfunction bytesBefore(first, last) {\n    const min = first.length < last.length ? first.length : last.length;\n    for (let i = 0; i < min; i++) {\n        if (first[i] < last[i]) {\n            return true;\n        }\n        if (first[i] > last[i]) {\n            return false;\n        }\n        // if they are equal, continue to next step\n    }\n    // if they match, ensure that last is longer than first..\n    return first.length < last.length;\n}\nexports.bytesBefore = bytesBefore;\n//# sourceMappingURL=specs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = exports.isBytes = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\nexports.bool = bool;\n// copied from utils\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexports.isBytes = isBytes;\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = { number, bool, bytes, hash, exists, output };\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HashMD = exports.Maj = exports.Chi = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\nexports.Chi = Chi;\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\nexports.Maj = Maj;\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nclass HashMD extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.output)(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.HashMD = HashMD;\n//# sourceMappingURL=_md.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add5L = exports.add5H = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.add = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nexports.shrSH = shrSH;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.shrSL = shrSL;\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexports.rotrSH = rotrSH;\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.rotrSL = rotrSL;\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexports.rotrBH = rotrBH;\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\nexports.rotrBL = rotrBL;\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nexports.rotr32H = rotr32H;\nconst rotr32L = (h, _l) => h;\nexports.rotr32L = rotr32L;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexports.rotlSH = rotlSH;\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\nexports.rotlSL = rotlSL;\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexports.rotlBH = rotlBH;\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\nexports.rotlBL = rotlBL;\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexports.add3L = add3L;\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexports.add3H = add3H;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexports.add4L = add4L;\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexports.add4H = add4H;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexports.add5L = add5L;\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\nexports.add5H = add5H;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ripemd160 = exports.RIPEMD160 = void 0;\nconst _md_js_1 = require(\"./_md.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ new Uint8Array(new Array(16).fill(0).map((_, i) => i));\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = /* @__PURE__ */ [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n    0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n    0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst R_BUF = /* @__PURE__ */ new Uint32Array(16);\nclass RIPEMD160 extends _md_js_1.HashMD {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            R_BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = ((0, utils_js_1.rotl)(al + f(group, bl, cl, dl) + R_BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = (0, utils_js_1.rotl)(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = ((0, utils_js_1.rotl)(ar + f(rGroup, br, cr, dr) + R_BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = (0, utils_js_1.rotl)(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        R_BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\nexports.RIPEMD160 = RIPEMD160;\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexports.ripemd160 = (0, utils_js_1.wrapConstructor)(() => new RIPEMD160());\n//# sourceMappingURL=ripemd160.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha224 = exports.sha256 = void 0;\nconst _md_js_1 = require(\"./_md.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends _md_js_1.HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + (0, _md_js_1.Chi)(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + (0, _md_js_1.Maj)(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\nexports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512_224 = exports.sha512 = exports.SHA512 = void 0;\nconst _md_js_1 = require(\"./_md.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nclass SHA512 extends _md_js_1.HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_224 = (0, utils_js_1.wrapConstructor)(() => new SHA512_224());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapXOFConstructorWithOpts = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.byteSwap32 = exports.byteSwapIfBE = exports.byteSwap = exports.isLE = exports.rotl = exports.rotr = exports.createView = exports.u32 = exports.u8 = exports.isBytes = void 0;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\nconst _assert_js_1 = require(\"./_assert.js\");\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexports.isBytes = isBytes;\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexports.rotl = rotl;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nconst byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\nexports.byteSwap = byteSwap;\n// Conditionally byte swap if on a big-endian platform\nexports.byteSwapIfBE = exports.isLE ? (n) => n : (n) => (0, exports.byteSwap)(n);\n// In place byte swap for Uint32Array\nfunction byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = (0, exports.byteSwap)(arr[i]);\n    }\n}\nexports.byteSwap32 = byteSwap32;\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    (0, _assert_js_1.bytes)(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    (0, _assert_js_1.bytes)(data);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        (0, _assert_js_1.bytes)(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\nconst toStr = {}.toString;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\nexports.randomBytes = randomBytes;\n//# sourceMappingURL=utils.js.map","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\n/* eslint-disable */\n/**\n * This file and any referenced files were automatically generated by @cosmology/telescope@1.0.7\n * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain\n * and run the transpile command or yarn proto command to regenerate this bundle.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BinaryWriter = exports.BinaryReader = exports.WireType = void 0;\n// Copyright (c) 2016, Daniel Wirtz  All rights reserved.\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n// * Redistributions of source code must retain the above copyright\n//   notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above copyright\n//   notice, this list of conditions and the following disclaimer in the\n//   documentation and/or other materials provided with the distribution.\n// * Neither the name of its author, nor the names of its contributors\n//   may be used to endorse or promote products derived from this software\n//   without specific prior written permission.\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n// ---\n// Code generated by the command line utilities is owned by the owner\n// of the input file used when generating it. This code is not\n// standalone and requires a support library to be linked with it. This\n// support library is itself covered by the above license.\nconst utf8_1 = require(\"./utf8\");\nconst varint_1 = require(\"./varint\");\nvar WireType;\n(function (WireType) {\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    WireType[WireType[\"Fixed64\"] = 1] = \"Fixed64\";\n    WireType[WireType[\"Bytes\"] = 2] = \"Bytes\";\n    WireType[WireType[\"Fixed32\"] = 5] = \"Fixed32\";\n})(WireType || (exports.WireType = WireType = {}));\nclass BinaryReader {\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    constructor(buf) {\n        this.buf = buf ? new Uint8Array(buf) : new Uint8Array(0);\n        this.pos = 0;\n        this.type = 0;\n        this.len = this.buf.length;\n    }\n    tag() {\n        const tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType, tag];\n    }\n    skip(length) {\n        if (typeof length === \"number\") {\n            if (this.pos + length > this.len)\n                throw indexOutOfRange(this, length);\n            this.pos += length;\n        }\n        else {\n            do {\n                if (this.pos >= this.len)\n                    throw indexOutOfRange(this);\n            } while (this.buf[this.pos++] & 128);\n        }\n        return this;\n    }\n    skipType(wireType) {\n        switch (wireType) {\n            case WireType.Varint:\n                this.skip();\n                break;\n            case WireType.Fixed64:\n                this.skip(8);\n                break;\n            case WireType.Bytes:\n                this.skip(this.uint32());\n                break;\n            case 3:\n                while ((wireType = this.uint32() & 7) !== 4) {\n                    this.skipType(wireType);\n                }\n                break;\n            case WireType.Fixed32:\n                this.skip(4);\n                break;\n            /* istanbul ignore next */\n            default:\n                throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n        }\n        return this;\n    }\n    uint32() {\n        return varint_1.varint32read.bind(this)();\n    }\n    int32() {\n        return this.uint32() | 0;\n    }\n    sint32() {\n        const num = this.uint32();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    }\n    fixed32() {\n        const val = (0, varint_1.readUInt32)(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    }\n    sfixed32() {\n        const val = (0, varint_1.readInt32)(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    }\n    int64() {\n        const [lo, hi] = varint_1.varint64read.bind(this)();\n        return BigInt((0, varint_1.int64ToString)(lo, hi));\n    }\n    uint64() {\n        const [lo, hi] = varint_1.varint64read.bind(this)();\n        return BigInt((0, varint_1.uInt64ToString)(lo, hi));\n    }\n    sint64() {\n        let [lo, hi] = varint_1.varint64read.bind(this)();\n        // zig zag\n        [lo, hi] = (0, varint_1.zzDecode)(lo, hi);\n        return BigInt((0, varint_1.int64ToString)(lo, hi));\n    }\n    fixed64() {\n        const lo = this.sfixed32();\n        const hi = this.sfixed32();\n        return BigInt((0, varint_1.uInt64ToString)(lo, hi));\n    }\n    sfixed64() {\n        const lo = this.sfixed32();\n        const hi = this.sfixed32();\n        return BigInt((0, varint_1.int64ToString)(lo, hi));\n    }\n    float() {\n        throw new Error(\"float not supported\");\n    }\n    double() {\n        throw new Error(\"double not supported\");\n    }\n    bool() {\n        const [lo, hi] = varint_1.varint64read.bind(this)();\n        return lo !== 0 || hi !== 0;\n    }\n    bytes() {\n        const len = this.uint32(), start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    string() {\n        const bytes = this.bytes();\n        return (0, utf8_1.utf8Read)(bytes, 0, bytes.length);\n    }\n}\nexports.BinaryReader = BinaryReader;\nclass Op {\n    constructor(fn, len, val) {\n        this.fn = fn;\n        this.len = len;\n        this.val = val;\n    }\n    proceed(buf, pos) {\n        if (this.fn) {\n            this.fn(this.val, buf, pos);\n        }\n    }\n}\nclass State {\n    constructor(writer) {\n        this.head = writer.head;\n        this.tail = writer.tail;\n        this.len = writer.len;\n        this.next = writer.states;\n    }\n}\nclass BinaryWriter {\n    constructor() {\n        this.len = 0;\n        // uint64 is the same with int64\n        this.uint64 = BinaryWriter.prototype.int64;\n        // sfixed64 is the same with fixed64\n        this.sfixed64 = BinaryWriter.prototype.fixed64;\n        // sfixed32 is the same with fixed32\n        this.sfixed32 = BinaryWriter.prototype.fixed32;\n        this.head = new Op(null, 0, 0);\n        this.tail = this.head;\n        this.states = null;\n    }\n    static create() {\n        return new BinaryWriter();\n    }\n    static alloc(size) {\n        if (typeof Uint8Array !== \"undefined\") {\n            return pool((size) => new Uint8Array(size), Uint8Array.prototype.subarray)(size);\n        }\n        else {\n            return new Array(size);\n        }\n    }\n    _push(fn, len, val) {\n        this.tail = this.tail.next = new Op(fn, len, val);\n        this.len += len;\n        return this;\n    }\n    finish() {\n        let head = this.head.next, pos = 0;\n        const buf = BinaryWriter.alloc(this.len);\n        while (head) {\n            head.proceed(buf, pos);\n            pos += head.len;\n            head = head.next;\n        }\n        return buf;\n    }\n    fork() {\n        this.states = new State(this);\n        this.head = this.tail = new Op(null, 0, 0);\n        this.len = 0;\n        return this;\n    }\n    reset() {\n        if (this.states) {\n            this.head = this.states.head;\n            this.tail = this.states.tail;\n            this.len = this.states.len;\n            this.states = this.states.next;\n        }\n        else {\n            this.head = this.tail = new Op(null, 0, 0);\n            this.len = 0;\n        }\n        return this;\n    }\n    ldelim() {\n        const head = this.head, tail = this.tail, len = this.len;\n        this.reset().uint32(len);\n        if (len) {\n            this.tail.next = head.next; // skip noop\n            this.tail = tail;\n            this.len += len;\n        }\n        return this;\n    }\n    tag(fieldNo, type) {\n        return this.uint32(((fieldNo << 3) | type) >>> 0);\n    }\n    uint32(value) {\n        this.len += (this.tail = this.tail.next =\n            new Op(varint_1.writeVarint32, (value = value >>> 0) < 128 ? 1 : value < 16384 ? 2 : value < 2097152 ? 3 : value < 268435456 ? 4 : 5, value)).len;\n        return this;\n    }\n    int32(value) {\n        return value < 0\n            ? this._push(varint_1.writeVarint64, 10, (0, varint_1.int64FromString)(value.toString())) // 10 bytes per spec\n            : this.uint32(value);\n    }\n    sint32(value) {\n        return this.uint32(((value << 1) ^ (value >> 31)) >>> 0);\n    }\n    int64(value) {\n        const { lo, hi } = (0, varint_1.int64FromString)(value.toString());\n        return this._push(varint_1.writeVarint64, (0, varint_1.int64Length)(lo, hi), { lo, hi });\n    }\n    sint64(value) {\n        let { lo, hi } = (0, varint_1.int64FromString)(value.toString());\n        // zig zag\n        [lo, hi] = (0, varint_1.zzEncode)(lo, hi);\n        return this._push(varint_1.writeVarint64, (0, varint_1.int64Length)(lo, hi), { lo, hi });\n    }\n    fixed64(value) {\n        const { lo, hi } = (0, varint_1.int64FromString)(value.toString());\n        return this._push(varint_1.writeFixed32, 4, lo)._push(varint_1.writeFixed32, 4, hi);\n    }\n    bool(value) {\n        return this._push(varint_1.writeByte, 1, value ? 1 : 0);\n    }\n    fixed32(value) {\n        return this._push(varint_1.writeFixed32, 4, value >>> 0);\n    }\n    float(value) {\n        throw new Error(\"float not supported\" + value);\n    }\n    double(value) {\n        throw new Error(\"double not supported\" + value);\n    }\n    bytes(value) {\n        const len = value.length >>> 0;\n        if (!len)\n            return this._push(varint_1.writeByte, 1, 0);\n        return this.uint32(len)._push(writeBytes, len, value);\n    }\n    string(value) {\n        const len = (0, utf8_1.utf8Length)(value);\n        return len ? this.uint32(len)._push(utf8_1.utf8Write, len, value) : this._push(varint_1.writeByte, 1, 0);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction writeBytes(val, buf, pos) {\n    if (typeof Uint8Array !== \"undefined\") {\n        buf.set(val, pos);\n    }\n    else {\n        for (let i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    }\n}\nfunction pool(alloc, slice, size) {\n    const SIZE = size || 8192;\n    const MAX = SIZE >>> 1;\n    let slab = null;\n    let offset = SIZE;\n    return function pool_alloc(size) {\n        if (size < 1 || size > MAX)\n            return alloc(size);\n        if (offset + size > SIZE) {\n            slab = alloc(SIZE);\n            offset = 0;\n        }\n        const buf = slice.call(slab, offset, (offset += size));\n        if (offset & 7)\n            // align to 32 bit\n            offset = (offset | 7) + 1;\n        return buf;\n    };\n}\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n//# sourceMappingURL=binary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Params = exports.ModuleCredential = exports.ModuleAccount = exports.BaseAccount = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.auth.v1beta1\";\nfunction createBaseBaseAccount() {\n    return {\n        address: \"\",\n        pubKey: undefined,\n        accountNumber: BigInt(0),\n        sequence: BigInt(0),\n    };\n}\nexports.BaseAccount = {\n    typeUrl: \"/cosmos.auth.v1beta1.BaseAccount\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            any_1.Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== BigInt(0)) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== BigInt(0)) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBaseAccount();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = reader.uint64();\n                    break;\n                case 4:\n                    message.sequence = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseBaseAccount();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.pubKey))\n            obj.pubKey = any_1.Any.fromJSON(object.pubKey);\n        if ((0, helpers_1.isSet)(object.accountNumber))\n            obj.accountNumber = BigInt(object.accountNumber.toString());\n        if ((0, helpers_1.isSet)(object.sequence))\n            obj.sequence = BigInt(object.sequence.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? any_1.Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = (message.accountNumber || BigInt(0)).toString());\n        message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseBaseAccount();\n        message.address = object.address ?? \"\";\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = any_1.Any.fromPartial(object.pubKey);\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = BigInt(object.accountNumber.toString());\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = BigInt(object.sequence.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseModuleAccount() {\n    return {\n        baseAccount: undefined,\n        name: \"\",\n        permissions: [],\n    };\n}\nexports.ModuleAccount = {\n    typeUrl: \"/cosmos.auth.v1beta1.ModuleAccount\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.baseAccount !== undefined) {\n            exports.BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseModuleAccount();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = exports.BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseModuleAccount();\n        if ((0, helpers_1.isSet)(object.baseAccount))\n            obj.baseAccount = exports.BaseAccount.fromJSON(object.baseAccount);\n        if ((0, helpers_1.isSet)(object.name))\n            obj.name = String(object.name);\n        if (Array.isArray(object?.permissions))\n            obj.permissions = object.permissions.map((e) => String(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount ? exports.BaseAccount.toJSON(message.baseAccount) : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseModuleAccount();\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = exports.BaseAccount.fromPartial(object.baseAccount);\n        }\n        message.name = object.name ?? \"\";\n        message.permissions = object.permissions?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseModuleCredential() {\n    return {\n        moduleName: \"\",\n        derivationKeys: [],\n    };\n}\nexports.ModuleCredential = {\n    typeUrl: \"/cosmos.auth.v1beta1.ModuleCredential\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.moduleName !== \"\") {\n            writer.uint32(10).string(message.moduleName);\n        }\n        for (const v of message.derivationKeys) {\n            writer.uint32(18).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseModuleCredential();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moduleName = reader.string();\n                    break;\n                case 2:\n                    message.derivationKeys.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseModuleCredential();\n        if ((0, helpers_1.isSet)(object.moduleName))\n            obj.moduleName = String(object.moduleName);\n        if (Array.isArray(object?.derivationKeys))\n            obj.derivationKeys = object.derivationKeys.map((e) => (0, helpers_1.bytesFromBase64)(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moduleName !== undefined && (obj.moduleName = message.moduleName);\n        if (message.derivationKeys) {\n            obj.derivationKeys = message.derivationKeys.map((e) => (0, helpers_1.base64FromBytes)(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.derivationKeys = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseModuleCredential();\n        message.moduleName = object.moduleName ?? \"\";\n        message.derivationKeys = object.derivationKeys?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseParams() {\n    return {\n        maxMemoCharacters: BigInt(0),\n        txSigLimit: BigInt(0),\n        txSizeCostPerByte: BigInt(0),\n        sigVerifyCostEd25519: BigInt(0),\n        sigVerifyCostSecp256k1: BigInt(0),\n    };\n}\nexports.Params = {\n    typeUrl: \"/cosmos.auth.v1beta1.Params\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.maxMemoCharacters !== BigInt(0)) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== BigInt(0)) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== BigInt(0)) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== BigInt(0)) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== BigInt(0)) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = reader.uint64();\n                    break;\n                case 2:\n                    message.txSigLimit = reader.uint64();\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = reader.uint64();\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = reader.uint64();\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseParams();\n        if ((0, helpers_1.isSet)(object.maxMemoCharacters))\n            obj.maxMemoCharacters = BigInt(object.maxMemoCharacters.toString());\n        if ((0, helpers_1.isSet)(object.txSigLimit))\n            obj.txSigLimit = BigInt(object.txSigLimit.toString());\n        if ((0, helpers_1.isSet)(object.txSizeCostPerByte))\n            obj.txSizeCostPerByte = BigInt(object.txSizeCostPerByte.toString());\n        if ((0, helpers_1.isSet)(object.sigVerifyCostEd25519))\n            obj.sigVerifyCostEd25519 = BigInt(object.sigVerifyCostEd25519.toString());\n        if ((0, helpers_1.isSet)(object.sigVerifyCostSecp256k1))\n            obj.sigVerifyCostSecp256k1 = BigInt(object.sigVerifyCostSecp256k1.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = (message.maxMemoCharacters || BigInt(0)).toString());\n        message.txSigLimit !== undefined && (obj.txSigLimit = (message.txSigLimit || BigInt(0)).toString());\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = (message.txSizeCostPerByte || BigInt(0)).toString());\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = (message.sigVerifyCostEd25519 || BigInt(0)).toString());\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = (message.sigVerifyCostSecp256k1 || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseParams();\n        if (object.maxMemoCharacters !== undefined && object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = BigInt(object.maxMemoCharacters.toString());\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = BigInt(object.txSigLimit.toString());\n        }\n        if (object.txSizeCostPerByte !== undefined && object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = BigInt(object.txSizeCostPerByte.toString());\n        }\n        if (object.sigVerifyCostEd25519 !== undefined && object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = BigInt(object.sigVerifyCostEd25519.toString());\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined && object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = BigInt(object.sigVerifyCostSecp256k1.toString());\n        }\n        return message;\n    },\n};\n//# sourceMappingURL=auth.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QueryAccountInfoResponse = exports.QueryAccountInfoRequest = exports.QueryAccountAddressByIDResponse = exports.QueryAccountAddressByIDRequest = exports.AddressStringToBytesResponse = exports.AddressStringToBytesRequest = exports.AddressBytesToStringResponse = exports.AddressBytesToStringRequest = exports.Bech32PrefixResponse = exports.Bech32PrefixRequest = exports.QueryModuleAccountByNameResponse = exports.QueryModuleAccountByNameRequest = exports.QueryModuleAccountsResponse = exports.QueryModuleAccountsRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QueryAccountResponse = exports.QueryAccountRequest = exports.QueryAccountsResponse = exports.QueryAccountsRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst pagination_1 = require(\"../../base/query/v1beta1/pagination\");\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst auth_1 = require(\"./auth\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.auth.v1beta1\";\nfunction createBaseQueryAccountsRequest() {\n    return {\n        pagination: undefined,\n    };\n}\nexports.QueryAccountsRequest = {\n    typeUrl: \"/cosmos.auth.v1beta1.QueryAccountsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAccountsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAccountsRequest();\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAccountsRequest();\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryAccountsResponse() {\n    return {\n        accounts: [],\n        pagination: undefined,\n    };\n}\nexports.QueryAccountsResponse = {\n    typeUrl: \"/cosmos.auth.v1beta1.QueryAccountsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.accounts) {\n            any_1.Any.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAccountsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.accounts.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAccountsResponse();\n        if (Array.isArray(object?.accounts))\n            obj.accounts = object.accounts.map((e) => any_1.Any.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.accounts) {\n            obj.accounts = message.accounts.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.accounts = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAccountsResponse();\n        message.accounts = object.accounts?.map((e) => any_1.Any.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryAccountRequest() {\n    return {\n        address: \"\",\n    };\n}\nexports.QueryAccountRequest = {\n    typeUrl: \"/cosmos.auth.v1beta1.QueryAccountRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAccountRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAccountRequest();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAccountRequest();\n        message.address = object.address ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryAccountResponse() {\n    return {\n        account: undefined,\n    };\n}\nexports.QueryAccountResponse = {\n    typeUrl: \"/cosmos.auth.v1beta1.QueryAccountResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.account !== undefined) {\n            any_1.Any.encode(message.account, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAccountResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.account = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAccountResponse();\n        if ((0, helpers_1.isSet)(object.account))\n            obj.account = any_1.Any.fromJSON(object.account);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.account !== undefined &&\n            (obj.account = message.account ? any_1.Any.toJSON(message.account) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAccountResponse();\n        if (object.account !== undefined && object.account !== null) {\n            message.account = any_1.Any.fromPartial(object.account);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryParamsRequest() {\n    return {};\n}\nexports.QueryParamsRequest = {\n    typeUrl: \"/cosmos.auth.v1beta1.QueryParamsRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryParamsRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryParamsRequest();\n        return message;\n    },\n};\nfunction createBaseQueryParamsResponse() {\n    return {\n        params: auth_1.Params.fromPartial({}),\n    };\n}\nexports.QueryParamsResponse = {\n    typeUrl: \"/cosmos.auth.v1beta1.QueryParamsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.params !== undefined) {\n            auth_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = auth_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryParamsResponse();\n        if ((0, helpers_1.isSet)(object.params))\n            obj.params = auth_1.Params.fromJSON(object.params);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? auth_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryParamsResponse();\n        if (object.params !== undefined && object.params !== null) {\n            message.params = auth_1.Params.fromPartial(object.params);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryModuleAccountsRequest() {\n    return {};\n}\nexports.QueryModuleAccountsRequest = {\n    typeUrl: \"/cosmos.auth.v1beta1.QueryModuleAccountsRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryModuleAccountsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryModuleAccountsRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryModuleAccountsRequest();\n        return message;\n    },\n};\nfunction createBaseQueryModuleAccountsResponse() {\n    return {\n        accounts: [],\n    };\n}\nexports.QueryModuleAccountsResponse = {\n    typeUrl: \"/cosmos.auth.v1beta1.QueryModuleAccountsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.accounts) {\n            any_1.Any.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryModuleAccountsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.accounts.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryModuleAccountsResponse();\n        if (Array.isArray(object?.accounts))\n            obj.accounts = object.accounts.map((e) => any_1.Any.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.accounts) {\n            obj.accounts = message.accounts.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.accounts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryModuleAccountsResponse();\n        message.accounts = object.accounts?.map((e) => any_1.Any.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseQueryModuleAccountByNameRequest() {\n    return {\n        name: \"\",\n    };\n}\nexports.QueryModuleAccountByNameRequest = {\n    typeUrl: \"/cosmos.auth.v1beta1.QueryModuleAccountByNameRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.name !== \"\") {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryModuleAccountByNameRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryModuleAccountByNameRequest();\n        if ((0, helpers_1.isSet)(object.name))\n            obj.name = String(object.name);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryModuleAccountByNameRequest();\n        message.name = object.name ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryModuleAccountByNameResponse() {\n    return {\n        account: undefined,\n    };\n}\nexports.QueryModuleAccountByNameResponse = {\n    typeUrl: \"/cosmos.auth.v1beta1.QueryModuleAccountByNameResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.account !== undefined) {\n            any_1.Any.encode(message.account, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryModuleAccountByNameResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.account = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryModuleAccountByNameResponse();\n        if ((0, helpers_1.isSet)(object.account))\n            obj.account = any_1.Any.fromJSON(object.account);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.account !== undefined &&\n            (obj.account = message.account ? any_1.Any.toJSON(message.account) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryModuleAccountByNameResponse();\n        if (object.account !== undefined && object.account !== null) {\n            message.account = any_1.Any.fromPartial(object.account);\n        }\n        return message;\n    },\n};\nfunction createBaseBech32PrefixRequest() {\n    return {};\n}\nexports.Bech32PrefixRequest = {\n    typeUrl: \"/cosmos.auth.v1beta1.Bech32PrefixRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBech32PrefixRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseBech32PrefixRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseBech32PrefixRequest();\n        return message;\n    },\n};\nfunction createBaseBech32PrefixResponse() {\n    return {\n        bech32Prefix: \"\",\n    };\n}\nexports.Bech32PrefixResponse = {\n    typeUrl: \"/cosmos.auth.v1beta1.Bech32PrefixResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.bech32Prefix !== \"\") {\n            writer.uint32(10).string(message.bech32Prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBech32PrefixResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.bech32Prefix = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseBech32PrefixResponse();\n        if ((0, helpers_1.isSet)(object.bech32Prefix))\n            obj.bech32Prefix = String(object.bech32Prefix);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.bech32Prefix !== undefined && (obj.bech32Prefix = message.bech32Prefix);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseBech32PrefixResponse();\n        message.bech32Prefix = object.bech32Prefix ?? \"\";\n        return message;\n    },\n};\nfunction createBaseAddressBytesToStringRequest() {\n    return {\n        addressBytes: new Uint8Array(),\n    };\n}\nexports.AddressBytesToStringRequest = {\n    typeUrl: \"/cosmos.auth.v1beta1.AddressBytesToStringRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.addressBytes.length !== 0) {\n            writer.uint32(10).bytes(message.addressBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAddressBytesToStringRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addressBytes = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseAddressBytesToStringRequest();\n        if ((0, helpers_1.isSet)(object.addressBytes))\n            obj.addressBytes = (0, helpers_1.bytesFromBase64)(object.addressBytes);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.addressBytes !== undefined &&\n            (obj.addressBytes = (0, helpers_1.base64FromBytes)(message.addressBytes !== undefined ? message.addressBytes : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseAddressBytesToStringRequest();\n        message.addressBytes = object.addressBytes ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseAddressBytesToStringResponse() {\n    return {\n        addressString: \"\",\n    };\n}\nexports.AddressBytesToStringResponse = {\n    typeUrl: \"/cosmos.auth.v1beta1.AddressBytesToStringResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.addressString !== \"\") {\n            writer.uint32(10).string(message.addressString);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAddressBytesToStringResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addressString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseAddressBytesToStringResponse();\n        if ((0, helpers_1.isSet)(object.addressString))\n            obj.addressString = String(object.addressString);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.addressString !== undefined && (obj.addressString = message.addressString);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseAddressBytesToStringResponse();\n        message.addressString = object.addressString ?? \"\";\n        return message;\n    },\n};\nfunction createBaseAddressStringToBytesRequest() {\n    return {\n        addressString: \"\",\n    };\n}\nexports.AddressStringToBytesRequest = {\n    typeUrl: \"/cosmos.auth.v1beta1.AddressStringToBytesRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.addressString !== \"\") {\n            writer.uint32(10).string(message.addressString);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAddressStringToBytesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addressString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseAddressStringToBytesRequest();\n        if ((0, helpers_1.isSet)(object.addressString))\n            obj.addressString = String(object.addressString);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.addressString !== undefined && (obj.addressString = message.addressString);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseAddressStringToBytesRequest();\n        message.addressString = object.addressString ?? \"\";\n        return message;\n    },\n};\nfunction createBaseAddressStringToBytesResponse() {\n    return {\n        addressBytes: new Uint8Array(),\n    };\n}\nexports.AddressStringToBytesResponse = {\n    typeUrl: \"/cosmos.auth.v1beta1.AddressStringToBytesResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.addressBytes.length !== 0) {\n            writer.uint32(10).bytes(message.addressBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAddressStringToBytesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addressBytes = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseAddressStringToBytesResponse();\n        if ((0, helpers_1.isSet)(object.addressBytes))\n            obj.addressBytes = (0, helpers_1.bytesFromBase64)(object.addressBytes);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.addressBytes !== undefined &&\n            (obj.addressBytes = (0, helpers_1.base64FromBytes)(message.addressBytes !== undefined ? message.addressBytes : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseAddressStringToBytesResponse();\n        message.addressBytes = object.addressBytes ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseQueryAccountAddressByIDRequest() {\n    return {\n        id: BigInt(0),\n        accountId: BigInt(0),\n    };\n}\nexports.QueryAccountAddressByIDRequest = {\n    typeUrl: \"/cosmos.auth.v1beta1.QueryAccountAddressByIDRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.id !== BigInt(0)) {\n            writer.uint32(8).int64(message.id);\n        }\n        if (message.accountId !== BigInt(0)) {\n            writer.uint32(16).uint64(message.accountId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAccountAddressByIDRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.int64();\n                    break;\n                case 2:\n                    message.accountId = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAccountAddressByIDRequest();\n        if ((0, helpers_1.isSet)(object.id))\n            obj.id = BigInt(object.id.toString());\n        if ((0, helpers_1.isSet)(object.accountId))\n            obj.accountId = BigInt(object.accountId.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = (message.id || BigInt(0)).toString());\n        message.accountId !== undefined && (obj.accountId = (message.accountId || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAccountAddressByIDRequest();\n        if (object.id !== undefined && object.id !== null) {\n            message.id = BigInt(object.id.toString());\n        }\n        if (object.accountId !== undefined && object.accountId !== null) {\n            message.accountId = BigInt(object.accountId.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseQueryAccountAddressByIDResponse() {\n    return {\n        accountAddress: \"\",\n    };\n}\nexports.QueryAccountAddressByIDResponse = {\n    typeUrl: \"/cosmos.auth.v1beta1.QueryAccountAddressByIDResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.accountAddress !== \"\") {\n            writer.uint32(10).string(message.accountAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAccountAddressByIDResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.accountAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAccountAddressByIDResponse();\n        if ((0, helpers_1.isSet)(object.accountAddress))\n            obj.accountAddress = String(object.accountAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.accountAddress !== undefined && (obj.accountAddress = message.accountAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAccountAddressByIDResponse();\n        message.accountAddress = object.accountAddress ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryAccountInfoRequest() {\n    return {\n        address: \"\",\n    };\n}\nexports.QueryAccountInfoRequest = {\n    typeUrl: \"/cosmos.auth.v1beta1.QueryAccountInfoRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAccountInfoRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAccountInfoRequest();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAccountInfoRequest();\n        message.address = object.address ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryAccountInfoResponse() {\n    return {\n        info: undefined,\n    };\n}\nexports.QueryAccountInfoResponse = {\n    typeUrl: \"/cosmos.auth.v1beta1.QueryAccountInfoResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.info !== undefined) {\n            auth_1.BaseAccount.encode(message.info, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAccountInfoResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.info = auth_1.BaseAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAccountInfoResponse();\n        if ((0, helpers_1.isSet)(object.info))\n            obj.info = auth_1.BaseAccount.fromJSON(object.info);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.info !== undefined && (obj.info = message.info ? auth_1.BaseAccount.toJSON(message.info) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAccountInfoResponse();\n        if (object.info !== undefined && object.info !== null) {\n            message.info = auth_1.BaseAccount.fromPartial(object.info);\n        }\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Accounts = this.Accounts.bind(this);\n        this.Account = this.Account.bind(this);\n        this.AccountAddressByID = this.AccountAddressByID.bind(this);\n        this.Params = this.Params.bind(this);\n        this.ModuleAccounts = this.ModuleAccounts.bind(this);\n        this.ModuleAccountByName = this.ModuleAccountByName.bind(this);\n        this.Bech32Prefix = this.Bech32Prefix.bind(this);\n        this.AddressBytesToString = this.AddressBytesToString.bind(this);\n        this.AddressStringToBytes = this.AddressStringToBytes.bind(this);\n        this.AccountInfo = this.AccountInfo.bind(this);\n    }\n    Accounts(request = {\n        pagination: pagination_1.PageRequest.fromPartial({}),\n    }) {\n        const data = exports.QueryAccountsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.auth.v1beta1.Query\", \"Accounts\", data);\n        return promise.then((data) => exports.QueryAccountsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Account(request) {\n        const data = exports.QueryAccountRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.auth.v1beta1.Query\", \"Account\", data);\n        return promise.then((data) => exports.QueryAccountResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    AccountAddressByID(request) {\n        const data = exports.QueryAccountAddressByIDRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.auth.v1beta1.Query\", \"AccountAddressByID\", data);\n        return promise.then((data) => exports.QueryAccountAddressByIDResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Params(request = {}) {\n        const data = exports.QueryParamsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.auth.v1beta1.Query\", \"Params\", data);\n        return promise.then((data) => exports.QueryParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ModuleAccounts(request = {}) {\n        const data = exports.QueryModuleAccountsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.auth.v1beta1.Query\", \"ModuleAccounts\", data);\n        return promise.then((data) => exports.QueryModuleAccountsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ModuleAccountByName(request) {\n        const data = exports.QueryModuleAccountByNameRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.auth.v1beta1.Query\", \"ModuleAccountByName\", data);\n        return promise.then((data) => exports.QueryModuleAccountByNameResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Bech32Prefix(request = {}) {\n        const data = exports.Bech32PrefixRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.auth.v1beta1.Query\", \"Bech32Prefix\", data);\n        return promise.then((data) => exports.Bech32PrefixResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    AddressBytesToString(request) {\n        const data = exports.AddressBytesToStringRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.auth.v1beta1.Query\", \"AddressBytesToString\", data);\n        return promise.then((data) => exports.AddressBytesToStringResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    AddressStringToBytes(request) {\n        const data = exports.AddressStringToBytesRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.auth.v1beta1.Query\", \"AddressStringToBytes\", data);\n        return promise.then((data) => exports.AddressStringToBytesResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    AccountInfo(request) {\n        const data = exports.QueryAccountInfoRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.auth.v1beta1.Query\", \"AccountInfo\", data);\n        return promise.then((data) => exports.QueryAccountInfoResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\n//# sourceMappingURL=query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GrantQueueItem = exports.GrantAuthorization = exports.Grant = exports.GenericAuthorization = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst timestamp_1 = require(\"../../../google/protobuf/timestamp\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.authz.v1beta1\";\nfunction createBaseGenericAuthorization() {\n    return {\n        msg: \"\",\n    };\n}\nexports.GenericAuthorization = {\n    typeUrl: \"/cosmos.authz.v1beta1.GenericAuthorization\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.msg !== \"\") {\n            writer.uint32(10).string(message.msg);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGenericAuthorization();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msg = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseGenericAuthorization();\n        if ((0, helpers_1.isSet)(object.msg))\n            obj.msg = String(object.msg);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msg !== undefined && (obj.msg = message.msg);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseGenericAuthorization();\n        message.msg = object.msg ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGrant() {\n    return {\n        authorization: undefined,\n        expiration: undefined,\n    };\n}\nexports.Grant = {\n    typeUrl: \"/cosmos.authz.v1beta1.Grant\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.authorization !== undefined) {\n            any_1.Any.encode(message.authorization, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            timestamp_1.Timestamp.encode(message.expiration, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGrant();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authorization = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.expiration = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseGrant();\n        if ((0, helpers_1.isSet)(object.authorization))\n            obj.authorization = any_1.Any.fromJSON(object.authorization);\n        if ((0, helpers_1.isSet)(object.expiration))\n            obj.expiration = (0, helpers_1.fromJsonTimestamp)(object.expiration);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.authorization !== undefined &&\n            (obj.authorization = message.authorization ? any_1.Any.toJSON(message.authorization) : undefined);\n        message.expiration !== undefined && (obj.expiration = (0, helpers_1.fromTimestamp)(message.expiration).toISOString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseGrant();\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = any_1.Any.fromPartial(object.authorization);\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = timestamp_1.Timestamp.fromPartial(object.expiration);\n        }\n        return message;\n    },\n};\nfunction createBaseGrantAuthorization() {\n    return {\n        granter: \"\",\n        grantee: \"\",\n        authorization: undefined,\n        expiration: undefined,\n    };\n}\nexports.GrantAuthorization = {\n    typeUrl: \"/cosmos.authz.v1beta1.GrantAuthorization\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.granter !== \"\") {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== \"\") {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.authorization !== undefined) {\n            any_1.Any.encode(message.authorization, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            timestamp_1.Timestamp.encode(message.expiration, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGrantAuthorization();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.authorization = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.expiration = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseGrantAuthorization();\n        if ((0, helpers_1.isSet)(object.granter))\n            obj.granter = String(object.granter);\n        if ((0, helpers_1.isSet)(object.grantee))\n            obj.grantee = String(object.grantee);\n        if ((0, helpers_1.isSet)(object.authorization))\n            obj.authorization = any_1.Any.fromJSON(object.authorization);\n        if ((0, helpers_1.isSet)(object.expiration))\n            obj.expiration = (0, helpers_1.fromJsonTimestamp)(object.expiration);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.authorization !== undefined &&\n            (obj.authorization = message.authorization ? any_1.Any.toJSON(message.authorization) : undefined);\n        message.expiration !== undefined && (obj.expiration = (0, helpers_1.fromTimestamp)(message.expiration).toISOString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseGrantAuthorization();\n        message.granter = object.granter ?? \"\";\n        message.grantee = object.grantee ?? \"\";\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = any_1.Any.fromPartial(object.authorization);\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = timestamp_1.Timestamp.fromPartial(object.expiration);\n        }\n        return message;\n    },\n};\nfunction createBaseGrantQueueItem() {\n    return {\n        msgTypeUrls: [],\n    };\n}\nexports.GrantQueueItem = {\n    typeUrl: \"/cosmos.authz.v1beta1.GrantQueueItem\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.msgTypeUrls) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGrantQueueItem();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgTypeUrls.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseGrantQueueItem();\n        if (Array.isArray(object?.msgTypeUrls))\n            obj.msgTypeUrls = object.msgTypeUrls.map((e) => String(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.msgTypeUrls) {\n            obj.msgTypeUrls = message.msgTypeUrls.map((e) => e);\n        }\n        else {\n            obj.msgTypeUrls = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseGrantQueueItem();\n        message.msgTypeUrls = object.msgTypeUrls?.map((e) => e) || [];\n        return message;\n    },\n};\n//# sourceMappingURL=authz.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QueryGranteeGrantsResponse = exports.QueryGranteeGrantsRequest = exports.QueryGranterGrantsResponse = exports.QueryGranterGrantsRequest = exports.QueryGrantsResponse = exports.QueryGrantsRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst pagination_1 = require(\"../../base/query/v1beta1/pagination\");\nconst authz_1 = require(\"./authz\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.authz.v1beta1\";\nfunction createBaseQueryGrantsRequest() {\n    return {\n        granter: \"\",\n        grantee: \"\",\n        msgTypeUrl: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryGrantsRequest = {\n    typeUrl: \"/cosmos.authz.v1beta1.QueryGrantsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.granter !== \"\") {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== \"\") {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.msgTypeUrl !== \"\") {\n            writer.uint32(26).string(message.msgTypeUrl);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGrantsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                case 4:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryGrantsRequest();\n        if ((0, helpers_1.isSet)(object.granter))\n            obj.granter = String(object.granter);\n        if ((0, helpers_1.isSet)(object.grantee))\n            obj.grantee = String(object.grantee);\n        if ((0, helpers_1.isSet)(object.msgTypeUrl))\n            obj.msgTypeUrl = String(object.msgTypeUrl);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryGrantsRequest();\n        message.granter = object.granter ?? \"\";\n        message.grantee = object.grantee ?? \"\";\n        message.msgTypeUrl = object.msgTypeUrl ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryGrantsResponse() {\n    return {\n        grants: [],\n        pagination: undefined,\n    };\n}\nexports.QueryGrantsResponse = {\n    typeUrl: \"/cosmos.authz.v1beta1.QueryGrantsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.grants) {\n            authz_1.Grant.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGrantsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.grants.push(authz_1.Grant.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryGrantsResponse();\n        if (Array.isArray(object?.grants))\n            obj.grants = object.grants.map((e) => authz_1.Grant.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.grants) {\n            obj.grants = message.grants.map((e) => (e ? authz_1.Grant.toJSON(e) : undefined));\n        }\n        else {\n            obj.grants = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryGrantsResponse();\n        message.grants = object.grants?.map((e) => authz_1.Grant.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryGranterGrantsRequest() {\n    return {\n        granter: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryGranterGrantsRequest = {\n    typeUrl: \"/cosmos.authz.v1beta1.QueryGranterGrantsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.granter !== \"\") {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGranterGrantsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryGranterGrantsRequest();\n        if ((0, helpers_1.isSet)(object.granter))\n            obj.granter = String(object.granter);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryGranterGrantsRequest();\n        message.granter = object.granter ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryGranterGrantsResponse() {\n    return {\n        grants: [],\n        pagination: undefined,\n    };\n}\nexports.QueryGranterGrantsResponse = {\n    typeUrl: \"/cosmos.authz.v1beta1.QueryGranterGrantsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.grants) {\n            authz_1.GrantAuthorization.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGranterGrantsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.grants.push(authz_1.GrantAuthorization.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryGranterGrantsResponse();\n        if (Array.isArray(object?.grants))\n            obj.grants = object.grants.map((e) => authz_1.GrantAuthorization.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.grants) {\n            obj.grants = message.grants.map((e) => (e ? authz_1.GrantAuthorization.toJSON(e) : undefined));\n        }\n        else {\n            obj.grants = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryGranterGrantsResponse();\n        message.grants = object.grants?.map((e) => authz_1.GrantAuthorization.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryGranteeGrantsRequest() {\n    return {\n        grantee: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryGranteeGrantsRequest = {\n    typeUrl: \"/cosmos.authz.v1beta1.QueryGranteeGrantsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.grantee !== \"\") {\n            writer.uint32(10).string(message.grantee);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGranteeGrantsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.grantee = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryGranteeGrantsRequest();\n        if ((0, helpers_1.isSet)(object.grantee))\n            obj.grantee = String(object.grantee);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryGranteeGrantsRequest();\n        message.grantee = object.grantee ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryGranteeGrantsResponse() {\n    return {\n        grants: [],\n        pagination: undefined,\n    };\n}\nexports.QueryGranteeGrantsResponse = {\n    typeUrl: \"/cosmos.authz.v1beta1.QueryGranteeGrantsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.grants) {\n            authz_1.GrantAuthorization.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGranteeGrantsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.grants.push(authz_1.GrantAuthorization.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryGranteeGrantsResponse();\n        if (Array.isArray(object?.grants))\n            obj.grants = object.grants.map((e) => authz_1.GrantAuthorization.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.grants) {\n            obj.grants = message.grants.map((e) => (e ? authz_1.GrantAuthorization.toJSON(e) : undefined));\n        }\n        else {\n            obj.grants = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryGranteeGrantsResponse();\n        message.grants = object.grants?.map((e) => authz_1.GrantAuthorization.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Grants = this.Grants.bind(this);\n        this.GranterGrants = this.GranterGrants.bind(this);\n        this.GranteeGrants = this.GranteeGrants.bind(this);\n    }\n    Grants(request) {\n        const data = exports.QueryGrantsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.authz.v1beta1.Query\", \"Grants\", data);\n        return promise.then((data) => exports.QueryGrantsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    GranterGrants(request) {\n        const data = exports.QueryGranterGrantsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.authz.v1beta1.Query\", \"GranterGrants\", data);\n        return promise.then((data) => exports.QueryGranterGrantsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    GranteeGrants(request) {\n        const data = exports.QueryGranteeGrantsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.authz.v1beta1.Query\", \"GranteeGrants\", data);\n        return promise.then((data) => exports.QueryGranteeGrantsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\n//# sourceMappingURL=query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgRevokeResponse = exports.MsgRevoke = exports.MsgGrantResponse = exports.MsgExec = exports.MsgExecResponse = exports.MsgGrant = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst authz_1 = require(\"./authz\");\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.authz.v1beta1\";\nfunction createBaseMsgGrant() {\n    return {\n        granter: \"\",\n        grantee: \"\",\n        grant: authz_1.Grant.fromPartial({}),\n    };\n}\nexports.MsgGrant = {\n    typeUrl: \"/cosmos.authz.v1beta1.MsgGrant\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.granter !== \"\") {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== \"\") {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.grant !== undefined) {\n            authz_1.Grant.encode(message.grant, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgGrant();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.grant = authz_1.Grant.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgGrant();\n        if ((0, helpers_1.isSet)(object.granter))\n            obj.granter = String(object.granter);\n        if ((0, helpers_1.isSet)(object.grantee))\n            obj.grantee = String(object.grantee);\n        if ((0, helpers_1.isSet)(object.grant))\n            obj.grant = authz_1.Grant.fromJSON(object.grant);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.grant !== undefined && (obj.grant = message.grant ? authz_1.Grant.toJSON(message.grant) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgGrant();\n        message.granter = object.granter ?? \"\";\n        message.grantee = object.grantee ?? \"\";\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = authz_1.Grant.fromPartial(object.grant);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgExecResponse() {\n    return {\n        results: [],\n    };\n}\nexports.MsgExecResponse = {\n    typeUrl: \"/cosmos.authz.v1beta1.MsgExecResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.results) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgExecResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.results.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgExecResponse();\n        if (Array.isArray(object?.results))\n            obj.results = object.results.map((e) => (0, helpers_1.bytesFromBase64)(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.results) {\n            obj.results = message.results.map((e) => (0, helpers_1.base64FromBytes)(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.results = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgExecResponse();\n        message.results = object.results?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseMsgExec() {\n    return {\n        grantee: \"\",\n        msgs: [],\n    };\n}\nexports.MsgExec = {\n    typeUrl: \"/cosmos.authz.v1beta1.MsgExec\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.grantee !== \"\") {\n            writer.uint32(10).string(message.grantee);\n        }\n        for (const v of message.msgs) {\n            any_1.Any.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgExec();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.grantee = reader.string();\n                    break;\n                case 2:\n                    message.msgs.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgExec();\n        if ((0, helpers_1.isSet)(object.grantee))\n            obj.grantee = String(object.grantee);\n        if (Array.isArray(object?.msgs))\n            obj.msgs = object.msgs.map((e) => any_1.Any.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        if (message.msgs) {\n            obj.msgs = message.msgs.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.msgs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgExec();\n        message.grantee = object.grantee ?? \"\";\n        message.msgs = object.msgs?.map((e) => any_1.Any.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgGrantResponse() {\n    return {};\n}\nexports.MsgGrantResponse = {\n    typeUrl: \"/cosmos.authz.v1beta1.MsgGrantResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgGrantResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgGrantResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgGrantResponse();\n        return message;\n    },\n};\nfunction createBaseMsgRevoke() {\n    return {\n        granter: \"\",\n        grantee: \"\",\n        msgTypeUrl: \"\",\n    };\n}\nexports.MsgRevoke = {\n    typeUrl: \"/cosmos.authz.v1beta1.MsgRevoke\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.granter !== \"\") {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== \"\") {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.msgTypeUrl !== \"\") {\n            writer.uint32(26).string(message.msgTypeUrl);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgRevoke();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgRevoke();\n        if ((0, helpers_1.isSet)(object.granter))\n            obj.granter = String(object.granter);\n        if ((0, helpers_1.isSet)(object.grantee))\n            obj.grantee = String(object.grantee);\n        if ((0, helpers_1.isSet)(object.msgTypeUrl))\n            obj.msgTypeUrl = String(object.msgTypeUrl);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgRevoke();\n        message.granter = object.granter ?? \"\";\n        message.grantee = object.grantee ?? \"\";\n        message.msgTypeUrl = object.msgTypeUrl ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgRevokeResponse() {\n    return {};\n}\nexports.MsgRevokeResponse = {\n    typeUrl: \"/cosmos.authz.v1beta1.MsgRevokeResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgRevokeResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgRevokeResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgRevokeResponse();\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Grant = this.Grant.bind(this);\n        this.Exec = this.Exec.bind(this);\n        this.Revoke = this.Revoke.bind(this);\n    }\n    Grant(request) {\n        const data = exports.MsgGrant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.authz.v1beta1.Msg\", \"Grant\", data);\n        return promise.then((data) => exports.MsgGrantResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Exec(request) {\n        const data = exports.MsgExec.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.authz.v1beta1.Msg\", \"Exec\", data);\n        return promise.then((data) => exports.MsgExecResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Revoke(request) {\n        const data = exports.MsgRevoke.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.authz.v1beta1.Msg\", \"Revoke\", data);\n        return promise.then((data) => exports.MsgRevokeResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Metadata = exports.DenomUnit = exports.Supply = exports.Output = exports.Input = exports.SendEnabled = exports.Params = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.bank.v1beta1\";\nfunction createBaseParams() {\n    return {\n        sendEnabled: [],\n        defaultSendEnabled: false,\n    };\n}\nexports.Params = {\n    typeUrl: \"/cosmos.bank.v1beta1.Params\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.sendEnabled) {\n            exports.SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(exports.SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseParams();\n        if (Array.isArray(object?.sendEnabled))\n            obj.sendEnabled = object.sendEnabled.map((e) => exports.SendEnabled.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.defaultSendEnabled))\n            obj.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => (e ? exports.SendEnabled.toJSON(e) : undefined));\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined && (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseParams();\n        message.sendEnabled = object.sendEnabled?.map((e) => exports.SendEnabled.fromPartial(e)) || [];\n        message.defaultSendEnabled = object.defaultSendEnabled ?? false;\n        return message;\n    },\n};\nfunction createBaseSendEnabled() {\n    return {\n        denom: \"\",\n        enabled: false,\n    };\n}\nexports.SendEnabled = {\n    typeUrl: \"/cosmos.bank.v1beta1.SendEnabled\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSendEnabled();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSendEnabled();\n        if ((0, helpers_1.isSet)(object.denom))\n            obj.denom = String(object.denom);\n        if ((0, helpers_1.isSet)(object.enabled))\n            obj.enabled = Boolean(object.enabled);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSendEnabled();\n        message.denom = object.denom ?? \"\";\n        message.enabled = object.enabled ?? false;\n        return message;\n    },\n};\nfunction createBaseInput() {\n    return {\n        address: \"\",\n        coins: [],\n    };\n}\nexports.Input = {\n    typeUrl: \"/cosmos.bank.v1beta1.Input\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseInput();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseInput();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if (Array.isArray(object?.coins))\n            obj.coins = object.coins.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseInput();\n        message.address = object.address ?? \"\";\n        message.coins = object.coins?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseOutput() {\n    return {\n        address: \"\",\n        coins: [],\n    };\n}\nexports.Output = {\n    typeUrl: \"/cosmos.bank.v1beta1.Output\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOutput();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseOutput();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if (Array.isArray(object?.coins))\n            obj.coins = object.coins.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseOutput();\n        message.address = object.address ?? \"\";\n        message.coins = object.coins?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseSupply() {\n    return {\n        total: [],\n    };\n}\nexports.Supply = {\n    typeUrl: \"/cosmos.bank.v1beta1.Supply\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.total) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSupply();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSupply();\n        if (Array.isArray(object?.total))\n            obj.total = object.total.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSupply();\n        message.total = object.total?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseDenomUnit() {\n    return {\n        denom: \"\",\n        exponent: 0,\n        aliases: [],\n    };\n}\nexports.DenomUnit = {\n    typeUrl: \"/cosmos.bank.v1beta1.DenomUnit\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDenomUnit();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseDenomUnit();\n        if ((0, helpers_1.isSet)(object.denom))\n            obj.denom = String(object.denom);\n        if ((0, helpers_1.isSet)(object.exponent))\n            obj.exponent = Number(object.exponent);\n        if (Array.isArray(object?.aliases))\n            obj.aliases = object.aliases.map((e) => String(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = Math.round(message.exponent));\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseDenomUnit();\n        message.denom = object.denom ?? \"\";\n        message.exponent = object.exponent ?? 0;\n        message.aliases = object.aliases?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseMetadata() {\n    return {\n        description: \"\",\n        denomUnits: [],\n        base: \"\",\n        display: \"\",\n        name: \"\",\n        symbol: \"\",\n        uri: \"\",\n        uriHash: \"\",\n    };\n}\nexports.Metadata = {\n    typeUrl: \"/cosmos.bank.v1beta1.Metadata\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            exports.DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.symbol !== \"\") {\n            writer.uint32(50).string(message.symbol);\n        }\n        if (message.uri !== \"\") {\n            writer.uint32(58).string(message.uri);\n        }\n        if (message.uriHash !== \"\") {\n            writer.uint32(66).string(message.uriHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMetadata();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(exports.DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.symbol = reader.string();\n                    break;\n                case 7:\n                    message.uri = reader.string();\n                    break;\n                case 8:\n                    message.uriHash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMetadata();\n        if ((0, helpers_1.isSet)(object.description))\n            obj.description = String(object.description);\n        if (Array.isArray(object?.denomUnits))\n            obj.denomUnits = object.denomUnits.map((e) => exports.DenomUnit.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.base))\n            obj.base = String(object.base);\n        if ((0, helpers_1.isSet)(object.display))\n            obj.display = String(object.display);\n        if ((0, helpers_1.isSet)(object.name))\n            obj.name = String(object.name);\n        if ((0, helpers_1.isSet)(object.symbol))\n            obj.symbol = String(object.symbol);\n        if ((0, helpers_1.isSet)(object.uri))\n            obj.uri = String(object.uri);\n        if ((0, helpers_1.isSet)(object.uriHash))\n            obj.uriHash = String(object.uriHash);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => (e ? exports.DenomUnit.toJSON(e) : undefined));\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        message.name !== undefined && (obj.name = message.name);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.uriHash !== undefined && (obj.uriHash = message.uriHash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMetadata();\n        message.description = object.description ?? \"\";\n        message.denomUnits = object.denomUnits?.map((e) => exports.DenomUnit.fromPartial(e)) || [];\n        message.base = object.base ?? \"\";\n        message.display = object.display ?? \"\";\n        message.name = object.name ?? \"\";\n        message.symbol = object.symbol ?? \"\";\n        message.uri = object.uri ?? \"\";\n        message.uriHash = object.uriHash ?? \"\";\n        return message;\n    },\n};\n//# sourceMappingURL=bank.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QuerySendEnabledResponse = exports.QuerySendEnabledRequest = exports.QueryDenomOwnersResponse = exports.DenomOwner = exports.QueryDenomOwnersRequest = exports.QueryDenomMetadataResponse = exports.QueryDenomMetadataRequest = exports.QueryDenomsMetadataResponse = exports.QueryDenomsMetadataRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QuerySupplyOfResponse = exports.QuerySupplyOfRequest = exports.QueryTotalSupplyResponse = exports.QueryTotalSupplyRequest = exports.QuerySpendableBalanceByDenomResponse = exports.QuerySpendableBalanceByDenomRequest = exports.QuerySpendableBalancesResponse = exports.QuerySpendableBalancesRequest = exports.QueryAllBalancesResponse = exports.QueryAllBalancesRequest = exports.QueryBalanceResponse = exports.QueryBalanceRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst pagination_1 = require(\"../../base/query/v1beta1/pagination\");\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst bank_1 = require(\"./bank\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.bank.v1beta1\";\nfunction createBaseQueryBalanceRequest() {\n    return {\n        address: \"\",\n        denom: \"\",\n    };\n}\nexports.QueryBalanceRequest = {\n    typeUrl: \"/cosmos.bank.v1beta1.QueryBalanceRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.denom !== \"\") {\n            writer.uint32(18).string(message.denom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryBalanceRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.denom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryBalanceRequest();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.denom))\n            obj.denom = String(object.denom);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.denom !== undefined && (obj.denom = message.denom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryBalanceRequest();\n        message.address = object.address ?? \"\";\n        message.denom = object.denom ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryBalanceResponse() {\n    return {\n        balance: undefined,\n    };\n}\nexports.QueryBalanceResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.QueryBalanceResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.balance !== undefined) {\n            coin_1.Coin.encode(message.balance, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryBalanceResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.balance = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryBalanceResponse();\n        if ((0, helpers_1.isSet)(object.balance))\n            obj.balance = coin_1.Coin.fromJSON(object.balance);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? coin_1.Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryBalanceResponse();\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = coin_1.Coin.fromPartial(object.balance);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryAllBalancesRequest() {\n    return {\n        address: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryAllBalancesRequest = {\n    typeUrl: \"/cosmos.bank.v1beta1.QueryAllBalancesRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllBalancesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAllBalancesRequest();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllBalancesRequest();\n        message.address = object.address ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryAllBalancesResponse() {\n    return {\n        balances: [],\n        pagination: undefined,\n    };\n}\nexports.QueryAllBalancesResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.QueryAllBalancesResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.balances) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllBalancesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.balances.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAllBalancesResponse();\n        if (Array.isArray(object?.balances))\n            obj.balances = object.balances.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.balances = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllBalancesResponse();\n        message.balances = object.balances?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQuerySpendableBalancesRequest() {\n    return {\n        address: \"\",\n        pagination: undefined,\n    };\n}\nexports.QuerySpendableBalancesRequest = {\n    typeUrl: \"/cosmos.bank.v1beta1.QuerySpendableBalancesRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQuerySpendableBalancesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQuerySpendableBalancesRequest();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQuerySpendableBalancesRequest();\n        message.address = object.address ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQuerySpendableBalancesResponse() {\n    return {\n        balances: [],\n        pagination: undefined,\n    };\n}\nexports.QuerySpendableBalancesResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.QuerySpendableBalancesResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.balances) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQuerySpendableBalancesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.balances.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQuerySpendableBalancesResponse();\n        if (Array.isArray(object?.balances))\n            obj.balances = object.balances.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.balances = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQuerySpendableBalancesResponse();\n        message.balances = object.balances?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQuerySpendableBalanceByDenomRequest() {\n    return {\n        address: \"\",\n        denom: \"\",\n    };\n}\nexports.QuerySpendableBalanceByDenomRequest = {\n    typeUrl: \"/cosmos.bank.v1beta1.QuerySpendableBalanceByDenomRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.denom !== \"\") {\n            writer.uint32(18).string(message.denom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQuerySpendableBalanceByDenomRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.denom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQuerySpendableBalanceByDenomRequest();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.denom))\n            obj.denom = String(object.denom);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.denom !== undefined && (obj.denom = message.denom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQuerySpendableBalanceByDenomRequest();\n        message.address = object.address ?? \"\";\n        message.denom = object.denom ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQuerySpendableBalanceByDenomResponse() {\n    return {\n        balance: undefined,\n    };\n}\nexports.QuerySpendableBalanceByDenomResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.balance !== undefined) {\n            coin_1.Coin.encode(message.balance, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQuerySpendableBalanceByDenomResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.balance = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQuerySpendableBalanceByDenomResponse();\n        if ((0, helpers_1.isSet)(object.balance))\n            obj.balance = coin_1.Coin.fromJSON(object.balance);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? coin_1.Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQuerySpendableBalanceByDenomResponse();\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = coin_1.Coin.fromPartial(object.balance);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryTotalSupplyRequest() {\n    return {\n        pagination: undefined,\n    };\n}\nexports.QueryTotalSupplyRequest = {\n    typeUrl: \"/cosmos.bank.v1beta1.QueryTotalSupplyRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryTotalSupplyRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryTotalSupplyRequest();\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryTotalSupplyRequest();\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryTotalSupplyResponse() {\n    return {\n        supply: [],\n        pagination: undefined,\n    };\n}\nexports.QueryTotalSupplyResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.QueryTotalSupplyResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.supply) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryTotalSupplyResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.supply.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryTotalSupplyResponse();\n        if (Array.isArray(object?.supply))\n            obj.supply = object.supply.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryTotalSupplyResponse();\n        message.supply = object.supply?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQuerySupplyOfRequest() {\n    return {\n        denom: \"\",\n    };\n}\nexports.QuerySupplyOfRequest = {\n    typeUrl: \"/cosmos.bank.v1beta1.QuerySupplyOfRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQuerySupplyOfRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQuerySupplyOfRequest();\n        if ((0, helpers_1.isSet)(object.denom))\n            obj.denom = String(object.denom);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQuerySupplyOfRequest();\n        message.denom = object.denom ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQuerySupplyOfResponse() {\n    return {\n        amount: coin_1.Coin.fromPartial({}),\n    };\n}\nexports.QuerySupplyOfResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.QuerySupplyOfResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.amount !== undefined) {\n            coin_1.Coin.encode(message.amount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQuerySupplyOfResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQuerySupplyOfResponse();\n        if ((0, helpers_1.isSet)(object.amount))\n            obj.amount = coin_1.Coin.fromJSON(object.amount);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.amount !== undefined && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQuerySupplyOfResponse();\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = coin_1.Coin.fromPartial(object.amount);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryParamsRequest() {\n    return {};\n}\nexports.QueryParamsRequest = {\n    typeUrl: \"/cosmos.bank.v1beta1.QueryParamsRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryParamsRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryParamsRequest();\n        return message;\n    },\n};\nfunction createBaseQueryParamsResponse() {\n    return {\n        params: bank_1.Params.fromPartial({}),\n    };\n}\nexports.QueryParamsResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.QueryParamsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.params !== undefined) {\n            bank_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = bank_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryParamsResponse();\n        if ((0, helpers_1.isSet)(object.params))\n            obj.params = bank_1.Params.fromJSON(object.params);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? bank_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryParamsResponse();\n        if (object.params !== undefined && object.params !== null) {\n            message.params = bank_1.Params.fromPartial(object.params);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDenomsMetadataRequest() {\n    return {\n        pagination: undefined,\n    };\n}\nexports.QueryDenomsMetadataRequest = {\n    typeUrl: \"/cosmos.bank.v1beta1.QueryDenomsMetadataRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDenomsMetadataRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDenomsMetadataRequest();\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDenomsMetadataRequest();\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDenomsMetadataResponse() {\n    return {\n        metadatas: [],\n        pagination: undefined,\n    };\n}\nexports.QueryDenomsMetadataResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.QueryDenomsMetadataResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.metadatas) {\n            bank_1.Metadata.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDenomsMetadataResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.metadatas.push(bank_1.Metadata.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDenomsMetadataResponse();\n        if (Array.isArray(object?.metadatas))\n            obj.metadatas = object.metadatas.map((e) => bank_1.Metadata.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.metadatas) {\n            obj.metadatas = message.metadatas.map((e) => (e ? bank_1.Metadata.toJSON(e) : undefined));\n        }\n        else {\n            obj.metadatas = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDenomsMetadataResponse();\n        message.metadatas = object.metadatas?.map((e) => bank_1.Metadata.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDenomMetadataRequest() {\n    return {\n        denom: \"\",\n    };\n}\nexports.QueryDenomMetadataRequest = {\n    typeUrl: \"/cosmos.bank.v1beta1.QueryDenomMetadataRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDenomMetadataRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDenomMetadataRequest();\n        if ((0, helpers_1.isSet)(object.denom))\n            obj.denom = String(object.denom);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDenomMetadataRequest();\n        message.denom = object.denom ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryDenomMetadataResponse() {\n    return {\n        metadata: bank_1.Metadata.fromPartial({}),\n    };\n}\nexports.QueryDenomMetadataResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.QueryDenomMetadataResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.metadata !== undefined) {\n            bank_1.Metadata.encode(message.metadata, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDenomMetadataResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.metadata = bank_1.Metadata.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDenomMetadataResponse();\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = bank_1.Metadata.fromJSON(object.metadata);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.metadata !== undefined &&\n            (obj.metadata = message.metadata ? bank_1.Metadata.toJSON(message.metadata) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDenomMetadataResponse();\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bank_1.Metadata.fromPartial(object.metadata);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDenomOwnersRequest() {\n    return {\n        denom: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryDenomOwnersRequest = {\n    typeUrl: \"/cosmos.bank.v1beta1.QueryDenomOwnersRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDenomOwnersRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDenomOwnersRequest();\n        if ((0, helpers_1.isSet)(object.denom))\n            obj.denom = String(object.denom);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDenomOwnersRequest();\n        message.denom = object.denom ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseDenomOwner() {\n    return {\n        address: \"\",\n        balance: coin_1.Coin.fromPartial({}),\n    };\n}\nexports.DenomOwner = {\n    typeUrl: \"/cosmos.bank.v1beta1.DenomOwner\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.balance !== undefined) {\n            coin_1.Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDenomOwner();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.balance = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseDenomOwner();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.balance))\n            obj.balance = coin_1.Coin.fromJSON(object.balance);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? coin_1.Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseDenomOwner();\n        message.address = object.address ?? \"\";\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = coin_1.Coin.fromPartial(object.balance);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDenomOwnersResponse() {\n    return {\n        denomOwners: [],\n        pagination: undefined,\n    };\n}\nexports.QueryDenomOwnersResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.QueryDenomOwnersResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.denomOwners) {\n            exports.DenomOwner.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDenomOwnersResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomOwners.push(exports.DenomOwner.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDenomOwnersResponse();\n        if (Array.isArray(object?.denomOwners))\n            obj.denomOwners = object.denomOwners.map((e) => exports.DenomOwner.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denomOwners) {\n            obj.denomOwners = message.denomOwners.map((e) => (e ? exports.DenomOwner.toJSON(e) : undefined));\n        }\n        else {\n            obj.denomOwners = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDenomOwnersResponse();\n        message.denomOwners = object.denomOwners?.map((e) => exports.DenomOwner.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQuerySendEnabledRequest() {\n    return {\n        denoms: [],\n        pagination: undefined,\n    };\n}\nexports.QuerySendEnabledRequest = {\n    typeUrl: \"/cosmos.bank.v1beta1.QuerySendEnabledRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.denoms) {\n            writer.uint32(10).string(v);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(794).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQuerySendEnabledRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denoms.push(reader.string());\n                    break;\n                case 99:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQuerySendEnabledRequest();\n        if (Array.isArray(object?.denoms))\n            obj.denoms = object.denoms.map((e) => String(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denoms) {\n            obj.denoms = message.denoms.map((e) => e);\n        }\n        else {\n            obj.denoms = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQuerySendEnabledRequest();\n        message.denoms = object.denoms?.map((e) => e) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQuerySendEnabledResponse() {\n    return {\n        sendEnabled: [],\n        pagination: undefined,\n    };\n}\nexports.QuerySendEnabledResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.QuerySendEnabledResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.sendEnabled) {\n            bank_1.SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(794).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQuerySendEnabledResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(bank_1.SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 99:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQuerySendEnabledResponse();\n        if (Array.isArray(object?.sendEnabled))\n            obj.sendEnabled = object.sendEnabled.map((e) => bank_1.SendEnabled.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => (e ? bank_1.SendEnabled.toJSON(e) : undefined));\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQuerySendEnabledResponse();\n        message.sendEnabled = object.sendEnabled?.map((e) => bank_1.SendEnabled.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Balance = this.Balance.bind(this);\n        this.AllBalances = this.AllBalances.bind(this);\n        this.SpendableBalances = this.SpendableBalances.bind(this);\n        this.SpendableBalanceByDenom = this.SpendableBalanceByDenom.bind(this);\n        this.TotalSupply = this.TotalSupply.bind(this);\n        this.SupplyOf = this.SupplyOf.bind(this);\n        this.Params = this.Params.bind(this);\n        this.DenomMetadata = this.DenomMetadata.bind(this);\n        this.DenomsMetadata = this.DenomsMetadata.bind(this);\n        this.DenomOwners = this.DenomOwners.bind(this);\n        this.SendEnabled = this.SendEnabled.bind(this);\n    }\n    Balance(request) {\n        const data = exports.QueryBalanceRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"Balance\", data);\n        return promise.then((data) => exports.QueryBalanceResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    AllBalances(request) {\n        const data = exports.QueryAllBalancesRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"AllBalances\", data);\n        return promise.then((data) => exports.QueryAllBalancesResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    SpendableBalances(request) {\n        const data = exports.QuerySpendableBalancesRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"SpendableBalances\", data);\n        return promise.then((data) => exports.QuerySpendableBalancesResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    SpendableBalanceByDenom(request) {\n        const data = exports.QuerySpendableBalanceByDenomRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"SpendableBalanceByDenom\", data);\n        return promise.then((data) => exports.QuerySpendableBalanceByDenomResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    TotalSupply(request = {\n        pagination: pagination_1.PageRequest.fromPartial({}),\n    }) {\n        const data = exports.QueryTotalSupplyRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"TotalSupply\", data);\n        return promise.then((data) => exports.QueryTotalSupplyResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    SupplyOf(request) {\n        const data = exports.QuerySupplyOfRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"SupplyOf\", data);\n        return promise.then((data) => exports.QuerySupplyOfResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Params(request = {}) {\n        const data = exports.QueryParamsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"Params\", data);\n        return promise.then((data) => exports.QueryParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    DenomMetadata(request) {\n        const data = exports.QueryDenomMetadataRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"DenomMetadata\", data);\n        return promise.then((data) => exports.QueryDenomMetadataResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    DenomsMetadata(request = {\n        pagination: pagination_1.PageRequest.fromPartial({}),\n    }) {\n        const data = exports.QueryDenomsMetadataRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"DenomsMetadata\", data);\n        return promise.then((data) => exports.QueryDenomsMetadataResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    DenomOwners(request) {\n        const data = exports.QueryDenomOwnersRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"DenomOwners\", data);\n        return promise.then((data) => exports.QueryDenomOwnersResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    SendEnabled(request) {\n        const data = exports.QuerySendEnabledRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"SendEnabled\", data);\n        return promise.then((data) => exports.QuerySendEnabledResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\n//# sourceMappingURL=query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgSetSendEnabledResponse = exports.MsgSetSendEnabled = exports.MsgUpdateParamsResponse = exports.MsgUpdateParams = exports.MsgMultiSendResponse = exports.MsgMultiSend = exports.MsgSendResponse = exports.MsgSend = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst bank_1 = require(\"./bank\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.bank.v1beta1\";\nfunction createBaseMsgSend() {\n    return {\n        fromAddress: \"\",\n        toAddress: \"\",\n        amount: [],\n    };\n}\nexports.MsgSend = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgSend\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSend();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgSend();\n        if ((0, helpers_1.isSet)(object.fromAddress))\n            obj.fromAddress = String(object.fromAddress);\n        if ((0, helpers_1.isSet)(object.toAddress))\n            obj.toAddress = String(object.toAddress);\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgSend();\n        message.fromAddress = object.fromAddress ?? \"\";\n        message.toAddress = object.toAddress ?? \"\";\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgSendResponse() {\n    return {};\n}\nexports.MsgSendResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgSendResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSendResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgSendResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgSendResponse();\n        return message;\n    },\n};\nfunction createBaseMsgMultiSend() {\n    return {\n        inputs: [],\n        outputs: [],\n    };\n}\nexports.MsgMultiSend = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.inputs) {\n            bank_1.Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            bank_1.Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgMultiSend();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(bank_1.Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(bank_1.Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgMultiSend();\n        if (Array.isArray(object?.inputs))\n            obj.inputs = object.inputs.map((e) => bank_1.Input.fromJSON(e));\n        if (Array.isArray(object?.outputs))\n            obj.outputs = object.outputs.map((e) => bank_1.Output.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? bank_1.Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => (e ? bank_1.Output.toJSON(e) : undefined));\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgMultiSend();\n        message.inputs = object.inputs?.map((e) => bank_1.Input.fromPartial(e)) || [];\n        message.outputs = object.outputs?.map((e) => bank_1.Output.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgMultiSendResponse() {\n    return {};\n}\nexports.MsgMultiSendResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSendResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgMultiSendResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgMultiSendResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgMultiSendResponse();\n        return message;\n    },\n};\nfunction createBaseMsgUpdateParams() {\n    return {\n        authority: \"\",\n        params: bank_1.Params.fromPartial({}),\n    };\n}\nexports.MsgUpdateParams = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgUpdateParams\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.authority !== \"\") {\n            writer.uint32(10).string(message.authority);\n        }\n        if (message.params !== undefined) {\n            bank_1.Params.encode(message.params, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authority = reader.string();\n                    break;\n                case 2:\n                    message.params = bank_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUpdateParams();\n        if ((0, helpers_1.isSet)(object.authority))\n            obj.authority = String(object.authority);\n        if ((0, helpers_1.isSet)(object.params))\n            obj.params = bank_1.Params.fromJSON(object.params);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.authority !== undefined && (obj.authority = message.authority);\n        message.params !== undefined && (obj.params = message.params ? bank_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateParams();\n        message.authority = object.authority ?? \"\";\n        if (object.params !== undefined && object.params !== null) {\n            message.params = bank_1.Params.fromPartial(object.params);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgUpdateParamsResponse() {\n    return {};\n}\nexports.MsgUpdateParamsResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgUpdateParamsResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgUpdateParamsResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateParamsResponse();\n        return message;\n    },\n};\nfunction createBaseMsgSetSendEnabled() {\n    return {\n        authority: \"\",\n        sendEnabled: [],\n        useDefaultFor: [],\n    };\n}\nexports.MsgSetSendEnabled = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgSetSendEnabled\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.authority !== \"\") {\n            writer.uint32(10).string(message.authority);\n        }\n        for (const v of message.sendEnabled) {\n            bank_1.SendEnabled.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.useDefaultFor) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSetSendEnabled();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authority = reader.string();\n                    break;\n                case 2:\n                    message.sendEnabled.push(bank_1.SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.useDefaultFor.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgSetSendEnabled();\n        if ((0, helpers_1.isSet)(object.authority))\n            obj.authority = String(object.authority);\n        if (Array.isArray(object?.sendEnabled))\n            obj.sendEnabled = object.sendEnabled.map((e) => bank_1.SendEnabled.fromJSON(e));\n        if (Array.isArray(object?.useDefaultFor))\n            obj.useDefaultFor = object.useDefaultFor.map((e) => String(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.authority !== undefined && (obj.authority = message.authority);\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => (e ? bank_1.SendEnabled.toJSON(e) : undefined));\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        if (message.useDefaultFor) {\n            obj.useDefaultFor = message.useDefaultFor.map((e) => e);\n        }\n        else {\n            obj.useDefaultFor = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgSetSendEnabled();\n        message.authority = object.authority ?? \"\";\n        message.sendEnabled = object.sendEnabled?.map((e) => bank_1.SendEnabled.fromPartial(e)) || [];\n        message.useDefaultFor = object.useDefaultFor?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseMsgSetSendEnabledResponse() {\n    return {};\n}\nexports.MsgSetSendEnabledResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgSetSendEnabledResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSetSendEnabledResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgSetSendEnabledResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgSetSendEnabledResponse();\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Send = this.Send.bind(this);\n        this.MultiSend = this.MultiSend.bind(this);\n        this.UpdateParams = this.UpdateParams.bind(this);\n        this.SetSendEnabled = this.SetSendEnabled.bind(this);\n    }\n    Send(request) {\n        const data = exports.MsgSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"Send\", data);\n        return promise.then((data) => exports.MsgSendResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    MultiSend(request) {\n        const data = exports.MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"MultiSend\", data);\n        return promise.then((data) => exports.MsgMultiSendResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpdateParams(request) {\n        const data = exports.MsgUpdateParams.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"UpdateParams\", data);\n        return promise.then((data) => exports.MsgUpdateParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    SetSendEnabled(request) {\n        const data = exports.MsgSetSendEnabled.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"SetSendEnabled\", data);\n        return promise.then((data) => exports.MsgSetSendEnabledResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SearchTxsResult = exports.TxMsgData = exports.MsgData = exports.SimulationResponse = exports.Result = exports.GasInfo = exports.Attribute = exports.StringEvent = exports.ABCIMessageLog = exports.TxResponse = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst types_1 = require(\"../../../../tendermint/abci/types\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"cosmos.base.abci.v1beta1\";\nfunction createBaseTxResponse() {\n    return {\n        height: BigInt(0),\n        txhash: \"\",\n        codespace: \"\",\n        code: 0,\n        data: \"\",\n        rawLog: \"\",\n        logs: [],\n        info: \"\",\n        gasWanted: BigInt(0),\n        gasUsed: BigInt(0),\n        tx: undefined,\n        timestamp: \"\",\n        events: [],\n    };\n}\nexports.TxResponse = {\n    typeUrl: \"/cosmos.base.abci.v1beta1.TxResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.height !== BigInt(0)) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== \"\") {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== \"\") {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== \"\") {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            exports.ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== \"\") {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== BigInt(0)) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== BigInt(0)) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            any_1.Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== \"\") {\n            writer.uint32(98).string(message.timestamp);\n        }\n        for (const v of message.events) {\n            types_1.Event.encode(v, writer.uint32(106).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTxResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = reader.int64();\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(exports.ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = reader.int64();\n                    break;\n                case 10:\n                    message.gasUsed = reader.int64();\n                    break;\n                case 11:\n                    message.tx = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                case 13:\n                    message.events.push(types_1.Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTxResponse();\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        if ((0, helpers_1.isSet)(object.txhash))\n            obj.txhash = String(object.txhash);\n        if ((0, helpers_1.isSet)(object.codespace))\n            obj.codespace = String(object.codespace);\n        if ((0, helpers_1.isSet)(object.code))\n            obj.code = Number(object.code);\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = String(object.data);\n        if ((0, helpers_1.isSet)(object.rawLog))\n            obj.rawLog = String(object.rawLog);\n        if (Array.isArray(object?.logs))\n            obj.logs = object.logs.map((e) => exports.ABCIMessageLog.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.info))\n            obj.info = String(object.info);\n        if ((0, helpers_1.isSet)(object.gasWanted))\n            obj.gasWanted = BigInt(object.gasWanted.toString());\n        if ((0, helpers_1.isSet)(object.gasUsed))\n            obj.gasUsed = BigInt(object.gasUsed.toString());\n        if ((0, helpers_1.isSet)(object.tx))\n            obj.tx = any_1.Any.fromJSON(object.tx);\n        if ((0, helpers_1.isSet)(object.timestamp))\n            obj.timestamp = String(object.timestamp);\n        if (Array.isArray(object?.events))\n            obj.events = object.events.map((e) => types_1.Event.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = Math.round(message.code));\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => (e ? exports.ABCIMessageLog.toJSON(e) : undefined));\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = (message.gasWanted || BigInt(0)).toString());\n        message.gasUsed !== undefined && (obj.gasUsed = (message.gasUsed || BigInt(0)).toString());\n        message.tx !== undefined && (obj.tx = message.tx ? any_1.Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? types_1.Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTxResponse();\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        message.txhash = object.txhash ?? \"\";\n        message.codespace = object.codespace ?? \"\";\n        message.code = object.code ?? 0;\n        message.data = object.data ?? \"\";\n        message.rawLog = object.rawLog ?? \"\";\n        message.logs = object.logs?.map((e) => exports.ABCIMessageLog.fromPartial(e)) || [];\n        message.info = object.info ?? \"\";\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = BigInt(object.gasWanted.toString());\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = BigInt(object.gasUsed.toString());\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = any_1.Any.fromPartial(object.tx);\n        }\n        message.timestamp = object.timestamp ?? \"\";\n        message.events = object.events?.map((e) => types_1.Event.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseABCIMessageLog() {\n    return {\n        msgIndex: 0,\n        log: \"\",\n        events: [],\n    };\n}\nexports.ABCIMessageLog = {\n    typeUrl: \"/cosmos.base.abci.v1beta1.ABCIMessageLog\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            exports.StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseABCIMessageLog();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(exports.StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseABCIMessageLog();\n        if ((0, helpers_1.isSet)(object.msgIndex))\n            obj.msgIndex = Number(object.msgIndex);\n        if ((0, helpers_1.isSet)(object.log))\n            obj.log = String(object.log);\n        if (Array.isArray(object?.events))\n            obj.events = object.events.map((e) => exports.StringEvent.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = Math.round(message.msgIndex));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? exports.StringEvent.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseABCIMessageLog();\n        message.msgIndex = object.msgIndex ?? 0;\n        message.log = object.log ?? \"\";\n        message.events = object.events?.map((e) => exports.StringEvent.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseStringEvent() {\n    return {\n        type: \"\",\n        attributes: [],\n    };\n}\nexports.StringEvent = {\n    typeUrl: \"/cosmos.base.abci.v1beta1.StringEvent\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            exports.Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStringEvent();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(exports.Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseStringEvent();\n        if ((0, helpers_1.isSet)(object.type))\n            obj.type = String(object.type);\n        if (Array.isArray(object?.attributes))\n            obj.attributes = object.attributes.map((e) => exports.Attribute.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => (e ? exports.Attribute.toJSON(e) : undefined));\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseStringEvent();\n        message.type = object.type ?? \"\";\n        message.attributes = object.attributes?.map((e) => exports.Attribute.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseAttribute() {\n    return {\n        key: \"\",\n        value: \"\",\n    };\n}\nexports.Attribute = {\n    typeUrl: \"/cosmos.base.abci.v1beta1.Attribute\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAttribute();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseAttribute();\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = String(object.key);\n        if ((0, helpers_1.isSet)(object.value))\n            obj.value = String(object.value);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseAttribute();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGasInfo() {\n    return {\n        gasWanted: BigInt(0),\n        gasUsed: BigInt(0),\n    };\n}\nexports.GasInfo = {\n    typeUrl: \"/cosmos.base.abci.v1beta1.GasInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.gasWanted !== BigInt(0)) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== BigInt(0)) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGasInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = reader.uint64();\n                    break;\n                case 2:\n                    message.gasUsed = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseGasInfo();\n        if ((0, helpers_1.isSet)(object.gasWanted))\n            obj.gasWanted = BigInt(object.gasWanted.toString());\n        if ((0, helpers_1.isSet)(object.gasUsed))\n            obj.gasUsed = BigInt(object.gasUsed.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = (message.gasWanted || BigInt(0)).toString());\n        message.gasUsed !== undefined && (obj.gasUsed = (message.gasUsed || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseGasInfo();\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = BigInt(object.gasWanted.toString());\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = BigInt(object.gasUsed.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseResult() {\n    return {\n        data: new Uint8Array(),\n        log: \"\",\n        events: [],\n        msgResponses: [],\n    };\n}\nexports.Result = {\n    typeUrl: \"/cosmos.base.abci.v1beta1.Result\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            types_1.Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.msgResponses) {\n            any_1.Any.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResult();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(types_1.Event.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.msgResponses.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResult();\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = (0, helpers_1.bytesFromBase64)(object.data);\n        if ((0, helpers_1.isSet)(object.log))\n            obj.log = String(object.log);\n        if (Array.isArray(object?.events))\n            obj.events = object.events.map((e) => types_1.Event.fromJSON(e));\n        if (Array.isArray(object?.msgResponses))\n            obj.msgResponses = object.msgResponses.map((e) => any_1.Any.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = (0, helpers_1.base64FromBytes)(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? types_1.Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        if (message.msgResponses) {\n            obj.msgResponses = message.msgResponses.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.msgResponses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResult();\n        message.data = object.data ?? new Uint8Array();\n        message.log = object.log ?? \"\";\n        message.events = object.events?.map((e) => types_1.Event.fromPartial(e)) || [];\n        message.msgResponses = object.msgResponses?.map((e) => any_1.Any.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseSimulationResponse() {\n    return {\n        gasInfo: exports.GasInfo.fromPartial({}),\n        result: undefined,\n    };\n}\nexports.SimulationResponse = {\n    typeUrl: \"/cosmos.base.abci.v1beta1.SimulationResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.gasInfo !== undefined) {\n            exports.GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            exports.Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSimulationResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = exports.GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = exports.Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSimulationResponse();\n        if ((0, helpers_1.isSet)(object.gasInfo))\n            obj.gasInfo = exports.GasInfo.fromJSON(object.gasInfo);\n        if ((0, helpers_1.isSet)(object.result))\n            obj.result = exports.Result.fromJSON(object.result);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo ? exports.GasInfo.toJSON(message.gasInfo) : undefined);\n        message.result !== undefined && (obj.result = message.result ? exports.Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSimulationResponse();\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = exports.GasInfo.fromPartial(object.gasInfo);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = exports.Result.fromPartial(object.result);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgData() {\n    return {\n        msgType: \"\",\n        data: new Uint8Array(),\n    };\n}\nexports.MsgData = {\n    typeUrl: \"/cosmos.base.abci.v1beta1.MsgData\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.msgType !== \"\") {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgData();\n        if ((0, helpers_1.isSet)(object.msgType))\n            obj.msgType = String(object.msgType);\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = (0, helpers_1.bytesFromBase64)(object.data);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = (0, helpers_1.base64FromBytes)(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgData();\n        message.msgType = object.msgType ?? \"\";\n        message.data = object.data ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseTxMsgData() {\n    return {\n        data: [],\n        msgResponses: [],\n    };\n}\nexports.TxMsgData = {\n    typeUrl: \"/cosmos.base.abci.v1beta1.TxMsgData\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.data) {\n            exports.MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.msgResponses) {\n            any_1.Any.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTxMsgData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(exports.MsgData.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.msgResponses.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTxMsgData();\n        if (Array.isArray(object?.data))\n            obj.data = object.data.map((e) => exports.MsgData.fromJSON(e));\n        if (Array.isArray(object?.msgResponses))\n            obj.msgResponses = object.msgResponses.map((e) => any_1.Any.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? exports.MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        if (message.msgResponses) {\n            obj.msgResponses = message.msgResponses.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.msgResponses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTxMsgData();\n        message.data = object.data?.map((e) => exports.MsgData.fromPartial(e)) || [];\n        message.msgResponses = object.msgResponses?.map((e) => any_1.Any.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseSearchTxsResult() {\n    return {\n        totalCount: BigInt(0),\n        count: BigInt(0),\n        pageNumber: BigInt(0),\n        pageTotal: BigInt(0),\n        limit: BigInt(0),\n        txs: [],\n    };\n}\nexports.SearchTxsResult = {\n    typeUrl: \"/cosmos.base.abci.v1beta1.SearchTxsResult\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.totalCount !== BigInt(0)) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== BigInt(0)) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== BigInt(0)) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== BigInt(0)) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== BigInt(0)) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            exports.TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSearchTxsResult();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = reader.uint64();\n                    break;\n                case 2:\n                    message.count = reader.uint64();\n                    break;\n                case 3:\n                    message.pageNumber = reader.uint64();\n                    break;\n                case 4:\n                    message.pageTotal = reader.uint64();\n                    break;\n                case 5:\n                    message.limit = reader.uint64();\n                    break;\n                case 6:\n                    message.txs.push(exports.TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSearchTxsResult();\n        if ((0, helpers_1.isSet)(object.totalCount))\n            obj.totalCount = BigInt(object.totalCount.toString());\n        if ((0, helpers_1.isSet)(object.count))\n            obj.count = BigInt(object.count.toString());\n        if ((0, helpers_1.isSet)(object.pageNumber))\n            obj.pageNumber = BigInt(object.pageNumber.toString());\n        if ((0, helpers_1.isSet)(object.pageTotal))\n            obj.pageTotal = BigInt(object.pageTotal.toString());\n        if ((0, helpers_1.isSet)(object.limit))\n            obj.limit = BigInt(object.limit.toString());\n        if (Array.isArray(object?.txs))\n            obj.txs = object.txs.map((e) => exports.TxResponse.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = (message.totalCount || BigInt(0)).toString());\n        message.count !== undefined && (obj.count = (message.count || BigInt(0)).toString());\n        message.pageNumber !== undefined && (obj.pageNumber = (message.pageNumber || BigInt(0)).toString());\n        message.pageTotal !== undefined && (obj.pageTotal = (message.pageTotal || BigInt(0)).toString());\n        message.limit !== undefined && (obj.limit = (message.limit || BigInt(0)).toString());\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? exports.TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSearchTxsResult();\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = BigInt(object.totalCount.toString());\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = BigInt(object.count.toString());\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = BigInt(object.pageNumber.toString());\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = BigInt(object.pageTotal.toString());\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = BigInt(object.limit.toString());\n        }\n        message.txs = object.txs?.map((e) => exports.TxResponse.fromPartial(e)) || [];\n        return message;\n    },\n};\n//# sourceMappingURL=abci.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PageResponse = exports.PageRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"cosmos.base.query.v1beta1\";\nfunction createBasePageRequest() {\n    return {\n        key: new Uint8Array(),\n        offset: BigInt(0),\n        limit: BigInt(0),\n        countTotal: false,\n        reverse: false,\n    };\n}\nexports.PageRequest = {\n    typeUrl: \"/cosmos.base.query.v1beta1.PageRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== BigInt(0)) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== BigInt(0)) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        if (message.reverse === true) {\n            writer.uint32(40).bool(message.reverse);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePageRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = reader.uint64();\n                    break;\n                case 3:\n                    message.limit = reader.uint64();\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                case 5:\n                    message.reverse = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBasePageRequest();\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = (0, helpers_1.bytesFromBase64)(object.key);\n        if ((0, helpers_1.isSet)(object.offset))\n            obj.offset = BigInt(object.offset.toString());\n        if ((0, helpers_1.isSet)(object.limit))\n            obj.limit = BigInt(object.limit.toString());\n        if ((0, helpers_1.isSet)(object.countTotal))\n            obj.countTotal = Boolean(object.countTotal);\n        if ((0, helpers_1.isSet)(object.reverse))\n            obj.reverse = Boolean(object.reverse);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = (message.offset || BigInt(0)).toString());\n        message.limit !== undefined && (obj.limit = (message.limit || BigInt(0)).toString());\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        message.reverse !== undefined && (obj.reverse = message.reverse);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBasePageRequest();\n        message.key = object.key ?? new Uint8Array();\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = BigInt(object.offset.toString());\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = BigInt(object.limit.toString());\n        }\n        message.countTotal = object.countTotal ?? false;\n        message.reverse = object.reverse ?? false;\n        return message;\n    },\n};\nfunction createBasePageResponse() {\n    return {\n        nextKey: new Uint8Array(),\n        total: BigInt(0),\n    };\n}\nexports.PageResponse = {\n    typeUrl: \"/cosmos.base.query.v1beta1.PageResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== BigInt(0)) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePageResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBasePageResponse();\n        if ((0, helpers_1.isSet)(object.nextKey))\n            obj.nextKey = (0, helpers_1.bytesFromBase64)(object.nextKey);\n        if ((0, helpers_1.isSet)(object.total))\n            obj.total = BigInt(object.total.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined &&\n            (obj.nextKey = (0, helpers_1.base64FromBytes)(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = (message.total || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBasePageResponse();\n        message.nextKey = object.nextKey ?? new Uint8Array();\n        if (object.total !== undefined && object.total !== null) {\n            message.total = BigInt(object.total.toString());\n        }\n        return message;\n    },\n};\n//# sourceMappingURL=pagination.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DecProto = exports.IntProto = exports.DecCoin = exports.Coin = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.base.v1beta1\";\nfunction createBaseCoin() {\n    return {\n        denom: \"\",\n        amount: \"\",\n    };\n}\nexports.Coin = {\n    typeUrl: \"/cosmos.base.v1beta1.Coin\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCoin();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCoin();\n        if ((0, helpers_1.isSet)(object.denom))\n            obj.denom = String(object.denom);\n        if ((0, helpers_1.isSet)(object.amount))\n            obj.amount = String(object.amount);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCoin();\n        message.denom = object.denom ?? \"\";\n        message.amount = object.amount ?? \"\";\n        return message;\n    },\n};\nfunction createBaseDecCoin() {\n    return {\n        denom: \"\",\n        amount: \"\",\n    };\n}\nexports.DecCoin = {\n    typeUrl: \"/cosmos.base.v1beta1.DecCoin\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDecCoin();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseDecCoin();\n        if ((0, helpers_1.isSet)(object.denom))\n            obj.denom = String(object.denom);\n        if ((0, helpers_1.isSet)(object.amount))\n            obj.amount = String(object.amount);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseDecCoin();\n        message.denom = object.denom ?? \"\";\n        message.amount = object.amount ?? \"\";\n        return message;\n    },\n};\nfunction createBaseIntProto() {\n    return {\n        int: \"\",\n    };\n}\nexports.IntProto = {\n    typeUrl: \"/cosmos.base.v1beta1.IntProto\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseIntProto();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseIntProto();\n        if ((0, helpers_1.isSet)(object.int))\n            obj.int = String(object.int);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseIntProto();\n        message.int = object.int ?? \"\";\n        return message;\n    },\n};\nfunction createBaseDecProto() {\n    return {\n        dec: \"\",\n    };\n}\nexports.DecProto = {\n    typeUrl: \"/cosmos.base.v1beta1.DecProto\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDecProto();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseDecProto();\n        if ((0, helpers_1.isSet)(object.dec))\n            obj.dec = String(object.dec);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseDecProto();\n        message.dec = object.dec ?? \"\";\n        return message;\n    },\n};\n//# sourceMappingURL=coin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PrivKey = exports.PubKey = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.crypto.ed25519\";\nfunction createBasePubKey() {\n    return {\n        key: new Uint8Array(),\n    };\n}\nexports.PubKey = {\n    typeUrl: \"/cosmos.crypto.ed25519.PubKey\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePubKey();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBasePubKey();\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = (0, helpers_1.bytesFromBase64)(object.key);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBasePubKey();\n        message.key = object.key ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBasePrivKey() {\n    return {\n        key: new Uint8Array(),\n    };\n}\nexports.PrivKey = {\n    typeUrl: \"/cosmos.crypto.ed25519.PrivKey\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePrivKey();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBasePrivKey();\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = (0, helpers_1.bytesFromBase64)(object.key);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBasePrivKey();\n        message.key = object.key ?? new Uint8Array();\n        return message;\n    },\n};\n//# sourceMappingURL=keys.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LegacyAminoPubKey = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.crypto.multisig\";\nfunction createBaseLegacyAminoPubKey() {\n    return {\n        threshold: 0,\n        publicKeys: [],\n    };\n}\nexports.LegacyAminoPubKey = {\n    typeUrl: \"/cosmos.crypto.multisig.LegacyAminoPubKey\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.threshold !== 0) {\n            writer.uint32(8).uint32(message.threshold);\n        }\n        for (const v of message.publicKeys) {\n            any_1.Any.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLegacyAminoPubKey();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.threshold = reader.uint32();\n                    break;\n                case 2:\n                    message.publicKeys.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseLegacyAminoPubKey();\n        if ((0, helpers_1.isSet)(object.threshold))\n            obj.threshold = Number(object.threshold);\n        if (Array.isArray(object?.publicKeys))\n            obj.publicKeys = object.publicKeys.map((e) => any_1.Any.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.threshold !== undefined && (obj.threshold = Math.round(message.threshold));\n        if (message.publicKeys) {\n            obj.publicKeys = message.publicKeys.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.publicKeys = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseLegacyAminoPubKey();\n        message.threshold = object.threshold ?? 0;\n        message.publicKeys = object.publicKeys?.map((e) => any_1.Any.fromPartial(e)) || [];\n        return message;\n    },\n};\n//# sourceMappingURL=keys.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompactBitArray = exports.MultiSignature = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"cosmos.crypto.multisig.v1beta1\";\nfunction createBaseMultiSignature() {\n    return {\n        signatures: [],\n    };\n}\nexports.MultiSignature = {\n    typeUrl: \"/cosmos.crypto.multisig.v1beta1.MultiSignature\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.signatures) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMultiSignature();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signatures.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMultiSignature();\n        if (Array.isArray(object?.signatures))\n            obj.signatures = object.signatures.map((e) => (0, helpers_1.bytesFromBase64)(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => (0, helpers_1.base64FromBytes)(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMultiSignature();\n        message.signatures = object.signatures?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseCompactBitArray() {\n    return {\n        extraBitsStored: 0,\n        elems: new Uint8Array(),\n    };\n}\nexports.CompactBitArray = {\n    typeUrl: \"/cosmos.crypto.multisig.v1beta1.CompactBitArray\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.extraBitsStored !== 0) {\n            writer.uint32(8).uint32(message.extraBitsStored);\n        }\n        if (message.elems.length !== 0) {\n            writer.uint32(18).bytes(message.elems);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCompactBitArray();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.extraBitsStored = reader.uint32();\n                    break;\n                case 2:\n                    message.elems = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCompactBitArray();\n        if ((0, helpers_1.isSet)(object.extraBitsStored))\n            obj.extraBitsStored = Number(object.extraBitsStored);\n        if ((0, helpers_1.isSet)(object.elems))\n            obj.elems = (0, helpers_1.bytesFromBase64)(object.elems);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.extraBitsStored !== undefined && (obj.extraBitsStored = Math.round(message.extraBitsStored));\n        message.elems !== undefined &&\n            (obj.elems = (0, helpers_1.base64FromBytes)(message.elems !== undefined ? message.elems : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCompactBitArray();\n        message.extraBitsStored = object.extraBitsStored ?? 0;\n        message.elems = object.elems ?? new Uint8Array();\n        return message;\n    },\n};\n//# sourceMappingURL=multisig.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PrivKey = exports.PubKey = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.crypto.secp256k1\";\nfunction createBasePubKey() {\n    return {\n        key: new Uint8Array(),\n    };\n}\nexports.PubKey = {\n    typeUrl: \"/cosmos.crypto.secp256k1.PubKey\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePubKey();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBasePubKey();\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = (0, helpers_1.bytesFromBase64)(object.key);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBasePubKey();\n        message.key = object.key ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBasePrivKey() {\n    return {\n        key: new Uint8Array(),\n    };\n}\nexports.PrivKey = {\n    typeUrl: \"/cosmos.crypto.secp256k1.PrivKey\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePrivKey();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBasePrivKey();\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = (0, helpers_1.bytesFromBase64)(object.key);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBasePrivKey();\n        message.key = object.key ?? new Uint8Array();\n        return message;\n    },\n};\n//# sourceMappingURL=keys.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommunityPoolSpendProposalWithDeposit = exports.DelegationDelegatorReward = exports.DelegatorStartingInfo = exports.CommunityPoolSpendProposal = exports.FeePool = exports.ValidatorSlashEvents = exports.ValidatorSlashEvent = exports.ValidatorOutstandingRewards = exports.ValidatorAccumulatedCommission = exports.ValidatorCurrentRewards = exports.ValidatorHistoricalRewards = exports.Params = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.distribution.v1beta1\";\nfunction createBaseParams() {\n    return {\n        communityTax: \"\",\n        baseProposerReward: \"\",\n        bonusProposerReward: \"\",\n        withdrawAddrEnabled: false,\n    };\n}\nexports.Params = {\n    typeUrl: \"/cosmos.distribution.v1beta1.Params\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.communityTax !== \"\") {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== \"\") {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== \"\") {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseParams();\n        if ((0, helpers_1.isSet)(object.communityTax))\n            obj.communityTax = String(object.communityTax);\n        if ((0, helpers_1.isSet)(object.baseProposerReward))\n            obj.baseProposerReward = String(object.baseProposerReward);\n        if ((0, helpers_1.isSet)(object.bonusProposerReward))\n            obj.bonusProposerReward = String(object.bonusProposerReward);\n        if ((0, helpers_1.isSet)(object.withdrawAddrEnabled))\n            obj.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined && (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined && (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined && (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined && (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseParams();\n        message.communityTax = object.communityTax ?? \"\";\n        message.baseProposerReward = object.baseProposerReward ?? \"\";\n        message.bonusProposerReward = object.bonusProposerReward ?? \"\";\n        message.withdrawAddrEnabled = object.withdrawAddrEnabled ?? false;\n        return message;\n    },\n};\nfunction createBaseValidatorHistoricalRewards() {\n    return {\n        cumulativeRewardRatio: [],\n        referenceCount: 0,\n    };\n}\nexports.ValidatorHistoricalRewards = {\n    typeUrl: \"/cosmos.distribution.v1beta1.ValidatorHistoricalRewards\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValidatorHistoricalRewards();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseValidatorHistoricalRewards();\n        if (Array.isArray(object?.cumulativeRewardRatio))\n            obj.cumulativeRewardRatio = object.cumulativeRewardRatio.map((e) => coin_1.DecCoin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.referenceCount))\n            obj.referenceCount = Number(object.referenceCount);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? coin_1.DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined && (obj.referenceCount = Math.round(message.referenceCount));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseValidatorHistoricalRewards();\n        message.cumulativeRewardRatio = object.cumulativeRewardRatio?.map((e) => coin_1.DecCoin.fromPartial(e)) || [];\n        message.referenceCount = object.referenceCount ?? 0;\n        return message;\n    },\n};\nfunction createBaseValidatorCurrentRewards() {\n    return {\n        rewards: [],\n        period: BigInt(0),\n    };\n}\nexports.ValidatorCurrentRewards = {\n    typeUrl: \"/cosmos.distribution.v1beta1.ValidatorCurrentRewards\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.rewards) {\n            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== BigInt(0)) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValidatorCurrentRewards();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseValidatorCurrentRewards();\n        if (Array.isArray(object?.rewards))\n            obj.rewards = object.rewards.map((e) => coin_1.DecCoin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.period))\n            obj.period = BigInt(object.period.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? coin_1.DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = (message.period || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseValidatorCurrentRewards();\n        message.rewards = object.rewards?.map((e) => coin_1.DecCoin.fromPartial(e)) || [];\n        if (object.period !== undefined && object.period !== null) {\n            message.period = BigInt(object.period.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseValidatorAccumulatedCommission() {\n    return {\n        commission: [],\n    };\n}\nexports.ValidatorAccumulatedCommission = {\n    typeUrl: \"/cosmos.distribution.v1beta1.ValidatorAccumulatedCommission\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.commission) {\n            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValidatorAccumulatedCommission();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseValidatorAccumulatedCommission();\n        if (Array.isArray(object?.commission))\n            obj.commission = object.commission.map((e) => coin_1.DecCoin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => (e ? coin_1.DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseValidatorAccumulatedCommission();\n        message.commission = object.commission?.map((e) => coin_1.DecCoin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseValidatorOutstandingRewards() {\n    return {\n        rewards: [],\n    };\n}\nexports.ValidatorOutstandingRewards = {\n    typeUrl: \"/cosmos.distribution.v1beta1.ValidatorOutstandingRewards\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.rewards) {\n            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValidatorOutstandingRewards();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseValidatorOutstandingRewards();\n        if (Array.isArray(object?.rewards))\n            obj.rewards = object.rewards.map((e) => coin_1.DecCoin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? coin_1.DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseValidatorOutstandingRewards();\n        message.rewards = object.rewards?.map((e) => coin_1.DecCoin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseValidatorSlashEvent() {\n    return {\n        validatorPeriod: BigInt(0),\n        fraction: \"\",\n    };\n}\nexports.ValidatorSlashEvent = {\n    typeUrl: \"/cosmos.distribution.v1beta1.ValidatorSlashEvent\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.validatorPeriod !== BigInt(0)) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== \"\") {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValidatorSlashEvent();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = reader.uint64();\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseValidatorSlashEvent();\n        if ((0, helpers_1.isSet)(object.validatorPeriod))\n            obj.validatorPeriod = BigInt(object.validatorPeriod.toString());\n        if ((0, helpers_1.isSet)(object.fraction))\n            obj.fraction = String(object.fraction);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = (message.validatorPeriod || BigInt(0)).toString());\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseValidatorSlashEvent();\n        if (object.validatorPeriod !== undefined && object.validatorPeriod !== null) {\n            message.validatorPeriod = BigInt(object.validatorPeriod.toString());\n        }\n        message.fraction = object.fraction ?? \"\";\n        return message;\n    },\n};\nfunction createBaseValidatorSlashEvents() {\n    return {\n        validatorSlashEvents: [],\n    };\n}\nexports.ValidatorSlashEvents = {\n    typeUrl: \"/cosmos.distribution.v1beta1.ValidatorSlashEvents\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.validatorSlashEvents) {\n            exports.ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValidatorSlashEvents();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(exports.ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseValidatorSlashEvents();\n        if (Array.isArray(object?.validatorSlashEvents))\n            obj.validatorSlashEvents = object.validatorSlashEvents.map((e) => exports.ValidatorSlashEvent.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? exports.ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseValidatorSlashEvents();\n        message.validatorSlashEvents =\n            object.validatorSlashEvents?.map((e) => exports.ValidatorSlashEvent.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseFeePool() {\n    return {\n        communityPool: [],\n    };\n}\nexports.FeePool = {\n    typeUrl: \"/cosmos.distribution.v1beta1.FeePool\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.communityPool) {\n            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFeePool();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseFeePool();\n        if (Array.isArray(object?.communityPool))\n            obj.communityPool = object.communityPool.map((e) => coin_1.DecCoin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => (e ? coin_1.DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseFeePool();\n        message.communityPool = object.communityPool?.map((e) => coin_1.DecCoin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseCommunityPoolSpendProposal() {\n    return {\n        title: \"\",\n        description: \"\",\n        recipient: \"\",\n        amount: [],\n    };\n}\nexports.CommunityPoolSpendProposal = {\n    typeUrl: \"/cosmos.distribution.v1beta1.CommunityPoolSpendProposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCommunityPoolSpendProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCommunityPoolSpendProposal();\n        if ((0, helpers_1.isSet)(object.title))\n            obj.title = String(object.title);\n        if ((0, helpers_1.isSet)(object.description))\n            obj.description = String(object.description);\n        if ((0, helpers_1.isSet)(object.recipient))\n            obj.recipient = String(object.recipient);\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCommunityPoolSpendProposal();\n        message.title = object.title ?? \"\";\n        message.description = object.description ?? \"\";\n        message.recipient = object.recipient ?? \"\";\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseDelegatorStartingInfo() {\n    return {\n        previousPeriod: BigInt(0),\n        stake: \"\",\n        height: BigInt(0),\n    };\n}\nexports.DelegatorStartingInfo = {\n    typeUrl: \"/cosmos.distribution.v1beta1.DelegatorStartingInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.previousPeriod !== BigInt(0)) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== \"\") {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== BigInt(0)) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDelegatorStartingInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = reader.uint64();\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseDelegatorStartingInfo();\n        if ((0, helpers_1.isSet)(object.previousPeriod))\n            obj.previousPeriod = BigInt(object.previousPeriod.toString());\n        if ((0, helpers_1.isSet)(object.stake))\n            obj.stake = String(object.stake);\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = (message.previousPeriod || BigInt(0)).toString());\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseDelegatorStartingInfo();\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = BigInt(object.previousPeriod.toString());\n        }\n        message.stake = object.stake ?? \"\";\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseDelegationDelegatorReward() {\n    return {\n        validatorAddress: \"\",\n        reward: [],\n    };\n}\nexports.DelegationDelegatorReward = {\n    typeUrl: \"/cosmos.distribution.v1beta1.DelegationDelegatorReward\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            coin_1.DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDelegationDelegatorReward();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseDelegationDelegatorReward();\n        if ((0, helpers_1.isSet)(object.validatorAddress))\n            obj.validatorAddress = String(object.validatorAddress);\n        if (Array.isArray(object?.reward))\n            obj.reward = object.reward.map((e) => coin_1.DecCoin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => (e ? coin_1.DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseDelegationDelegatorReward();\n        message.validatorAddress = object.validatorAddress ?? \"\";\n        message.reward = object.reward?.map((e) => coin_1.DecCoin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseCommunityPoolSpendProposalWithDeposit() {\n    return {\n        title: \"\",\n        description: \"\",\n        recipient: \"\",\n        amount: \"\",\n        deposit: \"\",\n    };\n}\nexports.CommunityPoolSpendProposalWithDeposit = {\n    typeUrl: \"/cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== \"\") {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCommunityPoolSpendProposalWithDeposit();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCommunityPoolSpendProposalWithDeposit();\n        if ((0, helpers_1.isSet)(object.title))\n            obj.title = String(object.title);\n        if ((0, helpers_1.isSet)(object.description))\n            obj.description = String(object.description);\n        if ((0, helpers_1.isSet)(object.recipient))\n            obj.recipient = String(object.recipient);\n        if ((0, helpers_1.isSet)(object.amount))\n            obj.amount = String(object.amount);\n        if ((0, helpers_1.isSet)(object.deposit))\n            obj.deposit = String(object.deposit);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCommunityPoolSpendProposalWithDeposit();\n        message.title = object.title ?? \"\";\n        message.description = object.description ?? \"\";\n        message.recipient = object.recipient ?? \"\";\n        message.amount = object.amount ?? \"\";\n        message.deposit = object.deposit ?? \"\";\n        return message;\n    },\n};\n//# sourceMappingURL=distribution.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QueryCommunityPoolResponse = exports.QueryCommunityPoolRequest = exports.QueryDelegatorWithdrawAddressResponse = exports.QueryDelegatorWithdrawAddressRequest = exports.QueryDelegatorValidatorsResponse = exports.QueryDelegatorValidatorsRequest = exports.QueryDelegationTotalRewardsResponse = exports.QueryDelegationTotalRewardsRequest = exports.QueryDelegationRewardsResponse = exports.QueryDelegationRewardsRequest = exports.QueryValidatorSlashesResponse = exports.QueryValidatorSlashesRequest = exports.QueryValidatorCommissionResponse = exports.QueryValidatorCommissionRequest = exports.QueryValidatorOutstandingRewardsResponse = exports.QueryValidatorOutstandingRewardsRequest = exports.QueryValidatorDistributionInfoResponse = exports.QueryValidatorDistributionInfoRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst pagination_1 = require(\"../../base/query/v1beta1/pagination\");\nconst distribution_1 = require(\"./distribution\");\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.distribution.v1beta1\";\nfunction createBaseQueryParamsRequest() {\n    return {};\n}\nexports.QueryParamsRequest = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryParamsRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryParamsRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryParamsRequest();\n        return message;\n    },\n};\nfunction createBaseQueryParamsResponse() {\n    return {\n        params: distribution_1.Params.fromPartial({}),\n    };\n}\nexports.QueryParamsResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryParamsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.params !== undefined) {\n            distribution_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = distribution_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryParamsResponse();\n        if ((0, helpers_1.isSet)(object.params))\n            obj.params = distribution_1.Params.fromJSON(object.params);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? distribution_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryParamsResponse();\n        if (object.params !== undefined && object.params !== null) {\n            message.params = distribution_1.Params.fromPartial(object.params);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryValidatorDistributionInfoRequest() {\n    return {\n        validatorAddress: \"\",\n    };\n}\nexports.QueryValidatorDistributionInfoRequest = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorDistributionInfoRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorDistributionInfoRequest();\n        if ((0, helpers_1.isSet)(object.validatorAddress))\n            obj.validatorAddress = String(object.validatorAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorDistributionInfoRequest();\n        message.validatorAddress = object.validatorAddress ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryValidatorDistributionInfoResponse() {\n    return {\n        operatorAddress: \"\",\n        selfBondRewards: [],\n        commission: [],\n    };\n}\nexports.QueryValidatorDistributionInfoResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        for (const v of message.selfBondRewards) {\n            coin_1.DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commission) {\n            coin_1.DecCoin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorDistributionInfoResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.selfBondRewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commission.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorDistributionInfoResponse();\n        if ((0, helpers_1.isSet)(object.operatorAddress))\n            obj.operatorAddress = String(object.operatorAddress);\n        if (Array.isArray(object?.selfBondRewards))\n            obj.selfBondRewards = object.selfBondRewards.map((e) => coin_1.DecCoin.fromJSON(e));\n        if (Array.isArray(object?.commission))\n            obj.commission = object.commission.map((e) => coin_1.DecCoin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined && (obj.operatorAddress = message.operatorAddress);\n        if (message.selfBondRewards) {\n            obj.selfBondRewards = message.selfBondRewards.map((e) => (e ? coin_1.DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.selfBondRewards = [];\n        }\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => (e ? coin_1.DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorDistributionInfoResponse();\n        message.operatorAddress = object.operatorAddress ?? \"\";\n        message.selfBondRewards = object.selfBondRewards?.map((e) => coin_1.DecCoin.fromPartial(e)) || [];\n        message.commission = object.commission?.map((e) => coin_1.DecCoin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseQueryValidatorOutstandingRewardsRequest() {\n    return {\n        validatorAddress: \"\",\n    };\n}\nexports.QueryValidatorOutstandingRewardsRequest = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorOutstandingRewardsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorOutstandingRewardsRequest();\n        if ((0, helpers_1.isSet)(object.validatorAddress))\n            obj.validatorAddress = String(object.validatorAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorOutstandingRewardsRequest();\n        message.validatorAddress = object.validatorAddress ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryValidatorOutstandingRewardsResponse() {\n    return {\n        rewards: distribution_1.ValidatorOutstandingRewards.fromPartial({}),\n    };\n}\nexports.QueryValidatorOutstandingRewardsResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.rewards !== undefined) {\n            distribution_1.ValidatorOutstandingRewards.encode(message.rewards, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorOutstandingRewardsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards = distribution_1.ValidatorOutstandingRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorOutstandingRewardsResponse();\n        if ((0, helpers_1.isSet)(object.rewards))\n            obj.rewards = distribution_1.ValidatorOutstandingRewards.fromJSON(object.rewards);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards ? distribution_1.ValidatorOutstandingRewards.toJSON(message.rewards) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorOutstandingRewardsResponse();\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = distribution_1.ValidatorOutstandingRewards.fromPartial(object.rewards);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryValidatorCommissionRequest() {\n    return {\n        validatorAddress: \"\",\n    };\n}\nexports.QueryValidatorCommissionRequest = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryValidatorCommissionRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorCommissionRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorCommissionRequest();\n        if ((0, helpers_1.isSet)(object.validatorAddress))\n            obj.validatorAddress = String(object.validatorAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorCommissionRequest();\n        message.validatorAddress = object.validatorAddress ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryValidatorCommissionResponse() {\n    return {\n        commission: distribution_1.ValidatorAccumulatedCommission.fromPartial({}),\n    };\n}\nexports.QueryValidatorCommissionResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryValidatorCommissionResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.commission !== undefined) {\n            distribution_1.ValidatorAccumulatedCommission.encode(message.commission, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorCommissionResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission = distribution_1.ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorCommissionResponse();\n        if ((0, helpers_1.isSet)(object.commission))\n            obj.commission = distribution_1.ValidatorAccumulatedCommission.fromJSON(object.commission);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? distribution_1.ValidatorAccumulatedCommission.toJSON(message.commission)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorCommissionResponse();\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = distribution_1.ValidatorAccumulatedCommission.fromPartial(object.commission);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryValidatorSlashesRequest() {\n    return {\n        validatorAddress: \"\",\n        startingHeight: BigInt(0),\n        endingHeight: BigInt(0),\n        pagination: undefined,\n    };\n}\nexports.QueryValidatorSlashesRequest = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryValidatorSlashesRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.startingHeight !== BigInt(0)) {\n            writer.uint32(16).uint64(message.startingHeight);\n        }\n        if (message.endingHeight !== BigInt(0)) {\n            writer.uint32(24).uint64(message.endingHeight);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorSlashesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.startingHeight = reader.uint64();\n                    break;\n                case 3:\n                    message.endingHeight = reader.uint64();\n                    break;\n                case 4:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorSlashesRequest();\n        if ((0, helpers_1.isSet)(object.validatorAddress))\n            obj.validatorAddress = String(object.validatorAddress);\n        if ((0, helpers_1.isSet)(object.startingHeight))\n            obj.startingHeight = BigInt(object.startingHeight.toString());\n        if ((0, helpers_1.isSet)(object.endingHeight))\n            obj.endingHeight = BigInt(object.endingHeight.toString());\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.startingHeight !== undefined &&\n            (obj.startingHeight = (message.startingHeight || BigInt(0)).toString());\n        message.endingHeight !== undefined && (obj.endingHeight = (message.endingHeight || BigInt(0)).toString());\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorSlashesRequest();\n        message.validatorAddress = object.validatorAddress ?? \"\";\n        if (object.startingHeight !== undefined && object.startingHeight !== null) {\n            message.startingHeight = BigInt(object.startingHeight.toString());\n        }\n        if (object.endingHeight !== undefined && object.endingHeight !== null) {\n            message.endingHeight = BigInt(object.endingHeight.toString());\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryValidatorSlashesResponse() {\n    return {\n        slashes: [],\n        pagination: undefined,\n    };\n}\nexports.QueryValidatorSlashesResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryValidatorSlashesResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.slashes) {\n            distribution_1.ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorSlashesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.slashes.push(distribution_1.ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorSlashesResponse();\n        if (Array.isArray(object?.slashes))\n            obj.slashes = object.slashes.map((e) => distribution_1.ValidatorSlashEvent.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.slashes) {\n            obj.slashes = message.slashes.map((e) => (e ? distribution_1.ValidatorSlashEvent.toJSON(e) : undefined));\n        }\n        else {\n            obj.slashes = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorSlashesResponse();\n        message.slashes = object.slashes?.map((e) => distribution_1.ValidatorSlashEvent.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDelegationRewardsRequest() {\n    return {\n        delegatorAddress: \"\",\n        validatorAddress: \"\",\n    };\n}\nexports.QueryDelegationRewardsRequest = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryDelegationRewardsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegationRewardsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegationRewardsRequest();\n        if ((0, helpers_1.isSet)(object.delegatorAddress))\n            obj.delegatorAddress = String(object.delegatorAddress);\n        if ((0, helpers_1.isSet)(object.validatorAddress))\n            obj.validatorAddress = String(object.validatorAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegationRewardsRequest();\n        message.delegatorAddress = object.delegatorAddress ?? \"\";\n        message.validatorAddress = object.validatorAddress ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryDelegationRewardsResponse() {\n    return {\n        rewards: [],\n    };\n}\nexports.QueryDelegationRewardsResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryDelegationRewardsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.rewards) {\n            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegationRewardsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegationRewardsResponse();\n        if (Array.isArray(object?.rewards))\n            obj.rewards = object.rewards.map((e) => coin_1.DecCoin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? coin_1.DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegationRewardsResponse();\n        message.rewards = object.rewards?.map((e) => coin_1.DecCoin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseQueryDelegationTotalRewardsRequest() {\n    return {\n        delegatorAddress: \"\",\n    };\n}\nexports.QueryDelegationTotalRewardsRequest = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegationTotalRewardsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegationTotalRewardsRequest();\n        if ((0, helpers_1.isSet)(object.delegatorAddress))\n            obj.delegatorAddress = String(object.delegatorAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegationTotalRewardsRequest();\n        message.delegatorAddress = object.delegatorAddress ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryDelegationTotalRewardsResponse() {\n    return {\n        rewards: [],\n        total: [],\n    };\n}\nexports.QueryDelegationTotalRewardsResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.rewards) {\n            distribution_1.DelegationDelegatorReward.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.total) {\n            coin_1.DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegationTotalRewardsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(distribution_1.DelegationDelegatorReward.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.total.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegationTotalRewardsResponse();\n        if (Array.isArray(object?.rewards))\n            obj.rewards = object.rewards.map((e) => distribution_1.DelegationDelegatorReward.fromJSON(e));\n        if (Array.isArray(object?.total))\n            obj.total = object.total.map((e) => coin_1.DecCoin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? distribution_1.DelegationDelegatorReward.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? coin_1.DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegationTotalRewardsResponse();\n        message.rewards = object.rewards?.map((e) => distribution_1.DelegationDelegatorReward.fromPartial(e)) || [];\n        message.total = object.total?.map((e) => coin_1.DecCoin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseQueryDelegatorValidatorsRequest() {\n    return {\n        delegatorAddress: \"\",\n    };\n}\nexports.QueryDelegatorValidatorsRequest = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegatorValidatorsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegatorValidatorsRequest();\n        if ((0, helpers_1.isSet)(object.delegatorAddress))\n            obj.delegatorAddress = String(object.delegatorAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegatorValidatorsRequest();\n        message.delegatorAddress = object.delegatorAddress ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryDelegatorValidatorsResponse() {\n    return {\n        validators: [],\n    };\n}\nexports.QueryDelegatorValidatorsResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.validators) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegatorValidatorsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegatorValidatorsResponse();\n        if (Array.isArray(object?.validators))\n            obj.validators = object.validators.map((e) => String(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e);\n        }\n        else {\n            obj.validators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegatorValidatorsResponse();\n        message.validators = object.validators?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseQueryDelegatorWithdrawAddressRequest() {\n    return {\n        delegatorAddress: \"\",\n    };\n}\nexports.QueryDelegatorWithdrawAddressRequest = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegatorWithdrawAddressRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegatorWithdrawAddressRequest();\n        if ((0, helpers_1.isSet)(object.delegatorAddress))\n            obj.delegatorAddress = String(object.delegatorAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegatorWithdrawAddressRequest();\n        message.delegatorAddress = object.delegatorAddress ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryDelegatorWithdrawAddressResponse() {\n    return {\n        withdrawAddress: \"\",\n    };\n}\nexports.QueryDelegatorWithdrawAddressResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(10).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegatorWithdrawAddressResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegatorWithdrawAddressResponse();\n        if ((0, helpers_1.isSet)(object.withdrawAddress))\n            obj.withdrawAddress = String(object.withdrawAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegatorWithdrawAddressResponse();\n        message.withdrawAddress = object.withdrawAddress ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryCommunityPoolRequest() {\n    return {};\n}\nexports.QueryCommunityPoolRequest = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryCommunityPoolRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryCommunityPoolRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryCommunityPoolRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryCommunityPoolRequest();\n        return message;\n    },\n};\nfunction createBaseQueryCommunityPoolResponse() {\n    return {\n        pool: [],\n    };\n}\nexports.QueryCommunityPoolResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.QueryCommunityPoolResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.pool) {\n            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryCommunityPoolResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pool.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryCommunityPoolResponse();\n        if (Array.isArray(object?.pool))\n            obj.pool = object.pool.map((e) => coin_1.DecCoin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pool) {\n            obj.pool = message.pool.map((e) => (e ? coin_1.DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.pool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryCommunityPoolResponse();\n        message.pool = object.pool?.map((e) => coin_1.DecCoin.fromPartial(e)) || [];\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Params = this.Params.bind(this);\n        this.ValidatorDistributionInfo = this.ValidatorDistributionInfo.bind(this);\n        this.ValidatorOutstandingRewards = this.ValidatorOutstandingRewards.bind(this);\n        this.ValidatorCommission = this.ValidatorCommission.bind(this);\n        this.ValidatorSlashes = this.ValidatorSlashes.bind(this);\n        this.DelegationRewards = this.DelegationRewards.bind(this);\n        this.DelegationTotalRewards = this.DelegationTotalRewards.bind(this);\n        this.DelegatorValidators = this.DelegatorValidators.bind(this);\n        this.DelegatorWithdrawAddress = this.DelegatorWithdrawAddress.bind(this);\n        this.CommunityPool = this.CommunityPool.bind(this);\n    }\n    Params(request = {}) {\n        const data = exports.QueryParamsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Query\", \"Params\", data);\n        return promise.then((data) => exports.QueryParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ValidatorDistributionInfo(request) {\n        const data = exports.QueryValidatorDistributionInfoRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Query\", \"ValidatorDistributionInfo\", data);\n        return promise.then((data) => exports.QueryValidatorDistributionInfoResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ValidatorOutstandingRewards(request) {\n        const data = exports.QueryValidatorOutstandingRewardsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Query\", \"ValidatorOutstandingRewards\", data);\n        return promise.then((data) => exports.QueryValidatorOutstandingRewardsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ValidatorCommission(request) {\n        const data = exports.QueryValidatorCommissionRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Query\", \"ValidatorCommission\", data);\n        return promise.then((data) => exports.QueryValidatorCommissionResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ValidatorSlashes(request) {\n        const data = exports.QueryValidatorSlashesRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Query\", \"ValidatorSlashes\", data);\n        return promise.then((data) => exports.QueryValidatorSlashesResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    DelegationRewards(request) {\n        const data = exports.QueryDelegationRewardsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Query\", \"DelegationRewards\", data);\n        return promise.then((data) => exports.QueryDelegationRewardsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    DelegationTotalRewards(request) {\n        const data = exports.QueryDelegationTotalRewardsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Query\", \"DelegationTotalRewards\", data);\n        return promise.then((data) => exports.QueryDelegationTotalRewardsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    DelegatorValidators(request) {\n        const data = exports.QueryDelegatorValidatorsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Query\", \"DelegatorValidators\", data);\n        return promise.then((data) => exports.QueryDelegatorValidatorsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    DelegatorWithdrawAddress(request) {\n        const data = exports.QueryDelegatorWithdrawAddressRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Query\", \"DelegatorWithdrawAddress\", data);\n        return promise.then((data) => exports.QueryDelegatorWithdrawAddressResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    CommunityPool(request = {}) {\n        const data = exports.QueryCommunityPoolRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Query\", \"CommunityPool\", data);\n        return promise.then((data) => exports.QueryCommunityPoolResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\n//# sourceMappingURL=query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgCommunityPoolSpendResponse = exports.MsgCommunityPoolSpend = exports.MsgUpdateParamsResponse = exports.MsgUpdateParams = exports.MsgFundCommunityPoolResponse = exports.MsgFundCommunityPool = exports.MsgWithdrawValidatorCommissionResponse = exports.MsgWithdrawValidatorCommission = exports.MsgWithdrawDelegatorRewardResponse = exports.MsgWithdrawDelegatorReward = exports.MsgSetWithdrawAddressResponse = exports.MsgSetWithdrawAddress = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst distribution_1 = require(\"./distribution\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.distribution.v1beta1\";\nfunction createBaseMsgSetWithdrawAddress() {\n    return {\n        delegatorAddress: \"\",\n        withdrawAddress: \"\",\n    };\n}\nexports.MsgSetWithdrawAddress = {\n    typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSetWithdrawAddress();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgSetWithdrawAddress();\n        if ((0, helpers_1.isSet)(object.delegatorAddress))\n            obj.delegatorAddress = String(object.delegatorAddress);\n        if ((0, helpers_1.isSet)(object.withdrawAddress))\n            obj.withdrawAddress = String(object.withdrawAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgSetWithdrawAddress();\n        message.delegatorAddress = object.delegatorAddress ?? \"\";\n        message.withdrawAddress = object.withdrawAddress ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgSetWithdrawAddressResponse() {\n    return {};\n}\nexports.MsgSetWithdrawAddressResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSetWithdrawAddressResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgSetWithdrawAddressResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgSetWithdrawAddressResponse();\n        return message;\n    },\n};\nfunction createBaseMsgWithdrawDelegatorReward() {\n    return {\n        delegatorAddress: \"\",\n        validatorAddress: \"\",\n    };\n}\nexports.MsgWithdrawDelegatorReward = {\n    typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgWithdrawDelegatorReward();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgWithdrawDelegatorReward();\n        if ((0, helpers_1.isSet)(object.delegatorAddress))\n            obj.delegatorAddress = String(object.delegatorAddress);\n        if ((0, helpers_1.isSet)(object.validatorAddress))\n            obj.validatorAddress = String(object.validatorAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgWithdrawDelegatorReward();\n        message.delegatorAddress = object.delegatorAddress ?? \"\";\n        message.validatorAddress = object.validatorAddress ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgWithdrawDelegatorRewardResponse() {\n    return {\n        amount: [],\n    };\n}\nexports.MsgWithdrawDelegatorRewardResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgWithdrawDelegatorRewardResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgWithdrawDelegatorRewardResponse();\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgWithdrawDelegatorRewardResponse();\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgWithdrawValidatorCommission() {\n    return {\n        validatorAddress: \"\",\n    };\n}\nexports.MsgWithdrawValidatorCommission = {\n    typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgWithdrawValidatorCommission();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgWithdrawValidatorCommission();\n        if ((0, helpers_1.isSet)(object.validatorAddress))\n            obj.validatorAddress = String(object.validatorAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgWithdrawValidatorCommission();\n        message.validatorAddress = object.validatorAddress ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgWithdrawValidatorCommissionResponse() {\n    return {\n        amount: [],\n    };\n}\nexports.MsgWithdrawValidatorCommissionResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgWithdrawValidatorCommissionResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgWithdrawValidatorCommissionResponse();\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgWithdrawValidatorCommissionResponse();\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgFundCommunityPool() {\n    return {\n        amount: [],\n        depositor: \"\",\n    };\n}\nexports.MsgFundCommunityPool = {\n    typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgFundCommunityPool();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgFundCommunityPool();\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.depositor))\n            obj.depositor = String(object.depositor);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgFundCommunityPool();\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        message.depositor = object.depositor ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgFundCommunityPoolResponse() {\n    return {};\n}\nexports.MsgFundCommunityPoolResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgFundCommunityPoolResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgFundCommunityPoolResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgFundCommunityPoolResponse();\n        return message;\n    },\n};\nfunction createBaseMsgUpdateParams() {\n    return {\n        authority: \"\",\n        params: distribution_1.Params.fromPartial({}),\n    };\n}\nexports.MsgUpdateParams = {\n    typeUrl: \"/cosmos.distribution.v1beta1.MsgUpdateParams\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.authority !== \"\") {\n            writer.uint32(10).string(message.authority);\n        }\n        if (message.params !== undefined) {\n            distribution_1.Params.encode(message.params, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authority = reader.string();\n                    break;\n                case 2:\n                    message.params = distribution_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUpdateParams();\n        if ((0, helpers_1.isSet)(object.authority))\n            obj.authority = String(object.authority);\n        if ((0, helpers_1.isSet)(object.params))\n            obj.params = distribution_1.Params.fromJSON(object.params);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.authority !== undefined && (obj.authority = message.authority);\n        message.params !== undefined && (obj.params = message.params ? distribution_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateParams();\n        message.authority = object.authority ?? \"\";\n        if (object.params !== undefined && object.params !== null) {\n            message.params = distribution_1.Params.fromPartial(object.params);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgUpdateParamsResponse() {\n    return {};\n}\nexports.MsgUpdateParamsResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.MsgUpdateParamsResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgUpdateParamsResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateParamsResponse();\n        return message;\n    },\n};\nfunction createBaseMsgCommunityPoolSpend() {\n    return {\n        authority: \"\",\n        recipient: \"\",\n        amount: [],\n    };\n}\nexports.MsgCommunityPoolSpend = {\n    typeUrl: \"/cosmos.distribution.v1beta1.MsgCommunityPoolSpend\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.authority !== \"\") {\n            writer.uint32(10).string(message.authority);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(18).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCommunityPoolSpend();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authority = reader.string();\n                    break;\n                case 2:\n                    message.recipient = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgCommunityPoolSpend();\n        if ((0, helpers_1.isSet)(object.authority))\n            obj.authority = String(object.authority);\n        if ((0, helpers_1.isSet)(object.recipient))\n            obj.recipient = String(object.recipient);\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.authority !== undefined && (obj.authority = message.authority);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCommunityPoolSpend();\n        message.authority = object.authority ?? \"\";\n        message.recipient = object.recipient ?? \"\";\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgCommunityPoolSpendResponse() {\n    return {};\n}\nexports.MsgCommunityPoolSpendResponse = {\n    typeUrl: \"/cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCommunityPoolSpendResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgCommunityPoolSpendResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgCommunityPoolSpendResponse();\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.SetWithdrawAddress = this.SetWithdrawAddress.bind(this);\n        this.WithdrawDelegatorReward = this.WithdrawDelegatorReward.bind(this);\n        this.WithdrawValidatorCommission = this.WithdrawValidatorCommission.bind(this);\n        this.FundCommunityPool = this.FundCommunityPool.bind(this);\n        this.UpdateParams = this.UpdateParams.bind(this);\n        this.CommunityPoolSpend = this.CommunityPoolSpend.bind(this);\n    }\n    SetWithdrawAddress(request) {\n        const data = exports.MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n        return promise.then((data) => exports.MsgSetWithdrawAddressResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = exports.MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n        return promise.then((data) => exports.MsgWithdrawDelegatorRewardResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = exports.MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n        return promise.then((data) => exports.MsgWithdrawValidatorCommissionResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = exports.MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n        return promise.then((data) => exports.MsgFundCommunityPoolResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpdateParams(request) {\n        const data = exports.MsgUpdateParams.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"UpdateParams\", data);\n        return promise.then((data) => exports.MsgUpdateParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    CommunityPoolSpend(request) {\n        const data = exports.MsgCommunityPoolSpend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"CommunityPoolSpend\", data);\n        return promise.then((data) => exports.MsgCommunityPoolSpendResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Grant = exports.AllowedMsgAllowance = exports.PeriodicAllowance = exports.BasicAllowance = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst timestamp_1 = require(\"../../../google/protobuf/timestamp\");\nconst duration_1 = require(\"../../../google/protobuf/duration\");\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.feegrant.v1beta1\";\nfunction createBaseBasicAllowance() {\n    return {\n        spendLimit: [],\n        expiration: undefined,\n    };\n}\nexports.BasicAllowance = {\n    typeUrl: \"/cosmos.feegrant.v1beta1.BasicAllowance\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.spendLimit) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            timestamp_1.Timestamp.encode(message.expiration, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBasicAllowance();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.spendLimit.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.expiration = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseBasicAllowance();\n        if (Array.isArray(object?.spendLimit))\n            obj.spendLimit = object.spendLimit.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.expiration))\n            obj.expiration = (0, helpers_1.fromJsonTimestamp)(object.expiration);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.spendLimit) {\n            obj.spendLimit = message.spendLimit.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.spendLimit = [];\n        }\n        message.expiration !== undefined && (obj.expiration = (0, helpers_1.fromTimestamp)(message.expiration).toISOString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseBasicAllowance();\n        message.spendLimit = object.spendLimit?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = timestamp_1.Timestamp.fromPartial(object.expiration);\n        }\n        return message;\n    },\n};\nfunction createBasePeriodicAllowance() {\n    return {\n        basic: exports.BasicAllowance.fromPartial({}),\n        period: duration_1.Duration.fromPartial({}),\n        periodSpendLimit: [],\n        periodCanSpend: [],\n        periodReset: timestamp_1.Timestamp.fromPartial({}),\n    };\n}\nexports.PeriodicAllowance = {\n    typeUrl: \"/cosmos.feegrant.v1beta1.PeriodicAllowance\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.basic !== undefined) {\n            exports.BasicAllowance.encode(message.basic, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== undefined) {\n            duration_1.Duration.encode(message.period, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.periodSpendLimit) {\n            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.periodCanSpend) {\n            coin_1.Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.periodReset !== undefined) {\n            timestamp_1.Timestamp.encode(message.periodReset, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePeriodicAllowance();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.basic = exports.BasicAllowance.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.period = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.periodSpendLimit.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.periodCanSpend.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.periodReset = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBasePeriodicAllowance();\n        if ((0, helpers_1.isSet)(object.basic))\n            obj.basic = exports.BasicAllowance.fromJSON(object.basic);\n        if ((0, helpers_1.isSet)(object.period))\n            obj.period = duration_1.Duration.fromJSON(object.period);\n        if (Array.isArray(object?.periodSpendLimit))\n            obj.periodSpendLimit = object.periodSpendLimit.map((e) => coin_1.Coin.fromJSON(e));\n        if (Array.isArray(object?.periodCanSpend))\n            obj.periodCanSpend = object.periodCanSpend.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.periodReset))\n            obj.periodReset = (0, helpers_1.fromJsonTimestamp)(object.periodReset);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.basic !== undefined &&\n            (obj.basic = message.basic ? exports.BasicAllowance.toJSON(message.basic) : undefined);\n        message.period !== undefined &&\n            (obj.period = message.period ? duration_1.Duration.toJSON(message.period) : undefined);\n        if (message.periodSpendLimit) {\n            obj.periodSpendLimit = message.periodSpendLimit.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.periodSpendLimit = [];\n        }\n        if (message.periodCanSpend) {\n            obj.periodCanSpend = message.periodCanSpend.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.periodCanSpend = [];\n        }\n        message.periodReset !== undefined && (obj.periodReset = (0, helpers_1.fromTimestamp)(message.periodReset).toISOString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBasePeriodicAllowance();\n        if (object.basic !== undefined && object.basic !== null) {\n            message.basic = exports.BasicAllowance.fromPartial(object.basic);\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = duration_1.Duration.fromPartial(object.period);\n        }\n        message.periodSpendLimit = object.periodSpendLimit?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        message.periodCanSpend = object.periodCanSpend?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        if (object.periodReset !== undefined && object.periodReset !== null) {\n            message.periodReset = timestamp_1.Timestamp.fromPartial(object.periodReset);\n        }\n        return message;\n    },\n};\nfunction createBaseAllowedMsgAllowance() {\n    return {\n        allowance: undefined,\n        allowedMessages: [],\n    };\n}\nexports.AllowedMsgAllowance = {\n    typeUrl: \"/cosmos.feegrant.v1beta1.AllowedMsgAllowance\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.allowance !== undefined) {\n            any_1.Any.encode(message.allowance, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.allowedMessages) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAllowedMsgAllowance();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowance = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.allowedMessages.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseAllowedMsgAllowance();\n        if ((0, helpers_1.isSet)(object.allowance))\n            obj.allowance = any_1.Any.fromJSON(object.allowance);\n        if (Array.isArray(object?.allowedMessages))\n            obj.allowedMessages = object.allowedMessages.map((e) => String(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.allowance !== undefined &&\n            (obj.allowance = message.allowance ? any_1.Any.toJSON(message.allowance) : undefined);\n        if (message.allowedMessages) {\n            obj.allowedMessages = message.allowedMessages.map((e) => e);\n        }\n        else {\n            obj.allowedMessages = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseAllowedMsgAllowance();\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = any_1.Any.fromPartial(object.allowance);\n        }\n        message.allowedMessages = object.allowedMessages?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseGrant() {\n    return {\n        granter: \"\",\n        grantee: \"\",\n        allowance: undefined,\n    };\n}\nexports.Grant = {\n    typeUrl: \"/cosmos.feegrant.v1beta1.Grant\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.granter !== \"\") {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== \"\") {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.allowance !== undefined) {\n            any_1.Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGrant();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.allowance = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseGrant();\n        if ((0, helpers_1.isSet)(object.granter))\n            obj.granter = String(object.granter);\n        if ((0, helpers_1.isSet)(object.grantee))\n            obj.grantee = String(object.grantee);\n        if ((0, helpers_1.isSet)(object.allowance))\n            obj.allowance = any_1.Any.fromJSON(object.allowance);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.allowance !== undefined &&\n            (obj.allowance = message.allowance ? any_1.Any.toJSON(message.allowance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseGrant();\n        message.granter = object.granter ?? \"\";\n        message.grantee = object.grantee ?? \"\";\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = any_1.Any.fromPartial(object.allowance);\n        }\n        return message;\n    },\n};\n//# sourceMappingURL=feegrant.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QueryAllowancesByGranterResponse = exports.QueryAllowancesByGranterRequest = exports.QueryAllowancesResponse = exports.QueryAllowancesRequest = exports.QueryAllowanceResponse = exports.QueryAllowanceRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst pagination_1 = require(\"../../base/query/v1beta1/pagination\");\nconst feegrant_1 = require(\"./feegrant\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.feegrant.v1beta1\";\nfunction createBaseQueryAllowanceRequest() {\n    return {\n        granter: \"\",\n        grantee: \"\",\n    };\n}\nexports.QueryAllowanceRequest = {\n    typeUrl: \"/cosmos.feegrant.v1beta1.QueryAllowanceRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.granter !== \"\") {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== \"\") {\n            writer.uint32(18).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllowanceRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAllowanceRequest();\n        if ((0, helpers_1.isSet)(object.granter))\n            obj.granter = String(object.granter);\n        if ((0, helpers_1.isSet)(object.grantee))\n            obj.grantee = String(object.grantee);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllowanceRequest();\n        message.granter = object.granter ?? \"\";\n        message.grantee = object.grantee ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryAllowanceResponse() {\n    return {\n        allowance: undefined,\n    };\n}\nexports.QueryAllowanceResponse = {\n    typeUrl: \"/cosmos.feegrant.v1beta1.QueryAllowanceResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.allowance !== undefined) {\n            feegrant_1.Grant.encode(message.allowance, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllowanceResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowance = feegrant_1.Grant.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAllowanceResponse();\n        if ((0, helpers_1.isSet)(object.allowance))\n            obj.allowance = feegrant_1.Grant.fromJSON(object.allowance);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.allowance !== undefined &&\n            (obj.allowance = message.allowance ? feegrant_1.Grant.toJSON(message.allowance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllowanceResponse();\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = feegrant_1.Grant.fromPartial(object.allowance);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryAllowancesRequest() {\n    return {\n        grantee: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryAllowancesRequest = {\n    typeUrl: \"/cosmos.feegrant.v1beta1.QueryAllowancesRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.grantee !== \"\") {\n            writer.uint32(10).string(message.grantee);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllowancesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.grantee = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAllowancesRequest();\n        if ((0, helpers_1.isSet)(object.grantee))\n            obj.grantee = String(object.grantee);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllowancesRequest();\n        message.grantee = object.grantee ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryAllowancesResponse() {\n    return {\n        allowances: [],\n        pagination: undefined,\n    };\n}\nexports.QueryAllowancesResponse = {\n    typeUrl: \"/cosmos.feegrant.v1beta1.QueryAllowancesResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.allowances) {\n            feegrant_1.Grant.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllowancesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowances.push(feegrant_1.Grant.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAllowancesResponse();\n        if (Array.isArray(object?.allowances))\n            obj.allowances = object.allowances.map((e) => feegrant_1.Grant.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowances) {\n            obj.allowances = message.allowances.map((e) => (e ? feegrant_1.Grant.toJSON(e) : undefined));\n        }\n        else {\n            obj.allowances = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllowancesResponse();\n        message.allowances = object.allowances?.map((e) => feegrant_1.Grant.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryAllowancesByGranterRequest() {\n    return {\n        granter: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryAllowancesByGranterRequest = {\n    typeUrl: \"/cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.granter !== \"\") {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllowancesByGranterRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAllowancesByGranterRequest();\n        if ((0, helpers_1.isSet)(object.granter))\n            obj.granter = String(object.granter);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllowancesByGranterRequest();\n        message.granter = object.granter ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryAllowancesByGranterResponse() {\n    return {\n        allowances: [],\n        pagination: undefined,\n    };\n}\nexports.QueryAllowancesByGranterResponse = {\n    typeUrl: \"/cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.allowances) {\n            feegrant_1.Grant.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllowancesByGranterResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowances.push(feegrant_1.Grant.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAllowancesByGranterResponse();\n        if (Array.isArray(object?.allowances))\n            obj.allowances = object.allowances.map((e) => feegrant_1.Grant.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowances) {\n            obj.allowances = message.allowances.map((e) => (e ? feegrant_1.Grant.toJSON(e) : undefined));\n        }\n        else {\n            obj.allowances = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllowancesByGranterResponse();\n        message.allowances = object.allowances?.map((e) => feegrant_1.Grant.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Allowance = this.Allowance.bind(this);\n        this.Allowances = this.Allowances.bind(this);\n        this.AllowancesByGranter = this.AllowancesByGranter.bind(this);\n    }\n    Allowance(request) {\n        const data = exports.QueryAllowanceRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.feegrant.v1beta1.Query\", \"Allowance\", data);\n        return promise.then((data) => exports.QueryAllowanceResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Allowances(request) {\n        const data = exports.QueryAllowancesRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.feegrant.v1beta1.Query\", \"Allowances\", data);\n        return promise.then((data) => exports.QueryAllowancesResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    AllowancesByGranter(request) {\n        const data = exports.QueryAllowancesByGranterRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.feegrant.v1beta1.Query\", \"AllowancesByGranter\", data);\n        return promise.then((data) => exports.QueryAllowancesByGranterResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\n//# sourceMappingURL=query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgRevokeAllowanceResponse = exports.MsgRevokeAllowance = exports.MsgGrantAllowanceResponse = exports.MsgGrantAllowance = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.feegrant.v1beta1\";\nfunction createBaseMsgGrantAllowance() {\n    return {\n        granter: \"\",\n        grantee: \"\",\n        allowance: undefined,\n    };\n}\nexports.MsgGrantAllowance = {\n    typeUrl: \"/cosmos.feegrant.v1beta1.MsgGrantAllowance\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.granter !== \"\") {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== \"\") {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.allowance !== undefined) {\n            any_1.Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgGrantAllowance();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.allowance = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgGrantAllowance();\n        if ((0, helpers_1.isSet)(object.granter))\n            obj.granter = String(object.granter);\n        if ((0, helpers_1.isSet)(object.grantee))\n            obj.grantee = String(object.grantee);\n        if ((0, helpers_1.isSet)(object.allowance))\n            obj.allowance = any_1.Any.fromJSON(object.allowance);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.allowance !== undefined &&\n            (obj.allowance = message.allowance ? any_1.Any.toJSON(message.allowance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgGrantAllowance();\n        message.granter = object.granter ?? \"\";\n        message.grantee = object.grantee ?? \"\";\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = any_1.Any.fromPartial(object.allowance);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgGrantAllowanceResponse() {\n    return {};\n}\nexports.MsgGrantAllowanceResponse = {\n    typeUrl: \"/cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgGrantAllowanceResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgGrantAllowanceResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgGrantAllowanceResponse();\n        return message;\n    },\n};\nfunction createBaseMsgRevokeAllowance() {\n    return {\n        granter: \"\",\n        grantee: \"\",\n    };\n}\nexports.MsgRevokeAllowance = {\n    typeUrl: \"/cosmos.feegrant.v1beta1.MsgRevokeAllowance\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.granter !== \"\") {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== \"\") {\n            writer.uint32(18).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgRevokeAllowance();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgRevokeAllowance();\n        if ((0, helpers_1.isSet)(object.granter))\n            obj.granter = String(object.granter);\n        if ((0, helpers_1.isSet)(object.grantee))\n            obj.grantee = String(object.grantee);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgRevokeAllowance();\n        message.granter = object.granter ?? \"\";\n        message.grantee = object.grantee ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgRevokeAllowanceResponse() {\n    return {};\n}\nexports.MsgRevokeAllowanceResponse = {\n    typeUrl: \"/cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgRevokeAllowanceResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgRevokeAllowanceResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgRevokeAllowanceResponse();\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.GrantAllowance = this.GrantAllowance.bind(this);\n        this.RevokeAllowance = this.RevokeAllowance.bind(this);\n    }\n    GrantAllowance(request) {\n        const data = exports.MsgGrantAllowance.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.feegrant.v1beta1.Msg\", \"GrantAllowance\", data);\n        return promise.then((data) => exports.MsgGrantAllowanceResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    RevokeAllowance(request) {\n        const data = exports.MsgRevokeAllowance.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.feegrant.v1beta1.Msg\", \"RevokeAllowance\", data);\n        return promise.then((data) => exports.MsgRevokeAllowanceResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Params = exports.TallyParams = exports.VotingParams = exports.DepositParams = exports.Vote = exports.TallyResult = exports.Proposal = exports.Deposit = exports.WeightedVoteOption = exports.proposalStatusToJSON = exports.proposalStatusFromJSON = exports.ProposalStatus = exports.voteOptionToJSON = exports.voteOptionFromJSON = exports.VoteOption = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst timestamp_1 = require(\"../../../google/protobuf/timestamp\");\nconst duration_1 = require(\"../../../google/protobuf/duration\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.gov.v1\";\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nvar VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (exports.VoteOption = VoteOption = {}));\nfunction voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexports.voteOptionFromJSON = voteOptionFromJSON;\nfunction voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        case VoteOption.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.voteOptionToJSON = voteOptionToJSON;\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nvar ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (exports.ProposalStatus = ProposalStatus = {}));\nfunction proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case \"PROPOSAL_STATUS_PASSED\":\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case \"PROPOSAL_STATUS_FAILED\":\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexports.proposalStatusFromJSON = proposalStatusFromJSON;\nfunction proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return \"PROPOSAL_STATUS_PASSED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return \"PROPOSAL_STATUS_FAILED\";\n        case ProposalStatus.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.proposalStatusToJSON = proposalStatusToJSON;\nfunction createBaseWeightedVoteOption() {\n    return {\n        option: 0,\n        weight: \"\",\n    };\n}\nexports.WeightedVoteOption = {\n    typeUrl: \"/cosmos.gov.v1.WeightedVoteOption\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.option !== 0) {\n            writer.uint32(8).int32(message.option);\n        }\n        if (message.weight !== \"\") {\n            writer.uint32(18).string(message.weight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseWeightedVoteOption();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.option = reader.int32();\n                    break;\n                case 2:\n                    message.weight = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseWeightedVoteOption();\n        if ((0, helpers_1.isSet)(object.option))\n            obj.option = voteOptionFromJSON(object.option);\n        if ((0, helpers_1.isSet)(object.weight))\n            obj.weight = String(object.weight);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        message.weight !== undefined && (obj.weight = message.weight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseWeightedVoteOption();\n        message.option = object.option ?? 0;\n        message.weight = object.weight ?? \"\";\n        return message;\n    },\n};\nfunction createBaseDeposit() {\n    return {\n        proposalId: BigInt(0),\n        depositor: \"\",\n        amount: [],\n    };\n}\nexports.Deposit = {\n    typeUrl: \"/cosmos.gov.v1.Deposit\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDeposit();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseDeposit();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.depositor))\n            obj.depositor = String(object.depositor);\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseDeposit();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        message.depositor = object.depositor ?? \"\";\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseProposal() {\n    return {\n        id: BigInt(0),\n        messages: [],\n        status: 0,\n        finalTallyResult: undefined,\n        submitTime: undefined,\n        depositEndTime: undefined,\n        totalDeposit: [],\n        votingStartTime: undefined,\n        votingEndTime: undefined,\n        metadata: \"\",\n        title: \"\",\n        summary: \"\",\n        proposer: \"\",\n    };\n}\nexports.Proposal = {\n    typeUrl: \"/cosmos.gov.v1.Proposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.id !== BigInt(0)) {\n            writer.uint32(8).uint64(message.id);\n        }\n        for (const v of message.messages) {\n            any_1.Any.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            exports.TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            timestamp_1.Timestamp.encode(message.submitTime, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            timestamp_1.Timestamp.encode(message.depositEndTime, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            coin_1.Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            timestamp_1.Timestamp.encode(message.votingStartTime, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            timestamp_1.Timestamp.encode(message.votingEndTime, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(82).string(message.metadata);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(90).string(message.title);\n        }\n        if (message.summary !== \"\") {\n            writer.uint32(98).string(message.summary);\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(106).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.uint64();\n                    break;\n                case 2:\n                    message.messages.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = exports.TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.depositEndTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.totalDeposit.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.votingEndTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.metadata = reader.string();\n                    break;\n                case 11:\n                    message.title = reader.string();\n                    break;\n                case 12:\n                    message.summary = reader.string();\n                    break;\n                case 13:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseProposal();\n        if ((0, helpers_1.isSet)(object.id))\n            obj.id = BigInt(object.id.toString());\n        if (Array.isArray(object?.messages))\n            obj.messages = object.messages.map((e) => any_1.Any.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.status))\n            obj.status = proposalStatusFromJSON(object.status);\n        if ((0, helpers_1.isSet)(object.finalTallyResult))\n            obj.finalTallyResult = exports.TallyResult.fromJSON(object.finalTallyResult);\n        if ((0, helpers_1.isSet)(object.submitTime))\n            obj.submitTime = (0, helpers_1.fromJsonTimestamp)(object.submitTime);\n        if ((0, helpers_1.isSet)(object.depositEndTime))\n            obj.depositEndTime = (0, helpers_1.fromJsonTimestamp)(object.depositEndTime);\n        if (Array.isArray(object?.totalDeposit))\n            obj.totalDeposit = object.totalDeposit.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.votingStartTime))\n            obj.votingStartTime = (0, helpers_1.fromJsonTimestamp)(object.votingStartTime);\n        if ((0, helpers_1.isSet)(object.votingEndTime))\n            obj.votingEndTime = (0, helpers_1.fromJsonTimestamp)(object.votingEndTime);\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        if ((0, helpers_1.isSet)(object.title))\n            obj.title = String(object.title);\n        if ((0, helpers_1.isSet)(object.summary))\n            obj.summary = String(object.summary);\n        if ((0, helpers_1.isSet)(object.proposer))\n            obj.proposer = String(object.proposer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = (message.id || BigInt(0)).toString());\n        if (message.messages) {\n            obj.messages = message.messages.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.messages = [];\n        }\n        message.status !== undefined && (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? exports.TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined && (obj.submitTime = (0, helpers_1.fromTimestamp)(message.submitTime).toISOString());\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime = (0, helpers_1.fromTimestamp)(message.depositEndTime).toISOString());\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime = (0, helpers_1.fromTimestamp)(message.votingStartTime).toISOString());\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime = (0, helpers_1.fromTimestamp)(message.votingEndTime).toISOString());\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.title !== undefined && (obj.title = message.title);\n        message.summary !== undefined && (obj.summary = message.summary);\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseProposal();\n        if (object.id !== undefined && object.id !== null) {\n            message.id = BigInt(object.id.toString());\n        }\n        message.messages = object.messages?.map((e) => any_1.Any.fromPartial(e)) || [];\n        message.status = object.status ?? 0;\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = exports.TallyResult.fromPartial(object.finalTallyResult);\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = timestamp_1.Timestamp.fromPartial(object.submitTime);\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = timestamp_1.Timestamp.fromPartial(object.depositEndTime);\n        }\n        message.totalDeposit = object.totalDeposit?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n            message.votingStartTime = timestamp_1.Timestamp.fromPartial(object.votingStartTime);\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = timestamp_1.Timestamp.fromPartial(object.votingEndTime);\n        }\n        message.metadata = object.metadata ?? \"\";\n        message.title = object.title ?? \"\";\n        message.summary = object.summary ?? \"\";\n        message.proposer = object.proposer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseTallyResult() {\n    return {\n        yesCount: \"\",\n        abstainCount: \"\",\n        noCount: \"\",\n        noWithVetoCount: \"\",\n    };\n}\nexports.TallyResult = {\n    typeUrl: \"/cosmos.gov.v1.TallyResult\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.yesCount !== \"\") {\n            writer.uint32(10).string(message.yesCount);\n        }\n        if (message.abstainCount !== \"\") {\n            writer.uint32(18).string(message.abstainCount);\n        }\n        if (message.noCount !== \"\") {\n            writer.uint32(26).string(message.noCount);\n        }\n        if (message.noWithVetoCount !== \"\") {\n            writer.uint32(34).string(message.noWithVetoCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTallyResult();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yesCount = reader.string();\n                    break;\n                case 2:\n                    message.abstainCount = reader.string();\n                    break;\n                case 3:\n                    message.noCount = reader.string();\n                    break;\n                case 4:\n                    message.noWithVetoCount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTallyResult();\n        if ((0, helpers_1.isSet)(object.yesCount))\n            obj.yesCount = String(object.yesCount);\n        if ((0, helpers_1.isSet)(object.abstainCount))\n            obj.abstainCount = String(object.abstainCount);\n        if ((0, helpers_1.isSet)(object.noCount))\n            obj.noCount = String(object.noCount);\n        if ((0, helpers_1.isSet)(object.noWithVetoCount))\n            obj.noWithVetoCount = String(object.noWithVetoCount);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yesCount !== undefined && (obj.yesCount = message.yesCount);\n        message.abstainCount !== undefined && (obj.abstainCount = message.abstainCount);\n        message.noCount !== undefined && (obj.noCount = message.noCount);\n        message.noWithVetoCount !== undefined && (obj.noWithVetoCount = message.noWithVetoCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTallyResult();\n        message.yesCount = object.yesCount ?? \"\";\n        message.abstainCount = object.abstainCount ?? \"\";\n        message.noCount = object.noCount ?? \"\";\n        message.noWithVetoCount = object.noWithVetoCount ?? \"\";\n        return message;\n    },\n};\nfunction createBaseVote() {\n    return {\n        proposalId: BigInt(0),\n        voter: \"\",\n        options: [],\n        metadata: \"\",\n    };\n}\nexports.Vote = {\n    typeUrl: \"/cosmos.gov.v1.Vote\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        for (const v of message.options) {\n            exports.WeightedVoteOption.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(42).string(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseVote();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 4:\n                    message.options.push(exports.WeightedVoteOption.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.metadata = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseVote();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.voter))\n            obj.voter = String(object.voter);\n        if (Array.isArray(object?.options))\n            obj.options = object.options.map((e) => exports.WeightedVoteOption.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.voter !== undefined && (obj.voter = message.voter);\n        if (message.options) {\n            obj.options = message.options.map((e) => (e ? exports.WeightedVoteOption.toJSON(e) : undefined));\n        }\n        else {\n            obj.options = [];\n        }\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseVote();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        message.voter = object.voter ?? \"\";\n        message.options = object.options?.map((e) => exports.WeightedVoteOption.fromPartial(e)) || [];\n        message.metadata = object.metadata ?? \"\";\n        return message;\n    },\n};\nfunction createBaseDepositParams() {\n    return {\n        minDeposit: [],\n        maxDepositPeriod: undefined,\n    };\n}\nexports.DepositParams = {\n    typeUrl: \"/cosmos.gov.v1.DepositParams\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.minDeposit) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            duration_1.Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDepositParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseDepositParams();\n        if (Array.isArray(object?.minDeposit))\n            obj.minDeposit = object.minDeposit.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.maxDepositPeriod))\n            obj.maxDepositPeriod = duration_1.Duration.fromJSON(object.maxDepositPeriod);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? duration_1.Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseDepositParams();\n        message.minDeposit = object.minDeposit?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = duration_1.Duration.fromPartial(object.maxDepositPeriod);\n        }\n        return message;\n    },\n};\nfunction createBaseVotingParams() {\n    return {\n        votingPeriod: undefined,\n    };\n}\nexports.VotingParams = {\n    typeUrl: \"/cosmos.gov.v1.VotingParams\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.votingPeriod !== undefined) {\n            duration_1.Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseVotingParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseVotingParams();\n        if ((0, helpers_1.isSet)(object.votingPeriod))\n            obj.votingPeriod = duration_1.Duration.fromJSON(object.votingPeriod);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod ? duration_1.Duration.toJSON(message.votingPeriod) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseVotingParams();\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = duration_1.Duration.fromPartial(object.votingPeriod);\n        }\n        return message;\n    },\n};\nfunction createBaseTallyParams() {\n    return {\n        quorum: \"\",\n        threshold: \"\",\n        vetoThreshold: \"\",\n    };\n}\nexports.TallyParams = {\n    typeUrl: \"/cosmos.gov.v1.TallyParams\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.quorum !== \"\") {\n            writer.uint32(10).string(message.quorum);\n        }\n        if (message.threshold !== \"\") {\n            writer.uint32(18).string(message.threshold);\n        }\n        if (message.vetoThreshold !== \"\") {\n            writer.uint32(26).string(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTallyParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.string();\n                    break;\n                case 2:\n                    message.threshold = reader.string();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTallyParams();\n        if ((0, helpers_1.isSet)(object.quorum))\n            obj.quorum = String(object.quorum);\n        if ((0, helpers_1.isSet)(object.threshold))\n            obj.threshold = String(object.threshold);\n        if ((0, helpers_1.isSet)(object.vetoThreshold))\n            obj.vetoThreshold = String(object.vetoThreshold);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined && (obj.quorum = message.quorum);\n        message.threshold !== undefined && (obj.threshold = message.threshold);\n        message.vetoThreshold !== undefined && (obj.vetoThreshold = message.vetoThreshold);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTallyParams();\n        message.quorum = object.quorum ?? \"\";\n        message.threshold = object.threshold ?? \"\";\n        message.vetoThreshold = object.vetoThreshold ?? \"\";\n        return message;\n    },\n};\nfunction createBaseParams() {\n    return {\n        minDeposit: [],\n        maxDepositPeriod: undefined,\n        votingPeriod: undefined,\n        quorum: \"\",\n        threshold: \"\",\n        vetoThreshold: \"\",\n        minInitialDepositRatio: \"\",\n        burnVoteQuorum: false,\n        burnProposalDepositPrevote: false,\n        burnVoteVeto: false,\n    };\n}\nexports.Params = {\n    typeUrl: \"/cosmos.gov.v1.Params\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.minDeposit) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            duration_1.Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPeriod !== undefined) {\n            duration_1.Duration.encode(message.votingPeriod, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.quorum !== \"\") {\n            writer.uint32(34).string(message.quorum);\n        }\n        if (message.threshold !== \"\") {\n            writer.uint32(42).string(message.threshold);\n        }\n        if (message.vetoThreshold !== \"\") {\n            writer.uint32(50).string(message.vetoThreshold);\n        }\n        if (message.minInitialDepositRatio !== \"\") {\n            writer.uint32(58).string(message.minInitialDepositRatio);\n        }\n        if (message.burnVoteQuorum === true) {\n            writer.uint32(104).bool(message.burnVoteQuorum);\n        }\n        if (message.burnProposalDepositPrevote === true) {\n            writer.uint32(112).bool(message.burnProposalDepositPrevote);\n        }\n        if (message.burnVoteVeto === true) {\n            writer.uint32(120).bool(message.burnVoteVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPeriod = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.quorum = reader.string();\n                    break;\n                case 5:\n                    message.threshold = reader.string();\n                    break;\n                case 6:\n                    message.vetoThreshold = reader.string();\n                    break;\n                case 7:\n                    message.minInitialDepositRatio = reader.string();\n                    break;\n                case 13:\n                    message.burnVoteQuorum = reader.bool();\n                    break;\n                case 14:\n                    message.burnProposalDepositPrevote = reader.bool();\n                    break;\n                case 15:\n                    message.burnVoteVeto = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseParams();\n        if (Array.isArray(object?.minDeposit))\n            obj.minDeposit = object.minDeposit.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.maxDepositPeriod))\n            obj.maxDepositPeriod = duration_1.Duration.fromJSON(object.maxDepositPeriod);\n        if ((0, helpers_1.isSet)(object.votingPeriod))\n            obj.votingPeriod = duration_1.Duration.fromJSON(object.votingPeriod);\n        if ((0, helpers_1.isSet)(object.quorum))\n            obj.quorum = String(object.quorum);\n        if ((0, helpers_1.isSet)(object.threshold))\n            obj.threshold = String(object.threshold);\n        if ((0, helpers_1.isSet)(object.vetoThreshold))\n            obj.vetoThreshold = String(object.vetoThreshold);\n        if ((0, helpers_1.isSet)(object.minInitialDepositRatio))\n            obj.minInitialDepositRatio = String(object.minInitialDepositRatio);\n        if ((0, helpers_1.isSet)(object.burnVoteQuorum))\n            obj.burnVoteQuorum = Boolean(object.burnVoteQuorum);\n        if ((0, helpers_1.isSet)(object.burnProposalDepositPrevote))\n            obj.burnProposalDepositPrevote = Boolean(object.burnProposalDepositPrevote);\n        if ((0, helpers_1.isSet)(object.burnVoteVeto))\n            obj.burnVoteVeto = Boolean(object.burnVoteVeto);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? duration_1.Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod ? duration_1.Duration.toJSON(message.votingPeriod) : undefined);\n        message.quorum !== undefined && (obj.quorum = message.quorum);\n        message.threshold !== undefined && (obj.threshold = message.threshold);\n        message.vetoThreshold !== undefined && (obj.vetoThreshold = message.vetoThreshold);\n        message.minInitialDepositRatio !== undefined &&\n            (obj.minInitialDepositRatio = message.minInitialDepositRatio);\n        message.burnVoteQuorum !== undefined && (obj.burnVoteQuorum = message.burnVoteQuorum);\n        message.burnProposalDepositPrevote !== undefined &&\n            (obj.burnProposalDepositPrevote = message.burnProposalDepositPrevote);\n        message.burnVoteVeto !== undefined && (obj.burnVoteVeto = message.burnVoteVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseParams();\n        message.minDeposit = object.minDeposit?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = duration_1.Duration.fromPartial(object.maxDepositPeriod);\n        }\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = duration_1.Duration.fromPartial(object.votingPeriod);\n        }\n        message.quorum = object.quorum ?? \"\";\n        message.threshold = object.threshold ?? \"\";\n        message.vetoThreshold = object.vetoThreshold ?? \"\";\n        message.minInitialDepositRatio = object.minInitialDepositRatio ?? \"\";\n        message.burnVoteQuorum = object.burnVoteQuorum ?? false;\n        message.burnProposalDepositPrevote = object.burnProposalDepositPrevote ?? false;\n        message.burnVoteVeto = object.burnVoteVeto ?? false;\n        return message;\n    },\n};\n//# sourceMappingURL=gov.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgUpdateParamsResponse = exports.MsgUpdateParams = exports.MsgDepositResponse = exports.MsgDeposit = exports.MsgVoteWeightedResponse = exports.MsgVoteWeighted = exports.MsgVoteResponse = exports.MsgVote = exports.MsgExecLegacyContentResponse = exports.MsgExecLegacyContent = exports.MsgSubmitProposalResponse = exports.MsgSubmitProposal = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst gov_1 = require(\"./gov\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.gov.v1\";\nfunction createBaseMsgSubmitProposal() {\n    return {\n        messages: [],\n        initialDeposit: [],\n        proposer: \"\",\n        metadata: \"\",\n        title: \"\",\n        summary: \"\",\n    };\n}\nexports.MsgSubmitProposal = {\n    typeUrl: \"/cosmos.gov.v1.MsgSubmitProposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.messages) {\n            any_1.Any.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(34).string(message.metadata);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(42).string(message.title);\n        }\n        if (message.summary !== \"\") {\n            writer.uint32(50).string(message.summary);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSubmitProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.messages.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.initialDeposit.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                case 4:\n                    message.metadata = reader.string();\n                    break;\n                case 5:\n                    message.title = reader.string();\n                    break;\n                case 6:\n                    message.summary = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgSubmitProposal();\n        if (Array.isArray(object?.messages))\n            obj.messages = object.messages.map((e) => any_1.Any.fromJSON(e));\n        if (Array.isArray(object?.initialDeposit))\n            obj.initialDeposit = object.initialDeposit.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.proposer))\n            obj.proposer = String(object.proposer);\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        if ((0, helpers_1.isSet)(object.title))\n            obj.title = String(object.title);\n        if ((0, helpers_1.isSet)(object.summary))\n            obj.summary = String(object.summary);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.messages) {\n            obj.messages = message.messages.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.messages = [];\n        }\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.title !== undefined && (obj.title = message.title);\n        message.summary !== undefined && (obj.summary = message.summary);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgSubmitProposal();\n        message.messages = object.messages?.map((e) => any_1.Any.fromPartial(e)) || [];\n        message.initialDeposit = object.initialDeposit?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        message.proposer = object.proposer ?? \"\";\n        message.metadata = object.metadata ?? \"\";\n        message.title = object.title ?? \"\";\n        message.summary = object.summary ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgSubmitProposalResponse() {\n    return {\n        proposalId: BigInt(0),\n    };\n}\nexports.MsgSubmitProposalResponse = {\n    typeUrl: \"/cosmos.gov.v1.MsgSubmitProposalResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSubmitProposalResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgSubmitProposalResponse();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgSubmitProposalResponse();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseMsgExecLegacyContent() {\n    return {\n        content: undefined,\n        authority: \"\",\n    };\n}\nexports.MsgExecLegacyContent = {\n    typeUrl: \"/cosmos.gov.v1.MsgExecLegacyContent\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.content !== undefined) {\n            any_1.Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.authority !== \"\") {\n            writer.uint32(18).string(message.authority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgExecLegacyContent();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.authority = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgExecLegacyContent();\n        if ((0, helpers_1.isSet)(object.content))\n            obj.content = any_1.Any.fromJSON(object.content);\n        if ((0, helpers_1.isSet)(object.authority))\n            obj.authority = String(object.authority);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? any_1.Any.toJSON(message.content) : undefined);\n        message.authority !== undefined && (obj.authority = message.authority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgExecLegacyContent();\n        if (object.content !== undefined && object.content !== null) {\n            message.content = any_1.Any.fromPartial(object.content);\n        }\n        message.authority = object.authority ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgExecLegacyContentResponse() {\n    return {};\n}\nexports.MsgExecLegacyContentResponse = {\n    typeUrl: \"/cosmos.gov.v1.MsgExecLegacyContentResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgExecLegacyContentResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgExecLegacyContentResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgExecLegacyContentResponse();\n        return message;\n    },\n};\nfunction createBaseMsgVote() {\n    return {\n        proposalId: BigInt(0),\n        voter: \"\",\n        option: 0,\n        metadata: \"\",\n    };\n}\nexports.MsgVote = {\n    typeUrl: \"/cosmos.gov.v1.MsgVote\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(34).string(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgVote();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                case 4:\n                    message.metadata = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgVote();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.voter))\n            obj.voter = String(object.voter);\n        if ((0, helpers_1.isSet)(object.option))\n            obj.option = (0, gov_1.voteOptionFromJSON)(object.option);\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = (0, gov_1.voteOptionToJSON)(message.option));\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgVote();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        message.voter = object.voter ?? \"\";\n        message.option = object.option ?? 0;\n        message.metadata = object.metadata ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgVoteResponse() {\n    return {};\n}\nexports.MsgVoteResponse = {\n    typeUrl: \"/cosmos.gov.v1.MsgVoteResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgVoteResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgVoteResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgVoteResponse();\n        return message;\n    },\n};\nfunction createBaseMsgVoteWeighted() {\n    return {\n        proposalId: BigInt(0),\n        voter: \"\",\n        options: [],\n        metadata: \"\",\n    };\n}\nexports.MsgVoteWeighted = {\n    typeUrl: \"/cosmos.gov.v1.MsgVoteWeighted\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        for (const v of message.options) {\n            gov_1.WeightedVoteOption.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(34).string(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgVoteWeighted();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.options.push(gov_1.WeightedVoteOption.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.metadata = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgVoteWeighted();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.voter))\n            obj.voter = String(object.voter);\n        if (Array.isArray(object?.options))\n            obj.options = object.options.map((e) => gov_1.WeightedVoteOption.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.voter !== undefined && (obj.voter = message.voter);\n        if (message.options) {\n            obj.options = message.options.map((e) => (e ? gov_1.WeightedVoteOption.toJSON(e) : undefined));\n        }\n        else {\n            obj.options = [];\n        }\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgVoteWeighted();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        message.voter = object.voter ?? \"\";\n        message.options = object.options?.map((e) => gov_1.WeightedVoteOption.fromPartial(e)) || [];\n        message.metadata = object.metadata ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgVoteWeightedResponse() {\n    return {};\n}\nexports.MsgVoteWeightedResponse = {\n    typeUrl: \"/cosmos.gov.v1.MsgVoteWeightedResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgVoteWeightedResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgVoteWeightedResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgVoteWeightedResponse();\n        return message;\n    },\n};\nfunction createBaseMsgDeposit() {\n    return {\n        proposalId: BigInt(0),\n        depositor: \"\",\n        amount: [],\n    };\n}\nexports.MsgDeposit = {\n    typeUrl: \"/cosmos.gov.v1.MsgDeposit\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgDeposit();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgDeposit();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.depositor))\n            obj.depositor = String(object.depositor);\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgDeposit();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        message.depositor = object.depositor ?? \"\";\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgDepositResponse() {\n    return {};\n}\nexports.MsgDepositResponse = {\n    typeUrl: \"/cosmos.gov.v1.MsgDepositResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgDepositResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgDepositResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgDepositResponse();\n        return message;\n    },\n};\nfunction createBaseMsgUpdateParams() {\n    return {\n        authority: \"\",\n        params: gov_1.Params.fromPartial({}),\n    };\n}\nexports.MsgUpdateParams = {\n    typeUrl: \"/cosmos.gov.v1.MsgUpdateParams\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.authority !== \"\") {\n            writer.uint32(10).string(message.authority);\n        }\n        if (message.params !== undefined) {\n            gov_1.Params.encode(message.params, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authority = reader.string();\n                    break;\n                case 2:\n                    message.params = gov_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUpdateParams();\n        if ((0, helpers_1.isSet)(object.authority))\n            obj.authority = String(object.authority);\n        if ((0, helpers_1.isSet)(object.params))\n            obj.params = gov_1.Params.fromJSON(object.params);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.authority !== undefined && (obj.authority = message.authority);\n        message.params !== undefined && (obj.params = message.params ? gov_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateParams();\n        message.authority = object.authority ?? \"\";\n        if (object.params !== undefined && object.params !== null) {\n            message.params = gov_1.Params.fromPartial(object.params);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgUpdateParamsResponse() {\n    return {};\n}\nexports.MsgUpdateParamsResponse = {\n    typeUrl: \"/cosmos.gov.v1.MsgUpdateParamsResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgUpdateParamsResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateParamsResponse();\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.SubmitProposal = this.SubmitProposal.bind(this);\n        this.ExecLegacyContent = this.ExecLegacyContent.bind(this);\n        this.Vote = this.Vote.bind(this);\n        this.VoteWeighted = this.VoteWeighted.bind(this);\n        this.Deposit = this.Deposit.bind(this);\n        this.UpdateParams = this.UpdateParams.bind(this);\n    }\n    SubmitProposal(request) {\n        const data = exports.MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => exports.MsgSubmitProposalResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ExecLegacyContent(request) {\n        const data = exports.MsgExecLegacyContent.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1.Msg\", \"ExecLegacyContent\", data);\n        return promise.then((data) => exports.MsgExecLegacyContentResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Vote(request) {\n        const data = exports.MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1.Msg\", \"Vote\", data);\n        return promise.then((data) => exports.MsgVoteResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    VoteWeighted(request) {\n        const data = exports.MsgVoteWeighted.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1.Msg\", \"VoteWeighted\", data);\n        return promise.then((data) => exports.MsgVoteWeightedResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Deposit(request) {\n        const data = exports.MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1.Msg\", \"Deposit\", data);\n        return promise.then((data) => exports.MsgDepositResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpdateParams(request) {\n        const data = exports.MsgUpdateParams.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1.Msg\", \"UpdateParams\", data);\n        return promise.then((data) => exports.MsgUpdateParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QueryTallyResultResponse = exports.QueryTallyResultRequest = exports.QueryDepositsResponse = exports.QueryDepositsRequest = exports.QueryDepositResponse = exports.QueryDepositRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QueryVotesResponse = exports.QueryVotesRequest = exports.QueryVoteResponse = exports.QueryVoteRequest = exports.QueryProposalsResponse = exports.QueryProposalsRequest = exports.QueryProposalResponse = exports.QueryProposalRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst gov_1 = require(\"./gov\");\nconst pagination_1 = require(\"../../base/query/v1beta1/pagination\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.gov.v1beta1\";\nfunction createBaseQueryProposalRequest() {\n    return {\n        proposalId: BigInt(0),\n    };\n}\nexports.QueryProposalRequest = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryProposalRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryProposalRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryProposalRequest();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryProposalRequest();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseQueryProposalResponse() {\n    return {\n        proposal: gov_1.Proposal.fromPartial({}),\n    };\n}\nexports.QueryProposalResponse = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryProposalResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposal !== undefined) {\n            gov_1.Proposal.encode(message.proposal, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryProposalResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposal = gov_1.Proposal.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryProposalResponse();\n        if ((0, helpers_1.isSet)(object.proposal))\n            obj.proposal = gov_1.Proposal.fromJSON(object.proposal);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposal !== undefined &&\n            (obj.proposal = message.proposal ? gov_1.Proposal.toJSON(message.proposal) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryProposalResponse();\n        if (object.proposal !== undefined && object.proposal !== null) {\n            message.proposal = gov_1.Proposal.fromPartial(object.proposal);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryProposalsRequest() {\n    return {\n        proposalStatus: 0,\n        voter: \"\",\n        depositor: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryProposalsRequest = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryProposalsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalStatus !== 0) {\n            writer.uint32(8).int32(message.proposalStatus);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(26).string(message.depositor);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryProposalsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalStatus = reader.int32();\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.depositor = reader.string();\n                    break;\n                case 4:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryProposalsRequest();\n        if ((0, helpers_1.isSet)(object.proposalStatus))\n            obj.proposalStatus = (0, gov_1.proposalStatusFromJSON)(object.proposalStatus);\n        if ((0, helpers_1.isSet)(object.voter))\n            obj.voter = String(object.voter);\n        if ((0, helpers_1.isSet)(object.depositor))\n            obj.depositor = String(object.depositor);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalStatus !== undefined &&\n            (obj.proposalStatus = (0, gov_1.proposalStatusToJSON)(message.proposalStatus));\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryProposalsRequest();\n        message.proposalStatus = object.proposalStatus ?? 0;\n        message.voter = object.voter ?? \"\";\n        message.depositor = object.depositor ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryProposalsResponse() {\n    return {\n        proposals: [],\n        pagination: undefined,\n    };\n}\nexports.QueryProposalsResponse = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryProposalsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.proposals) {\n            gov_1.Proposal.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryProposalsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposals.push(gov_1.Proposal.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryProposalsResponse();\n        if (Array.isArray(object?.proposals))\n            obj.proposals = object.proposals.map((e) => gov_1.Proposal.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proposals) {\n            obj.proposals = message.proposals.map((e) => (e ? gov_1.Proposal.toJSON(e) : undefined));\n        }\n        else {\n            obj.proposals = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryProposalsResponse();\n        message.proposals = object.proposals?.map((e) => gov_1.Proposal.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryVoteRequest() {\n    return {\n        proposalId: BigInt(0),\n        voter: \"\",\n    };\n}\nexports.QueryVoteRequest = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryVoteRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryVoteRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryVoteRequest();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.voter))\n            obj.voter = String(object.voter);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.voter !== undefined && (obj.voter = message.voter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryVoteRequest();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        message.voter = object.voter ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryVoteResponse() {\n    return {\n        vote: gov_1.Vote.fromPartial({}),\n    };\n}\nexports.QueryVoteResponse = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryVoteResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.vote !== undefined) {\n            gov_1.Vote.encode(message.vote, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryVoteResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.vote = gov_1.Vote.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryVoteResponse();\n        if ((0, helpers_1.isSet)(object.vote))\n            obj.vote = gov_1.Vote.fromJSON(object.vote);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.vote !== undefined && (obj.vote = message.vote ? gov_1.Vote.toJSON(message.vote) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryVoteResponse();\n        if (object.vote !== undefined && object.vote !== null) {\n            message.vote = gov_1.Vote.fromPartial(object.vote);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryVotesRequest() {\n    return {\n        proposalId: BigInt(0),\n        pagination: undefined,\n    };\n}\nexports.QueryVotesRequest = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryVotesRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryVotesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryVotesRequest();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryVotesRequest();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryVotesResponse() {\n    return {\n        votes: [],\n        pagination: undefined,\n    };\n}\nexports.QueryVotesResponse = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryVotesResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.votes) {\n            gov_1.Vote.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryVotesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votes.push(gov_1.Vote.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryVotesResponse();\n        if (Array.isArray(object?.votes))\n            obj.votes = object.votes.map((e) => gov_1.Vote.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => (e ? gov_1.Vote.toJSON(e) : undefined));\n        }\n        else {\n            obj.votes = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryVotesResponse();\n        message.votes = object.votes?.map((e) => gov_1.Vote.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryParamsRequest() {\n    return {\n        paramsType: \"\",\n    };\n}\nexports.QueryParamsRequest = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryParamsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.paramsType !== \"\") {\n            writer.uint32(10).string(message.paramsType);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paramsType = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryParamsRequest();\n        if ((0, helpers_1.isSet)(object.paramsType))\n            obj.paramsType = String(object.paramsType);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.paramsType !== undefined && (obj.paramsType = message.paramsType);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryParamsRequest();\n        message.paramsType = object.paramsType ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryParamsResponse() {\n    return {\n        votingParams: gov_1.VotingParams.fromPartial({}),\n        depositParams: gov_1.DepositParams.fromPartial({}),\n        tallyParams: gov_1.TallyParams.fromPartial({}),\n    };\n}\nexports.QueryParamsResponse = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryParamsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.votingParams !== undefined) {\n            gov_1.VotingParams.encode(message.votingParams, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositParams !== undefined) {\n            gov_1.DepositParams.encode(message.depositParams, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.tallyParams !== undefined) {\n            gov_1.TallyParams.encode(message.tallyParams, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingParams = gov_1.VotingParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.depositParams = gov_1.DepositParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.tallyParams = gov_1.TallyParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryParamsResponse();\n        if ((0, helpers_1.isSet)(object.votingParams))\n            obj.votingParams = gov_1.VotingParams.fromJSON(object.votingParams);\n        if ((0, helpers_1.isSet)(object.depositParams))\n            obj.depositParams = gov_1.DepositParams.fromJSON(object.depositParams);\n        if ((0, helpers_1.isSet)(object.tallyParams))\n            obj.tallyParams = gov_1.TallyParams.fromJSON(object.tallyParams);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingParams !== undefined &&\n            (obj.votingParams = message.votingParams ? gov_1.VotingParams.toJSON(message.votingParams) : undefined);\n        message.depositParams !== undefined &&\n            (obj.depositParams = message.depositParams ? gov_1.DepositParams.toJSON(message.depositParams) : undefined);\n        message.tallyParams !== undefined &&\n            (obj.tallyParams = message.tallyParams ? gov_1.TallyParams.toJSON(message.tallyParams) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryParamsResponse();\n        if (object.votingParams !== undefined && object.votingParams !== null) {\n            message.votingParams = gov_1.VotingParams.fromPartial(object.votingParams);\n        }\n        if (object.depositParams !== undefined && object.depositParams !== null) {\n            message.depositParams = gov_1.DepositParams.fromPartial(object.depositParams);\n        }\n        if (object.tallyParams !== undefined && object.tallyParams !== null) {\n            message.tallyParams = gov_1.TallyParams.fromPartial(object.tallyParams);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDepositRequest() {\n    return {\n        proposalId: BigInt(0),\n        depositor: \"\",\n    };\n}\nexports.QueryDepositRequest = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryDepositRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDepositRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDepositRequest();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.depositor))\n            obj.depositor = String(object.depositor);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDepositRequest();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        message.depositor = object.depositor ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryDepositResponse() {\n    return {\n        deposit: gov_1.Deposit.fromPartial({}),\n    };\n}\nexports.QueryDepositResponse = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryDepositResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.deposit !== undefined) {\n            gov_1.Deposit.encode(message.deposit, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDepositResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.deposit = gov_1.Deposit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDepositResponse();\n        if ((0, helpers_1.isSet)(object.deposit))\n            obj.deposit = gov_1.Deposit.fromJSON(object.deposit);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.deposit !== undefined &&\n            (obj.deposit = message.deposit ? gov_1.Deposit.toJSON(message.deposit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDepositResponse();\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = gov_1.Deposit.fromPartial(object.deposit);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDepositsRequest() {\n    return {\n        proposalId: BigInt(0),\n        pagination: undefined,\n    };\n}\nexports.QueryDepositsRequest = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryDepositsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDepositsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDepositsRequest();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDepositsRequest();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDepositsResponse() {\n    return {\n        deposits: [],\n        pagination: undefined,\n    };\n}\nexports.QueryDepositsResponse = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryDepositsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.deposits) {\n            gov_1.Deposit.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDepositsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.deposits.push(gov_1.Deposit.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDepositsResponse();\n        if (Array.isArray(object?.deposits))\n            obj.deposits = object.deposits.map((e) => gov_1.Deposit.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.deposits) {\n            obj.deposits = message.deposits.map((e) => (e ? gov_1.Deposit.toJSON(e) : undefined));\n        }\n        else {\n            obj.deposits = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDepositsResponse();\n        message.deposits = object.deposits?.map((e) => gov_1.Deposit.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryTallyResultRequest() {\n    return {\n        proposalId: BigInt(0),\n    };\n}\nexports.QueryTallyResultRequest = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryTallyResultRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryTallyResultRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryTallyResultRequest();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryTallyResultRequest();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseQueryTallyResultResponse() {\n    return {\n        tally: gov_1.TallyResult.fromPartial({}),\n    };\n}\nexports.QueryTallyResultResponse = {\n    typeUrl: \"/cosmos.gov.v1beta1.QueryTallyResultResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.tally !== undefined) {\n            gov_1.TallyResult.encode(message.tally, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryTallyResultResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tally = gov_1.TallyResult.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryTallyResultResponse();\n        if ((0, helpers_1.isSet)(object.tally))\n            obj.tally = gov_1.TallyResult.fromJSON(object.tally);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tally !== undefined &&\n            (obj.tally = message.tally ? gov_1.TallyResult.toJSON(message.tally) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryTallyResultResponse();\n        if (object.tally !== undefined && object.tally !== null) {\n            message.tally = gov_1.TallyResult.fromPartial(object.tally);\n        }\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Proposal = this.Proposal.bind(this);\n        this.Proposals = this.Proposals.bind(this);\n        this.Vote = this.Vote.bind(this);\n        this.Votes = this.Votes.bind(this);\n        this.Params = this.Params.bind(this);\n        this.Deposit = this.Deposit.bind(this);\n        this.Deposits = this.Deposits.bind(this);\n        this.TallyResult = this.TallyResult.bind(this);\n    }\n    Proposal(request) {\n        const data = exports.QueryProposalRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Query\", \"Proposal\", data);\n        return promise.then((data) => exports.QueryProposalResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Proposals(request) {\n        const data = exports.QueryProposalsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Query\", \"Proposals\", data);\n        return promise.then((data) => exports.QueryProposalsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Vote(request) {\n        const data = exports.QueryVoteRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Query\", \"Vote\", data);\n        return promise.then((data) => exports.QueryVoteResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Votes(request) {\n        const data = exports.QueryVotesRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Query\", \"Votes\", data);\n        return promise.then((data) => exports.QueryVotesResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Params(request) {\n        const data = exports.QueryParamsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Query\", \"Params\", data);\n        return promise.then((data) => exports.QueryParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Deposit(request) {\n        const data = exports.QueryDepositRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Query\", \"Deposit\", data);\n        return promise.then((data) => exports.QueryDepositResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Deposits(request) {\n        const data = exports.QueryDepositsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Query\", \"Deposits\", data);\n        return promise.then((data) => exports.QueryDepositsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    TallyResult(request) {\n        const data = exports.QueryTallyResultRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Query\", \"TallyResult\", data);\n        return promise.then((data) => exports.QueryTallyResultResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\n//# sourceMappingURL=query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgDepositResponse = exports.MsgDeposit = exports.MsgVoteWeightedResponse = exports.MsgVoteWeighted = exports.MsgVoteResponse = exports.MsgVote = exports.MsgSubmitProposalResponse = exports.MsgSubmitProposal = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst gov_1 = require(\"./gov\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.gov.v1beta1\";\nfunction createBaseMsgSubmitProposal() {\n    return {\n        content: undefined,\n        initialDeposit: [],\n        proposer: \"\",\n    };\n}\nexports.MsgSubmitProposal = {\n    typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.content !== undefined) {\n            any_1.Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSubmitProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgSubmitProposal();\n        if ((0, helpers_1.isSet)(object.content))\n            obj.content = any_1.Any.fromJSON(object.content);\n        if (Array.isArray(object?.initialDeposit))\n            obj.initialDeposit = object.initialDeposit.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.proposer))\n            obj.proposer = String(object.proposer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? any_1.Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgSubmitProposal();\n        if (object.content !== undefined && object.content !== null) {\n            message.content = any_1.Any.fromPartial(object.content);\n        }\n        message.initialDeposit = object.initialDeposit?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        message.proposer = object.proposer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgSubmitProposalResponse() {\n    return {\n        proposalId: BigInt(0),\n    };\n}\nexports.MsgSubmitProposalResponse = {\n    typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposalResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSubmitProposalResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgSubmitProposalResponse();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgSubmitProposalResponse();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseMsgVote() {\n    return {\n        proposalId: BigInt(0),\n        voter: \"\",\n        option: 0,\n    };\n}\nexports.MsgVote = {\n    typeUrl: \"/cosmos.gov.v1beta1.MsgVote\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgVote();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgVote();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.voter))\n            obj.voter = String(object.voter);\n        if ((0, helpers_1.isSet)(object.option))\n            obj.option = (0, gov_1.voteOptionFromJSON)(object.option);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = (0, gov_1.voteOptionToJSON)(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgVote();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        message.voter = object.voter ?? \"\";\n        message.option = object.option ?? 0;\n        return message;\n    },\n};\nfunction createBaseMsgVoteResponse() {\n    return {};\n}\nexports.MsgVoteResponse = {\n    typeUrl: \"/cosmos.gov.v1beta1.MsgVoteResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgVoteResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgVoteResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgVoteResponse();\n        return message;\n    },\n};\nfunction createBaseMsgVoteWeighted() {\n    return {\n        proposalId: BigInt(0),\n        voter: \"\",\n        options: [],\n    };\n}\nexports.MsgVoteWeighted = {\n    typeUrl: \"/cosmos.gov.v1beta1.MsgVoteWeighted\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        for (const v of message.options) {\n            gov_1.WeightedVoteOption.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgVoteWeighted();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.options.push(gov_1.WeightedVoteOption.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgVoteWeighted();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.voter))\n            obj.voter = String(object.voter);\n        if (Array.isArray(object?.options))\n            obj.options = object.options.map((e) => gov_1.WeightedVoteOption.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.voter !== undefined && (obj.voter = message.voter);\n        if (message.options) {\n            obj.options = message.options.map((e) => (e ? gov_1.WeightedVoteOption.toJSON(e) : undefined));\n        }\n        else {\n            obj.options = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgVoteWeighted();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        message.voter = object.voter ?? \"\";\n        message.options = object.options?.map((e) => gov_1.WeightedVoteOption.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgVoteWeightedResponse() {\n    return {};\n}\nexports.MsgVoteWeightedResponse = {\n    typeUrl: \"/cosmos.gov.v1beta1.MsgVoteWeightedResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgVoteWeightedResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgVoteWeightedResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgVoteWeightedResponse();\n        return message;\n    },\n};\nfunction createBaseMsgDeposit() {\n    return {\n        proposalId: BigInt(0),\n        depositor: \"\",\n        amount: [],\n    };\n}\nexports.MsgDeposit = {\n    typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgDeposit();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgDeposit();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.depositor))\n            obj.depositor = String(object.depositor);\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgDeposit();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        message.depositor = object.depositor ?? \"\";\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgDepositResponse() {\n    return {};\n}\nexports.MsgDepositResponse = {\n    typeUrl: \"/cosmos.gov.v1beta1.MsgDepositResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgDepositResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgDepositResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgDepositResponse();\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.SubmitProposal = this.SubmitProposal.bind(this);\n        this.Vote = this.Vote.bind(this);\n        this.VoteWeighted = this.VoteWeighted.bind(this);\n        this.Deposit = this.Deposit.bind(this);\n    }\n    SubmitProposal(request) {\n        const data = exports.MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => exports.MsgSubmitProposalResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Vote(request) {\n        const data = exports.MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => exports.MsgVoteResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    VoteWeighted(request) {\n        const data = exports.MsgVoteWeighted.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"VoteWeighted\", data);\n        return promise.then((data) => exports.MsgVoteWeightedResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Deposit(request) {\n        const data = exports.MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => exports.MsgDepositResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgLeaveGroupResponse = exports.MsgLeaveGroup = exports.MsgExecResponse = exports.MsgExec = exports.MsgVoteResponse = exports.MsgVote = exports.MsgWithdrawProposalResponse = exports.MsgWithdrawProposal = exports.MsgSubmitProposalResponse = exports.MsgSubmitProposal = exports.MsgUpdateGroupPolicyMetadataResponse = exports.MsgUpdateGroupPolicyMetadata = exports.MsgUpdateGroupPolicyDecisionPolicyResponse = exports.MsgUpdateGroupPolicyDecisionPolicy = exports.MsgCreateGroupWithPolicyResponse = exports.MsgCreateGroupWithPolicy = exports.MsgUpdateGroupPolicyAdminResponse = exports.MsgUpdateGroupPolicyAdmin = exports.MsgCreateGroupPolicyResponse = exports.MsgCreateGroupPolicy = exports.MsgUpdateGroupMetadataResponse = exports.MsgUpdateGroupMetadata = exports.MsgUpdateGroupAdminResponse = exports.MsgUpdateGroupAdmin = exports.MsgUpdateGroupMembersResponse = exports.MsgUpdateGroupMembers = exports.MsgCreateGroupResponse = exports.MsgCreateGroup = exports.execToJSON = exports.execFromJSON = exports.Exec = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst types_1 = require(\"./types\");\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.group.v1\";\n/** Exec defines modes of execution of a proposal on creation or on new vote. */\nvar Exec;\n(function (Exec) {\n    /**\n     * EXEC_UNSPECIFIED - An empty value means that there should be a separate\n     * MsgExec request for the proposal to execute.\n     */\n    Exec[Exec[\"EXEC_UNSPECIFIED\"] = 0] = \"EXEC_UNSPECIFIED\";\n    /**\n     * EXEC_TRY - Try to execute the proposal immediately.\n     * If the proposal is not allowed per the DecisionPolicy,\n     * the proposal will still be open and could\n     * be executed at a later point.\n     */\n    Exec[Exec[\"EXEC_TRY\"] = 1] = \"EXEC_TRY\";\n    Exec[Exec[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Exec || (exports.Exec = Exec = {}));\nfunction execFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"EXEC_UNSPECIFIED\":\n            return Exec.EXEC_UNSPECIFIED;\n        case 1:\n        case \"EXEC_TRY\":\n            return Exec.EXEC_TRY;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Exec.UNRECOGNIZED;\n    }\n}\nexports.execFromJSON = execFromJSON;\nfunction execToJSON(object) {\n    switch (object) {\n        case Exec.EXEC_UNSPECIFIED:\n            return \"EXEC_UNSPECIFIED\";\n        case Exec.EXEC_TRY:\n            return \"EXEC_TRY\";\n        case Exec.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.execToJSON = execToJSON;\nfunction createBaseMsgCreateGroup() {\n    return {\n        admin: \"\",\n        members: [],\n        metadata: \"\",\n    };\n}\nexports.MsgCreateGroup = {\n    typeUrl: \"/cosmos.group.v1.MsgCreateGroup\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.admin !== \"\") {\n            writer.uint32(10).string(message.admin);\n        }\n        for (const v of message.members) {\n            types_1.MemberRequest.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(26).string(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateGroup();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.admin = reader.string();\n                    break;\n                case 2:\n                    message.members.push(types_1.MemberRequest.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgCreateGroup();\n        if ((0, helpers_1.isSet)(object.admin))\n            obj.admin = String(object.admin);\n        if (Array.isArray(object?.members))\n            obj.members = object.members.map((e) => types_1.MemberRequest.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.admin !== undefined && (obj.admin = message.admin);\n        if (message.members) {\n            obj.members = message.members.map((e) => (e ? types_1.MemberRequest.toJSON(e) : undefined));\n        }\n        else {\n            obj.members = [];\n        }\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCreateGroup();\n        message.admin = object.admin ?? \"\";\n        message.members = object.members?.map((e) => types_1.MemberRequest.fromPartial(e)) || [];\n        message.metadata = object.metadata ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgCreateGroupResponse() {\n    return {\n        groupId: BigInt(0),\n    };\n}\nexports.MsgCreateGroupResponse = {\n    typeUrl: \"/cosmos.group.v1.MsgCreateGroupResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.groupId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.groupId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateGroupResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.groupId = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgCreateGroupResponse();\n        if ((0, helpers_1.isSet)(object.groupId))\n            obj.groupId = BigInt(object.groupId.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCreateGroupResponse();\n        if (object.groupId !== undefined && object.groupId !== null) {\n            message.groupId = BigInt(object.groupId.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseMsgUpdateGroupMembers() {\n    return {\n        admin: \"\",\n        groupId: BigInt(0),\n        memberUpdates: [],\n    };\n}\nexports.MsgUpdateGroupMembers = {\n    typeUrl: \"/cosmos.group.v1.MsgUpdateGroupMembers\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.admin !== \"\") {\n            writer.uint32(10).string(message.admin);\n        }\n        if (message.groupId !== BigInt(0)) {\n            writer.uint32(16).uint64(message.groupId);\n        }\n        for (const v of message.memberUpdates) {\n            types_1.MemberRequest.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateGroupMembers();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.admin = reader.string();\n                    break;\n                case 2:\n                    message.groupId = reader.uint64();\n                    break;\n                case 3:\n                    message.memberUpdates.push(types_1.MemberRequest.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUpdateGroupMembers();\n        if ((0, helpers_1.isSet)(object.admin))\n            obj.admin = String(object.admin);\n        if ((0, helpers_1.isSet)(object.groupId))\n            obj.groupId = BigInt(object.groupId.toString());\n        if (Array.isArray(object?.memberUpdates))\n            obj.memberUpdates = object.memberUpdates.map((e) => types_1.MemberRequest.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.admin !== undefined && (obj.admin = message.admin);\n        message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(0)).toString());\n        if (message.memberUpdates) {\n            obj.memberUpdates = message.memberUpdates.map((e) => (e ? types_1.MemberRequest.toJSON(e) : undefined));\n        }\n        else {\n            obj.memberUpdates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateGroupMembers();\n        message.admin = object.admin ?? \"\";\n        if (object.groupId !== undefined && object.groupId !== null) {\n            message.groupId = BigInt(object.groupId.toString());\n        }\n        message.memberUpdates = object.memberUpdates?.map((e) => types_1.MemberRequest.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgUpdateGroupMembersResponse() {\n    return {};\n}\nexports.MsgUpdateGroupMembersResponse = {\n    typeUrl: \"/cosmos.group.v1.MsgUpdateGroupMembersResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateGroupMembersResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgUpdateGroupMembersResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateGroupMembersResponse();\n        return message;\n    },\n};\nfunction createBaseMsgUpdateGroupAdmin() {\n    return {\n        admin: \"\",\n        groupId: BigInt(0),\n        newAdmin: \"\",\n    };\n}\nexports.MsgUpdateGroupAdmin = {\n    typeUrl: \"/cosmos.group.v1.MsgUpdateGroupAdmin\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.admin !== \"\") {\n            writer.uint32(10).string(message.admin);\n        }\n        if (message.groupId !== BigInt(0)) {\n            writer.uint32(16).uint64(message.groupId);\n        }\n        if (message.newAdmin !== \"\") {\n            writer.uint32(26).string(message.newAdmin);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateGroupAdmin();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.admin = reader.string();\n                    break;\n                case 2:\n                    message.groupId = reader.uint64();\n                    break;\n                case 3:\n                    message.newAdmin = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUpdateGroupAdmin();\n        if ((0, helpers_1.isSet)(object.admin))\n            obj.admin = String(object.admin);\n        if ((0, helpers_1.isSet)(object.groupId))\n            obj.groupId = BigInt(object.groupId.toString());\n        if ((0, helpers_1.isSet)(object.newAdmin))\n            obj.newAdmin = String(object.newAdmin);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.admin !== undefined && (obj.admin = message.admin);\n        message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(0)).toString());\n        message.newAdmin !== undefined && (obj.newAdmin = message.newAdmin);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateGroupAdmin();\n        message.admin = object.admin ?? \"\";\n        if (object.groupId !== undefined && object.groupId !== null) {\n            message.groupId = BigInt(object.groupId.toString());\n        }\n        message.newAdmin = object.newAdmin ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgUpdateGroupAdminResponse() {\n    return {};\n}\nexports.MsgUpdateGroupAdminResponse = {\n    typeUrl: \"/cosmos.group.v1.MsgUpdateGroupAdminResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateGroupAdminResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgUpdateGroupAdminResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateGroupAdminResponse();\n        return message;\n    },\n};\nfunction createBaseMsgUpdateGroupMetadata() {\n    return {\n        admin: \"\",\n        groupId: BigInt(0),\n        metadata: \"\",\n    };\n}\nexports.MsgUpdateGroupMetadata = {\n    typeUrl: \"/cosmos.group.v1.MsgUpdateGroupMetadata\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.admin !== \"\") {\n            writer.uint32(10).string(message.admin);\n        }\n        if (message.groupId !== BigInt(0)) {\n            writer.uint32(16).uint64(message.groupId);\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(26).string(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateGroupMetadata();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.admin = reader.string();\n                    break;\n                case 2:\n                    message.groupId = reader.uint64();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUpdateGroupMetadata();\n        if ((0, helpers_1.isSet)(object.admin))\n            obj.admin = String(object.admin);\n        if ((0, helpers_1.isSet)(object.groupId))\n            obj.groupId = BigInt(object.groupId.toString());\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.admin !== undefined && (obj.admin = message.admin);\n        message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(0)).toString());\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateGroupMetadata();\n        message.admin = object.admin ?? \"\";\n        if (object.groupId !== undefined && object.groupId !== null) {\n            message.groupId = BigInt(object.groupId.toString());\n        }\n        message.metadata = object.metadata ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgUpdateGroupMetadataResponse() {\n    return {};\n}\nexports.MsgUpdateGroupMetadataResponse = {\n    typeUrl: \"/cosmos.group.v1.MsgUpdateGroupMetadataResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateGroupMetadataResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgUpdateGroupMetadataResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateGroupMetadataResponse();\n        return message;\n    },\n};\nfunction createBaseMsgCreateGroupPolicy() {\n    return {\n        admin: \"\",\n        groupId: BigInt(0),\n        metadata: \"\",\n        decisionPolicy: undefined,\n    };\n}\nexports.MsgCreateGroupPolicy = {\n    typeUrl: \"/cosmos.group.v1.MsgCreateGroupPolicy\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.admin !== \"\") {\n            writer.uint32(10).string(message.admin);\n        }\n        if (message.groupId !== BigInt(0)) {\n            writer.uint32(16).uint64(message.groupId);\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.decisionPolicy !== undefined) {\n            any_1.Any.encode(message.decisionPolicy, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateGroupPolicy();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.admin = reader.string();\n                    break;\n                case 2:\n                    message.groupId = reader.uint64();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.decisionPolicy = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgCreateGroupPolicy();\n        if ((0, helpers_1.isSet)(object.admin))\n            obj.admin = String(object.admin);\n        if ((0, helpers_1.isSet)(object.groupId))\n            obj.groupId = BigInt(object.groupId.toString());\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        if ((0, helpers_1.isSet)(object.decisionPolicy))\n            obj.decisionPolicy = any_1.Any.fromJSON(object.decisionPolicy);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.admin !== undefined && (obj.admin = message.admin);\n        message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(0)).toString());\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.decisionPolicy !== undefined &&\n            (obj.decisionPolicy = message.decisionPolicy ? any_1.Any.toJSON(message.decisionPolicy) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCreateGroupPolicy();\n        message.admin = object.admin ?? \"\";\n        if (object.groupId !== undefined && object.groupId !== null) {\n            message.groupId = BigInt(object.groupId.toString());\n        }\n        message.metadata = object.metadata ?? \"\";\n        if (object.decisionPolicy !== undefined && object.decisionPolicy !== null) {\n            message.decisionPolicy = any_1.Any.fromPartial(object.decisionPolicy);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgCreateGroupPolicyResponse() {\n    return {\n        address: \"\",\n    };\n}\nexports.MsgCreateGroupPolicyResponse = {\n    typeUrl: \"/cosmos.group.v1.MsgCreateGroupPolicyResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateGroupPolicyResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgCreateGroupPolicyResponse();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCreateGroupPolicyResponse();\n        message.address = object.address ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgUpdateGroupPolicyAdmin() {\n    return {\n        admin: \"\",\n        groupPolicyAddress: \"\",\n        newAdmin: \"\",\n    };\n}\nexports.MsgUpdateGroupPolicyAdmin = {\n    typeUrl: \"/cosmos.group.v1.MsgUpdateGroupPolicyAdmin\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.admin !== \"\") {\n            writer.uint32(10).string(message.admin);\n        }\n        if (message.groupPolicyAddress !== \"\") {\n            writer.uint32(18).string(message.groupPolicyAddress);\n        }\n        if (message.newAdmin !== \"\") {\n            writer.uint32(26).string(message.newAdmin);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateGroupPolicyAdmin();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.admin = reader.string();\n                    break;\n                case 2:\n                    message.groupPolicyAddress = reader.string();\n                    break;\n                case 3:\n                    message.newAdmin = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUpdateGroupPolicyAdmin();\n        if ((0, helpers_1.isSet)(object.admin))\n            obj.admin = String(object.admin);\n        if ((0, helpers_1.isSet)(object.groupPolicyAddress))\n            obj.groupPolicyAddress = String(object.groupPolicyAddress);\n        if ((0, helpers_1.isSet)(object.newAdmin))\n            obj.newAdmin = String(object.newAdmin);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.admin !== undefined && (obj.admin = message.admin);\n        message.groupPolicyAddress !== undefined && (obj.groupPolicyAddress = message.groupPolicyAddress);\n        message.newAdmin !== undefined && (obj.newAdmin = message.newAdmin);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateGroupPolicyAdmin();\n        message.admin = object.admin ?? \"\";\n        message.groupPolicyAddress = object.groupPolicyAddress ?? \"\";\n        message.newAdmin = object.newAdmin ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgUpdateGroupPolicyAdminResponse() {\n    return {};\n}\nexports.MsgUpdateGroupPolicyAdminResponse = {\n    typeUrl: \"/cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateGroupPolicyAdminResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgUpdateGroupPolicyAdminResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateGroupPolicyAdminResponse();\n        return message;\n    },\n};\nfunction createBaseMsgCreateGroupWithPolicy() {\n    return {\n        admin: \"\",\n        members: [],\n        groupMetadata: \"\",\n        groupPolicyMetadata: \"\",\n        groupPolicyAsAdmin: false,\n        decisionPolicy: undefined,\n    };\n}\nexports.MsgCreateGroupWithPolicy = {\n    typeUrl: \"/cosmos.group.v1.MsgCreateGroupWithPolicy\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.admin !== \"\") {\n            writer.uint32(10).string(message.admin);\n        }\n        for (const v of message.members) {\n            types_1.MemberRequest.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.groupMetadata !== \"\") {\n            writer.uint32(26).string(message.groupMetadata);\n        }\n        if (message.groupPolicyMetadata !== \"\") {\n            writer.uint32(34).string(message.groupPolicyMetadata);\n        }\n        if (message.groupPolicyAsAdmin === true) {\n            writer.uint32(40).bool(message.groupPolicyAsAdmin);\n        }\n        if (message.decisionPolicy !== undefined) {\n            any_1.Any.encode(message.decisionPolicy, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateGroupWithPolicy();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.admin = reader.string();\n                    break;\n                case 2:\n                    message.members.push(types_1.MemberRequest.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.groupMetadata = reader.string();\n                    break;\n                case 4:\n                    message.groupPolicyMetadata = reader.string();\n                    break;\n                case 5:\n                    message.groupPolicyAsAdmin = reader.bool();\n                    break;\n                case 6:\n                    message.decisionPolicy = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgCreateGroupWithPolicy();\n        if ((0, helpers_1.isSet)(object.admin))\n            obj.admin = String(object.admin);\n        if (Array.isArray(object?.members))\n            obj.members = object.members.map((e) => types_1.MemberRequest.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.groupMetadata))\n            obj.groupMetadata = String(object.groupMetadata);\n        if ((0, helpers_1.isSet)(object.groupPolicyMetadata))\n            obj.groupPolicyMetadata = String(object.groupPolicyMetadata);\n        if ((0, helpers_1.isSet)(object.groupPolicyAsAdmin))\n            obj.groupPolicyAsAdmin = Boolean(object.groupPolicyAsAdmin);\n        if ((0, helpers_1.isSet)(object.decisionPolicy))\n            obj.decisionPolicy = any_1.Any.fromJSON(object.decisionPolicy);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.admin !== undefined && (obj.admin = message.admin);\n        if (message.members) {\n            obj.members = message.members.map((e) => (e ? types_1.MemberRequest.toJSON(e) : undefined));\n        }\n        else {\n            obj.members = [];\n        }\n        message.groupMetadata !== undefined && (obj.groupMetadata = message.groupMetadata);\n        message.groupPolicyMetadata !== undefined && (obj.groupPolicyMetadata = message.groupPolicyMetadata);\n        message.groupPolicyAsAdmin !== undefined && (obj.groupPolicyAsAdmin = message.groupPolicyAsAdmin);\n        message.decisionPolicy !== undefined &&\n            (obj.decisionPolicy = message.decisionPolicy ? any_1.Any.toJSON(message.decisionPolicy) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCreateGroupWithPolicy();\n        message.admin = object.admin ?? \"\";\n        message.members = object.members?.map((e) => types_1.MemberRequest.fromPartial(e)) || [];\n        message.groupMetadata = object.groupMetadata ?? \"\";\n        message.groupPolicyMetadata = object.groupPolicyMetadata ?? \"\";\n        message.groupPolicyAsAdmin = object.groupPolicyAsAdmin ?? false;\n        if (object.decisionPolicy !== undefined && object.decisionPolicy !== null) {\n            message.decisionPolicy = any_1.Any.fromPartial(object.decisionPolicy);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgCreateGroupWithPolicyResponse() {\n    return {\n        groupId: BigInt(0),\n        groupPolicyAddress: \"\",\n    };\n}\nexports.MsgCreateGroupWithPolicyResponse = {\n    typeUrl: \"/cosmos.group.v1.MsgCreateGroupWithPolicyResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.groupId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.groupId);\n        }\n        if (message.groupPolicyAddress !== \"\") {\n            writer.uint32(18).string(message.groupPolicyAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateGroupWithPolicyResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.groupId = reader.uint64();\n                    break;\n                case 2:\n                    message.groupPolicyAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgCreateGroupWithPolicyResponse();\n        if ((0, helpers_1.isSet)(object.groupId))\n            obj.groupId = BigInt(object.groupId.toString());\n        if ((0, helpers_1.isSet)(object.groupPolicyAddress))\n            obj.groupPolicyAddress = String(object.groupPolicyAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(0)).toString());\n        message.groupPolicyAddress !== undefined && (obj.groupPolicyAddress = message.groupPolicyAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCreateGroupWithPolicyResponse();\n        if (object.groupId !== undefined && object.groupId !== null) {\n            message.groupId = BigInt(object.groupId.toString());\n        }\n        message.groupPolicyAddress = object.groupPolicyAddress ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgUpdateGroupPolicyDecisionPolicy() {\n    return {\n        admin: \"\",\n        groupPolicyAddress: \"\",\n        decisionPolicy: undefined,\n    };\n}\nexports.MsgUpdateGroupPolicyDecisionPolicy = {\n    typeUrl: \"/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.admin !== \"\") {\n            writer.uint32(10).string(message.admin);\n        }\n        if (message.groupPolicyAddress !== \"\") {\n            writer.uint32(18).string(message.groupPolicyAddress);\n        }\n        if (message.decisionPolicy !== undefined) {\n            any_1.Any.encode(message.decisionPolicy, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateGroupPolicyDecisionPolicy();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.admin = reader.string();\n                    break;\n                case 2:\n                    message.groupPolicyAddress = reader.string();\n                    break;\n                case 3:\n                    message.decisionPolicy = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUpdateGroupPolicyDecisionPolicy();\n        if ((0, helpers_1.isSet)(object.admin))\n            obj.admin = String(object.admin);\n        if ((0, helpers_1.isSet)(object.groupPolicyAddress))\n            obj.groupPolicyAddress = String(object.groupPolicyAddress);\n        if ((0, helpers_1.isSet)(object.decisionPolicy))\n            obj.decisionPolicy = any_1.Any.fromJSON(object.decisionPolicy);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.admin !== undefined && (obj.admin = message.admin);\n        message.groupPolicyAddress !== undefined && (obj.groupPolicyAddress = message.groupPolicyAddress);\n        message.decisionPolicy !== undefined &&\n            (obj.decisionPolicy = message.decisionPolicy ? any_1.Any.toJSON(message.decisionPolicy) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateGroupPolicyDecisionPolicy();\n        message.admin = object.admin ?? \"\";\n        message.groupPolicyAddress = object.groupPolicyAddress ?? \"\";\n        if (object.decisionPolicy !== undefined && object.decisionPolicy !== null) {\n            message.decisionPolicy = any_1.Any.fromPartial(object.decisionPolicy);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgUpdateGroupPolicyDecisionPolicyResponse() {\n    return {};\n}\nexports.MsgUpdateGroupPolicyDecisionPolicyResponse = {\n    typeUrl: \"/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateGroupPolicyDecisionPolicyResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgUpdateGroupPolicyDecisionPolicyResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateGroupPolicyDecisionPolicyResponse();\n        return message;\n    },\n};\nfunction createBaseMsgUpdateGroupPolicyMetadata() {\n    return {\n        admin: \"\",\n        groupPolicyAddress: \"\",\n        metadata: \"\",\n    };\n}\nexports.MsgUpdateGroupPolicyMetadata = {\n    typeUrl: \"/cosmos.group.v1.MsgUpdateGroupPolicyMetadata\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.admin !== \"\") {\n            writer.uint32(10).string(message.admin);\n        }\n        if (message.groupPolicyAddress !== \"\") {\n            writer.uint32(18).string(message.groupPolicyAddress);\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(26).string(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateGroupPolicyMetadata();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.admin = reader.string();\n                    break;\n                case 2:\n                    message.groupPolicyAddress = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUpdateGroupPolicyMetadata();\n        if ((0, helpers_1.isSet)(object.admin))\n            obj.admin = String(object.admin);\n        if ((0, helpers_1.isSet)(object.groupPolicyAddress))\n            obj.groupPolicyAddress = String(object.groupPolicyAddress);\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.admin !== undefined && (obj.admin = message.admin);\n        message.groupPolicyAddress !== undefined && (obj.groupPolicyAddress = message.groupPolicyAddress);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateGroupPolicyMetadata();\n        message.admin = object.admin ?? \"\";\n        message.groupPolicyAddress = object.groupPolicyAddress ?? \"\";\n        message.metadata = object.metadata ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgUpdateGroupPolicyMetadataResponse() {\n    return {};\n}\nexports.MsgUpdateGroupPolicyMetadataResponse = {\n    typeUrl: \"/cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateGroupPolicyMetadataResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgUpdateGroupPolicyMetadataResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateGroupPolicyMetadataResponse();\n        return message;\n    },\n};\nfunction createBaseMsgSubmitProposal() {\n    return {\n        groupPolicyAddress: \"\",\n        proposers: [],\n        metadata: \"\",\n        messages: [],\n        exec: 0,\n        title: \"\",\n        summary: \"\",\n    };\n}\nexports.MsgSubmitProposal = {\n    typeUrl: \"/cosmos.group.v1.MsgSubmitProposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.groupPolicyAddress !== \"\") {\n            writer.uint32(10).string(message.groupPolicyAddress);\n        }\n        for (const v of message.proposers) {\n            writer.uint32(18).string(v);\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(26).string(message.metadata);\n        }\n        for (const v of message.messages) {\n            any_1.Any.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.exec !== 0) {\n            writer.uint32(40).int32(message.exec);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(50).string(message.title);\n        }\n        if (message.summary !== \"\") {\n            writer.uint32(58).string(message.summary);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSubmitProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.groupPolicyAddress = reader.string();\n                    break;\n                case 2:\n                    message.proposers.push(reader.string());\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.messages.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.exec = reader.int32();\n                    break;\n                case 6:\n                    message.title = reader.string();\n                    break;\n                case 7:\n                    message.summary = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgSubmitProposal();\n        if ((0, helpers_1.isSet)(object.groupPolicyAddress))\n            obj.groupPolicyAddress = String(object.groupPolicyAddress);\n        if (Array.isArray(object?.proposers))\n            obj.proposers = object.proposers.map((e) => String(e));\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        if (Array.isArray(object?.messages))\n            obj.messages = object.messages.map((e) => any_1.Any.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.exec))\n            obj.exec = execFromJSON(object.exec);\n        if ((0, helpers_1.isSet)(object.title))\n            obj.title = String(object.title);\n        if ((0, helpers_1.isSet)(object.summary))\n            obj.summary = String(object.summary);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.groupPolicyAddress !== undefined && (obj.groupPolicyAddress = message.groupPolicyAddress);\n        if (message.proposers) {\n            obj.proposers = message.proposers.map((e) => e);\n        }\n        else {\n            obj.proposers = [];\n        }\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        if (message.messages) {\n            obj.messages = message.messages.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.messages = [];\n        }\n        message.exec !== undefined && (obj.exec = execToJSON(message.exec));\n        message.title !== undefined && (obj.title = message.title);\n        message.summary !== undefined && (obj.summary = message.summary);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgSubmitProposal();\n        message.groupPolicyAddress = object.groupPolicyAddress ?? \"\";\n        message.proposers = object.proposers?.map((e) => e) || [];\n        message.metadata = object.metadata ?? \"\";\n        message.messages = object.messages?.map((e) => any_1.Any.fromPartial(e)) || [];\n        message.exec = object.exec ?? 0;\n        message.title = object.title ?? \"\";\n        message.summary = object.summary ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgSubmitProposalResponse() {\n    return {\n        proposalId: BigInt(0),\n    };\n}\nexports.MsgSubmitProposalResponse = {\n    typeUrl: \"/cosmos.group.v1.MsgSubmitProposalResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSubmitProposalResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgSubmitProposalResponse();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgSubmitProposalResponse();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseMsgWithdrawProposal() {\n    return {\n        proposalId: BigInt(0),\n        address: \"\",\n    };\n}\nexports.MsgWithdrawProposal = {\n    typeUrl: \"/cosmos.group.v1.MsgWithdrawProposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.address !== \"\") {\n            writer.uint32(18).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgWithdrawProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgWithdrawProposal();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgWithdrawProposal();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        message.address = object.address ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgWithdrawProposalResponse() {\n    return {};\n}\nexports.MsgWithdrawProposalResponse = {\n    typeUrl: \"/cosmos.group.v1.MsgWithdrawProposalResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgWithdrawProposalResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgWithdrawProposalResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgWithdrawProposalResponse();\n        return message;\n    },\n};\nfunction createBaseMsgVote() {\n    return {\n        proposalId: BigInt(0),\n        voter: \"\",\n        option: 0,\n        metadata: \"\",\n        exec: 0,\n    };\n}\nexports.MsgVote = {\n    typeUrl: \"/cosmos.group.v1.MsgVote\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(34).string(message.metadata);\n        }\n        if (message.exec !== 0) {\n            writer.uint32(40).int32(message.exec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgVote();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                case 4:\n                    message.metadata = reader.string();\n                    break;\n                case 5:\n                    message.exec = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgVote();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.voter))\n            obj.voter = String(object.voter);\n        if ((0, helpers_1.isSet)(object.option))\n            obj.option = (0, types_1.voteOptionFromJSON)(object.option);\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        if ((0, helpers_1.isSet)(object.exec))\n            obj.exec = execFromJSON(object.exec);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = (0, types_1.voteOptionToJSON)(message.option));\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.exec !== undefined && (obj.exec = execToJSON(message.exec));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgVote();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        message.voter = object.voter ?? \"\";\n        message.option = object.option ?? 0;\n        message.metadata = object.metadata ?? \"\";\n        message.exec = object.exec ?? 0;\n        return message;\n    },\n};\nfunction createBaseMsgVoteResponse() {\n    return {};\n}\nexports.MsgVoteResponse = {\n    typeUrl: \"/cosmos.group.v1.MsgVoteResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgVoteResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgVoteResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgVoteResponse();\n        return message;\n    },\n};\nfunction createBaseMsgExec() {\n    return {\n        proposalId: BigInt(0),\n        executor: \"\",\n    };\n}\nexports.MsgExec = {\n    typeUrl: \"/cosmos.group.v1.MsgExec\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.executor !== \"\") {\n            writer.uint32(18).string(message.executor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgExec();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.executor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgExec();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.executor))\n            obj.executor = String(object.executor);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.executor !== undefined && (obj.executor = message.executor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgExec();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        message.executor = object.executor ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgExecResponse() {\n    return {\n        result: 0,\n    };\n}\nexports.MsgExecResponse = {\n    typeUrl: \"/cosmos.group.v1.MsgExecResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.result !== 0) {\n            writer.uint32(16).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgExecResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgExecResponse();\n        if ((0, helpers_1.isSet)(object.result))\n            obj.result = (0, types_1.proposalExecutorResultFromJSON)(object.result);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined && (obj.result = (0, types_1.proposalExecutorResultToJSON)(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgExecResponse();\n        message.result = object.result ?? 0;\n        return message;\n    },\n};\nfunction createBaseMsgLeaveGroup() {\n    return {\n        address: \"\",\n        groupId: BigInt(0),\n    };\n}\nexports.MsgLeaveGroup = {\n    typeUrl: \"/cosmos.group.v1.MsgLeaveGroup\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.groupId !== BigInt(0)) {\n            writer.uint32(16).uint64(message.groupId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgLeaveGroup();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.groupId = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgLeaveGroup();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.groupId))\n            obj.groupId = BigInt(object.groupId.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgLeaveGroup();\n        message.address = object.address ?? \"\";\n        if (object.groupId !== undefined && object.groupId !== null) {\n            message.groupId = BigInt(object.groupId.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseMsgLeaveGroupResponse() {\n    return {};\n}\nexports.MsgLeaveGroupResponse = {\n    typeUrl: \"/cosmos.group.v1.MsgLeaveGroupResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgLeaveGroupResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgLeaveGroupResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgLeaveGroupResponse();\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.CreateGroup = this.CreateGroup.bind(this);\n        this.UpdateGroupMembers = this.UpdateGroupMembers.bind(this);\n        this.UpdateGroupAdmin = this.UpdateGroupAdmin.bind(this);\n        this.UpdateGroupMetadata = this.UpdateGroupMetadata.bind(this);\n        this.CreateGroupPolicy = this.CreateGroupPolicy.bind(this);\n        this.CreateGroupWithPolicy = this.CreateGroupWithPolicy.bind(this);\n        this.UpdateGroupPolicyAdmin = this.UpdateGroupPolicyAdmin.bind(this);\n        this.UpdateGroupPolicyDecisionPolicy = this.UpdateGroupPolicyDecisionPolicy.bind(this);\n        this.UpdateGroupPolicyMetadata = this.UpdateGroupPolicyMetadata.bind(this);\n        this.SubmitProposal = this.SubmitProposal.bind(this);\n        this.WithdrawProposal = this.WithdrawProposal.bind(this);\n        this.Vote = this.Vote.bind(this);\n        this.Exec = this.Exec.bind(this);\n        this.LeaveGroup = this.LeaveGroup.bind(this);\n    }\n    CreateGroup(request) {\n        const data = exports.MsgCreateGroup.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"CreateGroup\", data);\n        return promise.then((data) => exports.MsgCreateGroupResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpdateGroupMembers(request) {\n        const data = exports.MsgUpdateGroupMembers.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"UpdateGroupMembers\", data);\n        return promise.then((data) => exports.MsgUpdateGroupMembersResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpdateGroupAdmin(request) {\n        const data = exports.MsgUpdateGroupAdmin.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"UpdateGroupAdmin\", data);\n        return promise.then((data) => exports.MsgUpdateGroupAdminResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpdateGroupMetadata(request) {\n        const data = exports.MsgUpdateGroupMetadata.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"UpdateGroupMetadata\", data);\n        return promise.then((data) => exports.MsgUpdateGroupMetadataResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    CreateGroupPolicy(request) {\n        const data = exports.MsgCreateGroupPolicy.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"CreateGroupPolicy\", data);\n        return promise.then((data) => exports.MsgCreateGroupPolicyResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    CreateGroupWithPolicy(request) {\n        const data = exports.MsgCreateGroupWithPolicy.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"CreateGroupWithPolicy\", data);\n        return promise.then((data) => exports.MsgCreateGroupWithPolicyResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpdateGroupPolicyAdmin(request) {\n        const data = exports.MsgUpdateGroupPolicyAdmin.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"UpdateGroupPolicyAdmin\", data);\n        return promise.then((data) => exports.MsgUpdateGroupPolicyAdminResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpdateGroupPolicyDecisionPolicy(request) {\n        const data = exports.MsgUpdateGroupPolicyDecisionPolicy.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"UpdateGroupPolicyDecisionPolicy\", data);\n        return promise.then((data) => exports.MsgUpdateGroupPolicyDecisionPolicyResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpdateGroupPolicyMetadata(request) {\n        const data = exports.MsgUpdateGroupPolicyMetadata.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"UpdateGroupPolicyMetadata\", data);\n        return promise.then((data) => exports.MsgUpdateGroupPolicyMetadataResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    SubmitProposal(request) {\n        const data = exports.MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => exports.MsgSubmitProposalResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    WithdrawProposal(request) {\n        const data = exports.MsgWithdrawProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"WithdrawProposal\", data);\n        return promise.then((data) => exports.MsgWithdrawProposalResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Vote(request) {\n        const data = exports.MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"Vote\", data);\n        return promise.then((data) => exports.MsgVoteResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Exec(request) {\n        const data = exports.MsgExec.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"Exec\", data);\n        return promise.then((data) => exports.MsgExecResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    LeaveGroup(request) {\n        const data = exports.MsgLeaveGroup.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.group.v1.Msg\", \"LeaveGroup\", data);\n        return promise.then((data) => exports.MsgLeaveGroupResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Vote = exports.TallyResult = exports.Proposal = exports.GroupPolicyInfo = exports.GroupMember = exports.GroupInfo = exports.DecisionPolicyWindows = exports.PercentageDecisionPolicy = exports.ThresholdDecisionPolicy = exports.MemberRequest = exports.Member = exports.proposalExecutorResultToJSON = exports.proposalExecutorResultFromJSON = exports.ProposalExecutorResult = exports.proposalStatusToJSON = exports.proposalStatusFromJSON = exports.ProposalStatus = exports.voteOptionToJSON = exports.voteOptionFromJSON = exports.VoteOption = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst timestamp_1 = require(\"../../../google/protobuf/timestamp\");\nconst duration_1 = require(\"../../../google/protobuf/duration\");\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.group.v1\";\n/** VoteOption enumerates the valid vote options for a given proposal. */\nvar VoteOption;\n(function (VoteOption) {\n    /**\n     * VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines an unspecified vote option which will\n     * return an error.\n     */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (exports.VoteOption = VoteOption = {}));\nfunction voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexports.voteOptionFromJSON = voteOptionFromJSON;\nfunction voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        case VoteOption.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.voteOptionToJSON = voteOptionToJSON;\n/** ProposalStatus defines proposal statuses. */\nvar ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - An empty value is invalid and not allowed. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /** PROPOSAL_STATUS_SUBMITTED - Initial status of a proposal when submitted. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_SUBMITTED\"] = 1] = \"PROPOSAL_STATUS_SUBMITTED\";\n    /**\n     * PROPOSAL_STATUS_ACCEPTED - Final status of a proposal when the final tally is done and the outcome\n     * passes the group policy's decision policy.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_ACCEPTED\"] = 2] = \"PROPOSAL_STATUS_ACCEPTED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - Final status of a proposal when the final tally is done and the outcome\n     * is rejected by the group policy's decision policy.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 3] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_ABORTED - Final status of a proposal when the group policy is modified before the\n     * final tally.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_ABORTED\"] = 4] = \"PROPOSAL_STATUS_ABORTED\";\n    /**\n     * PROPOSAL_STATUS_WITHDRAWN - A proposal can be withdrawn before the voting start time by the owner.\n     * When this happens the final status is Withdrawn.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_WITHDRAWN\"] = 5] = \"PROPOSAL_STATUS_WITHDRAWN\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (exports.ProposalStatus = ProposalStatus = {}));\nfunction proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_SUBMITTED\":\n            return ProposalStatus.PROPOSAL_STATUS_SUBMITTED;\n        case 2:\n        case \"PROPOSAL_STATUS_ACCEPTED\":\n            return ProposalStatus.PROPOSAL_STATUS_ACCEPTED;\n        case 3:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 4:\n        case \"PROPOSAL_STATUS_ABORTED\":\n            return ProposalStatus.PROPOSAL_STATUS_ABORTED;\n        case 5:\n        case \"PROPOSAL_STATUS_WITHDRAWN\":\n            return ProposalStatus.PROPOSAL_STATUS_WITHDRAWN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexports.proposalStatusFromJSON = proposalStatusFromJSON;\nfunction proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_SUBMITTED:\n            return \"PROPOSAL_STATUS_SUBMITTED\";\n        case ProposalStatus.PROPOSAL_STATUS_ACCEPTED:\n            return \"PROPOSAL_STATUS_ACCEPTED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_ABORTED:\n            return \"PROPOSAL_STATUS_ABORTED\";\n        case ProposalStatus.PROPOSAL_STATUS_WITHDRAWN:\n            return \"PROPOSAL_STATUS_WITHDRAWN\";\n        case ProposalStatus.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.proposalStatusToJSON = proposalStatusToJSON;\n/** ProposalExecutorResult defines types of proposal executor results. */\nvar ProposalExecutorResult;\n(function (ProposalExecutorResult) {\n    /** PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED - An empty value is not allowed. */\n    ProposalExecutorResult[ProposalExecutorResult[\"PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED\"] = 0] = \"PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED\";\n    /** PROPOSAL_EXECUTOR_RESULT_NOT_RUN - We have not yet run the executor. */\n    ProposalExecutorResult[ProposalExecutorResult[\"PROPOSAL_EXECUTOR_RESULT_NOT_RUN\"] = 1] = \"PROPOSAL_EXECUTOR_RESULT_NOT_RUN\";\n    /** PROPOSAL_EXECUTOR_RESULT_SUCCESS - The executor was successful and proposed action updated state. */\n    ProposalExecutorResult[ProposalExecutorResult[\"PROPOSAL_EXECUTOR_RESULT_SUCCESS\"] = 2] = \"PROPOSAL_EXECUTOR_RESULT_SUCCESS\";\n    /** PROPOSAL_EXECUTOR_RESULT_FAILURE - The executor returned an error and proposed action didn't update state. */\n    ProposalExecutorResult[ProposalExecutorResult[\"PROPOSAL_EXECUTOR_RESULT_FAILURE\"] = 3] = \"PROPOSAL_EXECUTOR_RESULT_FAILURE\";\n    ProposalExecutorResult[ProposalExecutorResult[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalExecutorResult || (exports.ProposalExecutorResult = ProposalExecutorResult = {}));\nfunction proposalExecutorResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED\":\n            return ProposalExecutorResult.PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_EXECUTOR_RESULT_NOT_RUN\":\n            return ProposalExecutorResult.PROPOSAL_EXECUTOR_RESULT_NOT_RUN;\n        case 2:\n        case \"PROPOSAL_EXECUTOR_RESULT_SUCCESS\":\n            return ProposalExecutorResult.PROPOSAL_EXECUTOR_RESULT_SUCCESS;\n        case 3:\n        case \"PROPOSAL_EXECUTOR_RESULT_FAILURE\":\n            return ProposalExecutorResult.PROPOSAL_EXECUTOR_RESULT_FAILURE;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalExecutorResult.UNRECOGNIZED;\n    }\n}\nexports.proposalExecutorResultFromJSON = proposalExecutorResultFromJSON;\nfunction proposalExecutorResultToJSON(object) {\n    switch (object) {\n        case ProposalExecutorResult.PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED:\n            return \"PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED\";\n        case ProposalExecutorResult.PROPOSAL_EXECUTOR_RESULT_NOT_RUN:\n            return \"PROPOSAL_EXECUTOR_RESULT_NOT_RUN\";\n        case ProposalExecutorResult.PROPOSAL_EXECUTOR_RESULT_SUCCESS:\n            return \"PROPOSAL_EXECUTOR_RESULT_SUCCESS\";\n        case ProposalExecutorResult.PROPOSAL_EXECUTOR_RESULT_FAILURE:\n            return \"PROPOSAL_EXECUTOR_RESULT_FAILURE\";\n        case ProposalExecutorResult.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.proposalExecutorResultToJSON = proposalExecutorResultToJSON;\nfunction createBaseMember() {\n    return {\n        address: \"\",\n        weight: \"\",\n        metadata: \"\",\n        addedAt: timestamp_1.Timestamp.fromPartial({}),\n    };\n}\nexports.Member = {\n    typeUrl: \"/cosmos.group.v1.Member\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.weight !== \"\") {\n            writer.uint32(18).string(message.weight);\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.addedAt !== undefined) {\n            timestamp_1.Timestamp.encode(message.addedAt, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMember();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.weight = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.addedAt = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMember();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.weight))\n            obj.weight = String(object.weight);\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        if ((0, helpers_1.isSet)(object.addedAt))\n            obj.addedAt = (0, helpers_1.fromJsonTimestamp)(object.addedAt);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.weight !== undefined && (obj.weight = message.weight);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.addedAt !== undefined && (obj.addedAt = (0, helpers_1.fromTimestamp)(message.addedAt).toISOString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMember();\n        message.address = object.address ?? \"\";\n        message.weight = object.weight ?? \"\";\n        message.metadata = object.metadata ?? \"\";\n        if (object.addedAt !== undefined && object.addedAt !== null) {\n            message.addedAt = timestamp_1.Timestamp.fromPartial(object.addedAt);\n        }\n        return message;\n    },\n};\nfunction createBaseMemberRequest() {\n    return {\n        address: \"\",\n        weight: \"\",\n        metadata: \"\",\n    };\n}\nexports.MemberRequest = {\n    typeUrl: \"/cosmos.group.v1.MemberRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.weight !== \"\") {\n            writer.uint32(18).string(message.weight);\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(26).string(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMemberRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.weight = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMemberRequest();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.weight))\n            obj.weight = String(object.weight);\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.weight !== undefined && (obj.weight = message.weight);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMemberRequest();\n        message.address = object.address ?? \"\";\n        message.weight = object.weight ?? \"\";\n        message.metadata = object.metadata ?? \"\";\n        return message;\n    },\n};\nfunction createBaseThresholdDecisionPolicy() {\n    return {\n        threshold: \"\",\n        windows: undefined,\n    };\n}\nexports.ThresholdDecisionPolicy = {\n    typeUrl: \"/cosmos.group.v1.ThresholdDecisionPolicy\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.threshold !== \"\") {\n            writer.uint32(10).string(message.threshold);\n        }\n        if (message.windows !== undefined) {\n            exports.DecisionPolicyWindows.encode(message.windows, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseThresholdDecisionPolicy();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.threshold = reader.string();\n                    break;\n                case 2:\n                    message.windows = exports.DecisionPolicyWindows.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseThresholdDecisionPolicy();\n        if ((0, helpers_1.isSet)(object.threshold))\n            obj.threshold = String(object.threshold);\n        if ((0, helpers_1.isSet)(object.windows))\n            obj.windows = exports.DecisionPolicyWindows.fromJSON(object.windows);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.threshold !== undefined && (obj.threshold = message.threshold);\n        message.windows !== undefined &&\n            (obj.windows = message.windows ? exports.DecisionPolicyWindows.toJSON(message.windows) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseThresholdDecisionPolicy();\n        message.threshold = object.threshold ?? \"\";\n        if (object.windows !== undefined && object.windows !== null) {\n            message.windows = exports.DecisionPolicyWindows.fromPartial(object.windows);\n        }\n        return message;\n    },\n};\nfunction createBasePercentageDecisionPolicy() {\n    return {\n        percentage: \"\",\n        windows: undefined,\n    };\n}\nexports.PercentageDecisionPolicy = {\n    typeUrl: \"/cosmos.group.v1.PercentageDecisionPolicy\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.percentage !== \"\") {\n            writer.uint32(10).string(message.percentage);\n        }\n        if (message.windows !== undefined) {\n            exports.DecisionPolicyWindows.encode(message.windows, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePercentageDecisionPolicy();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.percentage = reader.string();\n                    break;\n                case 2:\n                    message.windows = exports.DecisionPolicyWindows.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBasePercentageDecisionPolicy();\n        if ((0, helpers_1.isSet)(object.percentage))\n            obj.percentage = String(object.percentage);\n        if ((0, helpers_1.isSet)(object.windows))\n            obj.windows = exports.DecisionPolicyWindows.fromJSON(object.windows);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.percentage !== undefined && (obj.percentage = message.percentage);\n        message.windows !== undefined &&\n            (obj.windows = message.windows ? exports.DecisionPolicyWindows.toJSON(message.windows) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBasePercentageDecisionPolicy();\n        message.percentage = object.percentage ?? \"\";\n        if (object.windows !== undefined && object.windows !== null) {\n            message.windows = exports.DecisionPolicyWindows.fromPartial(object.windows);\n        }\n        return message;\n    },\n};\nfunction createBaseDecisionPolicyWindows() {\n    return {\n        votingPeriod: duration_1.Duration.fromPartial({}),\n        minExecutionPeriod: duration_1.Duration.fromPartial({}),\n    };\n}\nexports.DecisionPolicyWindows = {\n    typeUrl: \"/cosmos.group.v1.DecisionPolicyWindows\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.votingPeriod !== undefined) {\n            duration_1.Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.minExecutionPeriod !== undefined) {\n            duration_1.Duration.encode(message.minExecutionPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDecisionPolicyWindows();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.minExecutionPeriod = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseDecisionPolicyWindows();\n        if ((0, helpers_1.isSet)(object.votingPeriod))\n            obj.votingPeriod = duration_1.Duration.fromJSON(object.votingPeriod);\n        if ((0, helpers_1.isSet)(object.minExecutionPeriod))\n            obj.minExecutionPeriod = duration_1.Duration.fromJSON(object.minExecutionPeriod);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod ? duration_1.Duration.toJSON(message.votingPeriod) : undefined);\n        message.minExecutionPeriod !== undefined &&\n            (obj.minExecutionPeriod = message.minExecutionPeriod\n                ? duration_1.Duration.toJSON(message.minExecutionPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseDecisionPolicyWindows();\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = duration_1.Duration.fromPartial(object.votingPeriod);\n        }\n        if (object.minExecutionPeriod !== undefined && object.minExecutionPeriod !== null) {\n            message.minExecutionPeriod = duration_1.Duration.fromPartial(object.minExecutionPeriod);\n        }\n        return message;\n    },\n};\nfunction createBaseGroupInfo() {\n    return {\n        id: BigInt(0),\n        admin: \"\",\n        metadata: \"\",\n        version: BigInt(0),\n        totalWeight: \"\",\n        createdAt: timestamp_1.Timestamp.fromPartial({}),\n    };\n}\nexports.GroupInfo = {\n    typeUrl: \"/cosmos.group.v1.GroupInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.id !== BigInt(0)) {\n            writer.uint32(8).uint64(message.id);\n        }\n        if (message.admin !== \"\") {\n            writer.uint32(18).string(message.admin);\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.version !== BigInt(0)) {\n            writer.uint32(32).uint64(message.version);\n        }\n        if (message.totalWeight !== \"\") {\n            writer.uint32(42).string(message.totalWeight);\n        }\n        if (message.createdAt !== undefined) {\n            timestamp_1.Timestamp.encode(message.createdAt, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGroupInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.uint64();\n                    break;\n                case 2:\n                    message.admin = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.version = reader.uint64();\n                    break;\n                case 5:\n                    message.totalWeight = reader.string();\n                    break;\n                case 6:\n                    message.createdAt = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseGroupInfo();\n        if ((0, helpers_1.isSet)(object.id))\n            obj.id = BigInt(object.id.toString());\n        if ((0, helpers_1.isSet)(object.admin))\n            obj.admin = String(object.admin);\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        if ((0, helpers_1.isSet)(object.version))\n            obj.version = BigInt(object.version.toString());\n        if ((0, helpers_1.isSet)(object.totalWeight))\n            obj.totalWeight = String(object.totalWeight);\n        if ((0, helpers_1.isSet)(object.createdAt))\n            obj.createdAt = (0, helpers_1.fromJsonTimestamp)(object.createdAt);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = (message.id || BigInt(0)).toString());\n        message.admin !== undefined && (obj.admin = message.admin);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.version !== undefined && (obj.version = (message.version || BigInt(0)).toString());\n        message.totalWeight !== undefined && (obj.totalWeight = message.totalWeight);\n        message.createdAt !== undefined && (obj.createdAt = (0, helpers_1.fromTimestamp)(message.createdAt).toISOString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseGroupInfo();\n        if (object.id !== undefined && object.id !== null) {\n            message.id = BigInt(object.id.toString());\n        }\n        message.admin = object.admin ?? \"\";\n        message.metadata = object.metadata ?? \"\";\n        if (object.version !== undefined && object.version !== null) {\n            message.version = BigInt(object.version.toString());\n        }\n        message.totalWeight = object.totalWeight ?? \"\";\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = timestamp_1.Timestamp.fromPartial(object.createdAt);\n        }\n        return message;\n    },\n};\nfunction createBaseGroupMember() {\n    return {\n        groupId: BigInt(0),\n        member: undefined,\n    };\n}\nexports.GroupMember = {\n    typeUrl: \"/cosmos.group.v1.GroupMember\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.groupId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.groupId);\n        }\n        if (message.member !== undefined) {\n            exports.Member.encode(message.member, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGroupMember();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.groupId = reader.uint64();\n                    break;\n                case 2:\n                    message.member = exports.Member.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseGroupMember();\n        if ((0, helpers_1.isSet)(object.groupId))\n            obj.groupId = BigInt(object.groupId.toString());\n        if ((0, helpers_1.isSet)(object.member))\n            obj.member = exports.Member.fromJSON(object.member);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(0)).toString());\n        message.member !== undefined && (obj.member = message.member ? exports.Member.toJSON(message.member) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseGroupMember();\n        if (object.groupId !== undefined && object.groupId !== null) {\n            message.groupId = BigInt(object.groupId.toString());\n        }\n        if (object.member !== undefined && object.member !== null) {\n            message.member = exports.Member.fromPartial(object.member);\n        }\n        return message;\n    },\n};\nfunction createBaseGroupPolicyInfo() {\n    return {\n        address: \"\",\n        groupId: BigInt(0),\n        admin: \"\",\n        metadata: \"\",\n        version: BigInt(0),\n        decisionPolicy: undefined,\n        createdAt: timestamp_1.Timestamp.fromPartial({}),\n    };\n}\nexports.GroupPolicyInfo = {\n    typeUrl: \"/cosmos.group.v1.GroupPolicyInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.groupId !== BigInt(0)) {\n            writer.uint32(16).uint64(message.groupId);\n        }\n        if (message.admin !== \"\") {\n            writer.uint32(26).string(message.admin);\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(34).string(message.metadata);\n        }\n        if (message.version !== BigInt(0)) {\n            writer.uint32(40).uint64(message.version);\n        }\n        if (message.decisionPolicy !== undefined) {\n            any_1.Any.encode(message.decisionPolicy, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.createdAt !== undefined) {\n            timestamp_1.Timestamp.encode(message.createdAt, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGroupPolicyInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.groupId = reader.uint64();\n                    break;\n                case 3:\n                    message.admin = reader.string();\n                    break;\n                case 4:\n                    message.metadata = reader.string();\n                    break;\n                case 5:\n                    message.version = reader.uint64();\n                    break;\n                case 6:\n                    message.decisionPolicy = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.createdAt = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseGroupPolicyInfo();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.groupId))\n            obj.groupId = BigInt(object.groupId.toString());\n        if ((0, helpers_1.isSet)(object.admin))\n            obj.admin = String(object.admin);\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        if ((0, helpers_1.isSet)(object.version))\n            obj.version = BigInt(object.version.toString());\n        if ((0, helpers_1.isSet)(object.decisionPolicy))\n            obj.decisionPolicy = any_1.Any.fromJSON(object.decisionPolicy);\n        if ((0, helpers_1.isSet)(object.createdAt))\n            obj.createdAt = (0, helpers_1.fromJsonTimestamp)(object.createdAt);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.groupId !== undefined && (obj.groupId = (message.groupId || BigInt(0)).toString());\n        message.admin !== undefined && (obj.admin = message.admin);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.version !== undefined && (obj.version = (message.version || BigInt(0)).toString());\n        message.decisionPolicy !== undefined &&\n            (obj.decisionPolicy = message.decisionPolicy ? any_1.Any.toJSON(message.decisionPolicy) : undefined);\n        message.createdAt !== undefined && (obj.createdAt = (0, helpers_1.fromTimestamp)(message.createdAt).toISOString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseGroupPolicyInfo();\n        message.address = object.address ?? \"\";\n        if (object.groupId !== undefined && object.groupId !== null) {\n            message.groupId = BigInt(object.groupId.toString());\n        }\n        message.admin = object.admin ?? \"\";\n        message.metadata = object.metadata ?? \"\";\n        if (object.version !== undefined && object.version !== null) {\n            message.version = BigInt(object.version.toString());\n        }\n        if (object.decisionPolicy !== undefined && object.decisionPolicy !== null) {\n            message.decisionPolicy = any_1.Any.fromPartial(object.decisionPolicy);\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = timestamp_1.Timestamp.fromPartial(object.createdAt);\n        }\n        return message;\n    },\n};\nfunction createBaseProposal() {\n    return {\n        id: BigInt(0),\n        groupPolicyAddress: \"\",\n        metadata: \"\",\n        proposers: [],\n        submitTime: timestamp_1.Timestamp.fromPartial({}),\n        groupVersion: BigInt(0),\n        groupPolicyVersion: BigInt(0),\n        status: 0,\n        finalTallyResult: exports.TallyResult.fromPartial({}),\n        votingPeriodEnd: timestamp_1.Timestamp.fromPartial({}),\n        executorResult: 0,\n        messages: [],\n        title: \"\",\n        summary: \"\",\n    };\n}\nexports.Proposal = {\n    typeUrl: \"/cosmos.group.v1.Proposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.id !== BigInt(0)) {\n            writer.uint32(8).uint64(message.id);\n        }\n        if (message.groupPolicyAddress !== \"\") {\n            writer.uint32(18).string(message.groupPolicyAddress);\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(26).string(message.metadata);\n        }\n        for (const v of message.proposers) {\n            writer.uint32(34).string(v);\n        }\n        if (message.submitTime !== undefined) {\n            timestamp_1.Timestamp.encode(message.submitTime, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.groupVersion !== BigInt(0)) {\n            writer.uint32(48).uint64(message.groupVersion);\n        }\n        if (message.groupPolicyVersion !== BigInt(0)) {\n            writer.uint32(56).uint64(message.groupPolicyVersion);\n        }\n        if (message.status !== 0) {\n            writer.uint32(64).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            exports.TallyResult.encode(message.finalTallyResult, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.votingPeriodEnd !== undefined) {\n            timestamp_1.Timestamp.encode(message.votingPeriodEnd, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.executorResult !== 0) {\n            writer.uint32(88).int32(message.executorResult);\n        }\n        for (const v of message.messages) {\n            any_1.Any.encode(v, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.title !== \"\") {\n            writer.uint32(106).string(message.title);\n        }\n        if (message.summary !== \"\") {\n            writer.uint32(114).string(message.summary);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.uint64();\n                    break;\n                case 2:\n                    message.groupPolicyAddress = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.proposers.push(reader.string());\n                    break;\n                case 5:\n                    message.submitTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.groupVersion = reader.uint64();\n                    break;\n                case 7:\n                    message.groupPolicyVersion = reader.uint64();\n                    break;\n                case 8:\n                    message.status = reader.int32();\n                    break;\n                case 9:\n                    message.finalTallyResult = exports.TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.votingPeriodEnd = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.executorResult = reader.int32();\n                    break;\n                case 12:\n                    message.messages.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    message.title = reader.string();\n                    break;\n                case 14:\n                    message.summary = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseProposal();\n        if ((0, helpers_1.isSet)(object.id))\n            obj.id = BigInt(object.id.toString());\n        if ((0, helpers_1.isSet)(object.groupPolicyAddress))\n            obj.groupPolicyAddress = String(object.groupPolicyAddress);\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        if (Array.isArray(object?.proposers))\n            obj.proposers = object.proposers.map((e) => String(e));\n        if ((0, helpers_1.isSet)(object.submitTime))\n            obj.submitTime = (0, helpers_1.fromJsonTimestamp)(object.submitTime);\n        if ((0, helpers_1.isSet)(object.groupVersion))\n            obj.groupVersion = BigInt(object.groupVersion.toString());\n        if ((0, helpers_1.isSet)(object.groupPolicyVersion))\n            obj.groupPolicyVersion = BigInt(object.groupPolicyVersion.toString());\n        if ((0, helpers_1.isSet)(object.status))\n            obj.status = proposalStatusFromJSON(object.status);\n        if ((0, helpers_1.isSet)(object.finalTallyResult))\n            obj.finalTallyResult = exports.TallyResult.fromJSON(object.finalTallyResult);\n        if ((0, helpers_1.isSet)(object.votingPeriodEnd))\n            obj.votingPeriodEnd = (0, helpers_1.fromJsonTimestamp)(object.votingPeriodEnd);\n        if ((0, helpers_1.isSet)(object.executorResult))\n            obj.executorResult = proposalExecutorResultFromJSON(object.executorResult);\n        if (Array.isArray(object?.messages))\n            obj.messages = object.messages.map((e) => any_1.Any.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.title))\n            obj.title = String(object.title);\n        if ((0, helpers_1.isSet)(object.summary))\n            obj.summary = String(object.summary);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = (message.id || BigInt(0)).toString());\n        message.groupPolicyAddress !== undefined && (obj.groupPolicyAddress = message.groupPolicyAddress);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        if (message.proposers) {\n            obj.proposers = message.proposers.map((e) => e);\n        }\n        else {\n            obj.proposers = [];\n        }\n        message.submitTime !== undefined && (obj.submitTime = (0, helpers_1.fromTimestamp)(message.submitTime).toISOString());\n        message.groupVersion !== undefined && (obj.groupVersion = (message.groupVersion || BigInt(0)).toString());\n        message.groupPolicyVersion !== undefined &&\n            (obj.groupPolicyVersion = (message.groupPolicyVersion || BigInt(0)).toString());\n        message.status !== undefined && (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? exports.TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.votingPeriodEnd !== undefined &&\n            (obj.votingPeriodEnd = (0, helpers_1.fromTimestamp)(message.votingPeriodEnd).toISOString());\n        message.executorResult !== undefined &&\n            (obj.executorResult = proposalExecutorResultToJSON(message.executorResult));\n        if (message.messages) {\n            obj.messages = message.messages.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.messages = [];\n        }\n        message.title !== undefined && (obj.title = message.title);\n        message.summary !== undefined && (obj.summary = message.summary);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseProposal();\n        if (object.id !== undefined && object.id !== null) {\n            message.id = BigInt(object.id.toString());\n        }\n        message.groupPolicyAddress = object.groupPolicyAddress ?? \"\";\n        message.metadata = object.metadata ?? \"\";\n        message.proposers = object.proposers?.map((e) => e) || [];\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = timestamp_1.Timestamp.fromPartial(object.submitTime);\n        }\n        if (object.groupVersion !== undefined && object.groupVersion !== null) {\n            message.groupVersion = BigInt(object.groupVersion.toString());\n        }\n        if (object.groupPolicyVersion !== undefined && object.groupPolicyVersion !== null) {\n            message.groupPolicyVersion = BigInt(object.groupPolicyVersion.toString());\n        }\n        message.status = object.status ?? 0;\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = exports.TallyResult.fromPartial(object.finalTallyResult);\n        }\n        if (object.votingPeriodEnd !== undefined && object.votingPeriodEnd !== null) {\n            message.votingPeriodEnd = timestamp_1.Timestamp.fromPartial(object.votingPeriodEnd);\n        }\n        message.executorResult = object.executorResult ?? 0;\n        message.messages = object.messages?.map((e) => any_1.Any.fromPartial(e)) || [];\n        message.title = object.title ?? \"\";\n        message.summary = object.summary ?? \"\";\n        return message;\n    },\n};\nfunction createBaseTallyResult() {\n    return {\n        yesCount: \"\",\n        abstainCount: \"\",\n        noCount: \"\",\n        noWithVetoCount: \"\",\n    };\n}\nexports.TallyResult = {\n    typeUrl: \"/cosmos.group.v1.TallyResult\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.yesCount !== \"\") {\n            writer.uint32(10).string(message.yesCount);\n        }\n        if (message.abstainCount !== \"\") {\n            writer.uint32(18).string(message.abstainCount);\n        }\n        if (message.noCount !== \"\") {\n            writer.uint32(26).string(message.noCount);\n        }\n        if (message.noWithVetoCount !== \"\") {\n            writer.uint32(34).string(message.noWithVetoCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTallyResult();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yesCount = reader.string();\n                    break;\n                case 2:\n                    message.abstainCount = reader.string();\n                    break;\n                case 3:\n                    message.noCount = reader.string();\n                    break;\n                case 4:\n                    message.noWithVetoCount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTallyResult();\n        if ((0, helpers_1.isSet)(object.yesCount))\n            obj.yesCount = String(object.yesCount);\n        if ((0, helpers_1.isSet)(object.abstainCount))\n            obj.abstainCount = String(object.abstainCount);\n        if ((0, helpers_1.isSet)(object.noCount))\n            obj.noCount = String(object.noCount);\n        if ((0, helpers_1.isSet)(object.noWithVetoCount))\n            obj.noWithVetoCount = String(object.noWithVetoCount);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yesCount !== undefined && (obj.yesCount = message.yesCount);\n        message.abstainCount !== undefined && (obj.abstainCount = message.abstainCount);\n        message.noCount !== undefined && (obj.noCount = message.noCount);\n        message.noWithVetoCount !== undefined && (obj.noWithVetoCount = message.noWithVetoCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTallyResult();\n        message.yesCount = object.yesCount ?? \"\";\n        message.abstainCount = object.abstainCount ?? \"\";\n        message.noCount = object.noCount ?? \"\";\n        message.noWithVetoCount = object.noWithVetoCount ?? \"\";\n        return message;\n    },\n};\nfunction createBaseVote() {\n    return {\n        proposalId: BigInt(0),\n        voter: \"\",\n        option: 0,\n        metadata: \"\",\n        submitTime: timestamp_1.Timestamp.fromPartial({}),\n    };\n}\nexports.Vote = {\n    typeUrl: \"/cosmos.group.v1.Vote\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.proposalId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        if (message.metadata !== \"\") {\n            writer.uint32(34).string(message.metadata);\n        }\n        if (message.submitTime !== undefined) {\n            timestamp_1.Timestamp.encode(message.submitTime, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseVote();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64();\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                case 4:\n                    message.metadata = reader.string();\n                    break;\n                case 5:\n                    message.submitTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseVote();\n        if ((0, helpers_1.isSet)(object.proposalId))\n            obj.proposalId = BigInt(object.proposalId.toString());\n        if ((0, helpers_1.isSet)(object.voter))\n            obj.voter = String(object.voter);\n        if ((0, helpers_1.isSet)(object.option))\n            obj.option = voteOptionFromJSON(object.option);\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = String(object.metadata);\n        if ((0, helpers_1.isSet)(object.submitTime))\n            obj.submitTime = (0, helpers_1.fromJsonTimestamp)(object.submitTime);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = (message.proposalId || BigInt(0)).toString());\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.submitTime !== undefined && (obj.submitTime = (0, helpers_1.fromTimestamp)(message.submitTime).toISOString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseVote();\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = BigInt(object.proposalId.toString());\n        }\n        message.voter = object.voter ?? \"\";\n        message.option = object.option ?? 0;\n        message.metadata = object.metadata ?? \"\";\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = timestamp_1.Timestamp.fromPartial(object.submitTime);\n        }\n        return message;\n    },\n};\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompressedNonExistenceProof = exports.CompressedExistenceProof = exports.CompressedBatchEntry = exports.CompressedBatchProof = exports.BatchEntry = exports.BatchProof = exports.InnerSpec = exports.ProofSpec = exports.InnerOp = exports.LeafOp = exports.CommitmentProof = exports.NonExistenceProof = exports.ExistenceProof = exports.lengthOpToJSON = exports.lengthOpFromJSON = exports.LengthOp = exports.hashOpToJSON = exports.hashOpFromJSON = exports.HashOp = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.ics23.v1\";\nvar HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"SHA512_256\"] = 6] = \"SHA512_256\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (exports.HashOp = HashOp = {}));\nfunction hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_HASH\":\n            return HashOp.NO_HASH;\n        case 1:\n        case \"SHA256\":\n            return HashOp.SHA256;\n        case 2:\n        case \"SHA512\":\n            return HashOp.SHA512;\n        case 3:\n        case \"KECCAK\":\n            return HashOp.KECCAK;\n        case 4:\n        case \"RIPEMD160\":\n            return HashOp.RIPEMD160;\n        case 5:\n        case \"BITCOIN\":\n            return HashOp.BITCOIN;\n        case 6:\n        case \"SHA512_256\":\n            return HashOp.SHA512_256;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexports.hashOpFromJSON = hashOpFromJSON;\nfunction hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return \"NO_HASH\";\n        case HashOp.SHA256:\n            return \"SHA256\";\n        case HashOp.SHA512:\n            return \"SHA512\";\n        case HashOp.KECCAK:\n            return \"KECCAK\";\n        case HashOp.RIPEMD160:\n            return \"RIPEMD160\";\n        case HashOp.BITCOIN:\n            return \"BITCOIN\";\n        case HashOp.SHA512_256:\n            return \"SHA512_256\";\n        case HashOp.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.hashOpToJSON = hashOpToJSON;\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nvar LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (exports.LengthOp = LengthOp = {}));\nfunction lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_PREFIX\":\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case \"VAR_PROTO\":\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case \"VAR_RLP\":\n            return LengthOp.VAR_RLP;\n        case 3:\n        case \"FIXED32_BIG\":\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case \"FIXED32_LITTLE\":\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case \"FIXED64_BIG\":\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case \"FIXED64_LITTLE\":\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case \"REQUIRE_32_BYTES\":\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case \"REQUIRE_64_BYTES\":\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexports.lengthOpFromJSON = lengthOpFromJSON;\nfunction lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return \"NO_PREFIX\";\n        case LengthOp.VAR_PROTO:\n            return \"VAR_PROTO\";\n        case LengthOp.VAR_RLP:\n            return \"VAR_RLP\";\n        case LengthOp.FIXED32_BIG:\n            return \"FIXED32_BIG\";\n        case LengthOp.FIXED32_LITTLE:\n            return \"FIXED32_LITTLE\";\n        case LengthOp.FIXED64_BIG:\n            return \"FIXED64_BIG\";\n        case LengthOp.FIXED64_LITTLE:\n            return \"FIXED64_LITTLE\";\n        case LengthOp.REQUIRE_32_BYTES:\n            return \"REQUIRE_32_BYTES\";\n        case LengthOp.REQUIRE_64_BYTES:\n            return \"REQUIRE_64_BYTES\";\n        case LengthOp.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.lengthOpToJSON = lengthOpToJSON;\nfunction createBaseExistenceProof() {\n    return {\n        key: new Uint8Array(),\n        value: new Uint8Array(),\n        leaf: undefined,\n        path: [],\n    };\n}\nexports.ExistenceProof = {\n    typeUrl: \"/cosmos.ics23.v1.ExistenceProof\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            exports.LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            exports.InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExistenceProof();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = exports.LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(exports.InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseExistenceProof();\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = (0, helpers_1.bytesFromBase64)(object.key);\n        if ((0, helpers_1.isSet)(object.value))\n            obj.value = (0, helpers_1.bytesFromBase64)(object.value);\n        if ((0, helpers_1.isSet)(object.leaf))\n            obj.leaf = exports.LeafOp.fromJSON(object.leaf);\n        if (Array.isArray(object?.path))\n            obj.path = object.path.map((e) => exports.InnerOp.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = (0, helpers_1.base64FromBytes)(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined && (obj.leaf = message.leaf ? exports.LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? exports.InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseExistenceProof();\n        message.key = object.key ?? new Uint8Array();\n        message.value = object.value ?? new Uint8Array();\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = exports.LeafOp.fromPartial(object.leaf);\n        }\n        message.path = object.path?.map((e) => exports.InnerOp.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseNonExistenceProof() {\n    return {\n        key: new Uint8Array(),\n        left: undefined,\n        right: undefined,\n    };\n}\nexports.NonExistenceProof = {\n    typeUrl: \"/cosmos.ics23.v1.NonExistenceProof\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            exports.ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            exports.ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseNonExistenceProof();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = exports.ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = exports.ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseNonExistenceProof();\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = (0, helpers_1.bytesFromBase64)(object.key);\n        if ((0, helpers_1.isSet)(object.left))\n            obj.left = exports.ExistenceProof.fromJSON(object.left);\n        if ((0, helpers_1.isSet)(object.right))\n            obj.right = exports.ExistenceProof.fromJSON(object.right);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined && (obj.left = message.left ? exports.ExistenceProof.toJSON(message.left) : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right ? exports.ExistenceProof.toJSON(message.right) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseNonExistenceProof();\n        message.key = object.key ?? new Uint8Array();\n        if (object.left !== undefined && object.left !== null) {\n            message.left = exports.ExistenceProof.fromPartial(object.left);\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = exports.ExistenceProof.fromPartial(object.right);\n        }\n        return message;\n    },\n};\nfunction createBaseCommitmentProof() {\n    return {\n        exist: undefined,\n        nonexist: undefined,\n        batch: undefined,\n        compressed: undefined,\n    };\n}\nexports.CommitmentProof = {\n    typeUrl: \"/cosmos.ics23.v1.CommitmentProof\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.exist !== undefined) {\n            exports.ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            exports.NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            exports.BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            exports.CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCommitmentProof();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = exports.ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = exports.NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = exports.BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = exports.CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCommitmentProof();\n        if ((0, helpers_1.isSet)(object.exist))\n            obj.exist = exports.ExistenceProof.fromJSON(object.exist);\n        if ((0, helpers_1.isSet)(object.nonexist))\n            obj.nonexist = exports.NonExistenceProof.fromJSON(object.nonexist);\n        if ((0, helpers_1.isSet)(object.batch))\n            obj.batch = exports.BatchProof.fromJSON(object.batch);\n        if ((0, helpers_1.isSet)(object.compressed))\n            obj.compressed = exports.CompressedBatchProof.fromJSON(object.compressed);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist ? exports.ExistenceProof.toJSON(message.exist) : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist ? exports.NonExistenceProof.toJSON(message.nonexist) : undefined);\n        message.batch !== undefined && (obj.batch = message.batch ? exports.BatchProof.toJSON(message.batch) : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed ? exports.CompressedBatchProof.toJSON(message.compressed) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCommitmentProof();\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = exports.ExistenceProof.fromPartial(object.exist);\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = exports.NonExistenceProof.fromPartial(object.nonexist);\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = exports.BatchProof.fromPartial(object.batch);\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = exports.CompressedBatchProof.fromPartial(object.compressed);\n        }\n        return message;\n    },\n};\nfunction createBaseLeafOp() {\n    return {\n        hash: 0,\n        prehashKey: 0,\n        prehashValue: 0,\n        length: 0,\n        prefix: new Uint8Array(),\n    };\n}\nexports.LeafOp = {\n    typeUrl: \"/cosmos.ics23.v1.LeafOp\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLeafOp();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseLeafOp();\n        if ((0, helpers_1.isSet)(object.hash))\n            obj.hash = hashOpFromJSON(object.hash);\n        if ((0, helpers_1.isSet)(object.prehashKey))\n            obj.prehashKey = hashOpFromJSON(object.prehashKey);\n        if ((0, helpers_1.isSet)(object.prehashValue))\n            obj.prehashValue = hashOpFromJSON(object.prehashValue);\n        if ((0, helpers_1.isSet)(object.length))\n            obj.length = lengthOpFromJSON(object.length);\n        if ((0, helpers_1.isSet)(object.prefix))\n            obj.prefix = (0, helpers_1.bytesFromBase64)(object.prefix);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined && (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined && (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined && (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = (0, helpers_1.base64FromBytes)(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseLeafOp();\n        message.hash = object.hash ?? 0;\n        message.prehashKey = object.prehashKey ?? 0;\n        message.prehashValue = object.prehashValue ?? 0;\n        message.length = object.length ?? 0;\n        message.prefix = object.prefix ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseInnerOp() {\n    return {\n        hash: 0,\n        prefix: new Uint8Array(),\n        suffix: new Uint8Array(),\n    };\n}\nexports.InnerOp = {\n    typeUrl: \"/cosmos.ics23.v1.InnerOp\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseInnerOp();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseInnerOp();\n        if ((0, helpers_1.isSet)(object.hash))\n            obj.hash = hashOpFromJSON(object.hash);\n        if ((0, helpers_1.isSet)(object.prefix))\n            obj.prefix = (0, helpers_1.bytesFromBase64)(object.prefix);\n        if ((0, helpers_1.isSet)(object.suffix))\n            obj.suffix = (0, helpers_1.bytesFromBase64)(object.suffix);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = (0, helpers_1.base64FromBytes)(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = (0, helpers_1.base64FromBytes)(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseInnerOp();\n        message.hash = object.hash ?? 0;\n        message.prefix = object.prefix ?? new Uint8Array();\n        message.suffix = object.suffix ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseProofSpec() {\n    return {\n        leafSpec: undefined,\n        innerSpec: undefined,\n        maxDepth: 0,\n        minDepth: 0,\n    };\n}\nexports.ProofSpec = {\n    typeUrl: \"/cosmos.ics23.v1.ProofSpec\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.leafSpec !== undefined) {\n            exports.LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            exports.InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseProofSpec();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = exports.LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = exports.InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseProofSpec();\n        if ((0, helpers_1.isSet)(object.leafSpec))\n            obj.leafSpec = exports.LeafOp.fromJSON(object.leafSpec);\n        if ((0, helpers_1.isSet)(object.innerSpec))\n            obj.innerSpec = exports.InnerSpec.fromJSON(object.innerSpec);\n        if ((0, helpers_1.isSet)(object.maxDepth))\n            obj.maxDepth = Number(object.maxDepth);\n        if ((0, helpers_1.isSet)(object.minDepth))\n            obj.minDepth = Number(object.minDepth);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec ? exports.LeafOp.toJSON(message.leafSpec) : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec ? exports.InnerSpec.toJSON(message.innerSpec) : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = Math.round(message.maxDepth));\n        message.minDepth !== undefined && (obj.minDepth = Math.round(message.minDepth));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseProofSpec();\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = exports.LeafOp.fromPartial(object.leafSpec);\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = exports.InnerSpec.fromPartial(object.innerSpec);\n        }\n        message.maxDepth = object.maxDepth ?? 0;\n        message.minDepth = object.minDepth ?? 0;\n        return message;\n    },\n};\nfunction createBaseInnerSpec() {\n    return {\n        childOrder: [],\n        childSize: 0,\n        minPrefixLength: 0,\n        maxPrefixLength: 0,\n        emptyChild: new Uint8Array(),\n        hash: 0,\n    };\n}\nexports.InnerSpec = {\n    typeUrl: \"/cosmos.ics23.v1.InnerSpec\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseInnerSpec();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseInnerSpec();\n        if (Array.isArray(object?.childOrder))\n            obj.childOrder = object.childOrder.map((e) => Number(e));\n        if ((0, helpers_1.isSet)(object.childSize))\n            obj.childSize = Number(object.childSize);\n        if ((0, helpers_1.isSet)(object.minPrefixLength))\n            obj.minPrefixLength = Number(object.minPrefixLength);\n        if ((0, helpers_1.isSet)(object.maxPrefixLength))\n            obj.maxPrefixLength = Number(object.maxPrefixLength);\n        if ((0, helpers_1.isSet)(object.emptyChild))\n            obj.emptyChild = (0, helpers_1.bytesFromBase64)(object.emptyChild);\n        if ((0, helpers_1.isSet)(object.hash))\n            obj.hash = hashOpFromJSON(object.hash);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => Math.round(e));\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = Math.round(message.childSize));\n        message.minPrefixLength !== undefined && (obj.minPrefixLength = Math.round(message.minPrefixLength));\n        message.maxPrefixLength !== undefined && (obj.maxPrefixLength = Math.round(message.maxPrefixLength));\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = (0, helpers_1.base64FromBytes)(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseInnerSpec();\n        message.childOrder = object.childOrder?.map((e) => e) || [];\n        message.childSize = object.childSize ?? 0;\n        message.minPrefixLength = object.minPrefixLength ?? 0;\n        message.maxPrefixLength = object.maxPrefixLength ?? 0;\n        message.emptyChild = object.emptyChild ?? new Uint8Array();\n        message.hash = object.hash ?? 0;\n        return message;\n    },\n};\nfunction createBaseBatchProof() {\n    return {\n        entries: [],\n    };\n}\nexports.BatchProof = {\n    typeUrl: \"/cosmos.ics23.v1.BatchProof\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.entries) {\n            exports.BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBatchProof();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(exports.BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseBatchProof();\n        if (Array.isArray(object?.entries))\n            obj.entries = object.entries.map((e) => exports.BatchEntry.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? exports.BatchEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseBatchProof();\n        message.entries = object.entries?.map((e) => exports.BatchEntry.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseBatchEntry() {\n    return {\n        exist: undefined,\n        nonexist: undefined,\n    };\n}\nexports.BatchEntry = {\n    typeUrl: \"/cosmos.ics23.v1.BatchEntry\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.exist !== undefined) {\n            exports.ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            exports.NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBatchEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = exports.ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = exports.NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseBatchEntry();\n        if ((0, helpers_1.isSet)(object.exist))\n            obj.exist = exports.ExistenceProof.fromJSON(object.exist);\n        if ((0, helpers_1.isSet)(object.nonexist))\n            obj.nonexist = exports.NonExistenceProof.fromJSON(object.nonexist);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist ? exports.ExistenceProof.toJSON(message.exist) : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist ? exports.NonExistenceProof.toJSON(message.nonexist) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseBatchEntry();\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = exports.ExistenceProof.fromPartial(object.exist);\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = exports.NonExistenceProof.fromPartial(object.nonexist);\n        }\n        return message;\n    },\n};\nfunction createBaseCompressedBatchProof() {\n    return {\n        entries: [],\n        lookupInners: [],\n    };\n}\nexports.CompressedBatchProof = {\n    typeUrl: \"/cosmos.ics23.v1.CompressedBatchProof\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.entries) {\n            exports.CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            exports.InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCompressedBatchProof();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(exports.CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(exports.InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCompressedBatchProof();\n        if (Array.isArray(object?.entries))\n            obj.entries = object.entries.map((e) => exports.CompressedBatchEntry.fromJSON(e));\n        if (Array.isArray(object?.lookupInners))\n            obj.lookupInners = object.lookupInners.map((e) => exports.InnerOp.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? exports.CompressedBatchEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => (e ? exports.InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCompressedBatchProof();\n        message.entries = object.entries?.map((e) => exports.CompressedBatchEntry.fromPartial(e)) || [];\n        message.lookupInners = object.lookupInners?.map((e) => exports.InnerOp.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseCompressedBatchEntry() {\n    return {\n        exist: undefined,\n        nonexist: undefined,\n    };\n}\nexports.CompressedBatchEntry = {\n    typeUrl: \"/cosmos.ics23.v1.CompressedBatchEntry\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.exist !== undefined) {\n            exports.CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            exports.CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCompressedBatchEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = exports.CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = exports.CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCompressedBatchEntry();\n        if ((0, helpers_1.isSet)(object.exist))\n            obj.exist = exports.CompressedExistenceProof.fromJSON(object.exist);\n        if ((0, helpers_1.isSet)(object.nonexist))\n            obj.nonexist = exports.CompressedNonExistenceProof.fromJSON(object.nonexist);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist ? exports.CompressedExistenceProof.toJSON(message.exist) : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist ? exports.CompressedNonExistenceProof.toJSON(message.nonexist) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCompressedBatchEntry();\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = exports.CompressedExistenceProof.fromPartial(object.exist);\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = exports.CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        return message;\n    },\n};\nfunction createBaseCompressedExistenceProof() {\n    return {\n        key: new Uint8Array(),\n        value: new Uint8Array(),\n        leaf: undefined,\n        path: [],\n    };\n}\nexports.CompressedExistenceProof = {\n    typeUrl: \"/cosmos.ics23.v1.CompressedExistenceProof\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            exports.LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCompressedExistenceProof();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = exports.LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCompressedExistenceProof();\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = (0, helpers_1.bytesFromBase64)(object.key);\n        if ((0, helpers_1.isSet)(object.value))\n            obj.value = (0, helpers_1.bytesFromBase64)(object.value);\n        if ((0, helpers_1.isSet)(object.leaf))\n            obj.leaf = exports.LeafOp.fromJSON(object.leaf);\n        if (Array.isArray(object?.path))\n            obj.path = object.path.map((e) => Number(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = (0, helpers_1.base64FromBytes)(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined && (obj.leaf = message.leaf ? exports.LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => Math.round(e));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCompressedExistenceProof();\n        message.key = object.key ?? new Uint8Array();\n        message.value = object.value ?? new Uint8Array();\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = exports.LeafOp.fromPartial(object.leaf);\n        }\n        message.path = object.path?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseCompressedNonExistenceProof() {\n    return {\n        key: new Uint8Array(),\n        left: undefined,\n        right: undefined,\n    };\n}\nexports.CompressedNonExistenceProof = {\n    typeUrl: \"/cosmos.ics23.v1.CompressedNonExistenceProof\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            exports.CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            exports.CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCompressedNonExistenceProof();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = exports.CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = exports.CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCompressedNonExistenceProof();\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = (0, helpers_1.bytesFromBase64)(object.key);\n        if ((0, helpers_1.isSet)(object.left))\n            obj.left = exports.CompressedExistenceProof.fromJSON(object.left);\n        if ((0, helpers_1.isSet)(object.right))\n            obj.right = exports.CompressedExistenceProof.fromJSON(object.right);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left ? exports.CompressedExistenceProof.toJSON(message.left) : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right ? exports.CompressedExistenceProof.toJSON(message.right) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCompressedNonExistenceProof();\n        message.key = object.key ?? new Uint8Array();\n        if (object.left !== undefined && object.left !== null) {\n            message.left = exports.CompressedExistenceProof.fromPartial(object.left);\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = exports.CompressedExistenceProof.fromPartial(object.right);\n        }\n        return message;\n    },\n};\n//# sourceMappingURL=proofs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Params = exports.Minter = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.mint.v1beta1\";\nfunction createBaseMinter() {\n    return {\n        inflation: \"\",\n        annualProvisions: \"\",\n    };\n}\nexports.Minter = {\n    typeUrl: \"/cosmos.mint.v1beta1.Minter\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.inflation !== \"\") {\n            writer.uint32(10).string(message.inflation);\n        }\n        if (message.annualProvisions !== \"\") {\n            writer.uint32(18).string(message.annualProvisions);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMinter();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inflation = reader.string();\n                    break;\n                case 2:\n                    message.annualProvisions = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMinter();\n        if ((0, helpers_1.isSet)(object.inflation))\n            obj.inflation = String(object.inflation);\n        if ((0, helpers_1.isSet)(object.annualProvisions))\n            obj.annualProvisions = String(object.annualProvisions);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.inflation !== undefined && (obj.inflation = message.inflation);\n        message.annualProvisions !== undefined && (obj.annualProvisions = message.annualProvisions);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMinter();\n        message.inflation = object.inflation ?? \"\";\n        message.annualProvisions = object.annualProvisions ?? \"\";\n        return message;\n    },\n};\nfunction createBaseParams() {\n    return {\n        mintDenom: \"\",\n        inflationRateChange: \"\",\n        inflationMax: \"\",\n        inflationMin: \"\",\n        goalBonded: \"\",\n        blocksPerYear: BigInt(0),\n    };\n}\nexports.Params = {\n    typeUrl: \"/cosmos.mint.v1beta1.Params\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.mintDenom !== \"\") {\n            writer.uint32(10).string(message.mintDenom);\n        }\n        if (message.inflationRateChange !== \"\") {\n            writer.uint32(18).string(message.inflationRateChange);\n        }\n        if (message.inflationMax !== \"\") {\n            writer.uint32(26).string(message.inflationMax);\n        }\n        if (message.inflationMin !== \"\") {\n            writer.uint32(34).string(message.inflationMin);\n        }\n        if (message.goalBonded !== \"\") {\n            writer.uint32(42).string(message.goalBonded);\n        }\n        if (message.blocksPerYear !== BigInt(0)) {\n            writer.uint32(48).uint64(message.blocksPerYear);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.mintDenom = reader.string();\n                    break;\n                case 2:\n                    message.inflationRateChange = reader.string();\n                    break;\n                case 3:\n                    message.inflationMax = reader.string();\n                    break;\n                case 4:\n                    message.inflationMin = reader.string();\n                    break;\n                case 5:\n                    message.goalBonded = reader.string();\n                    break;\n                case 6:\n                    message.blocksPerYear = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseParams();\n        if ((0, helpers_1.isSet)(object.mintDenom))\n            obj.mintDenom = String(object.mintDenom);\n        if ((0, helpers_1.isSet)(object.inflationRateChange))\n            obj.inflationRateChange = String(object.inflationRateChange);\n        if ((0, helpers_1.isSet)(object.inflationMax))\n            obj.inflationMax = String(object.inflationMax);\n        if ((0, helpers_1.isSet)(object.inflationMin))\n            obj.inflationMin = String(object.inflationMin);\n        if ((0, helpers_1.isSet)(object.goalBonded))\n            obj.goalBonded = String(object.goalBonded);\n        if ((0, helpers_1.isSet)(object.blocksPerYear))\n            obj.blocksPerYear = BigInt(object.blocksPerYear.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.mintDenom !== undefined && (obj.mintDenom = message.mintDenom);\n        message.inflationRateChange !== undefined && (obj.inflationRateChange = message.inflationRateChange);\n        message.inflationMax !== undefined && (obj.inflationMax = message.inflationMax);\n        message.inflationMin !== undefined && (obj.inflationMin = message.inflationMin);\n        message.goalBonded !== undefined && (obj.goalBonded = message.goalBonded);\n        message.blocksPerYear !== undefined &&\n            (obj.blocksPerYear = (message.blocksPerYear || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseParams();\n        message.mintDenom = object.mintDenom ?? \"\";\n        message.inflationRateChange = object.inflationRateChange ?? \"\";\n        message.inflationMax = object.inflationMax ?? \"\";\n        message.inflationMin = object.inflationMin ?? \"\";\n        message.goalBonded = object.goalBonded ?? \"\";\n        if (object.blocksPerYear !== undefined && object.blocksPerYear !== null) {\n            message.blocksPerYear = BigInt(object.blocksPerYear.toString());\n        }\n        return message;\n    },\n};\n//# sourceMappingURL=mint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QueryAnnualProvisionsResponse = exports.QueryAnnualProvisionsRequest = exports.QueryInflationResponse = exports.QueryInflationRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst mint_1 = require(\"./mint\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.mint.v1beta1\";\nfunction createBaseQueryParamsRequest() {\n    return {};\n}\nexports.QueryParamsRequest = {\n    typeUrl: \"/cosmos.mint.v1beta1.QueryParamsRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryParamsRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryParamsRequest();\n        return message;\n    },\n};\nfunction createBaseQueryParamsResponse() {\n    return {\n        params: mint_1.Params.fromPartial({}),\n    };\n}\nexports.QueryParamsResponse = {\n    typeUrl: \"/cosmos.mint.v1beta1.QueryParamsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.params !== undefined) {\n            mint_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = mint_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryParamsResponse();\n        if ((0, helpers_1.isSet)(object.params))\n            obj.params = mint_1.Params.fromJSON(object.params);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? mint_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryParamsResponse();\n        if (object.params !== undefined && object.params !== null) {\n            message.params = mint_1.Params.fromPartial(object.params);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryInflationRequest() {\n    return {};\n}\nexports.QueryInflationRequest = {\n    typeUrl: \"/cosmos.mint.v1beta1.QueryInflationRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryInflationRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryInflationRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryInflationRequest();\n        return message;\n    },\n};\nfunction createBaseQueryInflationResponse() {\n    return {\n        inflation: new Uint8Array(),\n    };\n}\nexports.QueryInflationResponse = {\n    typeUrl: \"/cosmos.mint.v1beta1.QueryInflationResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.inflation.length !== 0) {\n            writer.uint32(10).bytes(message.inflation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryInflationResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inflation = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryInflationResponse();\n        if ((0, helpers_1.isSet)(object.inflation))\n            obj.inflation = (0, helpers_1.bytesFromBase64)(object.inflation);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.inflation !== undefined &&\n            (obj.inflation = (0, helpers_1.base64FromBytes)(message.inflation !== undefined ? message.inflation : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryInflationResponse();\n        message.inflation = object.inflation ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseQueryAnnualProvisionsRequest() {\n    return {};\n}\nexports.QueryAnnualProvisionsRequest = {\n    typeUrl: \"/cosmos.mint.v1beta1.QueryAnnualProvisionsRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAnnualProvisionsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryAnnualProvisionsRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryAnnualProvisionsRequest();\n        return message;\n    },\n};\nfunction createBaseQueryAnnualProvisionsResponse() {\n    return {\n        annualProvisions: new Uint8Array(),\n    };\n}\nexports.QueryAnnualProvisionsResponse = {\n    typeUrl: \"/cosmos.mint.v1beta1.QueryAnnualProvisionsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.annualProvisions.length !== 0) {\n            writer.uint32(10).bytes(message.annualProvisions);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAnnualProvisionsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.annualProvisions = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAnnualProvisionsResponse();\n        if ((0, helpers_1.isSet)(object.annualProvisions))\n            obj.annualProvisions = (0, helpers_1.bytesFromBase64)(object.annualProvisions);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.annualProvisions !== undefined &&\n            (obj.annualProvisions = (0, helpers_1.base64FromBytes)(message.annualProvisions !== undefined ? message.annualProvisions : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAnnualProvisionsResponse();\n        message.annualProvisions = object.annualProvisions ?? new Uint8Array();\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Params = this.Params.bind(this);\n        this.Inflation = this.Inflation.bind(this);\n        this.AnnualProvisions = this.AnnualProvisions.bind(this);\n    }\n    Params(request = {}) {\n        const data = exports.QueryParamsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.mint.v1beta1.Query\", \"Params\", data);\n        return promise.then((data) => exports.QueryParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Inflation(request = {}) {\n        const data = exports.QueryInflationRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.mint.v1beta1.Query\", \"Inflation\", data);\n        return promise.then((data) => exports.QueryInflationResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    AnnualProvisions(request = {}) {\n        const data = exports.QueryAnnualProvisionsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.mint.v1beta1.Query\", \"AnnualProvisions\", data);\n        return promise.then((data) => exports.QueryAnnualProvisionsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\n//# sourceMappingURL=query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QuerySigningInfosResponse = exports.QuerySigningInfosRequest = exports.QuerySigningInfoResponse = exports.QuerySigningInfoRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst pagination_1 = require(\"../../base/query/v1beta1/pagination\");\nconst slashing_1 = require(\"./slashing\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.slashing.v1beta1\";\nfunction createBaseQueryParamsRequest() {\n    return {};\n}\nexports.QueryParamsRequest = {\n    typeUrl: \"/cosmos.slashing.v1beta1.QueryParamsRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryParamsRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryParamsRequest();\n        return message;\n    },\n};\nfunction createBaseQueryParamsResponse() {\n    return {\n        params: slashing_1.Params.fromPartial({}),\n    };\n}\nexports.QueryParamsResponse = {\n    typeUrl: \"/cosmos.slashing.v1beta1.QueryParamsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.params !== undefined) {\n            slashing_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = slashing_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryParamsResponse();\n        if ((0, helpers_1.isSet)(object.params))\n            obj.params = slashing_1.Params.fromJSON(object.params);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? slashing_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryParamsResponse();\n        if (object.params !== undefined && object.params !== null) {\n            message.params = slashing_1.Params.fromPartial(object.params);\n        }\n        return message;\n    },\n};\nfunction createBaseQuerySigningInfoRequest() {\n    return {\n        consAddress: \"\",\n    };\n}\nexports.QuerySigningInfoRequest = {\n    typeUrl: \"/cosmos.slashing.v1beta1.QuerySigningInfoRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.consAddress !== \"\") {\n            writer.uint32(10).string(message.consAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQuerySigningInfoRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQuerySigningInfoRequest();\n        if ((0, helpers_1.isSet)(object.consAddress))\n            obj.consAddress = String(object.consAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consAddress !== undefined && (obj.consAddress = message.consAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQuerySigningInfoRequest();\n        message.consAddress = object.consAddress ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQuerySigningInfoResponse() {\n    return {\n        valSigningInfo: slashing_1.ValidatorSigningInfo.fromPartial({}),\n    };\n}\nexports.QuerySigningInfoResponse = {\n    typeUrl: \"/cosmos.slashing.v1beta1.QuerySigningInfoResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.valSigningInfo !== undefined) {\n            slashing_1.ValidatorSigningInfo.encode(message.valSigningInfo, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQuerySigningInfoResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.valSigningInfo = slashing_1.ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQuerySigningInfoResponse();\n        if ((0, helpers_1.isSet)(object.valSigningInfo))\n            obj.valSigningInfo = slashing_1.ValidatorSigningInfo.fromJSON(object.valSigningInfo);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.valSigningInfo !== undefined &&\n            (obj.valSigningInfo = message.valSigningInfo\n                ? slashing_1.ValidatorSigningInfo.toJSON(message.valSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQuerySigningInfoResponse();\n        if (object.valSigningInfo !== undefined && object.valSigningInfo !== null) {\n            message.valSigningInfo = slashing_1.ValidatorSigningInfo.fromPartial(object.valSigningInfo);\n        }\n        return message;\n    },\n};\nfunction createBaseQuerySigningInfosRequest() {\n    return {\n        pagination: undefined,\n    };\n}\nexports.QuerySigningInfosRequest = {\n    typeUrl: \"/cosmos.slashing.v1beta1.QuerySigningInfosRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQuerySigningInfosRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQuerySigningInfosRequest();\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQuerySigningInfosRequest();\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQuerySigningInfosResponse() {\n    return {\n        info: [],\n        pagination: undefined,\n    };\n}\nexports.QuerySigningInfosResponse = {\n    typeUrl: \"/cosmos.slashing.v1beta1.QuerySigningInfosResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.info) {\n            slashing_1.ValidatorSigningInfo.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQuerySigningInfosResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.info.push(slashing_1.ValidatorSigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQuerySigningInfosResponse();\n        if (Array.isArray(object?.info))\n            obj.info = object.info.map((e) => slashing_1.ValidatorSigningInfo.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.info) {\n            obj.info = message.info.map((e) => (e ? slashing_1.ValidatorSigningInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.info = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQuerySigningInfosResponse();\n        message.info = object.info?.map((e) => slashing_1.ValidatorSigningInfo.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Params = this.Params.bind(this);\n        this.SigningInfo = this.SigningInfo.bind(this);\n        this.SigningInfos = this.SigningInfos.bind(this);\n    }\n    Params(request = {}) {\n        const data = exports.QueryParamsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Query\", \"Params\", data);\n        return promise.then((data) => exports.QueryParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    SigningInfo(request) {\n        const data = exports.QuerySigningInfoRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Query\", \"SigningInfo\", data);\n        return promise.then((data) => exports.QuerySigningInfoResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    SigningInfos(request = {\n        pagination: pagination_1.PageRequest.fromPartial({}),\n    }) {\n        const data = exports.QuerySigningInfosRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Query\", \"SigningInfos\", data);\n        return promise.then((data) => exports.QuerySigningInfosResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\n//# sourceMappingURL=query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Params = exports.ValidatorSigningInfo = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst timestamp_1 = require(\"../../../google/protobuf/timestamp\");\nconst duration_1 = require(\"../../../google/protobuf/duration\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.slashing.v1beta1\";\nfunction createBaseValidatorSigningInfo() {\n    return {\n        address: \"\",\n        startHeight: BigInt(0),\n        indexOffset: BigInt(0),\n        jailedUntil: timestamp_1.Timestamp.fromPartial({}),\n        tombstoned: false,\n        missedBlocksCounter: BigInt(0),\n    };\n}\nexports.ValidatorSigningInfo = {\n    typeUrl: \"/cosmos.slashing.v1beta1.ValidatorSigningInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== BigInt(0)) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== BigInt(0)) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            timestamp_1.Timestamp.encode(message.jailedUntil, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== BigInt(0)) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValidatorSigningInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = reader.int64();\n                    break;\n                case 3:\n                    message.indexOffset = reader.int64();\n                    break;\n                case 4:\n                    message.jailedUntil = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseValidatorSigningInfo();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.startHeight))\n            obj.startHeight = BigInt(object.startHeight.toString());\n        if ((0, helpers_1.isSet)(object.indexOffset))\n            obj.indexOffset = BigInt(object.indexOffset.toString());\n        if ((0, helpers_1.isSet)(object.jailedUntil))\n            obj.jailedUntil = (0, helpers_1.fromJsonTimestamp)(object.jailedUntil);\n        if ((0, helpers_1.isSet)(object.tombstoned))\n            obj.tombstoned = Boolean(object.tombstoned);\n        if ((0, helpers_1.isSet)(object.missedBlocksCounter))\n            obj.missedBlocksCounter = BigInt(object.missedBlocksCounter.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = (message.startHeight || BigInt(0)).toString());\n        message.indexOffset !== undefined && (obj.indexOffset = (message.indexOffset || BigInt(0)).toString());\n        message.jailedUntil !== undefined && (obj.jailedUntil = (0, helpers_1.fromTimestamp)(message.jailedUntil).toISOString());\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = (message.missedBlocksCounter || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseValidatorSigningInfo();\n        message.address = object.address ?? \"\";\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = BigInt(object.startHeight.toString());\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = BigInt(object.indexOffset.toString());\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = timestamp_1.Timestamp.fromPartial(object.jailedUntil);\n        }\n        message.tombstoned = object.tombstoned ?? false;\n        if (object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = BigInt(object.missedBlocksCounter.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseParams() {\n    return {\n        signedBlocksWindow: BigInt(0),\n        minSignedPerWindow: new Uint8Array(),\n        downtimeJailDuration: duration_1.Duration.fromPartial({}),\n        slashFractionDoubleSign: new Uint8Array(),\n        slashFractionDowntime: new Uint8Array(),\n    };\n}\nexports.Params = {\n    typeUrl: \"/cosmos.slashing.v1beta1.Params\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.signedBlocksWindow !== BigInt(0)) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            duration_1.Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = reader.int64();\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseParams();\n        if ((0, helpers_1.isSet)(object.signedBlocksWindow))\n            obj.signedBlocksWindow = BigInt(object.signedBlocksWindow.toString());\n        if ((0, helpers_1.isSet)(object.minSignedPerWindow))\n            obj.minSignedPerWindow = (0, helpers_1.bytesFromBase64)(object.minSignedPerWindow);\n        if ((0, helpers_1.isSet)(object.downtimeJailDuration))\n            obj.downtimeJailDuration = duration_1.Duration.fromJSON(object.downtimeJailDuration);\n        if ((0, helpers_1.isSet)(object.slashFractionDoubleSign))\n            obj.slashFractionDoubleSign = (0, helpers_1.bytesFromBase64)(object.slashFractionDoubleSign);\n        if ((0, helpers_1.isSet)(object.slashFractionDowntime))\n            obj.slashFractionDowntime = (0, helpers_1.bytesFromBase64)(object.slashFractionDowntime);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = (message.signedBlocksWindow || BigInt(0)).toString());\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = (0, helpers_1.base64FromBytes)(message.minSignedPerWindow !== undefined ? message.minSignedPerWindow : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? duration_1.Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = (0, helpers_1.base64FromBytes)(message.slashFractionDoubleSign !== undefined ? message.slashFractionDoubleSign : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = (0, helpers_1.base64FromBytes)(message.slashFractionDowntime !== undefined ? message.slashFractionDowntime : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseParams();\n        if (object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = BigInt(object.signedBlocksWindow.toString());\n        }\n        message.minSignedPerWindow = object.minSignedPerWindow ?? new Uint8Array();\n        if (object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = duration_1.Duration.fromPartial(object.downtimeJailDuration);\n        }\n        message.slashFractionDoubleSign = object.slashFractionDoubleSign ?? new Uint8Array();\n        message.slashFractionDowntime = object.slashFractionDowntime ?? new Uint8Array();\n        return message;\n    },\n};\n//# sourceMappingURL=slashing.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QueryPoolResponse = exports.QueryPoolRequest = exports.QueryHistoricalInfoResponse = exports.QueryHistoricalInfoRequest = exports.QueryDelegatorValidatorResponse = exports.QueryDelegatorValidatorRequest = exports.QueryDelegatorValidatorsResponse = exports.QueryDelegatorValidatorsRequest = exports.QueryRedelegationsResponse = exports.QueryRedelegationsRequest = exports.QueryDelegatorUnbondingDelegationsResponse = exports.QueryDelegatorUnbondingDelegationsRequest = exports.QueryDelegatorDelegationsResponse = exports.QueryDelegatorDelegationsRequest = exports.QueryUnbondingDelegationResponse = exports.QueryUnbondingDelegationRequest = exports.QueryDelegationResponse = exports.QueryDelegationRequest = exports.QueryValidatorUnbondingDelegationsResponse = exports.QueryValidatorUnbondingDelegationsRequest = exports.QueryValidatorDelegationsResponse = exports.QueryValidatorDelegationsRequest = exports.QueryValidatorResponse = exports.QueryValidatorRequest = exports.QueryValidatorsResponse = exports.QueryValidatorsRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst pagination_1 = require(\"../../base/query/v1beta1/pagination\");\nconst staking_1 = require(\"./staking\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.staking.v1beta1\";\nfunction createBaseQueryValidatorsRequest() {\n    return {\n        status: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryValidatorsRequest = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryValidatorsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.status !== \"\") {\n            writer.uint32(10).string(message.status);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.status = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorsRequest();\n        if ((0, helpers_1.isSet)(object.status))\n            obj.status = String(object.status);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.status !== undefined && (obj.status = message.status);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorsRequest();\n        message.status = object.status ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryValidatorsResponse() {\n    return {\n        validators: [],\n        pagination: undefined,\n    };\n}\nexports.QueryValidatorsResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryValidatorsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.validators) {\n            staking_1.Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(staking_1.Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorsResponse();\n        if (Array.isArray(object?.validators))\n            obj.validators = object.validators.map((e) => staking_1.Validator.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? staking_1.Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorsResponse();\n        message.validators = object.validators?.map((e) => staking_1.Validator.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryValidatorRequest() {\n    return {\n        validatorAddr: \"\",\n    };\n}\nexports.QueryValidatorRequest = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryValidatorRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorRequest();\n        if ((0, helpers_1.isSet)(object.validatorAddr))\n            obj.validatorAddr = String(object.validatorAddr);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined && (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorRequest();\n        message.validatorAddr = object.validatorAddr ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryValidatorResponse() {\n    return {\n        validator: staking_1.Validator.fromPartial({}),\n    };\n}\nexports.QueryValidatorResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryValidatorResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.validator !== undefined) {\n            staking_1.Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = staking_1.Validator.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorResponse();\n        if ((0, helpers_1.isSet)(object.validator))\n            obj.validator = staking_1.Validator.fromJSON(object.validator);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator ? staking_1.Validator.toJSON(message.validator) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorResponse();\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = staking_1.Validator.fromPartial(object.validator);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryValidatorDelegationsRequest() {\n    return {\n        validatorAddr: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryValidatorDelegationsRequest = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryValidatorDelegationsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorDelegationsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorDelegationsRequest();\n        if ((0, helpers_1.isSet)(object.validatorAddr))\n            obj.validatorAddr = String(object.validatorAddr);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined && (obj.validatorAddr = message.validatorAddr);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorDelegationsRequest();\n        message.validatorAddr = object.validatorAddr ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryValidatorDelegationsResponse() {\n    return {\n        delegationResponses: [],\n        pagination: undefined,\n    };\n}\nexports.QueryValidatorDelegationsResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryValidatorDelegationsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.delegationResponses) {\n            staking_1.DelegationResponse.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorDelegationsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegationResponses.push(staking_1.DelegationResponse.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorDelegationsResponse();\n        if (Array.isArray(object?.delegationResponses))\n            obj.delegationResponses = object.delegationResponses.map((e) => staking_1.DelegationResponse.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.delegationResponses) {\n            obj.delegationResponses = message.delegationResponses.map((e) => e ? staking_1.DelegationResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegationResponses = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorDelegationsResponse();\n        message.delegationResponses =\n            object.delegationResponses?.map((e) => staking_1.DelegationResponse.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryValidatorUnbondingDelegationsRequest() {\n    return {\n        validatorAddr: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryValidatorUnbondingDelegationsRequest = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorUnbondingDelegationsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorUnbondingDelegationsRequest();\n        if ((0, helpers_1.isSet)(object.validatorAddr))\n            obj.validatorAddr = String(object.validatorAddr);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined && (obj.validatorAddr = message.validatorAddr);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorUnbondingDelegationsRequest();\n        message.validatorAddr = object.validatorAddr ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryValidatorUnbondingDelegationsResponse() {\n    return {\n        unbondingResponses: [],\n        pagination: undefined,\n    };\n}\nexports.QueryValidatorUnbondingDelegationsResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.unbondingResponses) {\n            staking_1.UnbondingDelegation.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryValidatorUnbondingDelegationsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingResponses.push(staking_1.UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryValidatorUnbondingDelegationsResponse();\n        if (Array.isArray(object?.unbondingResponses))\n            obj.unbondingResponses = object.unbondingResponses.map((e) => staking_1.UnbondingDelegation.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.unbondingResponses) {\n            obj.unbondingResponses = message.unbondingResponses.map((e) => e ? staking_1.UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingResponses = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryValidatorUnbondingDelegationsResponse();\n        message.unbondingResponses =\n            object.unbondingResponses?.map((e) => staking_1.UnbondingDelegation.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDelegationRequest() {\n    return {\n        delegatorAddr: \"\",\n        validatorAddr: \"\",\n    };\n}\nexports.QueryDelegationRequest = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryDelegationRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddr !== \"\") {\n            writer.uint32(10).string(message.delegatorAddr);\n        }\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(18).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegationRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddr = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegationRequest();\n        if ((0, helpers_1.isSet)(object.delegatorAddr))\n            obj.delegatorAddr = String(object.delegatorAddr);\n        if ((0, helpers_1.isSet)(object.validatorAddr))\n            obj.validatorAddr = String(object.validatorAddr);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddr !== undefined && (obj.delegatorAddr = message.delegatorAddr);\n        message.validatorAddr !== undefined && (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegationRequest();\n        message.delegatorAddr = object.delegatorAddr ?? \"\";\n        message.validatorAddr = object.validatorAddr ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryDelegationResponse() {\n    return {\n        delegationResponse: undefined,\n    };\n}\nexports.QueryDelegationResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryDelegationResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegationResponse !== undefined) {\n            staking_1.DelegationResponse.encode(message.delegationResponse, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegationResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegationResponse = staking_1.DelegationResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegationResponse();\n        if ((0, helpers_1.isSet)(object.delegationResponse))\n            obj.delegationResponse = staking_1.DelegationResponse.fromJSON(object.delegationResponse);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegationResponse !== undefined &&\n            (obj.delegationResponse = message.delegationResponse\n                ? staking_1.DelegationResponse.toJSON(message.delegationResponse)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegationResponse();\n        if (object.delegationResponse !== undefined && object.delegationResponse !== null) {\n            message.delegationResponse = staking_1.DelegationResponse.fromPartial(object.delegationResponse);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryUnbondingDelegationRequest() {\n    return {\n        delegatorAddr: \"\",\n        validatorAddr: \"\",\n    };\n}\nexports.QueryUnbondingDelegationRequest = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryUnbondingDelegationRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddr !== \"\") {\n            writer.uint32(10).string(message.delegatorAddr);\n        }\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(18).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryUnbondingDelegationRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddr = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryUnbondingDelegationRequest();\n        if ((0, helpers_1.isSet)(object.delegatorAddr))\n            obj.delegatorAddr = String(object.delegatorAddr);\n        if ((0, helpers_1.isSet)(object.validatorAddr))\n            obj.validatorAddr = String(object.validatorAddr);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddr !== undefined && (obj.delegatorAddr = message.delegatorAddr);\n        message.validatorAddr !== undefined && (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryUnbondingDelegationRequest();\n        message.delegatorAddr = object.delegatorAddr ?? \"\";\n        message.validatorAddr = object.validatorAddr ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryUnbondingDelegationResponse() {\n    return {\n        unbond: staking_1.UnbondingDelegation.fromPartial({}),\n    };\n}\nexports.QueryUnbondingDelegationResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryUnbondingDelegationResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.unbond !== undefined) {\n            staking_1.UnbondingDelegation.encode(message.unbond, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryUnbondingDelegationResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbond = staking_1.UnbondingDelegation.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryUnbondingDelegationResponse();\n        if ((0, helpers_1.isSet)(object.unbond))\n            obj.unbond = staking_1.UnbondingDelegation.fromJSON(object.unbond);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbond !== undefined &&\n            (obj.unbond = message.unbond ? staking_1.UnbondingDelegation.toJSON(message.unbond) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryUnbondingDelegationResponse();\n        if (object.unbond !== undefined && object.unbond !== null) {\n            message.unbond = staking_1.UnbondingDelegation.fromPartial(object.unbond);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDelegatorDelegationsRequest() {\n    return {\n        delegatorAddr: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryDelegatorDelegationsRequest = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddr !== \"\") {\n            writer.uint32(10).string(message.delegatorAddr);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegatorDelegationsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddr = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegatorDelegationsRequest();\n        if ((0, helpers_1.isSet)(object.delegatorAddr))\n            obj.delegatorAddr = String(object.delegatorAddr);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddr !== undefined && (obj.delegatorAddr = message.delegatorAddr);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegatorDelegationsRequest();\n        message.delegatorAddr = object.delegatorAddr ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDelegatorDelegationsResponse() {\n    return {\n        delegationResponses: [],\n        pagination: undefined,\n    };\n}\nexports.QueryDelegatorDelegationsResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.delegationResponses) {\n            staking_1.DelegationResponse.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegatorDelegationsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegationResponses.push(staking_1.DelegationResponse.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegatorDelegationsResponse();\n        if (Array.isArray(object?.delegationResponses))\n            obj.delegationResponses = object.delegationResponses.map((e) => staking_1.DelegationResponse.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.delegationResponses) {\n            obj.delegationResponses = message.delegationResponses.map((e) => e ? staking_1.DelegationResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegationResponses = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegatorDelegationsResponse();\n        message.delegationResponses =\n            object.delegationResponses?.map((e) => staking_1.DelegationResponse.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDelegatorUnbondingDelegationsRequest() {\n    return {\n        delegatorAddr: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryDelegatorUnbondingDelegationsRequest = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddr !== \"\") {\n            writer.uint32(10).string(message.delegatorAddr);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegatorUnbondingDelegationsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddr = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegatorUnbondingDelegationsRequest();\n        if ((0, helpers_1.isSet)(object.delegatorAddr))\n            obj.delegatorAddr = String(object.delegatorAddr);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddr !== undefined && (obj.delegatorAddr = message.delegatorAddr);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegatorUnbondingDelegationsRequest();\n        message.delegatorAddr = object.delegatorAddr ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDelegatorUnbondingDelegationsResponse() {\n    return {\n        unbondingResponses: [],\n        pagination: undefined,\n    };\n}\nexports.QueryDelegatorUnbondingDelegationsResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.unbondingResponses) {\n            staking_1.UnbondingDelegation.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegatorUnbondingDelegationsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingResponses.push(staking_1.UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegatorUnbondingDelegationsResponse();\n        if (Array.isArray(object?.unbondingResponses))\n            obj.unbondingResponses = object.unbondingResponses.map((e) => staking_1.UnbondingDelegation.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.unbondingResponses) {\n            obj.unbondingResponses = message.unbondingResponses.map((e) => e ? staking_1.UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingResponses = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegatorUnbondingDelegationsResponse();\n        message.unbondingResponses =\n            object.unbondingResponses?.map((e) => staking_1.UnbondingDelegation.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryRedelegationsRequest() {\n    return {\n        delegatorAddr: \"\",\n        srcValidatorAddr: \"\",\n        dstValidatorAddr: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryRedelegationsRequest = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryRedelegationsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddr !== \"\") {\n            writer.uint32(10).string(message.delegatorAddr);\n        }\n        if (message.srcValidatorAddr !== \"\") {\n            writer.uint32(18).string(message.srcValidatorAddr);\n        }\n        if (message.dstValidatorAddr !== \"\") {\n            writer.uint32(26).string(message.dstValidatorAddr);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryRedelegationsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddr = reader.string();\n                    break;\n                case 2:\n                    message.srcValidatorAddr = reader.string();\n                    break;\n                case 3:\n                    message.dstValidatorAddr = reader.string();\n                    break;\n                case 4:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryRedelegationsRequest();\n        if ((0, helpers_1.isSet)(object.delegatorAddr))\n            obj.delegatorAddr = String(object.delegatorAddr);\n        if ((0, helpers_1.isSet)(object.srcValidatorAddr))\n            obj.srcValidatorAddr = String(object.srcValidatorAddr);\n        if ((0, helpers_1.isSet)(object.dstValidatorAddr))\n            obj.dstValidatorAddr = String(object.dstValidatorAddr);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddr !== undefined && (obj.delegatorAddr = message.delegatorAddr);\n        message.srcValidatorAddr !== undefined && (obj.srcValidatorAddr = message.srcValidatorAddr);\n        message.dstValidatorAddr !== undefined && (obj.dstValidatorAddr = message.dstValidatorAddr);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryRedelegationsRequest();\n        message.delegatorAddr = object.delegatorAddr ?? \"\";\n        message.srcValidatorAddr = object.srcValidatorAddr ?? \"\";\n        message.dstValidatorAddr = object.dstValidatorAddr ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryRedelegationsResponse() {\n    return {\n        redelegationResponses: [],\n        pagination: undefined,\n    };\n}\nexports.QueryRedelegationsResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryRedelegationsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.redelegationResponses) {\n            staking_1.RedelegationResponse.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryRedelegationsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationResponses.push(staking_1.RedelegationResponse.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryRedelegationsResponse();\n        if (Array.isArray(object?.redelegationResponses))\n            obj.redelegationResponses = object.redelegationResponses.map((e) => staking_1.RedelegationResponse.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.redelegationResponses) {\n            obj.redelegationResponses = message.redelegationResponses.map((e) => e ? staking_1.RedelegationResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegationResponses = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryRedelegationsResponse();\n        message.redelegationResponses =\n            object.redelegationResponses?.map((e) => staking_1.RedelegationResponse.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDelegatorValidatorsRequest() {\n    return {\n        delegatorAddr: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryDelegatorValidatorsRequest = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddr !== \"\") {\n            writer.uint32(10).string(message.delegatorAddr);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegatorValidatorsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddr = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegatorValidatorsRequest();\n        if ((0, helpers_1.isSet)(object.delegatorAddr))\n            obj.delegatorAddr = String(object.delegatorAddr);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddr !== undefined && (obj.delegatorAddr = message.delegatorAddr);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegatorValidatorsRequest();\n        message.delegatorAddr = object.delegatorAddr ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDelegatorValidatorsResponse() {\n    return {\n        validators: [],\n        pagination: undefined,\n    };\n}\nexports.QueryDelegatorValidatorsResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.validators) {\n            staking_1.Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegatorValidatorsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(staking_1.Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegatorValidatorsResponse();\n        if (Array.isArray(object?.validators))\n            obj.validators = object.validators.map((e) => staking_1.Validator.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? staking_1.Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegatorValidatorsResponse();\n        message.validators = object.validators?.map((e) => staking_1.Validator.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDelegatorValidatorRequest() {\n    return {\n        delegatorAddr: \"\",\n        validatorAddr: \"\",\n    };\n}\nexports.QueryDelegatorValidatorRequest = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryDelegatorValidatorRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddr !== \"\") {\n            writer.uint32(10).string(message.delegatorAddr);\n        }\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(18).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegatorValidatorRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddr = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegatorValidatorRequest();\n        if ((0, helpers_1.isSet)(object.delegatorAddr))\n            obj.delegatorAddr = String(object.delegatorAddr);\n        if ((0, helpers_1.isSet)(object.validatorAddr))\n            obj.validatorAddr = String(object.validatorAddr);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddr !== undefined && (obj.delegatorAddr = message.delegatorAddr);\n        message.validatorAddr !== undefined && (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegatorValidatorRequest();\n        message.delegatorAddr = object.delegatorAddr ?? \"\";\n        message.validatorAddr = object.validatorAddr ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryDelegatorValidatorResponse() {\n    return {\n        validator: staking_1.Validator.fromPartial({}),\n    };\n}\nexports.QueryDelegatorValidatorResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryDelegatorValidatorResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.validator !== undefined) {\n            staking_1.Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDelegatorValidatorResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = staking_1.Validator.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDelegatorValidatorResponse();\n        if ((0, helpers_1.isSet)(object.validator))\n            obj.validator = staking_1.Validator.fromJSON(object.validator);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator ? staking_1.Validator.toJSON(message.validator) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDelegatorValidatorResponse();\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = staking_1.Validator.fromPartial(object.validator);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryHistoricalInfoRequest() {\n    return {\n        height: BigInt(0),\n    };\n}\nexports.QueryHistoricalInfoRequest = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryHistoricalInfoRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.height !== BigInt(0)) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryHistoricalInfoRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryHistoricalInfoRequest();\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryHistoricalInfoRequest();\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseQueryHistoricalInfoResponse() {\n    return {\n        hist: undefined,\n    };\n}\nexports.QueryHistoricalInfoResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryHistoricalInfoResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.hist !== undefined) {\n            staking_1.HistoricalInfo.encode(message.hist, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryHistoricalInfoResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hist = staking_1.HistoricalInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryHistoricalInfoResponse();\n        if ((0, helpers_1.isSet)(object.hist))\n            obj.hist = staking_1.HistoricalInfo.fromJSON(object.hist);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hist !== undefined && (obj.hist = message.hist ? staking_1.HistoricalInfo.toJSON(message.hist) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryHistoricalInfoResponse();\n        if (object.hist !== undefined && object.hist !== null) {\n            message.hist = staking_1.HistoricalInfo.fromPartial(object.hist);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryPoolRequest() {\n    return {};\n}\nexports.QueryPoolRequest = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryPoolRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryPoolRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryPoolRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryPoolRequest();\n        return message;\n    },\n};\nfunction createBaseQueryPoolResponse() {\n    return {\n        pool: staking_1.Pool.fromPartial({}),\n    };\n}\nexports.QueryPoolResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryPoolResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.pool !== undefined) {\n            staking_1.Pool.encode(message.pool, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryPoolResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pool = staking_1.Pool.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryPoolResponse();\n        if ((0, helpers_1.isSet)(object.pool))\n            obj.pool = staking_1.Pool.fromJSON(object.pool);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pool !== undefined && (obj.pool = message.pool ? staking_1.Pool.toJSON(message.pool) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryPoolResponse();\n        if (object.pool !== undefined && object.pool !== null) {\n            message.pool = staking_1.Pool.fromPartial(object.pool);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryParamsRequest() {\n    return {};\n}\nexports.QueryParamsRequest = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryParamsRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryParamsRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryParamsRequest();\n        return message;\n    },\n};\nfunction createBaseQueryParamsResponse() {\n    return {\n        params: staking_1.Params.fromPartial({}),\n    };\n}\nexports.QueryParamsResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.QueryParamsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.params !== undefined) {\n            staking_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = staking_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryParamsResponse();\n        if ((0, helpers_1.isSet)(object.params))\n            obj.params = staking_1.Params.fromJSON(object.params);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? staking_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryParamsResponse();\n        if (object.params !== undefined && object.params !== null) {\n            message.params = staking_1.Params.fromPartial(object.params);\n        }\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Validators = this.Validators.bind(this);\n        this.Validator = this.Validator.bind(this);\n        this.ValidatorDelegations = this.ValidatorDelegations.bind(this);\n        this.ValidatorUnbondingDelegations = this.ValidatorUnbondingDelegations.bind(this);\n        this.Delegation = this.Delegation.bind(this);\n        this.UnbondingDelegation = this.UnbondingDelegation.bind(this);\n        this.DelegatorDelegations = this.DelegatorDelegations.bind(this);\n        this.DelegatorUnbondingDelegations = this.DelegatorUnbondingDelegations.bind(this);\n        this.Redelegations = this.Redelegations.bind(this);\n        this.DelegatorValidators = this.DelegatorValidators.bind(this);\n        this.DelegatorValidator = this.DelegatorValidator.bind(this);\n        this.HistoricalInfo = this.HistoricalInfo.bind(this);\n        this.Pool = this.Pool.bind(this);\n        this.Params = this.Params.bind(this);\n    }\n    Validators(request) {\n        const data = exports.QueryValidatorsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"Validators\", data);\n        return promise.then((data) => exports.QueryValidatorsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Validator(request) {\n        const data = exports.QueryValidatorRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"Validator\", data);\n        return promise.then((data) => exports.QueryValidatorResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ValidatorDelegations(request) {\n        const data = exports.QueryValidatorDelegationsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"ValidatorDelegations\", data);\n        return promise.then((data) => exports.QueryValidatorDelegationsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ValidatorUnbondingDelegations(request) {\n        const data = exports.QueryValidatorUnbondingDelegationsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"ValidatorUnbondingDelegations\", data);\n        return promise.then((data) => exports.QueryValidatorUnbondingDelegationsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Delegation(request) {\n        const data = exports.QueryDelegationRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"Delegation\", data);\n        return promise.then((data) => exports.QueryDelegationResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UnbondingDelegation(request) {\n        const data = exports.QueryUnbondingDelegationRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"UnbondingDelegation\", data);\n        return promise.then((data) => exports.QueryUnbondingDelegationResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    DelegatorDelegations(request) {\n        const data = exports.QueryDelegatorDelegationsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"DelegatorDelegations\", data);\n        return promise.then((data) => exports.QueryDelegatorDelegationsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    DelegatorUnbondingDelegations(request) {\n        const data = exports.QueryDelegatorUnbondingDelegationsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"DelegatorUnbondingDelegations\", data);\n        return promise.then((data) => exports.QueryDelegatorUnbondingDelegationsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Redelegations(request) {\n        const data = exports.QueryRedelegationsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"Redelegations\", data);\n        return promise.then((data) => exports.QueryRedelegationsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    DelegatorValidators(request) {\n        const data = exports.QueryDelegatorValidatorsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"DelegatorValidators\", data);\n        return promise.then((data) => exports.QueryDelegatorValidatorsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    DelegatorValidator(request) {\n        const data = exports.QueryDelegatorValidatorRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"DelegatorValidator\", data);\n        return promise.then((data) => exports.QueryDelegatorValidatorResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    HistoricalInfo(request) {\n        const data = exports.QueryHistoricalInfoRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"HistoricalInfo\", data);\n        return promise.then((data) => exports.QueryHistoricalInfoResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Pool(request = {}) {\n        const data = exports.QueryPoolRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"Pool\", data);\n        return promise.then((data) => exports.QueryPoolResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Params(request = {}) {\n        const data = exports.QueryParamsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"Params\", data);\n        return promise.then((data) => exports.QueryParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\n//# sourceMappingURL=query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgUpdateParamsResponse = exports.MsgUpdateParams = exports.MsgCancelUnbondingDelegationResponse = exports.MsgCancelUnbondingDelegation = exports.MsgUndelegateResponse = exports.MsgUndelegate = exports.MsgBeginRedelegateResponse = exports.MsgBeginRedelegate = exports.MsgDelegateResponse = exports.MsgDelegate = exports.MsgEditValidatorResponse = exports.MsgEditValidator = exports.MsgCreateValidatorResponse = exports.MsgCreateValidator = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst staking_1 = require(\"./staking\");\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst timestamp_1 = require(\"../../../google/protobuf/timestamp\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.staking.v1beta1\";\nfunction createBaseMsgCreateValidator() {\n    return {\n        description: staking_1.Description.fromPartial({}),\n        commission: staking_1.CommissionRates.fromPartial({}),\n        minSelfDelegation: \"\",\n        delegatorAddress: \"\",\n        validatorAddress: \"\",\n        pubkey: undefined,\n        value: coin_1.Coin.fromPartial({}),\n    };\n}\nexports.MsgCreateValidator = {\n    typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.description !== undefined) {\n            staking_1.Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            staking_1.CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            any_1.Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            coin_1.Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateValidator();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = staking_1.Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = staking_1.CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgCreateValidator();\n        if ((0, helpers_1.isSet)(object.description))\n            obj.description = staking_1.Description.fromJSON(object.description);\n        if ((0, helpers_1.isSet)(object.commission))\n            obj.commission = staking_1.CommissionRates.fromJSON(object.commission);\n        if ((0, helpers_1.isSet)(object.minSelfDelegation))\n            obj.minSelfDelegation = String(object.minSelfDelegation);\n        if ((0, helpers_1.isSet)(object.delegatorAddress))\n            obj.delegatorAddress = String(object.delegatorAddress);\n        if ((0, helpers_1.isSet)(object.validatorAddress))\n            obj.validatorAddress = String(object.validatorAddress);\n        if ((0, helpers_1.isSet)(object.pubkey))\n            obj.pubkey = any_1.Any.fromJSON(object.pubkey);\n        if ((0, helpers_1.isSet)(object.value))\n            obj.value = coin_1.Coin.fromJSON(object.value);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description ? staking_1.Description.toJSON(message.description) : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission ? staking_1.CommissionRates.toJSON(message.commission) : undefined);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined && (obj.pubkey = message.pubkey ? any_1.Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined && (obj.value = message.value ? coin_1.Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCreateValidator();\n        if (object.description !== undefined && object.description !== null) {\n            message.description = staking_1.Description.fromPartial(object.description);\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = staking_1.CommissionRates.fromPartial(object.commission);\n        }\n        message.minSelfDelegation = object.minSelfDelegation ?? \"\";\n        message.delegatorAddress = object.delegatorAddress ?? \"\";\n        message.validatorAddress = object.validatorAddress ?? \"\";\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = any_1.Any.fromPartial(object.pubkey);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = coin_1.Coin.fromPartial(object.value);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgCreateValidatorResponse() {\n    return {};\n}\nexports.MsgCreateValidatorResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidatorResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateValidatorResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgCreateValidatorResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgCreateValidatorResponse();\n        return message;\n    },\n};\nfunction createBaseMsgEditValidator() {\n    return {\n        description: staking_1.Description.fromPartial({}),\n        validatorAddress: \"\",\n        commissionRate: \"\",\n        minSelfDelegation: \"\",\n    };\n}\nexports.MsgEditValidator = {\n    typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.description !== undefined) {\n            staking_1.Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== \"\") {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgEditValidator();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = staking_1.Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgEditValidator();\n        if ((0, helpers_1.isSet)(object.description))\n            obj.description = staking_1.Description.fromJSON(object.description);\n        if ((0, helpers_1.isSet)(object.validatorAddress))\n            obj.validatorAddress = String(object.validatorAddress);\n        if ((0, helpers_1.isSet)(object.commissionRate))\n            obj.commissionRate = String(object.commissionRate);\n        if ((0, helpers_1.isSet)(object.minSelfDelegation))\n            obj.minSelfDelegation = String(object.minSelfDelegation);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description ? staking_1.Description.toJSON(message.description) : undefined);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined && (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgEditValidator();\n        if (object.description !== undefined && object.description !== null) {\n            message.description = staking_1.Description.fromPartial(object.description);\n        }\n        message.validatorAddress = object.validatorAddress ?? \"\";\n        message.commissionRate = object.commissionRate ?? \"\";\n        message.minSelfDelegation = object.minSelfDelegation ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgEditValidatorResponse() {\n    return {};\n}\nexports.MsgEditValidatorResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidatorResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgEditValidatorResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgEditValidatorResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgEditValidatorResponse();\n        return message;\n    },\n};\nfunction createBaseMsgDelegate() {\n    return {\n        delegatorAddress: \"\",\n        validatorAddress: \"\",\n        amount: coin_1.Coin.fromPartial({}),\n    };\n}\nexports.MsgDelegate = {\n    typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            coin_1.Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgDelegate();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgDelegate();\n        if ((0, helpers_1.isSet)(object.delegatorAddress))\n            obj.delegatorAddress = String(object.delegatorAddress);\n        if ((0, helpers_1.isSet)(object.validatorAddress))\n            obj.validatorAddress = String(object.validatorAddress);\n        if ((0, helpers_1.isSet)(object.amount))\n            obj.amount = coin_1.Coin.fromJSON(object.amount);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgDelegate();\n        message.delegatorAddress = object.delegatorAddress ?? \"\";\n        message.validatorAddress = object.validatorAddress ?? \"\";\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = coin_1.Coin.fromPartial(object.amount);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgDelegateResponse() {\n    return {};\n}\nexports.MsgDelegateResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.MsgDelegateResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgDelegateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgDelegateResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgDelegateResponse();\n        return message;\n    },\n};\nfunction createBaseMsgBeginRedelegate() {\n    return {\n        delegatorAddress: \"\",\n        validatorSrcAddress: \"\",\n        validatorDstAddress: \"\",\n        amount: coin_1.Coin.fromPartial({}),\n    };\n}\nexports.MsgBeginRedelegate = {\n    typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            coin_1.Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgBeginRedelegate();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgBeginRedelegate();\n        if ((0, helpers_1.isSet)(object.delegatorAddress))\n            obj.delegatorAddress = String(object.delegatorAddress);\n        if ((0, helpers_1.isSet)(object.validatorSrcAddress))\n            obj.validatorSrcAddress = String(object.validatorSrcAddress);\n        if ((0, helpers_1.isSet)(object.validatorDstAddress))\n            obj.validatorDstAddress = String(object.validatorDstAddress);\n        if ((0, helpers_1.isSet)(object.amount))\n            obj.amount = coin_1.Coin.fromJSON(object.amount);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgBeginRedelegate();\n        message.delegatorAddress = object.delegatorAddress ?? \"\";\n        message.validatorSrcAddress = object.validatorSrcAddress ?? \"\";\n        message.validatorDstAddress = object.validatorDstAddress ?? \"\";\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = coin_1.Coin.fromPartial(object.amount);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgBeginRedelegateResponse() {\n    return {\n        completionTime: timestamp_1.Timestamp.fromPartial({}),\n    };\n}\nexports.MsgBeginRedelegateResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegateResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.completionTime !== undefined) {\n            timestamp_1.Timestamp.encode(message.completionTime, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgBeginRedelegateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgBeginRedelegateResponse();\n        if ((0, helpers_1.isSet)(object.completionTime))\n            obj.completionTime = (0, helpers_1.fromJsonTimestamp)(object.completionTime);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime = (0, helpers_1.fromTimestamp)(message.completionTime).toISOString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgBeginRedelegateResponse();\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = timestamp_1.Timestamp.fromPartial(object.completionTime);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgUndelegate() {\n    return {\n        delegatorAddress: \"\",\n        validatorAddress: \"\",\n        amount: coin_1.Coin.fromPartial({}),\n    };\n}\nexports.MsgUndelegate = {\n    typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            coin_1.Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUndelegate();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUndelegate();\n        if ((0, helpers_1.isSet)(object.delegatorAddress))\n            obj.delegatorAddress = String(object.delegatorAddress);\n        if ((0, helpers_1.isSet)(object.validatorAddress))\n            obj.validatorAddress = String(object.validatorAddress);\n        if ((0, helpers_1.isSet)(object.amount))\n            obj.amount = coin_1.Coin.fromJSON(object.amount);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUndelegate();\n        message.delegatorAddress = object.delegatorAddress ?? \"\";\n        message.validatorAddress = object.validatorAddress ?? \"\";\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = coin_1.Coin.fromPartial(object.amount);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgUndelegateResponse() {\n    return {\n        completionTime: timestamp_1.Timestamp.fromPartial({}),\n    };\n}\nexports.MsgUndelegateResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegateResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.completionTime !== undefined) {\n            timestamp_1.Timestamp.encode(message.completionTime, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUndelegateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUndelegateResponse();\n        if ((0, helpers_1.isSet)(object.completionTime))\n            obj.completionTime = (0, helpers_1.fromJsonTimestamp)(object.completionTime);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime = (0, helpers_1.fromTimestamp)(message.completionTime).toISOString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUndelegateResponse();\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = timestamp_1.Timestamp.fromPartial(object.completionTime);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgCancelUnbondingDelegation() {\n    return {\n        delegatorAddress: \"\",\n        validatorAddress: \"\",\n        amount: coin_1.Coin.fromPartial({}),\n        creationHeight: BigInt(0),\n    };\n}\nexports.MsgCancelUnbondingDelegation = {\n    typeUrl: \"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            coin_1.Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.creationHeight !== BigInt(0)) {\n            writer.uint32(32).int64(message.creationHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCancelUnbondingDelegation();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.creationHeight = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgCancelUnbondingDelegation();\n        if ((0, helpers_1.isSet)(object.delegatorAddress))\n            obj.delegatorAddress = String(object.delegatorAddress);\n        if ((0, helpers_1.isSet)(object.validatorAddress))\n            obj.validatorAddress = String(object.validatorAddress);\n        if ((0, helpers_1.isSet)(object.amount))\n            obj.amount = coin_1.Coin.fromJSON(object.amount);\n        if ((0, helpers_1.isSet)(object.creationHeight))\n            obj.creationHeight = BigInt(object.creationHeight.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : undefined);\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = (message.creationHeight || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCancelUnbondingDelegation();\n        message.delegatorAddress = object.delegatorAddress ?? \"\";\n        message.validatorAddress = object.validatorAddress ?? \"\";\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = coin_1.Coin.fromPartial(object.amount);\n        }\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = BigInt(object.creationHeight.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseMsgCancelUnbondingDelegationResponse() {\n    return {};\n}\nexports.MsgCancelUnbondingDelegationResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCancelUnbondingDelegationResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgCancelUnbondingDelegationResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgCancelUnbondingDelegationResponse();\n        return message;\n    },\n};\nfunction createBaseMsgUpdateParams() {\n    return {\n        authority: \"\",\n        params: staking_1.Params.fromPartial({}),\n    };\n}\nexports.MsgUpdateParams = {\n    typeUrl: \"/cosmos.staking.v1beta1.MsgUpdateParams\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.authority !== \"\") {\n            writer.uint32(10).string(message.authority);\n        }\n        if (message.params !== undefined) {\n            staking_1.Params.encode(message.params, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authority = reader.string();\n                    break;\n                case 2:\n                    message.params = staking_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUpdateParams();\n        if ((0, helpers_1.isSet)(object.authority))\n            obj.authority = String(object.authority);\n        if ((0, helpers_1.isSet)(object.params))\n            obj.params = staking_1.Params.fromJSON(object.params);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.authority !== undefined && (obj.authority = message.authority);\n        message.params !== undefined && (obj.params = message.params ? staking_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateParams();\n        message.authority = object.authority ?? \"\";\n        if (object.params !== undefined && object.params !== null) {\n            message.params = staking_1.Params.fromPartial(object.params);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgUpdateParamsResponse() {\n    return {};\n}\nexports.MsgUpdateParamsResponse = {\n    typeUrl: \"/cosmos.staking.v1beta1.MsgUpdateParamsResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgUpdateParamsResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateParamsResponse();\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.CreateValidator = this.CreateValidator.bind(this);\n        this.EditValidator = this.EditValidator.bind(this);\n        this.Delegate = this.Delegate.bind(this);\n        this.BeginRedelegate = this.BeginRedelegate.bind(this);\n        this.Undelegate = this.Undelegate.bind(this);\n        this.CancelUnbondingDelegation = this.CancelUnbondingDelegation.bind(this);\n        this.UpdateParams = this.UpdateParams.bind(this);\n    }\n    CreateValidator(request) {\n        const data = exports.MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n        return promise.then((data) => exports.MsgCreateValidatorResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    EditValidator(request) {\n        const data = exports.MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n        return promise.then((data) => exports.MsgEditValidatorResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Delegate(request) {\n        const data = exports.MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n        return promise.then((data) => exports.MsgDelegateResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = exports.MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n        return promise.then((data) => exports.MsgBeginRedelegateResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Undelegate(request) {\n        const data = exports.MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n        return promise.then((data) => exports.MsgUndelegateResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    CancelUnbondingDelegation(request) {\n        const data = exports.MsgCancelUnbondingDelegation.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CancelUnbondingDelegation\", data);\n        return promise.then((data) => exports.MsgCancelUnbondingDelegationResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpdateParams(request) {\n        const data = exports.MsgUpdateParams.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"UpdateParams\", data);\n        return promise.then((data) => exports.MsgUpdateParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignatureDescriptor_Data_Multi = exports.SignatureDescriptor_Data_Single = exports.SignatureDescriptor_Data = exports.SignatureDescriptor = exports.SignatureDescriptors = exports.signModeToJSON = exports.signModeFromJSON = exports.SignMode = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst multisig_1 = require(\"../../../crypto/multisig/v1beta1/multisig\");\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"cosmos.tx.signing.v1beta1\";\n/**\n * SignMode represents a signing mode with its own security guarantees.\n *\n * This enum should be considered a registry of all known sign modes\n * in the Cosmos ecosystem. Apps are not expected to support all known\n * sign modes. Apps that would like to support custom  sign modes are\n * encouraged to open a small PR against this file to add a new case\n * to this SignMode enum describing their sign mode so that different\n * apps have a consistent version of this enum.\n */\nvar SignMode;\n(function (SignMode) {\n    /**\n     * SIGN_MODE_UNSPECIFIED - SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be\n     * rejected.\n     */\n    SignMode[SignMode[\"SIGN_MODE_UNSPECIFIED\"] = 0] = \"SIGN_MODE_UNSPECIFIED\";\n    /**\n     * SIGN_MODE_DIRECT - SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is\n     * verified with raw bytes from Tx.\n     */\n    SignMode[SignMode[\"SIGN_MODE_DIRECT\"] = 1] = \"SIGN_MODE_DIRECT\";\n    /**\n     * SIGN_MODE_TEXTUAL - SIGN_MODE_TEXTUAL is a future signing mode that will verify some\n     * human-readable textual representation on top of the binary representation\n     * from SIGN_MODE_DIRECT. It is currently not supported.\n     */\n    SignMode[SignMode[\"SIGN_MODE_TEXTUAL\"] = 2] = \"SIGN_MODE_TEXTUAL\";\n    /**\n     * SIGN_MODE_DIRECT_AUX - SIGN_MODE_DIRECT_AUX specifies a signing mode which uses\n     * SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not\n     * require signers signing over other signers' `signer_info`. It also allows\n     * for adding Tips in transactions.\n     *\n     * Since: cosmos-sdk 0.46\n     */\n    SignMode[SignMode[\"SIGN_MODE_DIRECT_AUX\"] = 3] = \"SIGN_MODE_DIRECT_AUX\";\n    /**\n     * SIGN_MODE_LEGACY_AMINO_JSON - SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses\n     * Amino JSON and will be removed in the future.\n     */\n    SignMode[SignMode[\"SIGN_MODE_LEGACY_AMINO_JSON\"] = 127] = \"SIGN_MODE_LEGACY_AMINO_JSON\";\n    /**\n     * SIGN_MODE_EIP_191 - SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos\n     * SDK. Ref: https://eips.ethereum.org/EIPS/eip-191\n     *\n     * Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,\n     * but is not implemented on the SDK by default. To enable EIP-191, you need\n     * to pass a custom `TxConfig` that has an implementation of\n     * `SignModeHandler` for EIP-191. The SDK may decide to fully support\n     * EIP-191 in the future.\n     *\n     * Since: cosmos-sdk 0.45.2\n     */\n    SignMode[SignMode[\"SIGN_MODE_EIP_191\"] = 191] = \"SIGN_MODE_EIP_191\";\n    SignMode[SignMode[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignMode || (exports.SignMode = SignMode = {}));\nfunction signModeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGN_MODE_UNSPECIFIED\":\n            return SignMode.SIGN_MODE_UNSPECIFIED;\n        case 1:\n        case \"SIGN_MODE_DIRECT\":\n            return SignMode.SIGN_MODE_DIRECT;\n        case 2:\n        case \"SIGN_MODE_TEXTUAL\":\n            return SignMode.SIGN_MODE_TEXTUAL;\n        case 3:\n        case \"SIGN_MODE_DIRECT_AUX\":\n            return SignMode.SIGN_MODE_DIRECT_AUX;\n        case 127:\n        case \"SIGN_MODE_LEGACY_AMINO_JSON\":\n            return SignMode.SIGN_MODE_LEGACY_AMINO_JSON;\n        case 191:\n        case \"SIGN_MODE_EIP_191\":\n            return SignMode.SIGN_MODE_EIP_191;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignMode.UNRECOGNIZED;\n    }\n}\nexports.signModeFromJSON = signModeFromJSON;\nfunction signModeToJSON(object) {\n    switch (object) {\n        case SignMode.SIGN_MODE_UNSPECIFIED:\n            return \"SIGN_MODE_UNSPECIFIED\";\n        case SignMode.SIGN_MODE_DIRECT:\n            return \"SIGN_MODE_DIRECT\";\n        case SignMode.SIGN_MODE_TEXTUAL:\n            return \"SIGN_MODE_TEXTUAL\";\n        case SignMode.SIGN_MODE_DIRECT_AUX:\n            return \"SIGN_MODE_DIRECT_AUX\";\n        case SignMode.SIGN_MODE_LEGACY_AMINO_JSON:\n            return \"SIGN_MODE_LEGACY_AMINO_JSON\";\n        case SignMode.SIGN_MODE_EIP_191:\n            return \"SIGN_MODE_EIP_191\";\n        case SignMode.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.signModeToJSON = signModeToJSON;\nfunction createBaseSignatureDescriptors() {\n    return {\n        signatures: [],\n    };\n}\nexports.SignatureDescriptors = {\n    typeUrl: \"/cosmos.tx.signing.v1beta1.SignatureDescriptors\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.signatures) {\n            exports.SignatureDescriptor.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSignatureDescriptors();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signatures.push(exports.SignatureDescriptor.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSignatureDescriptors();\n        if (Array.isArray(object?.signatures))\n            obj.signatures = object.signatures.map((e) => exports.SignatureDescriptor.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => (e ? exports.SignatureDescriptor.toJSON(e) : undefined));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSignatureDescriptors();\n        message.signatures = object.signatures?.map((e) => exports.SignatureDescriptor.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseSignatureDescriptor() {\n    return {\n        publicKey: undefined,\n        data: undefined,\n        sequence: BigInt(0),\n    };\n}\nexports.SignatureDescriptor = {\n    typeUrl: \"/cosmos.tx.signing.v1beta1.SignatureDescriptor\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.publicKey !== undefined) {\n            any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.data !== undefined) {\n            exports.SignatureDescriptor_Data.encode(message.data, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.sequence !== BigInt(0)) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSignatureDescriptor();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.publicKey = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.data = exports.SignatureDescriptor_Data.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.sequence = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSignatureDescriptor();\n        if ((0, helpers_1.isSet)(object.publicKey))\n            obj.publicKey = any_1.Any.fromJSON(object.publicKey);\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = exports.SignatureDescriptor_Data.fromJSON(object.data);\n        if ((0, helpers_1.isSet)(object.sequence))\n            obj.sequence = BigInt(object.sequence.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.publicKey !== undefined &&\n            (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);\n        message.data !== undefined &&\n            (obj.data = message.data ? exports.SignatureDescriptor_Data.toJSON(message.data) : undefined);\n        message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSignatureDescriptor();\n        if (object.publicKey !== undefined && object.publicKey !== null) {\n            message.publicKey = any_1.Any.fromPartial(object.publicKey);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = exports.SignatureDescriptor_Data.fromPartial(object.data);\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = BigInt(object.sequence.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseSignatureDescriptor_Data() {\n    return {\n        single: undefined,\n        multi: undefined,\n    };\n}\nexports.SignatureDescriptor_Data = {\n    typeUrl: \"/cosmos.tx.signing.v1beta1.Data\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.single !== undefined) {\n            exports.SignatureDescriptor_Data_Single.encode(message.single, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.multi !== undefined) {\n            exports.SignatureDescriptor_Data_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSignatureDescriptor_Data();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.single = exports.SignatureDescriptor_Data_Single.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.multi = exports.SignatureDescriptor_Data_Multi.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSignatureDescriptor_Data();\n        if ((0, helpers_1.isSet)(object.single))\n            obj.single = exports.SignatureDescriptor_Data_Single.fromJSON(object.single);\n        if ((0, helpers_1.isSet)(object.multi))\n            obj.multi = exports.SignatureDescriptor_Data_Multi.fromJSON(object.multi);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.single !== undefined &&\n            (obj.single = message.single ? exports.SignatureDescriptor_Data_Single.toJSON(message.single) : undefined);\n        message.multi !== undefined &&\n            (obj.multi = message.multi ? exports.SignatureDescriptor_Data_Multi.toJSON(message.multi) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSignatureDescriptor_Data();\n        if (object.single !== undefined && object.single !== null) {\n            message.single = exports.SignatureDescriptor_Data_Single.fromPartial(object.single);\n        }\n        if (object.multi !== undefined && object.multi !== null) {\n            message.multi = exports.SignatureDescriptor_Data_Multi.fromPartial(object.multi);\n        }\n        return message;\n    },\n};\nfunction createBaseSignatureDescriptor_Data_Single() {\n    return {\n        mode: 0,\n        signature: new Uint8Array(),\n    };\n}\nexports.SignatureDescriptor_Data_Single = {\n    typeUrl: \"/cosmos.tx.signing.v1beta1.Single\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.mode !== 0) {\n            writer.uint32(8).int32(message.mode);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(18).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSignatureDescriptor_Data_Single();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.mode = reader.int32();\n                    break;\n                case 2:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSignatureDescriptor_Data_Single();\n        if ((0, helpers_1.isSet)(object.mode))\n            obj.mode = signModeFromJSON(object.mode);\n        if ((0, helpers_1.isSet)(object.signature))\n            obj.signature = (0, helpers_1.bytesFromBase64)(object.signature);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.mode !== undefined && (obj.mode = signModeToJSON(message.mode));\n        message.signature !== undefined &&\n            (obj.signature = (0, helpers_1.base64FromBytes)(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSignatureDescriptor_Data_Single();\n        message.mode = object.mode ?? 0;\n        message.signature = object.signature ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseSignatureDescriptor_Data_Multi() {\n    return {\n        bitarray: undefined,\n        signatures: [],\n    };\n}\nexports.SignatureDescriptor_Data_Multi = {\n    typeUrl: \"/cosmos.tx.signing.v1beta1.Multi\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.bitarray !== undefined) {\n            multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            exports.SignatureDescriptor_Data.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSignatureDescriptor_Data_Multi();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signatures.push(exports.SignatureDescriptor_Data.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSignatureDescriptor_Data_Multi();\n        if ((0, helpers_1.isSet)(object.bitarray))\n            obj.bitarray = multisig_1.CompactBitArray.fromJSON(object.bitarray);\n        if (Array.isArray(object?.signatures))\n            obj.signatures = object.signatures.map((e) => exports.SignatureDescriptor_Data.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.bitarray !== undefined &&\n            (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => (e ? exports.SignatureDescriptor_Data.toJSON(e) : undefined));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSignatureDescriptor_Data_Multi();\n        if (object.bitarray !== undefined && object.bitarray !== null) {\n            message.bitarray = multisig_1.CompactBitArray.fromPartial(object.bitarray);\n        }\n        message.signatures = object.signatures?.map((e) => exports.SignatureDescriptor_Data.fromPartial(e)) || [];\n        return message;\n    },\n};\n//# sourceMappingURL=signing.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuxSignerData = exports.Tip = exports.Fee = exports.ModeInfo_Multi = exports.ModeInfo_Single = exports.ModeInfo = exports.SignerInfo = exports.AuthInfo = exports.TxBody = exports.SignDocDirectAux = exports.SignDoc = exports.TxRaw = exports.Tx = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst signing_1 = require(\"../signing/v1beta1/signing\");\nconst multisig_1 = require(\"../../crypto/multisig/v1beta1/multisig\");\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.tx.v1beta1\";\nfunction createBaseTx() {\n    return {\n        body: undefined,\n        authInfo: undefined,\n        signatures: [],\n    };\n}\nexports.Tx = {\n    typeUrl: \"/cosmos.tx.v1beta1.Tx\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.body !== undefined) {\n            exports.TxBody.encode(message.body, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.authInfo !== undefined) {\n            exports.AuthInfo.encode(message.authInfo, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            writer.uint32(26).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTx();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.body = exports.TxBody.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.authInfo = exports.AuthInfo.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signatures.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTx();\n        if ((0, helpers_1.isSet)(object.body))\n            obj.body = exports.TxBody.fromJSON(object.body);\n        if ((0, helpers_1.isSet)(object.authInfo))\n            obj.authInfo = exports.AuthInfo.fromJSON(object.authInfo);\n        if (Array.isArray(object?.signatures))\n            obj.signatures = object.signatures.map((e) => (0, helpers_1.bytesFromBase64)(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.body !== undefined && (obj.body = message.body ? exports.TxBody.toJSON(message.body) : undefined);\n        message.authInfo !== undefined &&\n            (obj.authInfo = message.authInfo ? exports.AuthInfo.toJSON(message.authInfo) : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => (0, helpers_1.base64FromBytes)(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTx();\n        if (object.body !== undefined && object.body !== null) {\n            message.body = exports.TxBody.fromPartial(object.body);\n        }\n        if (object.authInfo !== undefined && object.authInfo !== null) {\n            message.authInfo = exports.AuthInfo.fromPartial(object.authInfo);\n        }\n        message.signatures = object.signatures?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseTxRaw() {\n    return {\n        bodyBytes: new Uint8Array(),\n        authInfoBytes: new Uint8Array(),\n        signatures: [],\n    };\n}\nexports.TxRaw = {\n    typeUrl: \"/cosmos.tx.v1beta1.TxRaw\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.bodyBytes.length !== 0) {\n            writer.uint32(10).bytes(message.bodyBytes);\n        }\n        if (message.authInfoBytes.length !== 0) {\n            writer.uint32(18).bytes(message.authInfoBytes);\n        }\n        for (const v of message.signatures) {\n            writer.uint32(26).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTxRaw();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.bodyBytes = reader.bytes();\n                    break;\n                case 2:\n                    message.authInfoBytes = reader.bytes();\n                    break;\n                case 3:\n                    message.signatures.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTxRaw();\n        if ((0, helpers_1.isSet)(object.bodyBytes))\n            obj.bodyBytes = (0, helpers_1.bytesFromBase64)(object.bodyBytes);\n        if ((0, helpers_1.isSet)(object.authInfoBytes))\n            obj.authInfoBytes = (0, helpers_1.bytesFromBase64)(object.authInfoBytes);\n        if (Array.isArray(object?.signatures))\n            obj.signatures = object.signatures.map((e) => (0, helpers_1.bytesFromBase64)(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.bodyBytes !== undefined &&\n            (obj.bodyBytes = (0, helpers_1.base64FromBytes)(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));\n        message.authInfoBytes !== undefined &&\n            (obj.authInfoBytes = (0, helpers_1.base64FromBytes)(message.authInfoBytes !== undefined ? message.authInfoBytes : new Uint8Array()));\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => (0, helpers_1.base64FromBytes)(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTxRaw();\n        message.bodyBytes = object.bodyBytes ?? new Uint8Array();\n        message.authInfoBytes = object.authInfoBytes ?? new Uint8Array();\n        message.signatures = object.signatures?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseSignDoc() {\n    return {\n        bodyBytes: new Uint8Array(),\n        authInfoBytes: new Uint8Array(),\n        chainId: \"\",\n        accountNumber: BigInt(0),\n    };\n}\nexports.SignDoc = {\n    typeUrl: \"/cosmos.tx.v1beta1.SignDoc\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.bodyBytes.length !== 0) {\n            writer.uint32(10).bytes(message.bodyBytes);\n        }\n        if (message.authInfoBytes.length !== 0) {\n            writer.uint32(18).bytes(message.authInfoBytes);\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(26).string(message.chainId);\n        }\n        if (message.accountNumber !== BigInt(0)) {\n            writer.uint32(32).uint64(message.accountNumber);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSignDoc();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.bodyBytes = reader.bytes();\n                    break;\n                case 2:\n                    message.authInfoBytes = reader.bytes();\n                    break;\n                case 3:\n                    message.chainId = reader.string();\n                    break;\n                case 4:\n                    message.accountNumber = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSignDoc();\n        if ((0, helpers_1.isSet)(object.bodyBytes))\n            obj.bodyBytes = (0, helpers_1.bytesFromBase64)(object.bodyBytes);\n        if ((0, helpers_1.isSet)(object.authInfoBytes))\n            obj.authInfoBytes = (0, helpers_1.bytesFromBase64)(object.authInfoBytes);\n        if ((0, helpers_1.isSet)(object.chainId))\n            obj.chainId = String(object.chainId);\n        if ((0, helpers_1.isSet)(object.accountNumber))\n            obj.accountNumber = BigInt(object.accountNumber.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.bodyBytes !== undefined &&\n            (obj.bodyBytes = (0, helpers_1.base64FromBytes)(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));\n        message.authInfoBytes !== undefined &&\n            (obj.authInfoBytes = (0, helpers_1.base64FromBytes)(message.authInfoBytes !== undefined ? message.authInfoBytes : new Uint8Array()));\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = (message.accountNumber || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSignDoc();\n        message.bodyBytes = object.bodyBytes ?? new Uint8Array();\n        message.authInfoBytes = object.authInfoBytes ?? new Uint8Array();\n        message.chainId = object.chainId ?? \"\";\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = BigInt(object.accountNumber.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseSignDocDirectAux() {\n    return {\n        bodyBytes: new Uint8Array(),\n        publicKey: undefined,\n        chainId: \"\",\n        accountNumber: BigInt(0),\n        sequence: BigInt(0),\n        tip: undefined,\n    };\n}\nexports.SignDocDirectAux = {\n    typeUrl: \"/cosmos.tx.v1beta1.SignDocDirectAux\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.bodyBytes.length !== 0) {\n            writer.uint32(10).bytes(message.bodyBytes);\n        }\n        if (message.publicKey !== undefined) {\n            any_1.Any.encode(message.publicKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(26).string(message.chainId);\n        }\n        if (message.accountNumber !== BigInt(0)) {\n            writer.uint32(32).uint64(message.accountNumber);\n        }\n        if (message.sequence !== BigInt(0)) {\n            writer.uint32(40).uint64(message.sequence);\n        }\n        if (message.tip !== undefined) {\n            exports.Tip.encode(message.tip, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSignDocDirectAux();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.bodyBytes = reader.bytes();\n                    break;\n                case 2:\n                    message.publicKey = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.chainId = reader.string();\n                    break;\n                case 4:\n                    message.accountNumber = reader.uint64();\n                    break;\n                case 5:\n                    message.sequence = reader.uint64();\n                    break;\n                case 6:\n                    message.tip = exports.Tip.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSignDocDirectAux();\n        if ((0, helpers_1.isSet)(object.bodyBytes))\n            obj.bodyBytes = (0, helpers_1.bytesFromBase64)(object.bodyBytes);\n        if ((0, helpers_1.isSet)(object.publicKey))\n            obj.publicKey = any_1.Any.fromJSON(object.publicKey);\n        if ((0, helpers_1.isSet)(object.chainId))\n            obj.chainId = String(object.chainId);\n        if ((0, helpers_1.isSet)(object.accountNumber))\n            obj.accountNumber = BigInt(object.accountNumber.toString());\n        if ((0, helpers_1.isSet)(object.sequence))\n            obj.sequence = BigInt(object.sequence.toString());\n        if ((0, helpers_1.isSet)(object.tip))\n            obj.tip = exports.Tip.fromJSON(object.tip);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.bodyBytes !== undefined &&\n            (obj.bodyBytes = (0, helpers_1.base64FromBytes)(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));\n        message.publicKey !== undefined &&\n            (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = (message.accountNumber || BigInt(0)).toString());\n        message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());\n        message.tip !== undefined && (obj.tip = message.tip ? exports.Tip.toJSON(message.tip) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSignDocDirectAux();\n        message.bodyBytes = object.bodyBytes ?? new Uint8Array();\n        if (object.publicKey !== undefined && object.publicKey !== null) {\n            message.publicKey = any_1.Any.fromPartial(object.publicKey);\n        }\n        message.chainId = object.chainId ?? \"\";\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = BigInt(object.accountNumber.toString());\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = BigInt(object.sequence.toString());\n        }\n        if (object.tip !== undefined && object.tip !== null) {\n            message.tip = exports.Tip.fromPartial(object.tip);\n        }\n        return message;\n    },\n};\nfunction createBaseTxBody() {\n    return {\n        messages: [],\n        memo: \"\",\n        timeoutHeight: BigInt(0),\n        extensionOptions: [],\n        nonCriticalExtensionOptions: [],\n    };\n}\nexports.TxBody = {\n    typeUrl: \"/cosmos.tx.v1beta1.TxBody\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.messages) {\n            any_1.Any.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.memo !== \"\") {\n            writer.uint32(18).string(message.memo);\n        }\n        if (message.timeoutHeight !== BigInt(0)) {\n            writer.uint32(24).uint64(message.timeoutHeight);\n        }\n        for (const v of message.extensionOptions) {\n            any_1.Any.encode(v, writer.uint32(8186).fork()).ldelim();\n        }\n        for (const v of message.nonCriticalExtensionOptions) {\n            any_1.Any.encode(v, writer.uint32(16378).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTxBody();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.messages.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.memo = reader.string();\n                    break;\n                case 3:\n                    message.timeoutHeight = reader.uint64();\n                    break;\n                case 1023:\n                    message.extensionOptions.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                case 2047:\n                    message.nonCriticalExtensionOptions.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTxBody();\n        if (Array.isArray(object?.messages))\n            obj.messages = object.messages.map((e) => any_1.Any.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.memo))\n            obj.memo = String(object.memo);\n        if ((0, helpers_1.isSet)(object.timeoutHeight))\n            obj.timeoutHeight = BigInt(object.timeoutHeight.toString());\n        if (Array.isArray(object?.extensionOptions))\n            obj.extensionOptions = object.extensionOptions.map((e) => any_1.Any.fromJSON(e));\n        if (Array.isArray(object?.nonCriticalExtensionOptions))\n            obj.nonCriticalExtensionOptions = object.nonCriticalExtensionOptions.map((e) => any_1.Any.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.messages) {\n            obj.messages = message.messages.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.messages = [];\n        }\n        message.memo !== undefined && (obj.memo = message.memo);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = (message.timeoutHeight || BigInt(0)).toString());\n        if (message.extensionOptions) {\n            obj.extensionOptions = message.extensionOptions.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.extensionOptions = [];\n        }\n        if (message.nonCriticalExtensionOptions) {\n            obj.nonCriticalExtensionOptions = message.nonCriticalExtensionOptions.map((e) => e ? any_1.Any.toJSON(e) : undefined);\n        }\n        else {\n            obj.nonCriticalExtensionOptions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTxBody();\n        message.messages = object.messages?.map((e) => any_1.Any.fromPartial(e)) || [];\n        message.memo = object.memo ?? \"\";\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = BigInt(object.timeoutHeight.toString());\n        }\n        message.extensionOptions = object.extensionOptions?.map((e) => any_1.Any.fromPartial(e)) || [];\n        message.nonCriticalExtensionOptions =\n            object.nonCriticalExtensionOptions?.map((e) => any_1.Any.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseAuthInfo() {\n    return {\n        signerInfos: [],\n        fee: undefined,\n        tip: undefined,\n    };\n}\nexports.AuthInfo = {\n    typeUrl: \"/cosmos.tx.v1beta1.AuthInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.signerInfos) {\n            exports.SignerInfo.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.fee !== undefined) {\n            exports.Fee.encode(message.fee, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.tip !== undefined) {\n            exports.Tip.encode(message.tip, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAuthInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signerInfos.push(exports.SignerInfo.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.fee = exports.Fee.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.tip = exports.Tip.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseAuthInfo();\n        if (Array.isArray(object?.signerInfos))\n            obj.signerInfos = object.signerInfos.map((e) => exports.SignerInfo.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.fee))\n            obj.fee = exports.Fee.fromJSON(object.fee);\n        if ((0, helpers_1.isSet)(object.tip))\n            obj.tip = exports.Tip.fromJSON(object.tip);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.signerInfos) {\n            obj.signerInfos = message.signerInfos.map((e) => (e ? exports.SignerInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.signerInfos = [];\n        }\n        message.fee !== undefined && (obj.fee = message.fee ? exports.Fee.toJSON(message.fee) : undefined);\n        message.tip !== undefined && (obj.tip = message.tip ? exports.Tip.toJSON(message.tip) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseAuthInfo();\n        message.signerInfos = object.signerInfos?.map((e) => exports.SignerInfo.fromPartial(e)) || [];\n        if (object.fee !== undefined && object.fee !== null) {\n            message.fee = exports.Fee.fromPartial(object.fee);\n        }\n        if (object.tip !== undefined && object.tip !== null) {\n            message.tip = exports.Tip.fromPartial(object.tip);\n        }\n        return message;\n    },\n};\nfunction createBaseSignerInfo() {\n    return {\n        publicKey: undefined,\n        modeInfo: undefined,\n        sequence: BigInt(0),\n    };\n}\nexports.SignerInfo = {\n    typeUrl: \"/cosmos.tx.v1beta1.SignerInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.publicKey !== undefined) {\n            any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.modeInfo !== undefined) {\n            exports.ModeInfo.encode(message.modeInfo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.sequence !== BigInt(0)) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSignerInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.publicKey = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.modeInfo = exports.ModeInfo.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.sequence = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSignerInfo();\n        if ((0, helpers_1.isSet)(object.publicKey))\n            obj.publicKey = any_1.Any.fromJSON(object.publicKey);\n        if ((0, helpers_1.isSet)(object.modeInfo))\n            obj.modeInfo = exports.ModeInfo.fromJSON(object.modeInfo);\n        if ((0, helpers_1.isSet)(object.sequence))\n            obj.sequence = BigInt(object.sequence.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.publicKey !== undefined &&\n            (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);\n        message.modeInfo !== undefined &&\n            (obj.modeInfo = message.modeInfo ? exports.ModeInfo.toJSON(message.modeInfo) : undefined);\n        message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSignerInfo();\n        if (object.publicKey !== undefined && object.publicKey !== null) {\n            message.publicKey = any_1.Any.fromPartial(object.publicKey);\n        }\n        if (object.modeInfo !== undefined && object.modeInfo !== null) {\n            message.modeInfo = exports.ModeInfo.fromPartial(object.modeInfo);\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = BigInt(object.sequence.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseModeInfo() {\n    return {\n        single: undefined,\n        multi: undefined,\n    };\n}\nexports.ModeInfo = {\n    typeUrl: \"/cosmos.tx.v1beta1.ModeInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.single !== undefined) {\n            exports.ModeInfo_Single.encode(message.single, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.multi !== undefined) {\n            exports.ModeInfo_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseModeInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.single = exports.ModeInfo_Single.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.multi = exports.ModeInfo_Multi.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseModeInfo();\n        if ((0, helpers_1.isSet)(object.single))\n            obj.single = exports.ModeInfo_Single.fromJSON(object.single);\n        if ((0, helpers_1.isSet)(object.multi))\n            obj.multi = exports.ModeInfo_Multi.fromJSON(object.multi);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.single !== undefined &&\n            (obj.single = message.single ? exports.ModeInfo_Single.toJSON(message.single) : undefined);\n        message.multi !== undefined &&\n            (obj.multi = message.multi ? exports.ModeInfo_Multi.toJSON(message.multi) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseModeInfo();\n        if (object.single !== undefined && object.single !== null) {\n            message.single = exports.ModeInfo_Single.fromPartial(object.single);\n        }\n        if (object.multi !== undefined && object.multi !== null) {\n            message.multi = exports.ModeInfo_Multi.fromPartial(object.multi);\n        }\n        return message;\n    },\n};\nfunction createBaseModeInfo_Single() {\n    return {\n        mode: 0,\n    };\n}\nexports.ModeInfo_Single = {\n    typeUrl: \"/cosmos.tx.v1beta1.Single\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.mode !== 0) {\n            writer.uint32(8).int32(message.mode);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseModeInfo_Single();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.mode = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseModeInfo_Single();\n        if ((0, helpers_1.isSet)(object.mode))\n            obj.mode = (0, signing_1.signModeFromJSON)(object.mode);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.mode !== undefined && (obj.mode = (0, signing_1.signModeToJSON)(message.mode));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseModeInfo_Single();\n        message.mode = object.mode ?? 0;\n        return message;\n    },\n};\nfunction createBaseModeInfo_Multi() {\n    return {\n        bitarray: undefined,\n        modeInfos: [],\n    };\n}\nexports.ModeInfo_Multi = {\n    typeUrl: \"/cosmos.tx.v1beta1.Multi\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.bitarray !== undefined) {\n            multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.modeInfos) {\n            exports.ModeInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseModeInfo_Multi();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.modeInfos.push(exports.ModeInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseModeInfo_Multi();\n        if ((0, helpers_1.isSet)(object.bitarray))\n            obj.bitarray = multisig_1.CompactBitArray.fromJSON(object.bitarray);\n        if (Array.isArray(object?.modeInfos))\n            obj.modeInfos = object.modeInfos.map((e) => exports.ModeInfo.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.bitarray !== undefined &&\n            (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : undefined);\n        if (message.modeInfos) {\n            obj.modeInfos = message.modeInfos.map((e) => (e ? exports.ModeInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.modeInfos = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseModeInfo_Multi();\n        if (object.bitarray !== undefined && object.bitarray !== null) {\n            message.bitarray = multisig_1.CompactBitArray.fromPartial(object.bitarray);\n        }\n        message.modeInfos = object.modeInfos?.map((e) => exports.ModeInfo.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseFee() {\n    return {\n        amount: [],\n        gasLimit: BigInt(0),\n        payer: \"\",\n        granter: \"\",\n    };\n}\nexports.Fee = {\n    typeUrl: \"/cosmos.tx.v1beta1.Fee\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.gasLimit !== BigInt(0)) {\n            writer.uint32(16).uint64(message.gasLimit);\n        }\n        if (message.payer !== \"\") {\n            writer.uint32(26).string(message.payer);\n        }\n        if (message.granter !== \"\") {\n            writer.uint32(34).string(message.granter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFee();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.gasLimit = reader.uint64();\n                    break;\n                case 3:\n                    message.payer = reader.string();\n                    break;\n                case 4:\n                    message.granter = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseFee();\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.gasLimit))\n            obj.gasLimit = BigInt(object.gasLimit.toString());\n        if ((0, helpers_1.isSet)(object.payer))\n            obj.payer = String(object.payer);\n        if ((0, helpers_1.isSet)(object.granter))\n            obj.granter = String(object.granter);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.gasLimit !== undefined && (obj.gasLimit = (message.gasLimit || BigInt(0)).toString());\n        message.payer !== undefined && (obj.payer = message.payer);\n        message.granter !== undefined && (obj.granter = message.granter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseFee();\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        if (object.gasLimit !== undefined && object.gasLimit !== null) {\n            message.gasLimit = BigInt(object.gasLimit.toString());\n        }\n        message.payer = object.payer ?? \"\";\n        message.granter = object.granter ?? \"\";\n        return message;\n    },\n};\nfunction createBaseTip() {\n    return {\n        amount: [],\n        tipper: \"\",\n    };\n}\nexports.Tip = {\n    typeUrl: \"/cosmos.tx.v1beta1.Tip\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.tipper !== \"\") {\n            writer.uint32(18).string(message.tipper);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTip();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.tipper = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTip();\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.tipper))\n            obj.tipper = String(object.tipper);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.tipper !== undefined && (obj.tipper = message.tipper);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTip();\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        message.tipper = object.tipper ?? \"\";\n        return message;\n    },\n};\nfunction createBaseAuxSignerData() {\n    return {\n        address: \"\",\n        signDoc: undefined,\n        mode: 0,\n        sig: new Uint8Array(),\n    };\n}\nexports.AuxSignerData = {\n    typeUrl: \"/cosmos.tx.v1beta1.AuxSignerData\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.signDoc !== undefined) {\n            exports.SignDocDirectAux.encode(message.signDoc, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.mode !== 0) {\n            writer.uint32(24).int32(message.mode);\n        }\n        if (message.sig.length !== 0) {\n            writer.uint32(34).bytes(message.sig);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAuxSignerData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.signDoc = exports.SignDocDirectAux.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.mode = reader.int32();\n                    break;\n                case 4:\n                    message.sig = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseAuxSignerData();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.signDoc))\n            obj.signDoc = exports.SignDocDirectAux.fromJSON(object.signDoc);\n        if ((0, helpers_1.isSet)(object.mode))\n            obj.mode = (0, signing_1.signModeFromJSON)(object.mode);\n        if ((0, helpers_1.isSet)(object.sig))\n            obj.sig = (0, helpers_1.bytesFromBase64)(object.sig);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.signDoc !== undefined &&\n            (obj.signDoc = message.signDoc ? exports.SignDocDirectAux.toJSON(message.signDoc) : undefined);\n        message.mode !== undefined && (obj.mode = (0, signing_1.signModeToJSON)(message.mode));\n        message.sig !== undefined &&\n            (obj.sig = (0, helpers_1.base64FromBytes)(message.sig !== undefined ? message.sig : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseAuxSignerData();\n        message.address = object.address ?? \"\";\n        if (object.signDoc !== undefined && object.signDoc !== null) {\n            message.signDoc = exports.SignDocDirectAux.fromPartial(object.signDoc);\n        }\n        message.mode = object.mode ?? 0;\n        message.sig = object.sig ?? new Uint8Array();\n        return message;\n    },\n};\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ModuleVersion = exports.CancelSoftwareUpgradeProposal = exports.SoftwareUpgradeProposal = exports.Plan = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst timestamp_1 = require(\"../../../google/protobuf/timestamp\");\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.upgrade.v1beta1\";\nfunction createBasePlan() {\n    return {\n        name: \"\",\n        time: timestamp_1.Timestamp.fromPartial({}),\n        height: BigInt(0),\n        info: \"\",\n        upgradedClientState: undefined,\n    };\n}\nexports.Plan = {\n    typeUrl: \"/cosmos.upgrade.v1beta1.Plan\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.name !== \"\") {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.time !== undefined) {\n            timestamp_1.Timestamp.encode(message.time, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== BigInt(0)) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.upgradedClientState !== undefined) {\n            any_1.Any.encode(message.upgradedClientState, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePlan();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = reader.int64();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.upgradedClientState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBasePlan();\n        if ((0, helpers_1.isSet)(object.name))\n            obj.name = String(object.name);\n        if ((0, helpers_1.isSet)(object.time))\n            obj.time = (0, helpers_1.fromJsonTimestamp)(object.time);\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        if ((0, helpers_1.isSet)(object.info))\n            obj.info = String(object.info);\n        if ((0, helpers_1.isSet)(object.upgradedClientState))\n            obj.upgradedClientState = any_1.Any.fromJSON(object.upgradedClientState);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.time !== undefined && (obj.time = (0, helpers_1.fromTimestamp)(message.time).toISOString());\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        message.info !== undefined && (obj.info = message.info);\n        message.upgradedClientState !== undefined &&\n            (obj.upgradedClientState = message.upgradedClientState\n                ? any_1.Any.toJSON(message.upgradedClientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBasePlan();\n        message.name = object.name ?? \"\";\n        if (object.time !== undefined && object.time !== null) {\n            message.time = timestamp_1.Timestamp.fromPartial(object.time);\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        message.info = object.info ?? \"\";\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = any_1.Any.fromPartial(object.upgradedClientState);\n        }\n        return message;\n    },\n};\nfunction createBaseSoftwareUpgradeProposal() {\n    return {\n        title: \"\",\n        description: \"\",\n        plan: exports.Plan.fromPartial({}),\n    };\n}\nexports.SoftwareUpgradeProposal = {\n    typeUrl: \"/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            exports.Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSoftwareUpgradeProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = exports.Plan.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSoftwareUpgradeProposal();\n        if ((0, helpers_1.isSet)(object.title))\n            obj.title = String(object.title);\n        if ((0, helpers_1.isSet)(object.description))\n            obj.description = String(object.description);\n        if ((0, helpers_1.isSet)(object.plan))\n            obj.plan = exports.Plan.fromJSON(object.plan);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.plan !== undefined && (obj.plan = message.plan ? exports.Plan.toJSON(message.plan) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSoftwareUpgradeProposal();\n        message.title = object.title ?? \"\";\n        message.description = object.description ?? \"\";\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = exports.Plan.fromPartial(object.plan);\n        }\n        return message;\n    },\n};\nfunction createBaseCancelSoftwareUpgradeProposal() {\n    return {\n        title: \"\",\n        description: \"\",\n    };\n}\nexports.CancelSoftwareUpgradeProposal = {\n    typeUrl: \"/cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCancelSoftwareUpgradeProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCancelSoftwareUpgradeProposal();\n        if ((0, helpers_1.isSet)(object.title))\n            obj.title = String(object.title);\n        if ((0, helpers_1.isSet)(object.description))\n            obj.description = String(object.description);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCancelSoftwareUpgradeProposal();\n        message.title = object.title ?? \"\";\n        message.description = object.description ?? \"\";\n        return message;\n    },\n};\nfunction createBaseModuleVersion() {\n    return {\n        name: \"\",\n        version: BigInt(0),\n    };\n}\nexports.ModuleVersion = {\n    typeUrl: \"/cosmos.upgrade.v1beta1.ModuleVersion\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.name !== \"\") {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.version !== BigInt(0)) {\n            writer.uint32(16).uint64(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseModuleVersion();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseModuleVersion();\n        if ((0, helpers_1.isSet)(object.name))\n            obj.name = String(object.name);\n        if ((0, helpers_1.isSet)(object.version))\n            obj.version = BigInt(object.version.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.version !== undefined && (obj.version = (message.version || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseModuleVersion();\n        message.name = object.name ?? \"\";\n        if (object.version !== undefined && object.version !== null) {\n            message.version = BigInt(object.version.toString());\n        }\n        return message;\n    },\n};\n//# sourceMappingURL=upgrade.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgCreatePeriodicVestingAccountResponse = exports.MsgCreatePeriodicVestingAccount = exports.MsgCreatePermanentLockedAccountResponse = exports.MsgCreatePermanentLockedAccount = exports.MsgCreateVestingAccountResponse = exports.MsgCreateVestingAccount = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst vesting_1 = require(\"./vesting\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.vesting.v1beta1\";\nfunction createBaseMsgCreateVestingAccount() {\n    return {\n        fromAddress: \"\",\n        toAddress: \"\",\n        amount: [],\n        endTime: BigInt(0),\n        delayed: false,\n    };\n}\nexports.MsgCreateVestingAccount = {\n    typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== BigInt(0)) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateVestingAccount();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = reader.int64();\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgCreateVestingAccount();\n        if ((0, helpers_1.isSet)(object.fromAddress))\n            obj.fromAddress = String(object.fromAddress);\n        if ((0, helpers_1.isSet)(object.toAddress))\n            obj.toAddress = String(object.toAddress);\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.endTime))\n            obj.endTime = BigInt(object.endTime.toString());\n        if ((0, helpers_1.isSet)(object.delayed))\n            obj.delayed = Boolean(object.delayed);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = (message.endTime || BigInt(0)).toString());\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCreateVestingAccount();\n        message.fromAddress = object.fromAddress ?? \"\";\n        message.toAddress = object.toAddress ?? \"\";\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = BigInt(object.endTime.toString());\n        }\n        message.delayed = object.delayed ?? false;\n        return message;\n    },\n};\nfunction createBaseMsgCreateVestingAccountResponse() {\n    return {};\n}\nexports.MsgCreateVestingAccountResponse = {\n    typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateVestingAccountResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgCreateVestingAccountResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgCreateVestingAccountResponse();\n        return message;\n    },\n};\nfunction createBaseMsgCreatePermanentLockedAccount() {\n    return {\n        fromAddress: \"\",\n        toAddress: \"\",\n        amount: [],\n    };\n}\nexports.MsgCreatePermanentLockedAccount = {\n    typeUrl: \"/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreatePermanentLockedAccount();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgCreatePermanentLockedAccount();\n        if ((0, helpers_1.isSet)(object.fromAddress))\n            obj.fromAddress = String(object.fromAddress);\n        if ((0, helpers_1.isSet)(object.toAddress))\n            obj.toAddress = String(object.toAddress);\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCreatePermanentLockedAccount();\n        message.fromAddress = object.fromAddress ?? \"\";\n        message.toAddress = object.toAddress ?? \"\";\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgCreatePermanentLockedAccountResponse() {\n    return {};\n}\nexports.MsgCreatePermanentLockedAccountResponse = {\n    typeUrl: \"/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreatePermanentLockedAccountResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgCreatePermanentLockedAccountResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgCreatePermanentLockedAccountResponse();\n        return message;\n    },\n};\nfunction createBaseMsgCreatePeriodicVestingAccount() {\n    return {\n        fromAddress: \"\",\n        toAddress: \"\",\n        startTime: BigInt(0),\n        vestingPeriods: [],\n    };\n}\nexports.MsgCreatePeriodicVestingAccount = {\n    typeUrl: \"/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        if (message.startTime !== BigInt(0)) {\n            writer.uint32(24).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            vesting_1.Period.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreatePeriodicVestingAccount();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.startTime = reader.int64();\n                    break;\n                case 4:\n                    message.vestingPeriods.push(vesting_1.Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgCreatePeriodicVestingAccount();\n        if ((0, helpers_1.isSet)(object.fromAddress))\n            obj.fromAddress = String(object.fromAddress);\n        if ((0, helpers_1.isSet)(object.toAddress))\n            obj.toAddress = String(object.toAddress);\n        if ((0, helpers_1.isSet)(object.startTime))\n            obj.startTime = BigInt(object.startTime.toString());\n        if (Array.isArray(object?.vestingPeriods))\n            obj.vestingPeriods = object.vestingPeriods.map((e) => vesting_1.Period.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        message.startTime !== undefined && (obj.startTime = (message.startTime || BigInt(0)).toString());\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => (e ? vesting_1.Period.toJSON(e) : undefined));\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCreatePeriodicVestingAccount();\n        message.fromAddress = object.fromAddress ?? \"\";\n        message.toAddress = object.toAddress ?? \"\";\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = BigInt(object.startTime.toString());\n        }\n        message.vestingPeriods = object.vestingPeriods?.map((e) => vesting_1.Period.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgCreatePeriodicVestingAccountResponse() {\n    return {};\n}\nexports.MsgCreatePeriodicVestingAccountResponse = {\n    typeUrl: \"/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreatePeriodicVestingAccountResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgCreatePeriodicVestingAccountResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgCreatePeriodicVestingAccountResponse();\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.CreateVestingAccount = this.CreateVestingAccount.bind(this);\n        this.CreatePermanentLockedAccount = this.CreatePermanentLockedAccount.bind(this);\n        this.CreatePeriodicVestingAccount = this.CreatePeriodicVestingAccount.bind(this);\n    }\n    CreateVestingAccount(request) {\n        const data = exports.MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreateVestingAccount\", data);\n        return promise.then((data) => exports.MsgCreateVestingAccountResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    CreatePermanentLockedAccount(request) {\n        const data = exports.MsgCreatePermanentLockedAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreatePermanentLockedAccount\", data);\n        return promise.then((data) => exports.MsgCreatePermanentLockedAccountResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    CreatePeriodicVestingAccount(request) {\n        const data = exports.MsgCreatePeriodicVestingAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreatePeriodicVestingAccount\", data);\n        return promise.then((data) => exports.MsgCreatePeriodicVestingAccountResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PermanentLockedAccount = exports.PeriodicVestingAccount = exports.Period = exports.DelayedVestingAccount = exports.ContinuousVestingAccount = exports.BaseVestingAccount = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst auth_1 = require(\"../../auth/v1beta1/auth\");\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.vesting.v1beta1\";\nfunction createBaseBaseVestingAccount() {\n    return {\n        baseAccount: undefined,\n        originalVesting: [],\n        delegatedFree: [],\n        delegatedVesting: [],\n        endTime: BigInt(0),\n    };\n}\nexports.BaseVestingAccount = {\n    typeUrl: \"/cosmos.vesting.v1beta1.BaseVestingAccount\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.baseAccount !== undefined) {\n            auth_1.BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            coin_1.Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== BigInt(0)) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBaseVestingAccount();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = auth_1.BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseBaseVestingAccount();\n        if ((0, helpers_1.isSet)(object.baseAccount))\n            obj.baseAccount = auth_1.BaseAccount.fromJSON(object.baseAccount);\n        if (Array.isArray(object?.originalVesting))\n            obj.originalVesting = object.originalVesting.map((e) => coin_1.Coin.fromJSON(e));\n        if (Array.isArray(object?.delegatedFree))\n            obj.delegatedFree = object.delegatedFree.map((e) => coin_1.Coin.fromJSON(e));\n        if (Array.isArray(object?.delegatedVesting))\n            obj.delegatedVesting = object.delegatedVesting.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.endTime))\n            obj.endTime = BigInt(object.endTime.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount ? auth_1.BaseAccount.toJSON(message.baseAccount) : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = (message.endTime || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseBaseVestingAccount();\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = auth_1.BaseAccount.fromPartial(object.baseAccount);\n        }\n        message.originalVesting = object.originalVesting?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        message.delegatedFree = object.delegatedFree?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        message.delegatedVesting = object.delegatedVesting?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = BigInt(object.endTime.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseContinuousVestingAccount() {\n    return {\n        baseVestingAccount: undefined,\n        startTime: BigInt(0),\n    };\n}\nexports.ContinuousVestingAccount = {\n    typeUrl: \"/cosmos.vesting.v1beta1.ContinuousVestingAccount\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            exports.BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== BigInt(0)) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseContinuousVestingAccount();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = exports.BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseContinuousVestingAccount();\n        if ((0, helpers_1.isSet)(object.baseVestingAccount))\n            obj.baseVestingAccount = exports.BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        if ((0, helpers_1.isSet)(object.startTime))\n            obj.startTime = BigInt(object.startTime.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? exports.BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = (message.startTime || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseContinuousVestingAccount();\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = exports.BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = BigInt(object.startTime.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseDelayedVestingAccount() {\n    return {\n        baseVestingAccount: undefined,\n    };\n}\nexports.DelayedVestingAccount = {\n    typeUrl: \"/cosmos.vesting.v1beta1.DelayedVestingAccount\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            exports.BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDelayedVestingAccount();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = exports.BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseDelayedVestingAccount();\n        if ((0, helpers_1.isSet)(object.baseVestingAccount))\n            obj.baseVestingAccount = exports.BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? exports.BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseDelayedVestingAccount();\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = exports.BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        return message;\n    },\n};\nfunction createBasePeriod() {\n    return {\n        length: BigInt(0),\n        amount: [],\n    };\n}\nexports.Period = {\n    typeUrl: \"/cosmos.vesting.v1beta1.Period\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.length !== BigInt(0)) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePeriod();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = reader.int64();\n                    break;\n                case 2:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBasePeriod();\n        if ((0, helpers_1.isSet)(object.length))\n            obj.length = BigInt(object.length.toString());\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = (message.length || BigInt(0)).toString());\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBasePeriod();\n        if (object.length !== undefined && object.length !== null) {\n            message.length = BigInt(object.length.toString());\n        }\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBasePeriodicVestingAccount() {\n    return {\n        baseVestingAccount: undefined,\n        startTime: BigInt(0),\n        vestingPeriods: [],\n    };\n}\nexports.PeriodicVestingAccount = {\n    typeUrl: \"/cosmos.vesting.v1beta1.PeriodicVestingAccount\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            exports.BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== BigInt(0)) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            exports.Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePeriodicVestingAccount();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = exports.BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = reader.int64();\n                    break;\n                case 3:\n                    message.vestingPeriods.push(exports.Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBasePeriodicVestingAccount();\n        if ((0, helpers_1.isSet)(object.baseVestingAccount))\n            obj.baseVestingAccount = exports.BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        if ((0, helpers_1.isSet)(object.startTime))\n            obj.startTime = BigInt(object.startTime.toString());\n        if (Array.isArray(object?.vestingPeriods))\n            obj.vestingPeriods = object.vestingPeriods.map((e) => exports.Period.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? exports.BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = (message.startTime || BigInt(0)).toString());\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => (e ? exports.Period.toJSON(e) : undefined));\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBasePeriodicVestingAccount();\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = exports.BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = BigInt(object.startTime.toString());\n        }\n        message.vestingPeriods = object.vestingPeriods?.map((e) => exports.Period.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBasePermanentLockedAccount() {\n    return {\n        baseVestingAccount: undefined,\n    };\n}\nexports.PermanentLockedAccount = {\n    typeUrl: \"/cosmos.vesting.v1beta1.PermanentLockedAccount\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            exports.BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePermanentLockedAccount();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = exports.BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBasePermanentLockedAccount();\n        if ((0, helpers_1.isSet)(object.baseVestingAccount))\n            obj.baseVestingAccount = exports.BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? exports.BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBasePermanentLockedAccount();\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = exports.BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        return message;\n    },\n};\n//# sourceMappingURL=vesting.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QueryContractsByCreatorResponse = exports.QueryContractsByCreatorRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QueryPinnedCodesResponse = exports.QueryPinnedCodesRequest = exports.QueryCodesResponse = exports.QueryCodesRequest = exports.QueryCodeResponse = exports.CodeInfoResponse = exports.QueryCodeRequest = exports.QuerySmartContractStateResponse = exports.QuerySmartContractStateRequest = exports.QueryRawContractStateResponse = exports.QueryRawContractStateRequest = exports.QueryAllContractStateResponse = exports.QueryAllContractStateRequest = exports.QueryContractsByCodeResponse = exports.QueryContractsByCodeRequest = exports.QueryContractHistoryResponse = exports.QueryContractHistoryRequest = exports.QueryContractInfoResponse = exports.QueryContractInfoRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst pagination_1 = require(\"../../../cosmos/base/query/v1beta1/pagination\");\nconst types_1 = require(\"./types\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmwasm.wasm.v1\";\nfunction createBaseQueryContractInfoRequest() {\n    return {\n        address: \"\",\n    };\n}\nexports.QueryContractInfoRequest = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryContractInfoRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryContractInfoRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryContractInfoRequest();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryContractInfoRequest();\n        message.address = object.address ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryContractInfoResponse() {\n    return {\n        address: \"\",\n        contractInfo: types_1.ContractInfo.fromPartial({}),\n    };\n}\nexports.QueryContractInfoResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryContractInfoResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.contractInfo !== undefined) {\n            types_1.ContractInfo.encode(message.contractInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryContractInfoResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.contractInfo = types_1.ContractInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryContractInfoResponse();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.contractInfo))\n            obj.contractInfo = types_1.ContractInfo.fromJSON(object.contractInfo);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.contractInfo !== undefined &&\n            (obj.contractInfo = message.contractInfo ? types_1.ContractInfo.toJSON(message.contractInfo) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryContractInfoResponse();\n        message.address = object.address ?? \"\";\n        if (object.contractInfo !== undefined && object.contractInfo !== null) {\n            message.contractInfo = types_1.ContractInfo.fromPartial(object.contractInfo);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryContractHistoryRequest() {\n    return {\n        address: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryContractHistoryRequest = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryContractHistoryRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryContractHistoryRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryContractHistoryRequest();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryContractHistoryRequest();\n        message.address = object.address ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryContractHistoryResponse() {\n    return {\n        entries: [],\n        pagination: undefined,\n    };\n}\nexports.QueryContractHistoryResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryContractHistoryResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.entries) {\n            types_1.ContractCodeHistoryEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryContractHistoryResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(types_1.ContractCodeHistoryEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryContractHistoryResponse();\n        if (Array.isArray(object?.entries))\n            obj.entries = object.entries.map((e) => types_1.ContractCodeHistoryEntry.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? types_1.ContractCodeHistoryEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryContractHistoryResponse();\n        message.entries = object.entries?.map((e) => types_1.ContractCodeHistoryEntry.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryContractsByCodeRequest() {\n    return {\n        codeId: BigInt(0),\n        pagination: undefined,\n    };\n}\nexports.QueryContractsByCodeRequest = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryContractsByCodeRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.codeId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.codeId);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryContractsByCodeRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.codeId = reader.uint64();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryContractsByCodeRequest();\n        if ((0, helpers_1.isSet)(object.codeId))\n            obj.codeId = BigInt(object.codeId.toString());\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.codeId !== undefined && (obj.codeId = (message.codeId || BigInt(0)).toString());\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryContractsByCodeRequest();\n        if (object.codeId !== undefined && object.codeId !== null) {\n            message.codeId = BigInt(object.codeId.toString());\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryContractsByCodeResponse() {\n    return {\n        contracts: [],\n        pagination: undefined,\n    };\n}\nexports.QueryContractsByCodeResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryContractsByCodeResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.contracts) {\n            writer.uint32(10).string(v);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryContractsByCodeResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.contracts.push(reader.string());\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryContractsByCodeResponse();\n        if (Array.isArray(object?.contracts))\n            obj.contracts = object.contracts.map((e) => String(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.contracts) {\n            obj.contracts = message.contracts.map((e) => e);\n        }\n        else {\n            obj.contracts = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryContractsByCodeResponse();\n        message.contracts = object.contracts?.map((e) => e) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryAllContractStateRequest() {\n    return {\n        address: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryAllContractStateRequest = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryAllContractStateRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllContractStateRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAllContractStateRequest();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllContractStateRequest();\n        message.address = object.address ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryAllContractStateResponse() {\n    return {\n        models: [],\n        pagination: undefined,\n    };\n}\nexports.QueryAllContractStateResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryAllContractStateResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.models) {\n            types_1.Model.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllContractStateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.models.push(types_1.Model.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryAllContractStateResponse();\n        if (Array.isArray(object?.models))\n            obj.models = object.models.map((e) => types_1.Model.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.models) {\n            obj.models = message.models.map((e) => (e ? types_1.Model.toJSON(e) : undefined));\n        }\n        else {\n            obj.models = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllContractStateResponse();\n        message.models = object.models?.map((e) => types_1.Model.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryRawContractStateRequest() {\n    return {\n        address: \"\",\n        queryData: new Uint8Array(),\n    };\n}\nexports.QueryRawContractStateRequest = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryRawContractStateRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.queryData.length !== 0) {\n            writer.uint32(18).bytes(message.queryData);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryRawContractStateRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.queryData = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryRawContractStateRequest();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.queryData))\n            obj.queryData = (0, helpers_1.bytesFromBase64)(object.queryData);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.queryData !== undefined &&\n            (obj.queryData = (0, helpers_1.base64FromBytes)(message.queryData !== undefined ? message.queryData : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryRawContractStateRequest();\n        message.address = object.address ?? \"\";\n        message.queryData = object.queryData ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseQueryRawContractStateResponse() {\n    return {\n        data: new Uint8Array(),\n    };\n}\nexports.QueryRawContractStateResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryRawContractStateResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryRawContractStateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryRawContractStateResponse();\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = (0, helpers_1.bytesFromBase64)(object.data);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = (0, helpers_1.base64FromBytes)(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryRawContractStateResponse();\n        message.data = object.data ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseQuerySmartContractStateRequest() {\n    return {\n        address: \"\",\n        queryData: new Uint8Array(),\n    };\n}\nexports.QuerySmartContractStateRequest = {\n    typeUrl: \"/cosmwasm.wasm.v1.QuerySmartContractStateRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.queryData.length !== 0) {\n            writer.uint32(18).bytes(message.queryData);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQuerySmartContractStateRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.queryData = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQuerySmartContractStateRequest();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.queryData))\n            obj.queryData = (0, helpers_1.bytesFromBase64)(object.queryData);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.queryData !== undefined &&\n            (obj.queryData = (0, helpers_1.base64FromBytes)(message.queryData !== undefined ? message.queryData : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQuerySmartContractStateRequest();\n        message.address = object.address ?? \"\";\n        message.queryData = object.queryData ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseQuerySmartContractStateResponse() {\n    return {\n        data: new Uint8Array(),\n    };\n}\nexports.QuerySmartContractStateResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.QuerySmartContractStateResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQuerySmartContractStateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQuerySmartContractStateResponse();\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = (0, helpers_1.bytesFromBase64)(object.data);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = (0, helpers_1.base64FromBytes)(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQuerySmartContractStateResponse();\n        message.data = object.data ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseQueryCodeRequest() {\n    return {\n        codeId: BigInt(0),\n    };\n}\nexports.QueryCodeRequest = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryCodeRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.codeId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.codeId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryCodeRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.codeId = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryCodeRequest();\n        if ((0, helpers_1.isSet)(object.codeId))\n            obj.codeId = BigInt(object.codeId.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.codeId !== undefined && (obj.codeId = (message.codeId || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryCodeRequest();\n        if (object.codeId !== undefined && object.codeId !== null) {\n            message.codeId = BigInt(object.codeId.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseCodeInfoResponse() {\n    return {\n        codeId: BigInt(0),\n        creator: \"\",\n        dataHash: new Uint8Array(),\n        instantiatePermission: types_1.AccessConfig.fromPartial({}),\n    };\n}\nexports.CodeInfoResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.CodeInfoResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.codeId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.codeId);\n        }\n        if (message.creator !== \"\") {\n            writer.uint32(18).string(message.creator);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(26).bytes(message.dataHash);\n        }\n        if (message.instantiatePermission !== undefined) {\n            types_1.AccessConfig.encode(message.instantiatePermission, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCodeInfoResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.codeId = reader.uint64();\n                    break;\n                case 2:\n                    message.creator = reader.string();\n                    break;\n                case 3:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 6:\n                    message.instantiatePermission = types_1.AccessConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCodeInfoResponse();\n        if ((0, helpers_1.isSet)(object.codeId))\n            obj.codeId = BigInt(object.codeId.toString());\n        if ((0, helpers_1.isSet)(object.creator))\n            obj.creator = String(object.creator);\n        if ((0, helpers_1.isSet)(object.dataHash))\n            obj.dataHash = (0, helpers_1.bytesFromBase64)(object.dataHash);\n        if ((0, helpers_1.isSet)(object.instantiatePermission))\n            obj.instantiatePermission = types_1.AccessConfig.fromJSON(object.instantiatePermission);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.codeId !== undefined && (obj.codeId = (message.codeId || BigInt(0)).toString());\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.dataHash !== undefined &&\n            (obj.dataHash = (0, helpers_1.base64FromBytes)(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.instantiatePermission !== undefined &&\n            (obj.instantiatePermission = message.instantiatePermission\n                ? types_1.AccessConfig.toJSON(message.instantiatePermission)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCodeInfoResponse();\n        if (object.codeId !== undefined && object.codeId !== null) {\n            message.codeId = BigInt(object.codeId.toString());\n        }\n        message.creator = object.creator ?? \"\";\n        message.dataHash = object.dataHash ?? new Uint8Array();\n        if (object.instantiatePermission !== undefined && object.instantiatePermission !== null) {\n            message.instantiatePermission = types_1.AccessConfig.fromPartial(object.instantiatePermission);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryCodeResponse() {\n    return {\n        codeInfo: undefined,\n        data: new Uint8Array(),\n    };\n}\nexports.QueryCodeResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryCodeResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.codeInfo !== undefined) {\n            exports.CodeInfoResponse.encode(message.codeInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryCodeResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.codeInfo = exports.CodeInfoResponse.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryCodeResponse();\n        if ((0, helpers_1.isSet)(object.codeInfo))\n            obj.codeInfo = exports.CodeInfoResponse.fromJSON(object.codeInfo);\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = (0, helpers_1.bytesFromBase64)(object.data);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.codeInfo !== undefined &&\n            (obj.codeInfo = message.codeInfo ? exports.CodeInfoResponse.toJSON(message.codeInfo) : undefined);\n        message.data !== undefined &&\n            (obj.data = (0, helpers_1.base64FromBytes)(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryCodeResponse();\n        if (object.codeInfo !== undefined && object.codeInfo !== null) {\n            message.codeInfo = exports.CodeInfoResponse.fromPartial(object.codeInfo);\n        }\n        message.data = object.data ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseQueryCodesRequest() {\n    return {\n        pagination: undefined,\n    };\n}\nexports.QueryCodesRequest = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryCodesRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryCodesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryCodesRequest();\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryCodesRequest();\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryCodesResponse() {\n    return {\n        codeInfos: [],\n        pagination: undefined,\n    };\n}\nexports.QueryCodesResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryCodesResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.codeInfos) {\n            exports.CodeInfoResponse.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryCodesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.codeInfos.push(exports.CodeInfoResponse.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryCodesResponse();\n        if (Array.isArray(object?.codeInfos))\n            obj.codeInfos = object.codeInfos.map((e) => exports.CodeInfoResponse.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.codeInfos) {\n            obj.codeInfos = message.codeInfos.map((e) => (e ? exports.CodeInfoResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.codeInfos = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryCodesResponse();\n        message.codeInfos = object.codeInfos?.map((e) => exports.CodeInfoResponse.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryPinnedCodesRequest() {\n    return {\n        pagination: undefined,\n    };\n}\nexports.QueryPinnedCodesRequest = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryPinnedCodesRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryPinnedCodesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryPinnedCodesRequest();\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryPinnedCodesRequest();\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryPinnedCodesResponse() {\n    return {\n        codeIds: [],\n        pagination: undefined,\n    };\n}\nexports.QueryPinnedCodesResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryPinnedCodesResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.codeIds) {\n            writer.uint64(v);\n        }\n        writer.ldelim();\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryPinnedCodesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.codeIds.push(reader.uint64());\n                        }\n                    }\n                    else {\n                        message.codeIds.push(reader.uint64());\n                    }\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryPinnedCodesResponse();\n        if (Array.isArray(object?.codeIds))\n            obj.codeIds = object.codeIds.map((e) => BigInt(e.toString()));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.codeIds) {\n            obj.codeIds = message.codeIds.map((e) => (e || BigInt(0)).toString());\n        }\n        else {\n            obj.codeIds = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryPinnedCodesResponse();\n        message.codeIds = object.codeIds?.map((e) => BigInt(e.toString())) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryParamsRequest() {\n    return {};\n}\nexports.QueryParamsRequest = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryParamsRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryParamsRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryParamsRequest();\n        return message;\n    },\n};\nfunction createBaseQueryParamsResponse() {\n    return {\n        params: types_1.Params.fromPartial({}),\n    };\n}\nexports.QueryParamsResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryParamsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.params !== undefined) {\n            types_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = types_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryParamsResponse();\n        if ((0, helpers_1.isSet)(object.params))\n            obj.params = types_1.Params.fromJSON(object.params);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? types_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryParamsResponse();\n        if (object.params !== undefined && object.params !== null) {\n            message.params = types_1.Params.fromPartial(object.params);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryContractsByCreatorRequest() {\n    return {\n        creatorAddress: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryContractsByCreatorRequest = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryContractsByCreatorRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.creatorAddress !== \"\") {\n            writer.uint32(10).string(message.creatorAddress);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryContractsByCreatorRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryContractsByCreatorRequest();\n        if ((0, helpers_1.isSet)(object.creatorAddress))\n            obj.creatorAddress = String(object.creatorAddress);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creatorAddress !== undefined && (obj.creatorAddress = message.creatorAddress);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryContractsByCreatorRequest();\n        message.creatorAddress = object.creatorAddress ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryContractsByCreatorResponse() {\n    return {\n        contractAddresses: [],\n        pagination: undefined,\n    };\n}\nexports.QueryContractsByCreatorResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.QueryContractsByCreatorResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.contractAddresses) {\n            writer.uint32(10).string(v);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryContractsByCreatorResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.contractAddresses.push(reader.string());\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryContractsByCreatorResponse();\n        if (Array.isArray(object?.contractAddresses))\n            obj.contractAddresses = object.contractAddresses.map((e) => String(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.contractAddresses) {\n            obj.contractAddresses = message.contractAddresses.map((e) => e);\n        }\n        else {\n            obj.contractAddresses = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryContractsByCreatorResponse();\n        message.contractAddresses = object.contractAddresses?.map((e) => e) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.ContractInfo = this.ContractInfo.bind(this);\n        this.ContractHistory = this.ContractHistory.bind(this);\n        this.ContractsByCode = this.ContractsByCode.bind(this);\n        this.AllContractState = this.AllContractState.bind(this);\n        this.RawContractState = this.RawContractState.bind(this);\n        this.SmartContractState = this.SmartContractState.bind(this);\n        this.Code = this.Code.bind(this);\n        this.Codes = this.Codes.bind(this);\n        this.PinnedCodes = this.PinnedCodes.bind(this);\n        this.Params = this.Params.bind(this);\n        this.ContractsByCreator = this.ContractsByCreator.bind(this);\n    }\n    ContractInfo(request) {\n        const data = exports.QueryContractInfoRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"ContractInfo\", data);\n        return promise.then((data) => exports.QueryContractInfoResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ContractHistory(request) {\n        const data = exports.QueryContractHistoryRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"ContractHistory\", data);\n        return promise.then((data) => exports.QueryContractHistoryResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ContractsByCode(request) {\n        const data = exports.QueryContractsByCodeRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"ContractsByCode\", data);\n        return promise.then((data) => exports.QueryContractsByCodeResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    AllContractState(request) {\n        const data = exports.QueryAllContractStateRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"AllContractState\", data);\n        return promise.then((data) => exports.QueryAllContractStateResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    RawContractState(request) {\n        const data = exports.QueryRawContractStateRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"RawContractState\", data);\n        return promise.then((data) => exports.QueryRawContractStateResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    SmartContractState(request) {\n        const data = exports.QuerySmartContractStateRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"SmartContractState\", data);\n        return promise.then((data) => exports.QuerySmartContractStateResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Code(request) {\n        const data = exports.QueryCodeRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"Code\", data);\n        return promise.then((data) => exports.QueryCodeResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Codes(request = {\n        pagination: pagination_1.PageRequest.fromPartial({}),\n    }) {\n        const data = exports.QueryCodesRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"Codes\", data);\n        return promise.then((data) => exports.QueryCodesResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    PinnedCodes(request = {\n        pagination: pagination_1.PageRequest.fromPartial({}),\n    }) {\n        const data = exports.QueryPinnedCodesRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"PinnedCodes\", data);\n        return promise.then((data) => exports.QueryPinnedCodesResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Params(request = {}) {\n        const data = exports.QueryParamsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"Params\", data);\n        return promise.then((data) => exports.QueryParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ContractsByCreator(request) {\n        const data = exports.QueryContractsByCreatorRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"ContractsByCreator\", data);\n        return promise.then((data) => exports.QueryContractsByCreatorResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\n//# sourceMappingURL=query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgUpdateInstantiateConfigResponse = exports.MsgUpdateInstantiateConfig = exports.MsgClearAdminResponse = exports.MsgClearAdmin = exports.MsgUpdateAdminResponse = exports.MsgUpdateAdmin = exports.MsgMigrateContractResponse = exports.MsgMigrateContract = exports.MsgExecuteContractResponse = exports.MsgExecuteContract = exports.MsgInstantiateContract2Response = exports.MsgInstantiateContractResponse = exports.MsgInstantiateContract2 = exports.MsgInstantiateContract = exports.MsgStoreCodeResponse = exports.MsgStoreCode = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst types_1 = require(\"./types\");\nconst coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmwasm.wasm.v1\";\nfunction createBaseMsgStoreCode() {\n    return {\n        sender: \"\",\n        wasmByteCode: new Uint8Array(),\n        instantiatePermission: undefined,\n    };\n}\nexports.MsgStoreCode = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgStoreCode\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.wasmByteCode.length !== 0) {\n            writer.uint32(18).bytes(message.wasmByteCode);\n        }\n        if (message.instantiatePermission !== undefined) {\n            types_1.AccessConfig.encode(message.instantiatePermission, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgStoreCode();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.wasmByteCode = reader.bytes();\n                    break;\n                case 5:\n                    message.instantiatePermission = types_1.AccessConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgStoreCode();\n        if ((0, helpers_1.isSet)(object.sender))\n            obj.sender = String(object.sender);\n        if ((0, helpers_1.isSet)(object.wasmByteCode))\n            obj.wasmByteCode = (0, helpers_1.bytesFromBase64)(object.wasmByteCode);\n        if ((0, helpers_1.isSet)(object.instantiatePermission))\n            obj.instantiatePermission = types_1.AccessConfig.fromJSON(object.instantiatePermission);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.wasmByteCode !== undefined &&\n            (obj.wasmByteCode = (0, helpers_1.base64FromBytes)(message.wasmByteCode !== undefined ? message.wasmByteCode : new Uint8Array()));\n        message.instantiatePermission !== undefined &&\n            (obj.instantiatePermission = message.instantiatePermission\n                ? types_1.AccessConfig.toJSON(message.instantiatePermission)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgStoreCode();\n        message.sender = object.sender ?? \"\";\n        message.wasmByteCode = object.wasmByteCode ?? new Uint8Array();\n        if (object.instantiatePermission !== undefined && object.instantiatePermission !== null) {\n            message.instantiatePermission = types_1.AccessConfig.fromPartial(object.instantiatePermission);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgStoreCodeResponse() {\n    return {\n        codeId: BigInt(0),\n        checksum: new Uint8Array(),\n    };\n}\nexports.MsgStoreCodeResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgStoreCodeResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.codeId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.codeId);\n        }\n        if (message.checksum.length !== 0) {\n            writer.uint32(18).bytes(message.checksum);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgStoreCodeResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.codeId = reader.uint64();\n                    break;\n                case 2:\n                    message.checksum = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgStoreCodeResponse();\n        if ((0, helpers_1.isSet)(object.codeId))\n            obj.codeId = BigInt(object.codeId.toString());\n        if ((0, helpers_1.isSet)(object.checksum))\n            obj.checksum = (0, helpers_1.bytesFromBase64)(object.checksum);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.codeId !== undefined && (obj.codeId = (message.codeId || BigInt(0)).toString());\n        message.checksum !== undefined &&\n            (obj.checksum = (0, helpers_1.base64FromBytes)(message.checksum !== undefined ? message.checksum : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgStoreCodeResponse();\n        if (object.codeId !== undefined && object.codeId !== null) {\n            message.codeId = BigInt(object.codeId.toString());\n        }\n        message.checksum = object.checksum ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseMsgInstantiateContract() {\n    return {\n        sender: \"\",\n        admin: \"\",\n        codeId: BigInt(0),\n        label: \"\",\n        msg: new Uint8Array(),\n        funds: [],\n    };\n}\nexports.MsgInstantiateContract = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgInstantiateContract\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.admin !== \"\") {\n            writer.uint32(18).string(message.admin);\n        }\n        if (message.codeId !== BigInt(0)) {\n            writer.uint32(24).uint64(message.codeId);\n        }\n        if (message.label !== \"\") {\n            writer.uint32(34).string(message.label);\n        }\n        if (message.msg.length !== 0) {\n            writer.uint32(42).bytes(message.msg);\n        }\n        for (const v of message.funds) {\n            coin_1.Coin.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgInstantiateContract();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.admin = reader.string();\n                    break;\n                case 3:\n                    message.codeId = reader.uint64();\n                    break;\n                case 4:\n                    message.label = reader.string();\n                    break;\n                case 5:\n                    message.msg = reader.bytes();\n                    break;\n                case 6:\n                    message.funds.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgInstantiateContract();\n        if ((0, helpers_1.isSet)(object.sender))\n            obj.sender = String(object.sender);\n        if ((0, helpers_1.isSet)(object.admin))\n            obj.admin = String(object.admin);\n        if ((0, helpers_1.isSet)(object.codeId))\n            obj.codeId = BigInt(object.codeId.toString());\n        if ((0, helpers_1.isSet)(object.label))\n            obj.label = String(object.label);\n        if ((0, helpers_1.isSet)(object.msg))\n            obj.msg = (0, helpers_1.bytesFromBase64)(object.msg);\n        if (Array.isArray(object?.funds))\n            obj.funds = object.funds.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.admin !== undefined && (obj.admin = message.admin);\n        message.codeId !== undefined && (obj.codeId = (message.codeId || BigInt(0)).toString());\n        message.label !== undefined && (obj.label = message.label);\n        message.msg !== undefined &&\n            (obj.msg = (0, helpers_1.base64FromBytes)(message.msg !== undefined ? message.msg : new Uint8Array()));\n        if (message.funds) {\n            obj.funds = message.funds.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.funds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgInstantiateContract();\n        message.sender = object.sender ?? \"\";\n        message.admin = object.admin ?? \"\";\n        if (object.codeId !== undefined && object.codeId !== null) {\n            message.codeId = BigInt(object.codeId.toString());\n        }\n        message.label = object.label ?? \"\";\n        message.msg = object.msg ?? new Uint8Array();\n        message.funds = object.funds?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgInstantiateContract2() {\n    return {\n        sender: \"\",\n        admin: \"\",\n        codeId: BigInt(0),\n        label: \"\",\n        msg: new Uint8Array(),\n        funds: [],\n        salt: new Uint8Array(),\n        fixMsg: false,\n    };\n}\nexports.MsgInstantiateContract2 = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgInstantiateContract2\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.admin !== \"\") {\n            writer.uint32(18).string(message.admin);\n        }\n        if (message.codeId !== BigInt(0)) {\n            writer.uint32(24).uint64(message.codeId);\n        }\n        if (message.label !== \"\") {\n            writer.uint32(34).string(message.label);\n        }\n        if (message.msg.length !== 0) {\n            writer.uint32(42).bytes(message.msg);\n        }\n        for (const v of message.funds) {\n            coin_1.Coin.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.salt.length !== 0) {\n            writer.uint32(58).bytes(message.salt);\n        }\n        if (message.fixMsg === true) {\n            writer.uint32(64).bool(message.fixMsg);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgInstantiateContract2();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.admin = reader.string();\n                    break;\n                case 3:\n                    message.codeId = reader.uint64();\n                    break;\n                case 4:\n                    message.label = reader.string();\n                    break;\n                case 5:\n                    message.msg = reader.bytes();\n                    break;\n                case 6:\n                    message.funds.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.salt = reader.bytes();\n                    break;\n                case 8:\n                    message.fixMsg = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgInstantiateContract2();\n        if ((0, helpers_1.isSet)(object.sender))\n            obj.sender = String(object.sender);\n        if ((0, helpers_1.isSet)(object.admin))\n            obj.admin = String(object.admin);\n        if ((0, helpers_1.isSet)(object.codeId))\n            obj.codeId = BigInt(object.codeId.toString());\n        if ((0, helpers_1.isSet)(object.label))\n            obj.label = String(object.label);\n        if ((0, helpers_1.isSet)(object.msg))\n            obj.msg = (0, helpers_1.bytesFromBase64)(object.msg);\n        if (Array.isArray(object?.funds))\n            obj.funds = object.funds.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.salt))\n            obj.salt = (0, helpers_1.bytesFromBase64)(object.salt);\n        if ((0, helpers_1.isSet)(object.fixMsg))\n            obj.fixMsg = Boolean(object.fixMsg);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.admin !== undefined && (obj.admin = message.admin);\n        message.codeId !== undefined && (obj.codeId = (message.codeId || BigInt(0)).toString());\n        message.label !== undefined && (obj.label = message.label);\n        message.msg !== undefined &&\n            (obj.msg = (0, helpers_1.base64FromBytes)(message.msg !== undefined ? message.msg : new Uint8Array()));\n        if (message.funds) {\n            obj.funds = message.funds.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.funds = [];\n        }\n        message.salt !== undefined &&\n            (obj.salt = (0, helpers_1.base64FromBytes)(message.salt !== undefined ? message.salt : new Uint8Array()));\n        message.fixMsg !== undefined && (obj.fixMsg = message.fixMsg);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgInstantiateContract2();\n        message.sender = object.sender ?? \"\";\n        message.admin = object.admin ?? \"\";\n        if (object.codeId !== undefined && object.codeId !== null) {\n            message.codeId = BigInt(object.codeId.toString());\n        }\n        message.label = object.label ?? \"\";\n        message.msg = object.msg ?? new Uint8Array();\n        message.funds = object.funds?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        message.salt = object.salt ?? new Uint8Array();\n        message.fixMsg = object.fixMsg ?? false;\n        return message;\n    },\n};\nfunction createBaseMsgInstantiateContractResponse() {\n    return {\n        address: \"\",\n        data: new Uint8Array(),\n    };\n}\nexports.MsgInstantiateContractResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgInstantiateContractResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgInstantiateContractResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgInstantiateContractResponse();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = (0, helpers_1.bytesFromBase64)(object.data);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.data !== undefined &&\n            (obj.data = (0, helpers_1.base64FromBytes)(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgInstantiateContractResponse();\n        message.address = object.address ?? \"\";\n        message.data = object.data ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseMsgInstantiateContract2Response() {\n    return {\n        address: \"\",\n        data: new Uint8Array(),\n    };\n}\nexports.MsgInstantiateContract2Response = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgInstantiateContract2Response\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgInstantiateContract2Response();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgInstantiateContract2Response();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = (0, helpers_1.bytesFromBase64)(object.data);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.data !== undefined &&\n            (obj.data = (0, helpers_1.base64FromBytes)(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgInstantiateContract2Response();\n        message.address = object.address ?? \"\";\n        message.data = object.data ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseMsgExecuteContract() {\n    return {\n        sender: \"\",\n        contract: \"\",\n        msg: new Uint8Array(),\n        funds: [],\n    };\n}\nexports.MsgExecuteContract = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgExecuteContract\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.contract !== \"\") {\n            writer.uint32(18).string(message.contract);\n        }\n        if (message.msg.length !== 0) {\n            writer.uint32(26).bytes(message.msg);\n        }\n        for (const v of message.funds) {\n            coin_1.Coin.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgExecuteContract();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.contract = reader.string();\n                    break;\n                case 3:\n                    message.msg = reader.bytes();\n                    break;\n                case 5:\n                    message.funds.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgExecuteContract();\n        if ((0, helpers_1.isSet)(object.sender))\n            obj.sender = String(object.sender);\n        if ((0, helpers_1.isSet)(object.contract))\n            obj.contract = String(object.contract);\n        if ((0, helpers_1.isSet)(object.msg))\n            obj.msg = (0, helpers_1.bytesFromBase64)(object.msg);\n        if (Array.isArray(object?.funds))\n            obj.funds = object.funds.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.contract !== undefined && (obj.contract = message.contract);\n        message.msg !== undefined &&\n            (obj.msg = (0, helpers_1.base64FromBytes)(message.msg !== undefined ? message.msg : new Uint8Array()));\n        if (message.funds) {\n            obj.funds = message.funds.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.funds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgExecuteContract();\n        message.sender = object.sender ?? \"\";\n        message.contract = object.contract ?? \"\";\n        message.msg = object.msg ?? new Uint8Array();\n        message.funds = object.funds?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgExecuteContractResponse() {\n    return {\n        data: new Uint8Array(),\n    };\n}\nexports.MsgExecuteContractResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgExecuteContractResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgExecuteContractResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgExecuteContractResponse();\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = (0, helpers_1.bytesFromBase64)(object.data);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = (0, helpers_1.base64FromBytes)(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgExecuteContractResponse();\n        message.data = object.data ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseMsgMigrateContract() {\n    return {\n        sender: \"\",\n        contract: \"\",\n        codeId: BigInt(0),\n        msg: new Uint8Array(),\n    };\n}\nexports.MsgMigrateContract = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgMigrateContract\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.contract !== \"\") {\n            writer.uint32(18).string(message.contract);\n        }\n        if (message.codeId !== BigInt(0)) {\n            writer.uint32(24).uint64(message.codeId);\n        }\n        if (message.msg.length !== 0) {\n            writer.uint32(34).bytes(message.msg);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgMigrateContract();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.contract = reader.string();\n                    break;\n                case 3:\n                    message.codeId = reader.uint64();\n                    break;\n                case 4:\n                    message.msg = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgMigrateContract();\n        if ((0, helpers_1.isSet)(object.sender))\n            obj.sender = String(object.sender);\n        if ((0, helpers_1.isSet)(object.contract))\n            obj.contract = String(object.contract);\n        if ((0, helpers_1.isSet)(object.codeId))\n            obj.codeId = BigInt(object.codeId.toString());\n        if ((0, helpers_1.isSet)(object.msg))\n            obj.msg = (0, helpers_1.bytesFromBase64)(object.msg);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.contract !== undefined && (obj.contract = message.contract);\n        message.codeId !== undefined && (obj.codeId = (message.codeId || BigInt(0)).toString());\n        message.msg !== undefined &&\n            (obj.msg = (0, helpers_1.base64FromBytes)(message.msg !== undefined ? message.msg : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgMigrateContract();\n        message.sender = object.sender ?? \"\";\n        message.contract = object.contract ?? \"\";\n        if (object.codeId !== undefined && object.codeId !== null) {\n            message.codeId = BigInt(object.codeId.toString());\n        }\n        message.msg = object.msg ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseMsgMigrateContractResponse() {\n    return {\n        data: new Uint8Array(),\n    };\n}\nexports.MsgMigrateContractResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgMigrateContractResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgMigrateContractResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgMigrateContractResponse();\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = (0, helpers_1.bytesFromBase64)(object.data);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = (0, helpers_1.base64FromBytes)(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgMigrateContractResponse();\n        message.data = object.data ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseMsgUpdateAdmin() {\n    return {\n        sender: \"\",\n        newAdmin: \"\",\n        contract: \"\",\n    };\n}\nexports.MsgUpdateAdmin = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgUpdateAdmin\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.newAdmin !== \"\") {\n            writer.uint32(18).string(message.newAdmin);\n        }\n        if (message.contract !== \"\") {\n            writer.uint32(26).string(message.contract);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateAdmin();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.newAdmin = reader.string();\n                    break;\n                case 3:\n                    message.contract = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUpdateAdmin();\n        if ((0, helpers_1.isSet)(object.sender))\n            obj.sender = String(object.sender);\n        if ((0, helpers_1.isSet)(object.newAdmin))\n            obj.newAdmin = String(object.newAdmin);\n        if ((0, helpers_1.isSet)(object.contract))\n            obj.contract = String(object.contract);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.newAdmin !== undefined && (obj.newAdmin = message.newAdmin);\n        message.contract !== undefined && (obj.contract = message.contract);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateAdmin();\n        message.sender = object.sender ?? \"\";\n        message.newAdmin = object.newAdmin ?? \"\";\n        message.contract = object.contract ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgUpdateAdminResponse() {\n    return {};\n}\nexports.MsgUpdateAdminResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgUpdateAdminResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateAdminResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgUpdateAdminResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateAdminResponse();\n        return message;\n    },\n};\nfunction createBaseMsgClearAdmin() {\n    return {\n        sender: \"\",\n        contract: \"\",\n    };\n}\nexports.MsgClearAdmin = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgClearAdmin\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.contract !== \"\") {\n            writer.uint32(26).string(message.contract);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgClearAdmin();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.contract = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgClearAdmin();\n        if ((0, helpers_1.isSet)(object.sender))\n            obj.sender = String(object.sender);\n        if ((0, helpers_1.isSet)(object.contract))\n            obj.contract = String(object.contract);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.contract !== undefined && (obj.contract = message.contract);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgClearAdmin();\n        message.sender = object.sender ?? \"\";\n        message.contract = object.contract ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgClearAdminResponse() {\n    return {};\n}\nexports.MsgClearAdminResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgClearAdminResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgClearAdminResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgClearAdminResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgClearAdminResponse();\n        return message;\n    },\n};\nfunction createBaseMsgUpdateInstantiateConfig() {\n    return {\n        sender: \"\",\n        codeId: BigInt(0),\n        newInstantiatePermission: undefined,\n    };\n}\nexports.MsgUpdateInstantiateConfig = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgUpdateInstantiateConfig\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.codeId !== BigInt(0)) {\n            writer.uint32(16).uint64(message.codeId);\n        }\n        if (message.newInstantiatePermission !== undefined) {\n            types_1.AccessConfig.encode(message.newInstantiatePermission, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateInstantiateConfig();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.codeId = reader.uint64();\n                    break;\n                case 3:\n                    message.newInstantiatePermission = types_1.AccessConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUpdateInstantiateConfig();\n        if ((0, helpers_1.isSet)(object.sender))\n            obj.sender = String(object.sender);\n        if ((0, helpers_1.isSet)(object.codeId))\n            obj.codeId = BigInt(object.codeId.toString());\n        if ((0, helpers_1.isSet)(object.newInstantiatePermission))\n            obj.newInstantiatePermission = types_1.AccessConfig.fromJSON(object.newInstantiatePermission);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.codeId !== undefined && (obj.codeId = (message.codeId || BigInt(0)).toString());\n        message.newInstantiatePermission !== undefined &&\n            (obj.newInstantiatePermission = message.newInstantiatePermission\n                ? types_1.AccessConfig.toJSON(message.newInstantiatePermission)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateInstantiateConfig();\n        message.sender = object.sender ?? \"\";\n        if (object.codeId !== undefined && object.codeId !== null) {\n            message.codeId = BigInt(object.codeId.toString());\n        }\n        if (object.newInstantiatePermission !== undefined && object.newInstantiatePermission !== null) {\n            message.newInstantiatePermission = types_1.AccessConfig.fromPartial(object.newInstantiatePermission);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgUpdateInstantiateConfigResponse() {\n    return {};\n}\nexports.MsgUpdateInstantiateConfigResponse = {\n    typeUrl: \"/cosmwasm.wasm.v1.MsgUpdateInstantiateConfigResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateInstantiateConfigResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgUpdateInstantiateConfigResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateInstantiateConfigResponse();\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.StoreCode = this.StoreCode.bind(this);\n        this.InstantiateContract = this.InstantiateContract.bind(this);\n        this.InstantiateContract2 = this.InstantiateContract2.bind(this);\n        this.ExecuteContract = this.ExecuteContract.bind(this);\n        this.MigrateContract = this.MigrateContract.bind(this);\n        this.UpdateAdmin = this.UpdateAdmin.bind(this);\n        this.ClearAdmin = this.ClearAdmin.bind(this);\n        this.UpdateInstantiateConfig = this.UpdateInstantiateConfig.bind(this);\n    }\n    StoreCode(request) {\n        const data = exports.MsgStoreCode.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Msg\", \"StoreCode\", data);\n        return promise.then((data) => exports.MsgStoreCodeResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    InstantiateContract(request) {\n        const data = exports.MsgInstantiateContract.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Msg\", \"InstantiateContract\", data);\n        return promise.then((data) => exports.MsgInstantiateContractResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    InstantiateContract2(request) {\n        const data = exports.MsgInstantiateContract2.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Msg\", \"InstantiateContract2\", data);\n        return promise.then((data) => exports.MsgInstantiateContract2Response.decode(new binary_1.BinaryReader(data)));\n    }\n    ExecuteContract(request) {\n        const data = exports.MsgExecuteContract.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Msg\", \"ExecuteContract\", data);\n        return promise.then((data) => exports.MsgExecuteContractResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    MigrateContract(request) {\n        const data = exports.MsgMigrateContract.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Msg\", \"MigrateContract\", data);\n        return promise.then((data) => exports.MsgMigrateContractResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpdateAdmin(request) {\n        const data = exports.MsgUpdateAdmin.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Msg\", \"UpdateAdmin\", data);\n        return promise.then((data) => exports.MsgUpdateAdminResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ClearAdmin(request) {\n        const data = exports.MsgClearAdmin.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Msg\", \"ClearAdmin\", data);\n        return promise.then((data) => exports.MsgClearAdminResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpdateInstantiateConfig(request) {\n        const data = exports.MsgUpdateInstantiateConfig.encode(request).finish();\n        const promise = this.rpc.request(\"cosmwasm.wasm.v1.Msg\", \"UpdateInstantiateConfig\", data);\n        return promise.then((data) => exports.MsgUpdateInstantiateConfigResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Model = exports.AbsoluteTxPosition = exports.ContractCodeHistoryEntry = exports.ContractInfo = exports.CodeInfo = exports.Params = exports.AccessConfig = exports.AccessTypeParam = exports.contractCodeHistoryOperationTypeToJSON = exports.contractCodeHistoryOperationTypeFromJSON = exports.ContractCodeHistoryOperationType = exports.accessTypeToJSON = exports.accessTypeFromJSON = exports.AccessType = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmwasm.wasm.v1\";\n/** AccessType permission types */\nvar AccessType;\n(function (AccessType) {\n    /** ACCESS_TYPE_UNSPECIFIED - AccessTypeUnspecified placeholder for empty value */\n    AccessType[AccessType[\"ACCESS_TYPE_UNSPECIFIED\"] = 0] = \"ACCESS_TYPE_UNSPECIFIED\";\n    /** ACCESS_TYPE_NOBODY - AccessTypeNobody forbidden */\n    AccessType[AccessType[\"ACCESS_TYPE_NOBODY\"] = 1] = \"ACCESS_TYPE_NOBODY\";\n    /**\n     * ACCESS_TYPE_ONLY_ADDRESS - AccessTypeOnlyAddress restricted to a single address\n     * Deprecated: use AccessTypeAnyOfAddresses instead\n     */\n    AccessType[AccessType[\"ACCESS_TYPE_ONLY_ADDRESS\"] = 2] = \"ACCESS_TYPE_ONLY_ADDRESS\";\n    /** ACCESS_TYPE_EVERYBODY - AccessTypeEverybody unrestricted */\n    AccessType[AccessType[\"ACCESS_TYPE_EVERYBODY\"] = 3] = \"ACCESS_TYPE_EVERYBODY\";\n    /** ACCESS_TYPE_ANY_OF_ADDRESSES - AccessTypeAnyOfAddresses allow any of the addresses */\n    AccessType[AccessType[\"ACCESS_TYPE_ANY_OF_ADDRESSES\"] = 4] = \"ACCESS_TYPE_ANY_OF_ADDRESSES\";\n    AccessType[AccessType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(AccessType || (exports.AccessType = AccessType = {}));\nfunction accessTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ACCESS_TYPE_UNSPECIFIED\":\n            return AccessType.ACCESS_TYPE_UNSPECIFIED;\n        case 1:\n        case \"ACCESS_TYPE_NOBODY\":\n            return AccessType.ACCESS_TYPE_NOBODY;\n        case 2:\n        case \"ACCESS_TYPE_ONLY_ADDRESS\":\n            return AccessType.ACCESS_TYPE_ONLY_ADDRESS;\n        case 3:\n        case \"ACCESS_TYPE_EVERYBODY\":\n            return AccessType.ACCESS_TYPE_EVERYBODY;\n        case 4:\n        case \"ACCESS_TYPE_ANY_OF_ADDRESSES\":\n            return AccessType.ACCESS_TYPE_ANY_OF_ADDRESSES;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return AccessType.UNRECOGNIZED;\n    }\n}\nexports.accessTypeFromJSON = accessTypeFromJSON;\nfunction accessTypeToJSON(object) {\n    switch (object) {\n        case AccessType.ACCESS_TYPE_UNSPECIFIED:\n            return \"ACCESS_TYPE_UNSPECIFIED\";\n        case AccessType.ACCESS_TYPE_NOBODY:\n            return \"ACCESS_TYPE_NOBODY\";\n        case AccessType.ACCESS_TYPE_ONLY_ADDRESS:\n            return \"ACCESS_TYPE_ONLY_ADDRESS\";\n        case AccessType.ACCESS_TYPE_EVERYBODY:\n            return \"ACCESS_TYPE_EVERYBODY\";\n        case AccessType.ACCESS_TYPE_ANY_OF_ADDRESSES:\n            return \"ACCESS_TYPE_ANY_OF_ADDRESSES\";\n        case AccessType.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.accessTypeToJSON = accessTypeToJSON;\n/** ContractCodeHistoryOperationType actions that caused a code change */\nvar ContractCodeHistoryOperationType;\n(function (ContractCodeHistoryOperationType) {\n    /** CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED - ContractCodeHistoryOperationTypeUnspecified placeholder for empty value */\n    ContractCodeHistoryOperationType[ContractCodeHistoryOperationType[\"CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED\"] = 0] = \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED\";\n    /** CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT - ContractCodeHistoryOperationTypeInit on chain contract instantiation */\n    ContractCodeHistoryOperationType[ContractCodeHistoryOperationType[\"CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT\"] = 1] = \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT\";\n    /** CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE - ContractCodeHistoryOperationTypeMigrate code migration */\n    ContractCodeHistoryOperationType[ContractCodeHistoryOperationType[\"CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE\"] = 2] = \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE\";\n    /** CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS - ContractCodeHistoryOperationTypeGenesis based on genesis data */\n    ContractCodeHistoryOperationType[ContractCodeHistoryOperationType[\"CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS\"] = 3] = \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS\";\n    ContractCodeHistoryOperationType[ContractCodeHistoryOperationType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ContractCodeHistoryOperationType || (exports.ContractCodeHistoryOperationType = ContractCodeHistoryOperationType = {}));\nfunction contractCodeHistoryOperationTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED\":\n            return ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED;\n        case 1:\n        case \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT\":\n            return ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT;\n        case 2:\n        case \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE\":\n            return ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE;\n        case 3:\n        case \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS\":\n            return ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ContractCodeHistoryOperationType.UNRECOGNIZED;\n    }\n}\nexports.contractCodeHistoryOperationTypeFromJSON = contractCodeHistoryOperationTypeFromJSON;\nfunction contractCodeHistoryOperationTypeToJSON(object) {\n    switch (object) {\n        case ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:\n            return \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED\";\n        case ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT:\n            return \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT\";\n        case ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE:\n            return \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE\";\n        case ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS:\n            return \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS\";\n        case ContractCodeHistoryOperationType.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.contractCodeHistoryOperationTypeToJSON = contractCodeHistoryOperationTypeToJSON;\nfunction createBaseAccessTypeParam() {\n    return {\n        value: 0,\n    };\n}\nexports.AccessTypeParam = {\n    typeUrl: \"/cosmwasm.wasm.v1.AccessTypeParam\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.value !== 0) {\n            writer.uint32(8).int32(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAccessTypeParam();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseAccessTypeParam();\n        if ((0, helpers_1.isSet)(object.value))\n            obj.value = accessTypeFromJSON(object.value);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.value !== undefined && (obj.value = accessTypeToJSON(message.value));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseAccessTypeParam();\n        message.value = object.value ?? 0;\n        return message;\n    },\n};\nfunction createBaseAccessConfig() {\n    return {\n        permission: 0,\n        address: \"\",\n        addresses: [],\n    };\n}\nexports.AccessConfig = {\n    typeUrl: \"/cosmwasm.wasm.v1.AccessConfig\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.permission !== 0) {\n            writer.uint32(8).int32(message.permission);\n        }\n        if (message.address !== \"\") {\n            writer.uint32(18).string(message.address);\n        }\n        for (const v of message.addresses) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAccessConfig();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.permission = reader.int32();\n                    break;\n                case 2:\n                    message.address = reader.string();\n                    break;\n                case 3:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseAccessConfig();\n        if ((0, helpers_1.isSet)(object.permission))\n            obj.permission = accessTypeFromJSON(object.permission);\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if (Array.isArray(object?.addresses))\n            obj.addresses = object.addresses.map((e) => String(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.permission !== undefined && (obj.permission = accessTypeToJSON(message.permission));\n        message.address !== undefined && (obj.address = message.address);\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseAccessConfig();\n        message.permission = object.permission ?? 0;\n        message.address = object.address ?? \"\";\n        message.addresses = object.addresses?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseParams() {\n    return {\n        codeUploadAccess: exports.AccessConfig.fromPartial({}),\n        instantiateDefaultPermission: 0,\n    };\n}\nexports.Params = {\n    typeUrl: \"/cosmwasm.wasm.v1.Params\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.codeUploadAccess !== undefined) {\n            exports.AccessConfig.encode(message.codeUploadAccess, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.instantiateDefaultPermission !== 0) {\n            writer.uint32(16).int32(message.instantiateDefaultPermission);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.codeUploadAccess = exports.AccessConfig.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.instantiateDefaultPermission = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseParams();\n        if ((0, helpers_1.isSet)(object.codeUploadAccess))\n            obj.codeUploadAccess = exports.AccessConfig.fromJSON(object.codeUploadAccess);\n        if ((0, helpers_1.isSet)(object.instantiateDefaultPermission))\n            obj.instantiateDefaultPermission = accessTypeFromJSON(object.instantiateDefaultPermission);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.codeUploadAccess !== undefined &&\n            (obj.codeUploadAccess = message.codeUploadAccess\n                ? exports.AccessConfig.toJSON(message.codeUploadAccess)\n                : undefined);\n        message.instantiateDefaultPermission !== undefined &&\n            (obj.instantiateDefaultPermission = accessTypeToJSON(message.instantiateDefaultPermission));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseParams();\n        if (object.codeUploadAccess !== undefined && object.codeUploadAccess !== null) {\n            message.codeUploadAccess = exports.AccessConfig.fromPartial(object.codeUploadAccess);\n        }\n        message.instantiateDefaultPermission = object.instantiateDefaultPermission ?? 0;\n        return message;\n    },\n};\nfunction createBaseCodeInfo() {\n    return {\n        codeHash: new Uint8Array(),\n        creator: \"\",\n        instantiateConfig: exports.AccessConfig.fromPartial({}),\n    };\n}\nexports.CodeInfo = {\n    typeUrl: \"/cosmwasm.wasm.v1.CodeInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.codeHash.length !== 0) {\n            writer.uint32(10).bytes(message.codeHash);\n        }\n        if (message.creator !== \"\") {\n            writer.uint32(18).string(message.creator);\n        }\n        if (message.instantiateConfig !== undefined) {\n            exports.AccessConfig.encode(message.instantiateConfig, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCodeInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.codeHash = reader.bytes();\n                    break;\n                case 2:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.instantiateConfig = exports.AccessConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCodeInfo();\n        if ((0, helpers_1.isSet)(object.codeHash))\n            obj.codeHash = (0, helpers_1.bytesFromBase64)(object.codeHash);\n        if ((0, helpers_1.isSet)(object.creator))\n            obj.creator = String(object.creator);\n        if ((0, helpers_1.isSet)(object.instantiateConfig))\n            obj.instantiateConfig = exports.AccessConfig.fromJSON(object.instantiateConfig);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.codeHash !== undefined &&\n            (obj.codeHash = (0, helpers_1.base64FromBytes)(message.codeHash !== undefined ? message.codeHash : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.instantiateConfig !== undefined &&\n            (obj.instantiateConfig = message.instantiateConfig\n                ? exports.AccessConfig.toJSON(message.instantiateConfig)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCodeInfo();\n        message.codeHash = object.codeHash ?? new Uint8Array();\n        message.creator = object.creator ?? \"\";\n        if (object.instantiateConfig !== undefined && object.instantiateConfig !== null) {\n            message.instantiateConfig = exports.AccessConfig.fromPartial(object.instantiateConfig);\n        }\n        return message;\n    },\n};\nfunction createBaseContractInfo() {\n    return {\n        codeId: BigInt(0),\n        creator: \"\",\n        admin: \"\",\n        label: \"\",\n        created: undefined,\n        ibcPortId: \"\",\n        extension: undefined,\n    };\n}\nexports.ContractInfo = {\n    typeUrl: \"/cosmwasm.wasm.v1.ContractInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.codeId !== BigInt(0)) {\n            writer.uint32(8).uint64(message.codeId);\n        }\n        if (message.creator !== \"\") {\n            writer.uint32(18).string(message.creator);\n        }\n        if (message.admin !== \"\") {\n            writer.uint32(26).string(message.admin);\n        }\n        if (message.label !== \"\") {\n            writer.uint32(34).string(message.label);\n        }\n        if (message.created !== undefined) {\n            exports.AbsoluteTxPosition.encode(message.created, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.ibcPortId !== \"\") {\n            writer.uint32(50).string(message.ibcPortId);\n        }\n        if (message.extension !== undefined) {\n            any_1.Any.encode(message.extension, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseContractInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.codeId = reader.uint64();\n                    break;\n                case 2:\n                    message.creator = reader.string();\n                    break;\n                case 3:\n                    message.admin = reader.string();\n                    break;\n                case 4:\n                    message.label = reader.string();\n                    break;\n                case 5:\n                    message.created = exports.AbsoluteTxPosition.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.ibcPortId = reader.string();\n                    break;\n                case 7:\n                    message.extension = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseContractInfo();\n        if ((0, helpers_1.isSet)(object.codeId))\n            obj.codeId = BigInt(object.codeId.toString());\n        if ((0, helpers_1.isSet)(object.creator))\n            obj.creator = String(object.creator);\n        if ((0, helpers_1.isSet)(object.admin))\n            obj.admin = String(object.admin);\n        if ((0, helpers_1.isSet)(object.label))\n            obj.label = String(object.label);\n        if ((0, helpers_1.isSet)(object.created))\n            obj.created = exports.AbsoluteTxPosition.fromJSON(object.created);\n        if ((0, helpers_1.isSet)(object.ibcPortId))\n            obj.ibcPortId = String(object.ibcPortId);\n        if ((0, helpers_1.isSet)(object.extension))\n            obj.extension = any_1.Any.fromJSON(object.extension);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.codeId !== undefined && (obj.codeId = (message.codeId || BigInt(0)).toString());\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.admin !== undefined && (obj.admin = message.admin);\n        message.label !== undefined && (obj.label = message.label);\n        message.created !== undefined &&\n            (obj.created = message.created ? exports.AbsoluteTxPosition.toJSON(message.created) : undefined);\n        message.ibcPortId !== undefined && (obj.ibcPortId = message.ibcPortId);\n        message.extension !== undefined &&\n            (obj.extension = message.extension ? any_1.Any.toJSON(message.extension) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseContractInfo();\n        if (object.codeId !== undefined && object.codeId !== null) {\n            message.codeId = BigInt(object.codeId.toString());\n        }\n        message.creator = object.creator ?? \"\";\n        message.admin = object.admin ?? \"\";\n        message.label = object.label ?? \"\";\n        if (object.created !== undefined && object.created !== null) {\n            message.created = exports.AbsoluteTxPosition.fromPartial(object.created);\n        }\n        message.ibcPortId = object.ibcPortId ?? \"\";\n        if (object.extension !== undefined && object.extension !== null) {\n            message.extension = any_1.Any.fromPartial(object.extension);\n        }\n        return message;\n    },\n};\nfunction createBaseContractCodeHistoryEntry() {\n    return {\n        operation: 0,\n        codeId: BigInt(0),\n        updated: undefined,\n        msg: new Uint8Array(),\n    };\n}\nexports.ContractCodeHistoryEntry = {\n    typeUrl: \"/cosmwasm.wasm.v1.ContractCodeHistoryEntry\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.operation !== 0) {\n            writer.uint32(8).int32(message.operation);\n        }\n        if (message.codeId !== BigInt(0)) {\n            writer.uint32(16).uint64(message.codeId);\n        }\n        if (message.updated !== undefined) {\n            exports.AbsoluteTxPosition.encode(message.updated, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.msg.length !== 0) {\n            writer.uint32(34).bytes(message.msg);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseContractCodeHistoryEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operation = reader.int32();\n                    break;\n                case 2:\n                    message.codeId = reader.uint64();\n                    break;\n                case 3:\n                    message.updated = exports.AbsoluteTxPosition.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.msg = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseContractCodeHistoryEntry();\n        if ((0, helpers_1.isSet)(object.operation))\n            obj.operation = contractCodeHistoryOperationTypeFromJSON(object.operation);\n        if ((0, helpers_1.isSet)(object.codeId))\n            obj.codeId = BigInt(object.codeId.toString());\n        if ((0, helpers_1.isSet)(object.updated))\n            obj.updated = exports.AbsoluteTxPosition.fromJSON(object.updated);\n        if ((0, helpers_1.isSet)(object.msg))\n            obj.msg = (0, helpers_1.bytesFromBase64)(object.msg);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operation !== undefined &&\n            (obj.operation = contractCodeHistoryOperationTypeToJSON(message.operation));\n        message.codeId !== undefined && (obj.codeId = (message.codeId || BigInt(0)).toString());\n        message.updated !== undefined &&\n            (obj.updated = message.updated ? exports.AbsoluteTxPosition.toJSON(message.updated) : undefined);\n        message.msg !== undefined &&\n            (obj.msg = (0, helpers_1.base64FromBytes)(message.msg !== undefined ? message.msg : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseContractCodeHistoryEntry();\n        message.operation = object.operation ?? 0;\n        if (object.codeId !== undefined && object.codeId !== null) {\n            message.codeId = BigInt(object.codeId.toString());\n        }\n        if (object.updated !== undefined && object.updated !== null) {\n            message.updated = exports.AbsoluteTxPosition.fromPartial(object.updated);\n        }\n        message.msg = object.msg ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseAbsoluteTxPosition() {\n    return {\n        blockHeight: BigInt(0),\n        txIndex: BigInt(0),\n    };\n}\nexports.AbsoluteTxPosition = {\n    typeUrl: \"/cosmwasm.wasm.v1.AbsoluteTxPosition\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.blockHeight !== BigInt(0)) {\n            writer.uint32(8).uint64(message.blockHeight);\n        }\n        if (message.txIndex !== BigInt(0)) {\n            writer.uint32(16).uint64(message.txIndex);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAbsoluteTxPosition();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockHeight = reader.uint64();\n                    break;\n                case 2:\n                    message.txIndex = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseAbsoluteTxPosition();\n        if ((0, helpers_1.isSet)(object.blockHeight))\n            obj.blockHeight = BigInt(object.blockHeight.toString());\n        if ((0, helpers_1.isSet)(object.txIndex))\n            obj.txIndex = BigInt(object.txIndex.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockHeight !== undefined && (obj.blockHeight = (message.blockHeight || BigInt(0)).toString());\n        message.txIndex !== undefined && (obj.txIndex = (message.txIndex || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseAbsoluteTxPosition();\n        if (object.blockHeight !== undefined && object.blockHeight !== null) {\n            message.blockHeight = BigInt(object.blockHeight.toString());\n        }\n        if (object.txIndex !== undefined && object.txIndex !== null) {\n            message.txIndex = BigInt(object.txIndex.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseModel() {\n    return {\n        key: new Uint8Array(),\n        value: new Uint8Array(),\n    };\n}\nexports.Model = {\n    typeUrl: \"/cosmwasm.wasm.v1.Model\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseModel();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseModel();\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = (0, helpers_1.bytesFromBase64)(object.key);\n        if ((0, helpers_1.isSet)(object.value))\n            obj.value = (0, helpers_1.bytesFromBase64)(object.value);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = (0, helpers_1.base64FromBytes)(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseModel();\n        message.key = object.key ?? new Uint8Array();\n        message.value = object.value ?? new Uint8Array();\n        return message;\n    },\n};\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Any = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst binary_1 = require(\"../../binary\");\nconst helpers_1 = require(\"../../helpers\");\nexports.protobufPackage = \"google.protobuf\";\nfunction createBaseAny() {\n    return {\n        typeUrl: \"\",\n        value: new Uint8Array(),\n    };\n}\nexports.Any = {\n    typeUrl: \"/google.protobuf.Any\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAny();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseAny();\n        if ((0, helpers_1.isSet)(object.typeUrl))\n            obj.typeUrl = String(object.typeUrl);\n        if ((0, helpers_1.isSet)(object.value))\n            obj.value = (0, helpers_1.bytesFromBase64)(object.value);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = (0, helpers_1.base64FromBytes)(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseAny();\n        message.typeUrl = object.typeUrl ?? \"\";\n        message.value = object.value ?? new Uint8Array();\n        return message;\n    },\n};\n//# sourceMappingURL=any.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Duration = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst binary_1 = require(\"../../binary\");\nconst helpers_1 = require(\"../../helpers\");\nexports.protobufPackage = \"google.protobuf\";\nfunction createBaseDuration() {\n    return {\n        seconds: BigInt(0),\n        nanos: 0,\n    };\n}\nexports.Duration = {\n    typeUrl: \"/google.protobuf.Duration\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.seconds !== BigInt(0)) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDuration();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = reader.int64();\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseDuration();\n        if ((0, helpers_1.isSet)(object.seconds))\n            obj.seconds = BigInt(object.seconds.toString());\n        if ((0, helpers_1.isSet)(object.nanos))\n            obj.nanos = Number(object.nanos);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = (message.seconds || BigInt(0)).toString());\n        message.nanos !== undefined && (obj.nanos = Math.round(message.nanos));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseDuration();\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = BigInt(object.seconds.toString());\n        }\n        message.nanos = object.nanos ?? 0;\n        return message;\n    },\n};\n//# sourceMappingURL=duration.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Timestamp = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst binary_1 = require(\"../../binary\");\nconst helpers_1 = require(\"../../helpers\");\nexports.protobufPackage = \"google.protobuf\";\nfunction createBaseTimestamp() {\n    return {\n        seconds: BigInt(0),\n        nanos: 0,\n    };\n}\nexports.Timestamp = {\n    typeUrl: \"/google.protobuf.Timestamp\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.seconds !== BigInt(0)) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTimestamp();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = reader.int64();\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTimestamp();\n        if ((0, helpers_1.isSet)(object.seconds))\n            obj.seconds = BigInt(object.seconds.toString());\n        if ((0, helpers_1.isSet)(object.nanos))\n            obj.nanos = Number(object.nanos);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = (message.seconds || BigInt(0)).toString());\n        message.nanos !== undefined && (obj.nanos = Math.round(message.nanos));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTimestamp();\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = BigInt(object.seconds.toString());\n        }\n        message.nanos = object.nanos ?? 0;\n        return message;\n    },\n};\n//# sourceMappingURL=timestamp.js.map","\"use strict\";\n/* eslint-disable */\n/**\n * This file and any referenced files were automatically generated by @cosmology/telescope@1.0.7\n * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain\n * and run the transpile command or yarn proto command to regenerate this bundle.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromJsonTimestamp = exports.fromTimestamp = exports.toTimestamp = exports.setPaginationParams = exports.isObject = exports.isSet = exports.fromDuration = exports.toDuration = exports.omitDefault = exports.base64FromBytes = exports.bytesFromBase64 = void 0;\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nexports.bytesFromBase64 = bytesFromBase64;\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    arr.forEach((byte) => {\n        bin.push(String.fromCharCode(byte));\n    });\n    return btoa(bin.join(\"\"));\n}\nexports.base64FromBytes = base64FromBytes;\nfunction omitDefault(input) {\n    if (typeof input === \"string\") {\n        return input === \"\" ? undefined : input;\n    }\n    if (typeof input === \"number\") {\n        return input === 0 ? undefined : input;\n    }\n    if (typeof input === \"bigint\") {\n        return input === BigInt(0) ? undefined : input;\n    }\n    throw new Error(`Got unsupported type ${typeof input}`);\n}\nexports.omitDefault = omitDefault;\nfunction toDuration(duration) {\n    return {\n        seconds: BigInt(Math.floor(parseInt(duration) / 1000000000)),\n        nanos: parseInt(duration) % 1000000000,\n    };\n}\nexports.toDuration = toDuration;\nfunction fromDuration(duration) {\n    return (parseInt(duration.seconds.toString()) * 1000000000 + duration.nanos).toString();\n}\nexports.fromDuration = fromDuration;\nfunction isSet(value) {\n    return value !== null && value !== undefined;\n}\nexports.isSet = isSet;\nfunction isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\nexports.isObject = isObject;\nconst setPaginationParams = (options, pagination) => {\n    if (!pagination) {\n        return options;\n    }\n    if (typeof pagination?.countTotal !== \"undefined\") {\n        options.params[\"pagination.count_total\"] = pagination.countTotal;\n    }\n    if (typeof pagination?.key !== \"undefined\") {\n        // String to Uint8Array\n        // let uint8arr = new Uint8Array(Buffer.from(data,'base64'));\n        // Uint8Array to String\n        options.params[\"pagination.key\"] = Buffer.from(pagination.key).toString(\"base64\");\n    }\n    if (typeof pagination?.limit !== \"undefined\") {\n        options.params[\"pagination.limit\"] = pagination.limit.toString();\n    }\n    if (typeof pagination?.offset !== \"undefined\") {\n        options.params[\"pagination.offset\"] = pagination.offset.toString();\n    }\n    if (typeof pagination?.reverse !== \"undefined\") {\n        options.params[\"pagination.reverse\"] = pagination.reverse;\n    }\n    return options;\n};\nexports.setPaginationParams = setPaginationParams;\nfunction toTimestamp(date) {\n    const seconds = numberToLong(date.getTime() / 1000);\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return {\n        seconds,\n        nanos,\n    };\n}\nexports.toTimestamp = toTimestamp;\nfunction fromTimestamp(t) {\n    let millis = Number(t.seconds) * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nexports.fromTimestamp = fromTimestamp;\nconst timestampFromJSON = (object) => {\n    return {\n        seconds: isSet(object.seconds) ? BigInt(object.seconds.toString()) : BigInt(0),\n        nanos: isSet(object.nanos) ? Number(object.nanos) : 0,\n    };\n};\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return toTimestamp(o);\n    }\n    else if (typeof o === \"string\") {\n        return toTimestamp(new Date(o));\n    }\n    else {\n        return timestampFromJSON(o);\n    }\n}\nexports.fromJsonTimestamp = fromJsonTimestamp;\nfunction numberToLong(number) {\n    return BigInt(Math.trunc(number));\n}\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QueryEscrowAddressResponse = exports.QueryEscrowAddressRequest = exports.QueryDenomHashResponse = exports.QueryDenomHashRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QueryDenomTracesResponse = exports.QueryDenomTracesRequest = exports.QueryDenomTraceResponse = exports.QueryDenomTraceRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst pagination_1 = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nconst transfer_1 = require(\"./transfer\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.applications.transfer.v1\";\nfunction createBaseQueryDenomTraceRequest() {\n    return {\n        hash: \"\",\n    };\n}\nexports.QueryDenomTraceRequest = {\n    typeUrl: \"/ibc.applications.transfer.v1.QueryDenomTraceRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.hash !== \"\") {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDenomTraceRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDenomTraceRequest();\n        if ((0, helpers_1.isSet)(object.hash))\n            obj.hash = String(object.hash);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDenomTraceRequest();\n        message.hash = object.hash ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryDenomTraceResponse() {\n    return {\n        denomTrace: undefined,\n    };\n}\nexports.QueryDenomTraceResponse = {\n    typeUrl: \"/ibc.applications.transfer.v1.QueryDenomTraceResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.denomTrace !== undefined) {\n            transfer_1.DenomTrace.encode(message.denomTrace, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDenomTraceResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomTrace = transfer_1.DenomTrace.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDenomTraceResponse();\n        if ((0, helpers_1.isSet)(object.denomTrace))\n            obj.denomTrace = transfer_1.DenomTrace.fromJSON(object.denomTrace);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomTrace !== undefined &&\n            (obj.denomTrace = message.denomTrace ? transfer_1.DenomTrace.toJSON(message.denomTrace) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDenomTraceResponse();\n        if (object.denomTrace !== undefined && object.denomTrace !== null) {\n            message.denomTrace = transfer_1.DenomTrace.fromPartial(object.denomTrace);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDenomTracesRequest() {\n    return {\n        pagination: undefined,\n    };\n}\nexports.QueryDenomTracesRequest = {\n    typeUrl: \"/ibc.applications.transfer.v1.QueryDenomTracesRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDenomTracesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDenomTracesRequest();\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDenomTracesRequest();\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDenomTracesResponse() {\n    return {\n        denomTraces: [],\n        pagination: undefined,\n    };\n}\nexports.QueryDenomTracesResponse = {\n    typeUrl: \"/ibc.applications.transfer.v1.QueryDenomTracesResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.denomTraces) {\n            transfer_1.DenomTrace.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDenomTracesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomTraces.push(transfer_1.DenomTrace.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDenomTracesResponse();\n        if (Array.isArray(object?.denomTraces))\n            obj.denomTraces = object.denomTraces.map((e) => transfer_1.DenomTrace.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denomTraces) {\n            obj.denomTraces = message.denomTraces.map((e) => (e ? transfer_1.DenomTrace.toJSON(e) : undefined));\n        }\n        else {\n            obj.denomTraces = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDenomTracesResponse();\n        message.denomTraces = object.denomTraces?.map((e) => transfer_1.DenomTrace.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryParamsRequest() {\n    return {};\n}\nexports.QueryParamsRequest = {\n    typeUrl: \"/ibc.applications.transfer.v1.QueryParamsRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryParamsRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryParamsRequest();\n        return message;\n    },\n};\nfunction createBaseQueryParamsResponse() {\n    return {\n        params: undefined,\n    };\n}\nexports.QueryParamsResponse = {\n    typeUrl: \"/ibc.applications.transfer.v1.QueryParamsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.params !== undefined) {\n            transfer_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = transfer_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryParamsResponse();\n        if ((0, helpers_1.isSet)(object.params))\n            obj.params = transfer_1.Params.fromJSON(object.params);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? transfer_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryParamsResponse();\n        if (object.params !== undefined && object.params !== null) {\n            message.params = transfer_1.Params.fromPartial(object.params);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryDenomHashRequest() {\n    return {\n        trace: \"\",\n    };\n}\nexports.QueryDenomHashRequest = {\n    typeUrl: \"/ibc.applications.transfer.v1.QueryDenomHashRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.trace !== \"\") {\n            writer.uint32(10).string(message.trace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDenomHashRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.trace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDenomHashRequest();\n        if ((0, helpers_1.isSet)(object.trace))\n            obj.trace = String(object.trace);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.trace !== undefined && (obj.trace = message.trace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDenomHashRequest();\n        message.trace = object.trace ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryDenomHashResponse() {\n    return {\n        hash: \"\",\n    };\n}\nexports.QueryDenomHashResponse = {\n    typeUrl: \"/ibc.applications.transfer.v1.QueryDenomHashResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.hash !== \"\") {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryDenomHashResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryDenomHashResponse();\n        if ((0, helpers_1.isSet)(object.hash))\n            obj.hash = String(object.hash);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryDenomHashResponse();\n        message.hash = object.hash ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryEscrowAddressRequest() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n    };\n}\nexports.QueryEscrowAddressRequest = {\n    typeUrl: \"/ibc.applications.transfer.v1.QueryEscrowAddressRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryEscrowAddressRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryEscrowAddressRequest();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryEscrowAddressRequest();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryEscrowAddressResponse() {\n    return {\n        escrowAddress: \"\",\n    };\n}\nexports.QueryEscrowAddressResponse = {\n    typeUrl: \"/ibc.applications.transfer.v1.QueryEscrowAddressResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.escrowAddress !== \"\") {\n            writer.uint32(10).string(message.escrowAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryEscrowAddressResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.escrowAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryEscrowAddressResponse();\n        if ((0, helpers_1.isSet)(object.escrowAddress))\n            obj.escrowAddress = String(object.escrowAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.escrowAddress !== undefined && (obj.escrowAddress = message.escrowAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryEscrowAddressResponse();\n        message.escrowAddress = object.escrowAddress ?? \"\";\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.DenomTrace = this.DenomTrace.bind(this);\n        this.DenomTraces = this.DenomTraces.bind(this);\n        this.Params = this.Params.bind(this);\n        this.DenomHash = this.DenomHash.bind(this);\n        this.EscrowAddress = this.EscrowAddress.bind(this);\n    }\n    DenomTrace(request) {\n        const data = exports.QueryDenomTraceRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Query\", \"DenomTrace\", data);\n        return promise.then((data) => exports.QueryDenomTraceResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    DenomTraces(request = {\n        pagination: pagination_1.PageRequest.fromPartial({}),\n    }) {\n        const data = exports.QueryDenomTracesRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Query\", \"DenomTraces\", data);\n        return promise.then((data) => exports.QueryDenomTracesResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Params(request = {}) {\n        const data = exports.QueryParamsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Query\", \"Params\", data);\n        return promise.then((data) => exports.QueryParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    DenomHash(request) {\n        const data = exports.QueryDenomHashRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Query\", \"DenomHash\", data);\n        return promise.then((data) => exports.QueryDenomHashResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    EscrowAddress(request) {\n        const data = exports.QueryEscrowAddressRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Query\", \"EscrowAddress\", data);\n        return promise.then((data) => exports.QueryEscrowAddressResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\n//# sourceMappingURL=query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Params = exports.DenomTrace = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.applications.transfer.v1\";\nfunction createBaseDenomTrace() {\n    return {\n        path: \"\",\n        baseDenom: \"\",\n    };\n}\nexports.DenomTrace = {\n    typeUrl: \"/ibc.applications.transfer.v1.DenomTrace\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.path !== \"\") {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDenomTrace();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseDenomTrace();\n        if ((0, helpers_1.isSet)(object.path))\n            obj.path = String(object.path);\n        if ((0, helpers_1.isSet)(object.baseDenom))\n            obj.baseDenom = String(object.baseDenom);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseDenomTrace();\n        message.path = object.path ?? \"\";\n        message.baseDenom = object.baseDenom ?? \"\";\n        return message;\n    },\n};\nfunction createBaseParams() {\n    return {\n        sendEnabled: false,\n        receiveEnabled: false,\n    };\n}\nexports.Params = {\n    typeUrl: \"/ibc.applications.transfer.v1.Params\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseParams();\n        if ((0, helpers_1.isSet)(object.sendEnabled))\n            obj.sendEnabled = Boolean(object.sendEnabled);\n        if ((0, helpers_1.isSet)(object.receiveEnabled))\n            obj.receiveEnabled = Boolean(object.receiveEnabled);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined && (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseParams();\n        message.sendEnabled = object.sendEnabled ?? false;\n        message.receiveEnabled = object.receiveEnabled ?? false;\n        return message;\n    },\n};\n//# sourceMappingURL=transfer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgTransferResponse = exports.MsgTransfer = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst coin_1 = require(\"../../../../cosmos/base/v1beta1/coin\");\nconst client_1 = require(\"../../../core/client/v1/client\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.applications.transfer.v1\";\nfunction createBaseMsgTransfer() {\n    return {\n        sourcePort: \"\",\n        sourceChannel: \"\",\n        token: coin_1.Coin.fromPartial({}),\n        sender: \"\",\n        receiver: \"\",\n        timeoutHeight: client_1.Height.fromPartial({}),\n        timeoutTimestamp: BigInt(0),\n        memo: \"\",\n    };\n}\nexports.MsgTransfer = {\n    typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.sourcePort !== \"\") {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            coin_1.Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            client_1.Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== BigInt(0)) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        if (message.memo !== \"\") {\n            writer.uint32(66).string(message.memo);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgTransfer();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = reader.uint64();\n                    break;\n                case 8:\n                    message.memo = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgTransfer();\n        if ((0, helpers_1.isSet)(object.sourcePort))\n            obj.sourcePort = String(object.sourcePort);\n        if ((0, helpers_1.isSet)(object.sourceChannel))\n            obj.sourceChannel = String(object.sourceChannel);\n        if ((0, helpers_1.isSet)(object.token))\n            obj.token = coin_1.Coin.fromJSON(object.token);\n        if ((0, helpers_1.isSet)(object.sender))\n            obj.sender = String(object.sender);\n        if ((0, helpers_1.isSet)(object.receiver))\n            obj.receiver = String(object.receiver);\n        if ((0, helpers_1.isSet)(object.timeoutHeight))\n            obj.timeoutHeight = client_1.Height.fromJSON(object.timeoutHeight);\n        if ((0, helpers_1.isSet)(object.timeoutTimestamp))\n            obj.timeoutTimestamp = BigInt(object.timeoutTimestamp.toString());\n        if ((0, helpers_1.isSet)(object.memo))\n            obj.memo = String(object.memo);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined && (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined && (obj.token = message.token ? coin_1.Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight ? client_1.Height.toJSON(message.timeoutHeight) : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = (message.timeoutTimestamp || BigInt(0)).toString());\n        message.memo !== undefined && (obj.memo = message.memo);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgTransfer();\n        message.sourcePort = object.sourcePort ?? \"\";\n        message.sourceChannel = object.sourceChannel ?? \"\";\n        if (object.token !== undefined && object.token !== null) {\n            message.token = coin_1.Coin.fromPartial(object.token);\n        }\n        message.sender = object.sender ?? \"\";\n        message.receiver = object.receiver ?? \"\";\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = client_1.Height.fromPartial(object.timeoutHeight);\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = BigInt(object.timeoutTimestamp.toString());\n        }\n        message.memo = object.memo ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgTransferResponse() {\n    return {\n        sequence: BigInt(0),\n    };\n}\nexports.MsgTransferResponse = {\n    typeUrl: \"/ibc.applications.transfer.v1.MsgTransferResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.sequence !== BigInt(0)) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgTransferResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgTransferResponse();\n        if ((0, helpers_1.isSet)(object.sequence))\n            obj.sequence = BigInt(object.sequence.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgTransferResponse();\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = BigInt(object.sequence.toString());\n        }\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Transfer = this.Transfer.bind(this);\n    }\n    Transfer(request) {\n        const data = exports.MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Msg\", \"Transfer\", data);\n        return promise.then((data) => exports.MsgTransferResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QueryNextSequenceReceiveResponse = exports.QueryNextSequenceReceiveRequest = exports.QueryUnreceivedAcksResponse = exports.QueryUnreceivedAcksRequest = exports.QueryUnreceivedPacketsResponse = exports.QueryUnreceivedPacketsRequest = exports.QueryPacketAcknowledgementsResponse = exports.QueryPacketAcknowledgementsRequest = exports.QueryPacketAcknowledgementResponse = exports.QueryPacketAcknowledgementRequest = exports.QueryPacketReceiptResponse = exports.QueryPacketReceiptRequest = exports.QueryPacketCommitmentsResponse = exports.QueryPacketCommitmentsRequest = exports.QueryPacketCommitmentResponse = exports.QueryPacketCommitmentRequest = exports.QueryChannelConsensusStateResponse = exports.QueryChannelConsensusStateRequest = exports.QueryChannelClientStateResponse = exports.QueryChannelClientStateRequest = exports.QueryConnectionChannelsResponse = exports.QueryConnectionChannelsRequest = exports.QueryChannelsResponse = exports.QueryChannelsRequest = exports.QueryChannelResponse = exports.QueryChannelRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst pagination_1 = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nconst channel_1 = require(\"./channel\");\nconst client_1 = require(\"../../client/v1/client\");\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.core.channel.v1\";\nfunction createBaseQueryChannelRequest() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n    };\n}\nexports.QueryChannelRequest = {\n    typeUrl: \"/ibc.core.channel.v1.QueryChannelRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryChannelRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryChannelRequest();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryChannelRequest();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryChannelResponse() {\n    return {\n        channel: undefined,\n        proof: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryChannelResponse = {\n    typeUrl: \"/ibc.core.channel.v1.QueryChannelResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.channel !== undefined) {\n            channel_1.Channel.encode(message.channel, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(18).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryChannelResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channel = channel_1.Channel.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proof = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryChannelResponse();\n        if ((0, helpers_1.isSet)(object.channel))\n            obj.channel = channel_1.Channel.fromJSON(object.channel);\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.channel !== undefined &&\n            (obj.channel = message.channel ? channel_1.Channel.toJSON(message.channel) : undefined);\n        message.proof !== undefined &&\n            (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryChannelResponse();\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = channel_1.Channel.fromPartial(object.channel);\n        }\n        message.proof = object.proof ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryChannelsRequest() {\n    return {\n        pagination: undefined,\n    };\n}\nexports.QueryChannelsRequest = {\n    typeUrl: \"/ibc.core.channel.v1.QueryChannelsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryChannelsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryChannelsRequest();\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryChannelsRequest();\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryChannelsResponse() {\n    return {\n        channels: [],\n        pagination: undefined,\n        height: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryChannelsResponse = {\n    typeUrl: \"/ibc.core.channel.v1.QueryChannelsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.channels) {\n            channel_1.IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== undefined) {\n            client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryChannelsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(channel_1.IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryChannelsResponse();\n        if (Array.isArray(object?.channels))\n            obj.channels = object.channels.map((e) => channel_1.IdentifiedChannel.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = client_1.Height.fromJSON(object.height);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => (e ? channel_1.IdentifiedChannel.toJSON(e) : undefined));\n        }\n        else {\n            obj.channels = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryChannelsResponse();\n        message.channels = object.channels?.map((e) => channel_1.IdentifiedChannel.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = client_1.Height.fromPartial(object.height);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryConnectionChannelsRequest() {\n    return {\n        connection: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryConnectionChannelsRequest = {\n    typeUrl: \"/ibc.core.channel.v1.QueryConnectionChannelsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.connection !== \"\") {\n            writer.uint32(10).string(message.connection);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConnectionChannelsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connection = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConnectionChannelsRequest();\n        if ((0, helpers_1.isSet)(object.connection))\n            obj.connection = String(object.connection);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connection !== undefined && (obj.connection = message.connection);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConnectionChannelsRequest();\n        message.connection = object.connection ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryConnectionChannelsResponse() {\n    return {\n        channels: [],\n        pagination: undefined,\n        height: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryConnectionChannelsResponse = {\n    typeUrl: \"/ibc.core.channel.v1.QueryConnectionChannelsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.channels) {\n            channel_1.IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== undefined) {\n            client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConnectionChannelsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(channel_1.IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConnectionChannelsResponse();\n        if (Array.isArray(object?.channels))\n            obj.channels = object.channels.map((e) => channel_1.IdentifiedChannel.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = client_1.Height.fromJSON(object.height);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => (e ? channel_1.IdentifiedChannel.toJSON(e) : undefined));\n        }\n        else {\n            obj.channels = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConnectionChannelsResponse();\n        message.channels = object.channels?.map((e) => channel_1.IdentifiedChannel.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = client_1.Height.fromPartial(object.height);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryChannelClientStateRequest() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n    };\n}\nexports.QueryChannelClientStateRequest = {\n    typeUrl: \"/ibc.core.channel.v1.QueryChannelClientStateRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryChannelClientStateRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryChannelClientStateRequest();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryChannelClientStateRequest();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryChannelClientStateResponse() {\n    return {\n        identifiedClientState: undefined,\n        proof: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryChannelClientStateResponse = {\n    typeUrl: \"/ibc.core.channel.v1.QueryChannelClientStateResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.identifiedClientState !== undefined) {\n            client_1.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(18).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryChannelClientStateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifiedClientState = client_1.IdentifiedClientState.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proof = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryChannelClientStateResponse();\n        if ((0, helpers_1.isSet)(object.identifiedClientState))\n            obj.identifiedClientState = client_1.IdentifiedClientState.fromJSON(object.identifiedClientState);\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifiedClientState !== undefined &&\n            (obj.identifiedClientState = message.identifiedClientState\n                ? client_1.IdentifiedClientState.toJSON(message.identifiedClientState)\n                : undefined);\n        message.proof !== undefined &&\n            (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryChannelClientStateResponse();\n        if (object.identifiedClientState !== undefined && object.identifiedClientState !== null) {\n            message.identifiedClientState = client_1.IdentifiedClientState.fromPartial(object.identifiedClientState);\n        }\n        message.proof = object.proof ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryChannelConsensusStateRequest() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n        revisionNumber: BigInt(0),\n        revisionHeight: BigInt(0),\n    };\n}\nexports.QueryChannelConsensusStateRequest = {\n    typeUrl: \"/ibc.core.channel.v1.QueryChannelConsensusStateRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.revisionNumber !== BigInt(0)) {\n            writer.uint32(24).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== BigInt(0)) {\n            writer.uint32(32).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryChannelConsensusStateRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.revisionNumber = reader.uint64();\n                    break;\n                case 4:\n                    message.revisionHeight = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryChannelConsensusStateRequest();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        if ((0, helpers_1.isSet)(object.revisionNumber))\n            obj.revisionNumber = BigInt(object.revisionNumber.toString());\n        if ((0, helpers_1.isSet)(object.revisionHeight))\n            obj.revisionHeight = BigInt(object.revisionHeight.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = (message.revisionNumber || BigInt(0)).toString());\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = (message.revisionHeight || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryChannelConsensusStateRequest();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = BigInt(object.revisionNumber.toString());\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = BigInt(object.revisionHeight.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseQueryChannelConsensusStateResponse() {\n    return {\n        consensusState: undefined,\n        clientId: \"\",\n        proof: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryChannelConsensusStateResponse = {\n    typeUrl: \"/ibc.core.channel.v1.QueryChannelConsensusStateResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.consensusState !== undefined) {\n            any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(26).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryChannelConsensusStateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.proof = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryChannelConsensusStateResponse();\n        if ((0, helpers_1.isSet)(object.consensusState))\n            obj.consensusState = any_1.Any.fromJSON(object.consensusState);\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : undefined);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.proof !== undefined &&\n            (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryChannelConsensusStateResponse();\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = any_1.Any.fromPartial(object.consensusState);\n        }\n        message.clientId = object.clientId ?? \"\";\n        message.proof = object.proof ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryPacketCommitmentRequest() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n        sequence: BigInt(0),\n    };\n}\nexports.QueryPacketCommitmentRequest = {\n    typeUrl: \"/ibc.core.channel.v1.QueryPacketCommitmentRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== BigInt(0)) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryPacketCommitmentRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryPacketCommitmentRequest();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        if ((0, helpers_1.isSet)(object.sequence))\n            obj.sequence = BigInt(object.sequence.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryPacketCommitmentRequest();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = BigInt(object.sequence.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseQueryPacketCommitmentResponse() {\n    return {\n        commitment: new Uint8Array(),\n        proof: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryPacketCommitmentResponse = {\n    typeUrl: \"/ibc.core.channel.v1.QueryPacketCommitmentResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.commitment.length !== 0) {\n            writer.uint32(10).bytes(message.commitment);\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(18).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryPacketCommitmentResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commitment = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryPacketCommitmentResponse();\n        if ((0, helpers_1.isSet)(object.commitment))\n            obj.commitment = (0, helpers_1.bytesFromBase64)(object.commitment);\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commitment !== undefined &&\n            (obj.commitment = (0, helpers_1.base64FromBytes)(message.commitment !== undefined ? message.commitment : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryPacketCommitmentResponse();\n        message.commitment = object.commitment ?? new Uint8Array();\n        message.proof = object.proof ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryPacketCommitmentsRequest() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryPacketCommitmentsRequest = {\n    typeUrl: \"/ibc.core.channel.v1.QueryPacketCommitmentsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryPacketCommitmentsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryPacketCommitmentsRequest();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryPacketCommitmentsRequest();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryPacketCommitmentsResponse() {\n    return {\n        commitments: [],\n        pagination: undefined,\n        height: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryPacketCommitmentsResponse = {\n    typeUrl: \"/ibc.core.channel.v1.QueryPacketCommitmentsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.commitments) {\n            channel_1.PacketState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== undefined) {\n            client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryPacketCommitmentsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commitments.push(channel_1.PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryPacketCommitmentsResponse();\n        if (Array.isArray(object?.commitments))\n            obj.commitments = object.commitments.map((e) => channel_1.PacketState.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = client_1.Height.fromJSON(object.height);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => (e ? channel_1.PacketState.toJSON(e) : undefined));\n        }\n        else {\n            obj.commitments = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryPacketCommitmentsResponse();\n        message.commitments = object.commitments?.map((e) => channel_1.PacketState.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = client_1.Height.fromPartial(object.height);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryPacketReceiptRequest() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n        sequence: BigInt(0),\n    };\n}\nexports.QueryPacketReceiptRequest = {\n    typeUrl: \"/ibc.core.channel.v1.QueryPacketReceiptRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== BigInt(0)) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryPacketReceiptRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryPacketReceiptRequest();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        if ((0, helpers_1.isSet)(object.sequence))\n            obj.sequence = BigInt(object.sequence.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryPacketReceiptRequest();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = BigInt(object.sequence.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseQueryPacketReceiptResponse() {\n    return {\n        received: false,\n        proof: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryPacketReceiptResponse = {\n    typeUrl: \"/ibc.core.channel.v1.QueryPacketReceiptResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.received === true) {\n            writer.uint32(16).bool(message.received);\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(26).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryPacketReceiptResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.received = reader.bool();\n                    break;\n                case 3:\n                    message.proof = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryPacketReceiptResponse();\n        if ((0, helpers_1.isSet)(object.received))\n            obj.received = Boolean(object.received);\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.received !== undefined && (obj.received = message.received);\n        message.proof !== undefined &&\n            (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryPacketReceiptResponse();\n        message.received = object.received ?? false;\n        message.proof = object.proof ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryPacketAcknowledgementRequest() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n        sequence: BigInt(0),\n    };\n}\nexports.QueryPacketAcknowledgementRequest = {\n    typeUrl: \"/ibc.core.channel.v1.QueryPacketAcknowledgementRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== BigInt(0)) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryPacketAcknowledgementRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryPacketAcknowledgementRequest();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        if ((0, helpers_1.isSet)(object.sequence))\n            obj.sequence = BigInt(object.sequence.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryPacketAcknowledgementRequest();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = BigInt(object.sequence.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseQueryPacketAcknowledgementResponse() {\n    return {\n        acknowledgement: new Uint8Array(),\n        proof: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryPacketAcknowledgementResponse = {\n    typeUrl: \"/ibc.core.channel.v1.QueryPacketAcknowledgementResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(10).bytes(message.acknowledgement);\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(18).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryPacketAcknowledgementResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryPacketAcknowledgementResponse();\n        if ((0, helpers_1.isSet)(object.acknowledgement))\n            obj.acknowledgement = (0, helpers_1.bytesFromBase64)(object.acknowledgement);\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = (0, helpers_1.base64FromBytes)(message.acknowledgement !== undefined ? message.acknowledgement : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryPacketAcknowledgementResponse();\n        message.acknowledgement = object.acknowledgement ?? new Uint8Array();\n        message.proof = object.proof ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryPacketAcknowledgementsRequest() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n        pagination: undefined,\n        packetCommitmentSequences: [],\n    };\n}\nexports.QueryPacketAcknowledgementsRequest = {\n    typeUrl: \"/ibc.core.channel.v1.QueryPacketAcknowledgementsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.packetCommitmentSequences) {\n            writer.uint64(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryPacketAcknowledgementsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.packetCommitmentSequences.push(reader.uint64());\n                        }\n                    }\n                    else {\n                        message.packetCommitmentSequences.push(reader.uint64());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryPacketAcknowledgementsRequest();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        if (Array.isArray(object?.packetCommitmentSequences))\n            obj.packetCommitmentSequences = object.packetCommitmentSequences.map((e) => BigInt(e.toString()));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        if (message.packetCommitmentSequences) {\n            obj.packetCommitmentSequences = message.packetCommitmentSequences.map((e) => (e || BigInt(0)).toString());\n        }\n        else {\n            obj.packetCommitmentSequences = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryPacketAcknowledgementsRequest();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        message.packetCommitmentSequences =\n            object.packetCommitmentSequences?.map((e) => BigInt(e.toString())) || [];\n        return message;\n    },\n};\nfunction createBaseQueryPacketAcknowledgementsResponse() {\n    return {\n        acknowledgements: [],\n        pagination: undefined,\n        height: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryPacketAcknowledgementsResponse = {\n    typeUrl: \"/ibc.core.channel.v1.QueryPacketAcknowledgementsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.acknowledgements) {\n            channel_1.PacketState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== undefined) {\n            client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryPacketAcknowledgementsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.acknowledgements.push(channel_1.PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryPacketAcknowledgementsResponse();\n        if (Array.isArray(object?.acknowledgements))\n            obj.acknowledgements = object.acknowledgements.map((e) => channel_1.PacketState.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = client_1.Height.fromJSON(object.height);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => (e ? channel_1.PacketState.toJSON(e) : undefined));\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryPacketAcknowledgementsResponse();\n        message.acknowledgements = object.acknowledgements?.map((e) => channel_1.PacketState.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = client_1.Height.fromPartial(object.height);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryUnreceivedPacketsRequest() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n        packetCommitmentSequences: [],\n    };\n}\nexports.QueryUnreceivedPacketsRequest = {\n    typeUrl: \"/ibc.core.channel.v1.QueryUnreceivedPacketsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        writer.uint32(26).fork();\n        for (const v of message.packetCommitmentSequences) {\n            writer.uint64(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryUnreceivedPacketsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.packetCommitmentSequences.push(reader.uint64());\n                        }\n                    }\n                    else {\n                        message.packetCommitmentSequences.push(reader.uint64());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryUnreceivedPacketsRequest();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        if (Array.isArray(object?.packetCommitmentSequences))\n            obj.packetCommitmentSequences = object.packetCommitmentSequences.map((e) => BigInt(e.toString()));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        if (message.packetCommitmentSequences) {\n            obj.packetCommitmentSequences = message.packetCommitmentSequences.map((e) => (e || BigInt(0)).toString());\n        }\n        else {\n            obj.packetCommitmentSequences = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryUnreceivedPacketsRequest();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        message.packetCommitmentSequences =\n            object.packetCommitmentSequences?.map((e) => BigInt(e.toString())) || [];\n        return message;\n    },\n};\nfunction createBaseQueryUnreceivedPacketsResponse() {\n    return {\n        sequences: [],\n        height: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryUnreceivedPacketsResponse = {\n    typeUrl: \"/ibc.core.channel.v1.QueryUnreceivedPacketsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.sequences) {\n            writer.uint64(v);\n        }\n        writer.ldelim();\n        if (message.height !== undefined) {\n            client_1.Height.encode(message.height, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryUnreceivedPacketsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.sequences.push(reader.uint64());\n                        }\n                    }\n                    else {\n                        message.sequences.push(reader.uint64());\n                    }\n                    break;\n                case 2:\n                    message.height = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryUnreceivedPacketsResponse();\n        if (Array.isArray(object?.sequences))\n            obj.sequences = object.sequences.map((e) => BigInt(e.toString()));\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = client_1.Height.fromJSON(object.height);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sequences) {\n            obj.sequences = message.sequences.map((e) => (e || BigInt(0)).toString());\n        }\n        else {\n            obj.sequences = [];\n        }\n        message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryUnreceivedPacketsResponse();\n        message.sequences = object.sequences?.map((e) => BigInt(e.toString())) || [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = client_1.Height.fromPartial(object.height);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryUnreceivedAcksRequest() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n        packetAckSequences: [],\n    };\n}\nexports.QueryUnreceivedAcksRequest = {\n    typeUrl: \"/ibc.core.channel.v1.QueryUnreceivedAcksRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        writer.uint32(26).fork();\n        for (const v of message.packetAckSequences) {\n            writer.uint64(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryUnreceivedAcksRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.packetAckSequences.push(reader.uint64());\n                        }\n                    }\n                    else {\n                        message.packetAckSequences.push(reader.uint64());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryUnreceivedAcksRequest();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        if (Array.isArray(object?.packetAckSequences))\n            obj.packetAckSequences = object.packetAckSequences.map((e) => BigInt(e.toString()));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        if (message.packetAckSequences) {\n            obj.packetAckSequences = message.packetAckSequences.map((e) => (e || BigInt(0)).toString());\n        }\n        else {\n            obj.packetAckSequences = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryUnreceivedAcksRequest();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        message.packetAckSequences = object.packetAckSequences?.map((e) => BigInt(e.toString())) || [];\n        return message;\n    },\n};\nfunction createBaseQueryUnreceivedAcksResponse() {\n    return {\n        sequences: [],\n        height: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryUnreceivedAcksResponse = {\n    typeUrl: \"/ibc.core.channel.v1.QueryUnreceivedAcksResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.sequences) {\n            writer.uint64(v);\n        }\n        writer.ldelim();\n        if (message.height !== undefined) {\n            client_1.Height.encode(message.height, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryUnreceivedAcksResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.sequences.push(reader.uint64());\n                        }\n                    }\n                    else {\n                        message.sequences.push(reader.uint64());\n                    }\n                    break;\n                case 2:\n                    message.height = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryUnreceivedAcksResponse();\n        if (Array.isArray(object?.sequences))\n            obj.sequences = object.sequences.map((e) => BigInt(e.toString()));\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = client_1.Height.fromJSON(object.height);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sequences) {\n            obj.sequences = message.sequences.map((e) => (e || BigInt(0)).toString());\n        }\n        else {\n            obj.sequences = [];\n        }\n        message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryUnreceivedAcksResponse();\n        message.sequences = object.sequences?.map((e) => BigInt(e.toString())) || [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = client_1.Height.fromPartial(object.height);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryNextSequenceReceiveRequest() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n    };\n}\nexports.QueryNextSequenceReceiveRequest = {\n    typeUrl: \"/ibc.core.channel.v1.QueryNextSequenceReceiveRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryNextSequenceReceiveRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryNextSequenceReceiveRequest();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryNextSequenceReceiveRequest();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryNextSequenceReceiveResponse() {\n    return {\n        nextSequenceReceive: BigInt(0),\n        proof: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryNextSequenceReceiveResponse = {\n    typeUrl: \"/ibc.core.channel.v1.QueryNextSequenceReceiveResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.nextSequenceReceive !== BigInt(0)) {\n            writer.uint32(8).uint64(message.nextSequenceReceive);\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(18).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryNextSequenceReceiveResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextSequenceReceive = reader.uint64();\n                    break;\n                case 2:\n                    message.proof = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryNextSequenceReceiveResponse();\n        if ((0, helpers_1.isSet)(object.nextSequenceReceive))\n            obj.nextSequenceReceive = BigInt(object.nextSequenceReceive.toString());\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextSequenceReceive !== undefined &&\n            (obj.nextSequenceReceive = (message.nextSequenceReceive || BigInt(0)).toString());\n        message.proof !== undefined &&\n            (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryNextSequenceReceiveResponse();\n        if (object.nextSequenceReceive !== undefined && object.nextSequenceReceive !== null) {\n            message.nextSequenceReceive = BigInt(object.nextSequenceReceive.toString());\n        }\n        message.proof = object.proof ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Channel = this.Channel.bind(this);\n        this.Channels = this.Channels.bind(this);\n        this.ConnectionChannels = this.ConnectionChannels.bind(this);\n        this.ChannelClientState = this.ChannelClientState.bind(this);\n        this.ChannelConsensusState = this.ChannelConsensusState.bind(this);\n        this.PacketCommitment = this.PacketCommitment.bind(this);\n        this.PacketCommitments = this.PacketCommitments.bind(this);\n        this.PacketReceipt = this.PacketReceipt.bind(this);\n        this.PacketAcknowledgement = this.PacketAcknowledgement.bind(this);\n        this.PacketAcknowledgements = this.PacketAcknowledgements.bind(this);\n        this.UnreceivedPackets = this.UnreceivedPackets.bind(this);\n        this.UnreceivedAcks = this.UnreceivedAcks.bind(this);\n        this.NextSequenceReceive = this.NextSequenceReceive.bind(this);\n    }\n    Channel(request) {\n        const data = exports.QueryChannelRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"Channel\", data);\n        return promise.then((data) => exports.QueryChannelResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Channels(request = {\n        pagination: pagination_1.PageRequest.fromPartial({}),\n    }) {\n        const data = exports.QueryChannelsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"Channels\", data);\n        return promise.then((data) => exports.QueryChannelsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ConnectionChannels(request) {\n        const data = exports.QueryConnectionChannelsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"ConnectionChannels\", data);\n        return promise.then((data) => exports.QueryConnectionChannelsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ChannelClientState(request) {\n        const data = exports.QueryChannelClientStateRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"ChannelClientState\", data);\n        return promise.then((data) => exports.QueryChannelClientStateResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ChannelConsensusState(request) {\n        const data = exports.QueryChannelConsensusStateRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"ChannelConsensusState\", data);\n        return promise.then((data) => exports.QueryChannelConsensusStateResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    PacketCommitment(request) {\n        const data = exports.QueryPacketCommitmentRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"PacketCommitment\", data);\n        return promise.then((data) => exports.QueryPacketCommitmentResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    PacketCommitments(request) {\n        const data = exports.QueryPacketCommitmentsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"PacketCommitments\", data);\n        return promise.then((data) => exports.QueryPacketCommitmentsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    PacketReceipt(request) {\n        const data = exports.QueryPacketReceiptRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"PacketReceipt\", data);\n        return promise.then((data) => exports.QueryPacketReceiptResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    PacketAcknowledgement(request) {\n        const data = exports.QueryPacketAcknowledgementRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"PacketAcknowledgement\", data);\n        return promise.then((data) => exports.QueryPacketAcknowledgementResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    PacketAcknowledgements(request) {\n        const data = exports.QueryPacketAcknowledgementsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"PacketAcknowledgements\", data);\n        return promise.then((data) => exports.QueryPacketAcknowledgementsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UnreceivedPackets(request) {\n        const data = exports.QueryUnreceivedPacketsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"UnreceivedPackets\", data);\n        return promise.then((data) => exports.QueryUnreceivedPacketsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UnreceivedAcks(request) {\n        const data = exports.QueryUnreceivedAcksRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"UnreceivedAcks\", data);\n        return promise.then((data) => exports.QueryUnreceivedAcksResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    NextSequenceReceive(request) {\n        const data = exports.QueryNextSequenceReceiveRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"NextSequenceReceive\", data);\n        return promise.then((data) => exports.QueryNextSequenceReceiveResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\n//# sourceMappingURL=query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgAcknowledgementResponse = exports.MsgAcknowledgement = exports.MsgTimeoutOnCloseResponse = exports.MsgTimeoutOnClose = exports.MsgTimeoutResponse = exports.MsgTimeout = exports.MsgRecvPacketResponse = exports.MsgRecvPacket = exports.MsgChannelCloseConfirmResponse = exports.MsgChannelCloseConfirm = exports.MsgChannelCloseInitResponse = exports.MsgChannelCloseInit = exports.MsgChannelOpenConfirmResponse = exports.MsgChannelOpenConfirm = exports.MsgChannelOpenAckResponse = exports.MsgChannelOpenAck = exports.MsgChannelOpenTryResponse = exports.MsgChannelOpenTry = exports.MsgChannelOpenInitResponse = exports.MsgChannelOpenInit = exports.responseResultTypeToJSON = exports.responseResultTypeFromJSON = exports.ResponseResultType = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst channel_1 = require(\"./channel\");\nconst client_1 = require(\"../../client/v1/client\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.core.channel.v1\";\n/** ResponseResultType defines the possible outcomes of the execution of a message */\nvar ResponseResultType;\n(function (ResponseResultType) {\n    /** RESPONSE_RESULT_TYPE_UNSPECIFIED - Default zero value enumeration */\n    ResponseResultType[ResponseResultType[\"RESPONSE_RESULT_TYPE_UNSPECIFIED\"] = 0] = \"RESPONSE_RESULT_TYPE_UNSPECIFIED\";\n    /** RESPONSE_RESULT_TYPE_NOOP - The message did not call the IBC application callbacks (because, for example, the packet had already been relayed) */\n    ResponseResultType[ResponseResultType[\"RESPONSE_RESULT_TYPE_NOOP\"] = 1] = \"RESPONSE_RESULT_TYPE_NOOP\";\n    /** RESPONSE_RESULT_TYPE_SUCCESS - The message was executed successfully */\n    ResponseResultType[ResponseResultType[\"RESPONSE_RESULT_TYPE_SUCCESS\"] = 2] = \"RESPONSE_RESULT_TYPE_SUCCESS\";\n    ResponseResultType[ResponseResultType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseResultType || (exports.ResponseResultType = ResponseResultType = {}));\nfunction responseResultTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"RESPONSE_RESULT_TYPE_UNSPECIFIED\":\n            return ResponseResultType.RESPONSE_RESULT_TYPE_UNSPECIFIED;\n        case 1:\n        case \"RESPONSE_RESULT_TYPE_NOOP\":\n            return ResponseResultType.RESPONSE_RESULT_TYPE_NOOP;\n        case 2:\n        case \"RESPONSE_RESULT_TYPE_SUCCESS\":\n            return ResponseResultType.RESPONSE_RESULT_TYPE_SUCCESS;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseResultType.UNRECOGNIZED;\n    }\n}\nexports.responseResultTypeFromJSON = responseResultTypeFromJSON;\nfunction responseResultTypeToJSON(object) {\n    switch (object) {\n        case ResponseResultType.RESPONSE_RESULT_TYPE_UNSPECIFIED:\n            return \"RESPONSE_RESULT_TYPE_UNSPECIFIED\";\n        case ResponseResultType.RESPONSE_RESULT_TYPE_NOOP:\n            return \"RESPONSE_RESULT_TYPE_NOOP\";\n        case ResponseResultType.RESPONSE_RESULT_TYPE_SUCCESS:\n            return \"RESPONSE_RESULT_TYPE_SUCCESS\";\n        case ResponseResultType.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.responseResultTypeToJSON = responseResultTypeToJSON;\nfunction createBaseMsgChannelOpenInit() {\n    return {\n        portId: \"\",\n        channel: channel_1.Channel.fromPartial({}),\n        signer: \"\",\n    };\n}\nexports.MsgChannelOpenInit = {\n    typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            channel_1.Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgChannelOpenInit();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = channel_1.Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgChannelOpenInit();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channel))\n            obj.channel = channel_1.Channel.fromJSON(object.channel);\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel ? channel_1.Channel.toJSON(message.channel) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgChannelOpenInit();\n        message.portId = object.portId ?? \"\";\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = channel_1.Channel.fromPartial(object.channel);\n        }\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgChannelOpenInitResponse() {\n    return {\n        channelId: \"\",\n        version: \"\",\n    };\n}\nexports.MsgChannelOpenInitResponse = {\n    typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInitResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.channelId !== \"\") {\n            writer.uint32(10).string(message.channelId);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgChannelOpenInitResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channelId = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgChannelOpenInitResponse();\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        if ((0, helpers_1.isSet)(object.version))\n            obj.version = String(object.version);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgChannelOpenInitResponse();\n        message.channelId = object.channelId ?? \"\";\n        message.version = object.version ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgChannelOpenTry() {\n    return {\n        portId: \"\",\n        previousChannelId: \"\",\n        channel: channel_1.Channel.fromPartial({}),\n        counterpartyVersion: \"\",\n        proofInit: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n        signer: \"\",\n    };\n}\nexports.MsgChannelOpenTry = {\n    typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== \"\") {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            channel_1.Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgChannelOpenTry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = channel_1.Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgChannelOpenTry();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.previousChannelId))\n            obj.previousChannelId = String(object.previousChannelId);\n        if ((0, helpers_1.isSet)(object.channel))\n            obj.channel = channel_1.Channel.fromJSON(object.channel);\n        if ((0, helpers_1.isSet)(object.counterpartyVersion))\n            obj.counterpartyVersion = String(object.counterpartyVersion);\n        if ((0, helpers_1.isSet)(object.proofInit))\n            obj.proofInit = (0, helpers_1.bytesFromBase64)(object.proofInit);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined && (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel ? channel_1.Channel.toJSON(message.channel) : undefined);\n        message.counterpartyVersion !== undefined && (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = (0, helpers_1.base64FromBytes)(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgChannelOpenTry();\n        message.portId = object.portId ?? \"\";\n        message.previousChannelId = object.previousChannelId ?? \"\";\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = channel_1.Channel.fromPartial(object.channel);\n        }\n        message.counterpartyVersion = object.counterpartyVersion ?? \"\";\n        message.proofInit = object.proofInit ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgChannelOpenTryResponse() {\n    return {\n        version: \"\",\n    };\n}\nexports.MsgChannelOpenTryResponse = {\n    typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTryResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgChannelOpenTryResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgChannelOpenTryResponse();\n        if ((0, helpers_1.isSet)(object.version))\n            obj.version = String(object.version);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgChannelOpenTryResponse();\n        message.version = object.version ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgChannelOpenAck() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n        counterpartyChannelId: \"\",\n        counterpartyVersion: \"\",\n        proofTry: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n        signer: \"\",\n    };\n}\nexports.MsgChannelOpenAck = {\n    typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== \"\") {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgChannelOpenAck();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgChannelOpenAck();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        if ((0, helpers_1.isSet)(object.counterpartyChannelId))\n            obj.counterpartyChannelId = String(object.counterpartyChannelId);\n        if ((0, helpers_1.isSet)(object.counterpartyVersion))\n            obj.counterpartyVersion = String(object.counterpartyVersion);\n        if ((0, helpers_1.isSet)(object.proofTry))\n            obj.proofTry = (0, helpers_1.bytesFromBase64)(object.proofTry);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined && (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = (0, helpers_1.base64FromBytes)(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgChannelOpenAck();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        message.counterpartyChannelId = object.counterpartyChannelId ?? \"\";\n        message.counterpartyVersion = object.counterpartyVersion ?? \"\";\n        message.proofTry = object.proofTry ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgChannelOpenAckResponse() {\n    return {};\n}\nexports.MsgChannelOpenAckResponse = {\n    typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAckResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgChannelOpenAckResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgChannelOpenAckResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgChannelOpenAckResponse();\n        return message;\n    },\n};\nfunction createBaseMsgChannelOpenConfirm() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n        proofAck: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n        signer: \"\",\n    };\n}\nexports.MsgChannelOpenConfirm = {\n    typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgChannelOpenConfirm();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgChannelOpenConfirm();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        if ((0, helpers_1.isSet)(object.proofAck))\n            obj.proofAck = (0, helpers_1.bytesFromBase64)(object.proofAck);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = (0, helpers_1.base64FromBytes)(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgChannelOpenConfirm();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        message.proofAck = object.proofAck ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgChannelOpenConfirmResponse() {\n    return {};\n}\nexports.MsgChannelOpenConfirmResponse = {\n    typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirmResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgChannelOpenConfirmResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgChannelOpenConfirmResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgChannelOpenConfirmResponse();\n        return message;\n    },\n};\nfunction createBaseMsgChannelCloseInit() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n        signer: \"\",\n    };\n}\nexports.MsgChannelCloseInit = {\n    typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgChannelCloseInit();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgChannelCloseInit();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgChannelCloseInit();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgChannelCloseInitResponse() {\n    return {};\n}\nexports.MsgChannelCloseInitResponse = {\n    typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInitResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgChannelCloseInitResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgChannelCloseInitResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgChannelCloseInitResponse();\n        return message;\n    },\n};\nfunction createBaseMsgChannelCloseConfirm() {\n    return {\n        portId: \"\",\n        channelId: \"\",\n        proofInit: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n        signer: \"\",\n    };\n}\nexports.MsgChannelCloseConfirm = {\n    typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgChannelCloseConfirm();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgChannelCloseConfirm();\n        if ((0, helpers_1.isSet)(object.portId))\n            obj.portId = String(object.portId);\n        if ((0, helpers_1.isSet)(object.channelId))\n            obj.channelId = String(object.channelId);\n        if ((0, helpers_1.isSet)(object.proofInit))\n            obj.proofInit = (0, helpers_1.bytesFromBase64)(object.proofInit);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = (0, helpers_1.base64FromBytes)(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgChannelCloseConfirm();\n        message.portId = object.portId ?? \"\";\n        message.channelId = object.channelId ?? \"\";\n        message.proofInit = object.proofInit ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgChannelCloseConfirmResponse() {\n    return {};\n}\nexports.MsgChannelCloseConfirmResponse = {\n    typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirmResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgChannelCloseConfirmResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgChannelCloseConfirmResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgChannelCloseConfirmResponse();\n        return message;\n    },\n};\nfunction createBaseMsgRecvPacket() {\n    return {\n        packet: channel_1.Packet.fromPartial({}),\n        proofCommitment: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n        signer: \"\",\n    };\n}\nexports.MsgRecvPacket = {\n    typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.packet !== undefined) {\n            channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgRecvPacket();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = channel_1.Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgRecvPacket();\n        if ((0, helpers_1.isSet)(object.packet))\n            obj.packet = channel_1.Packet.fromJSON(object.packet);\n        if ((0, helpers_1.isSet)(object.proofCommitment))\n            obj.proofCommitment = (0, helpers_1.bytesFromBase64)(object.proofCommitment);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = (0, helpers_1.base64FromBytes)(message.proofCommitment !== undefined ? message.proofCommitment : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgRecvPacket();\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = channel_1.Packet.fromPartial(object.packet);\n        }\n        message.proofCommitment = object.proofCommitment ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgRecvPacketResponse() {\n    return {\n        result: 0,\n    };\n}\nexports.MsgRecvPacketResponse = {\n    typeUrl: \"/ibc.core.channel.v1.MsgRecvPacketResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgRecvPacketResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgRecvPacketResponse();\n        if ((0, helpers_1.isSet)(object.result))\n            obj.result = responseResultTypeFromJSON(object.result);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined && (obj.result = responseResultTypeToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgRecvPacketResponse();\n        message.result = object.result ?? 0;\n        return message;\n    },\n};\nfunction createBaseMsgTimeout() {\n    return {\n        packet: channel_1.Packet.fromPartial({}),\n        proofUnreceived: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n        nextSequenceRecv: BigInt(0),\n        signer: \"\",\n    };\n}\nexports.MsgTimeout = {\n    typeUrl: \"/ibc.core.channel.v1.MsgTimeout\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.packet !== undefined) {\n            channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== BigInt(0)) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgTimeout();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = channel_1.Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = reader.uint64();\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgTimeout();\n        if ((0, helpers_1.isSet)(object.packet))\n            obj.packet = channel_1.Packet.fromJSON(object.packet);\n        if ((0, helpers_1.isSet)(object.proofUnreceived))\n            obj.proofUnreceived = (0, helpers_1.bytesFromBase64)(object.proofUnreceived);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        if ((0, helpers_1.isSet)(object.nextSequenceRecv))\n            obj.nextSequenceRecv = BigInt(object.nextSequenceRecv.toString());\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = (0, helpers_1.base64FromBytes)(message.proofUnreceived !== undefined ? message.proofUnreceived : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = (message.nextSequenceRecv || BigInt(0)).toString());\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgTimeout();\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = channel_1.Packet.fromPartial(object.packet);\n        }\n        message.proofUnreceived = object.proofUnreceived ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        if (object.nextSequenceRecv !== undefined && object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = BigInt(object.nextSequenceRecv.toString());\n        }\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgTimeoutResponse() {\n    return {\n        result: 0,\n    };\n}\nexports.MsgTimeoutResponse = {\n    typeUrl: \"/ibc.core.channel.v1.MsgTimeoutResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgTimeoutResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgTimeoutResponse();\n        if ((0, helpers_1.isSet)(object.result))\n            obj.result = responseResultTypeFromJSON(object.result);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined && (obj.result = responseResultTypeToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgTimeoutResponse();\n        message.result = object.result ?? 0;\n        return message;\n    },\n};\nfunction createBaseMsgTimeoutOnClose() {\n    return {\n        packet: channel_1.Packet.fromPartial({}),\n        proofUnreceived: new Uint8Array(),\n        proofClose: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n        nextSequenceRecv: BigInt(0),\n        signer: \"\",\n    };\n}\nexports.MsgTimeoutOnClose = {\n    typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.packet !== undefined) {\n            channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== BigInt(0)) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgTimeoutOnClose();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = channel_1.Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = reader.uint64();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgTimeoutOnClose();\n        if ((0, helpers_1.isSet)(object.packet))\n            obj.packet = channel_1.Packet.fromJSON(object.packet);\n        if ((0, helpers_1.isSet)(object.proofUnreceived))\n            obj.proofUnreceived = (0, helpers_1.bytesFromBase64)(object.proofUnreceived);\n        if ((0, helpers_1.isSet)(object.proofClose))\n            obj.proofClose = (0, helpers_1.bytesFromBase64)(object.proofClose);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        if ((0, helpers_1.isSet)(object.nextSequenceRecv))\n            obj.nextSequenceRecv = BigInt(object.nextSequenceRecv.toString());\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = (0, helpers_1.base64FromBytes)(message.proofUnreceived !== undefined ? message.proofUnreceived : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = (0, helpers_1.base64FromBytes)(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = (message.nextSequenceRecv || BigInt(0)).toString());\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgTimeoutOnClose();\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = channel_1.Packet.fromPartial(object.packet);\n        }\n        message.proofUnreceived = object.proofUnreceived ?? new Uint8Array();\n        message.proofClose = object.proofClose ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        if (object.nextSequenceRecv !== undefined && object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = BigInt(object.nextSequenceRecv.toString());\n        }\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgTimeoutOnCloseResponse() {\n    return {\n        result: 0,\n    };\n}\nexports.MsgTimeoutOnCloseResponse = {\n    typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnCloseResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgTimeoutOnCloseResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgTimeoutOnCloseResponse();\n        if ((0, helpers_1.isSet)(object.result))\n            obj.result = responseResultTypeFromJSON(object.result);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined && (obj.result = responseResultTypeToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgTimeoutOnCloseResponse();\n        message.result = object.result ?? 0;\n        return message;\n    },\n};\nfunction createBaseMsgAcknowledgement() {\n    return {\n        packet: channel_1.Packet.fromPartial({}),\n        acknowledgement: new Uint8Array(),\n        proofAcked: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n        signer: \"\",\n    };\n}\nexports.MsgAcknowledgement = {\n    typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.packet !== undefined) {\n            channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgAcknowledgement();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = channel_1.Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgAcknowledgement();\n        if ((0, helpers_1.isSet)(object.packet))\n            obj.packet = channel_1.Packet.fromJSON(object.packet);\n        if ((0, helpers_1.isSet)(object.acknowledgement))\n            obj.acknowledgement = (0, helpers_1.bytesFromBase64)(object.acknowledgement);\n        if ((0, helpers_1.isSet)(object.proofAcked))\n            obj.proofAcked = (0, helpers_1.bytesFromBase64)(object.proofAcked);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = (0, helpers_1.base64FromBytes)(message.acknowledgement !== undefined ? message.acknowledgement : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = (0, helpers_1.base64FromBytes)(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgAcknowledgement();\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = channel_1.Packet.fromPartial(object.packet);\n        }\n        message.acknowledgement = object.acknowledgement ?? new Uint8Array();\n        message.proofAcked = object.proofAcked ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgAcknowledgementResponse() {\n    return {\n        result: 0,\n    };\n}\nexports.MsgAcknowledgementResponse = {\n    typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgementResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgAcknowledgementResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgAcknowledgementResponse();\n        if ((0, helpers_1.isSet)(object.result))\n            obj.result = responseResultTypeFromJSON(object.result);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined && (obj.result = responseResultTypeToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgAcknowledgementResponse();\n        message.result = object.result ?? 0;\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.ChannelOpenInit = this.ChannelOpenInit.bind(this);\n        this.ChannelOpenTry = this.ChannelOpenTry.bind(this);\n        this.ChannelOpenAck = this.ChannelOpenAck.bind(this);\n        this.ChannelOpenConfirm = this.ChannelOpenConfirm.bind(this);\n        this.ChannelCloseInit = this.ChannelCloseInit.bind(this);\n        this.ChannelCloseConfirm = this.ChannelCloseConfirm.bind(this);\n        this.RecvPacket = this.RecvPacket.bind(this);\n        this.Timeout = this.Timeout.bind(this);\n        this.TimeoutOnClose = this.TimeoutOnClose.bind(this);\n        this.Acknowledgement = this.Acknowledgement.bind(this);\n    }\n    ChannelOpenInit(request) {\n        const data = exports.MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n        return promise.then((data) => exports.MsgChannelOpenInitResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = exports.MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n        return promise.then((data) => exports.MsgChannelOpenTryResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = exports.MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n        return promise.then((data) => exports.MsgChannelOpenAckResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = exports.MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n        return promise.then((data) => exports.MsgChannelOpenConfirmResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = exports.MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n        return promise.then((data) => exports.MsgChannelCloseInitResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = exports.MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n        return promise.then((data) => exports.MsgChannelCloseConfirmResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    RecvPacket(request) {\n        const data = exports.MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n        return promise.then((data) => exports.MsgRecvPacketResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Timeout(request) {\n        const data = exports.MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n        return promise.then((data) => exports.MsgTimeoutResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = exports.MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n        return promise.then((data) => exports.MsgTimeoutOnCloseResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Acknowledgement(request) {\n        const data = exports.MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n        return promise.then((data) => exports.MsgAcknowledgementResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Params = exports.Height = exports.UpgradeProposal = exports.ClientUpdateProposal = exports.ClientConsensusStates = exports.ConsensusStateWithHeight = exports.IdentifiedClientState = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst upgrade_1 = require(\"../../../../cosmos/upgrade/v1beta1/upgrade\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.core.client.v1\";\nfunction createBaseIdentifiedClientState() {\n    return {\n        clientId: \"\",\n        clientState: undefined,\n    };\n}\nexports.IdentifiedClientState = {\n    typeUrl: \"/ibc.core.client.v1.IdentifiedClientState\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            any_1.Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseIdentifiedClientState();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseIdentifiedClientState();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if ((0, helpers_1.isSet)(object.clientState))\n            obj.clientState = any_1.Any.fromJSON(object.clientState);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseIdentifiedClientState();\n        message.clientId = object.clientId ?? \"\";\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = any_1.Any.fromPartial(object.clientState);\n        }\n        return message;\n    },\n};\nfunction createBaseConsensusStateWithHeight() {\n    return {\n        height: exports.Height.fromPartial({}),\n        consensusState: undefined,\n    };\n}\nexports.ConsensusStateWithHeight = {\n    typeUrl: \"/ibc.core.client.v1.ConsensusStateWithHeight\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.height !== undefined) {\n            exports.Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            any_1.Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConsensusStateWithHeight();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = exports.Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseConsensusStateWithHeight();\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = exports.Height.fromJSON(object.height);\n        if ((0, helpers_1.isSet)(object.consensusState))\n            obj.consensusState = any_1.Any.fromJSON(object.consensusState);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height ? exports.Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseConsensusStateWithHeight();\n        if (object.height !== undefined && object.height !== null) {\n            message.height = exports.Height.fromPartial(object.height);\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = any_1.Any.fromPartial(object.consensusState);\n        }\n        return message;\n    },\n};\nfunction createBaseClientConsensusStates() {\n    return {\n        clientId: \"\",\n        consensusStates: [],\n    };\n}\nexports.ClientConsensusStates = {\n    typeUrl: \"/ibc.core.client.v1.ClientConsensusStates\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            exports.ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseClientConsensusStates();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(exports.ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseClientConsensusStates();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if (Array.isArray(object?.consensusStates))\n            obj.consensusStates = object.consensusStates.map((e) => exports.ConsensusStateWithHeight.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? exports.ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseClientConsensusStates();\n        message.clientId = object.clientId ?? \"\";\n        message.consensusStates =\n            object.consensusStates?.map((e) => exports.ConsensusStateWithHeight.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseClientUpdateProposal() {\n    return {\n        title: \"\",\n        description: \"\",\n        subjectClientId: \"\",\n        substituteClientId: \"\",\n    };\n}\nexports.ClientUpdateProposal = {\n    typeUrl: \"/ibc.core.client.v1.ClientUpdateProposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.subjectClientId !== \"\") {\n            writer.uint32(26).string(message.subjectClientId);\n        }\n        if (message.substituteClientId !== \"\") {\n            writer.uint32(34).string(message.substituteClientId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseClientUpdateProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.subjectClientId = reader.string();\n                    break;\n                case 4:\n                    message.substituteClientId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseClientUpdateProposal();\n        if ((0, helpers_1.isSet)(object.title))\n            obj.title = String(object.title);\n        if ((0, helpers_1.isSet)(object.description))\n            obj.description = String(object.description);\n        if ((0, helpers_1.isSet)(object.subjectClientId))\n            obj.subjectClientId = String(object.subjectClientId);\n        if ((0, helpers_1.isSet)(object.substituteClientId))\n            obj.substituteClientId = String(object.substituteClientId);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.subjectClientId !== undefined && (obj.subjectClientId = message.subjectClientId);\n        message.substituteClientId !== undefined && (obj.substituteClientId = message.substituteClientId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseClientUpdateProposal();\n        message.title = object.title ?? \"\";\n        message.description = object.description ?? \"\";\n        message.subjectClientId = object.subjectClientId ?? \"\";\n        message.substituteClientId = object.substituteClientId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseUpgradeProposal() {\n    return {\n        title: \"\",\n        description: \"\",\n        plan: upgrade_1.Plan.fromPartial({}),\n        upgradedClientState: undefined,\n    };\n}\nexports.UpgradeProposal = {\n    typeUrl: \"/ibc.core.client.v1.UpgradeProposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            upgrade_1.Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.upgradedClientState !== undefined) {\n            any_1.Any.encode(message.upgradedClientState, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUpgradeProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = upgrade_1.Plan.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.upgradedClientState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseUpgradeProposal();\n        if ((0, helpers_1.isSet)(object.title))\n            obj.title = String(object.title);\n        if ((0, helpers_1.isSet)(object.description))\n            obj.description = String(object.description);\n        if ((0, helpers_1.isSet)(object.plan))\n            obj.plan = upgrade_1.Plan.fromJSON(object.plan);\n        if ((0, helpers_1.isSet)(object.upgradedClientState))\n            obj.upgradedClientState = any_1.Any.fromJSON(object.upgradedClientState);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.plan !== undefined && (obj.plan = message.plan ? upgrade_1.Plan.toJSON(message.plan) : undefined);\n        message.upgradedClientState !== undefined &&\n            (obj.upgradedClientState = message.upgradedClientState\n                ? any_1.Any.toJSON(message.upgradedClientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseUpgradeProposal();\n        message.title = object.title ?? \"\";\n        message.description = object.description ?? \"\";\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = upgrade_1.Plan.fromPartial(object.plan);\n        }\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = any_1.Any.fromPartial(object.upgradedClientState);\n        }\n        return message;\n    },\n};\nfunction createBaseHeight() {\n    return {\n        revisionNumber: BigInt(0),\n        revisionHeight: BigInt(0),\n    };\n}\nexports.Height = {\n    typeUrl: \"/ibc.core.client.v1.Height\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.revisionNumber !== BigInt(0)) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== BigInt(0)) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseHeight();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = reader.uint64();\n                    break;\n                case 2:\n                    message.revisionHeight = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseHeight();\n        if ((0, helpers_1.isSet)(object.revisionNumber))\n            obj.revisionNumber = BigInt(object.revisionNumber.toString());\n        if ((0, helpers_1.isSet)(object.revisionHeight))\n            obj.revisionHeight = BigInt(object.revisionHeight.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = (message.revisionNumber || BigInt(0)).toString());\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = (message.revisionHeight || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseHeight();\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = BigInt(object.revisionNumber.toString());\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = BigInt(object.revisionHeight.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseParams() {\n    return {\n        allowedClients: [],\n    };\n}\nexports.Params = {\n    typeUrl: \"/ibc.core.client.v1.Params\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseParams();\n        if (Array.isArray(object?.allowedClients))\n            obj.allowedClients = object.allowedClients.map((e) => String(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseParams();\n        message.allowedClients = object.allowedClients?.map((e) => e) || [];\n        return message;\n    },\n};\n//# sourceMappingURL=client.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QueryUpgradedConsensusStateResponse = exports.QueryUpgradedConsensusStateRequest = exports.QueryUpgradedClientStateResponse = exports.QueryUpgradedClientStateRequest = exports.QueryClientParamsResponse = exports.QueryClientParamsRequest = exports.QueryClientStatusResponse = exports.QueryClientStatusRequest = exports.QueryConsensusStateHeightsResponse = exports.QueryConsensusStateHeightsRequest = exports.QueryConsensusStatesResponse = exports.QueryConsensusStatesRequest = exports.QueryConsensusStateResponse = exports.QueryConsensusStateRequest = exports.QueryClientStatesResponse = exports.QueryClientStatesRequest = exports.QueryClientStateResponse = exports.QueryClientStateRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst pagination_1 = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst client_1 = require(\"./client\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.core.client.v1\";\nfunction createBaseQueryClientStateRequest() {\n    return {\n        clientId: \"\",\n    };\n}\nexports.QueryClientStateRequest = {\n    typeUrl: \"/ibc.core.client.v1.QueryClientStateRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryClientStateRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryClientStateRequest();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryClientStateRequest();\n        message.clientId = object.clientId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryClientStateResponse() {\n    return {\n        clientState: undefined,\n        proof: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryClientStateResponse = {\n    typeUrl: \"/ibc.core.client.v1.QueryClientStateResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientState !== undefined) {\n            any_1.Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(18).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryClientStateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proof = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryClientStateResponse();\n        if ((0, helpers_1.isSet)(object.clientState))\n            obj.clientState = any_1.Any.fromJSON(object.clientState);\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n        message.proof !== undefined &&\n            (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryClientStateResponse();\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = any_1.Any.fromPartial(object.clientState);\n        }\n        message.proof = object.proof ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryClientStatesRequest() {\n    return {\n        pagination: undefined,\n    };\n}\nexports.QueryClientStatesRequest = {\n    typeUrl: \"/ibc.core.client.v1.QueryClientStatesRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryClientStatesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryClientStatesRequest();\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryClientStatesRequest();\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryClientStatesResponse() {\n    return {\n        clientStates: [],\n        pagination: undefined,\n    };\n}\nexports.QueryClientStatesResponse = {\n    typeUrl: \"/ibc.core.client.v1.QueryClientStatesResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.clientStates) {\n            client_1.IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryClientStatesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientStates.push(client_1.IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryClientStatesResponse();\n        if (Array.isArray(object?.clientStates))\n            obj.clientStates = object.clientStates.map((e) => client_1.IdentifiedClientState.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clientStates) {\n            obj.clientStates = message.clientStates.map((e) => (e ? client_1.IdentifiedClientState.toJSON(e) : undefined));\n        }\n        else {\n            obj.clientStates = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryClientStatesResponse();\n        message.clientStates = object.clientStates?.map((e) => client_1.IdentifiedClientState.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryConsensusStateRequest() {\n    return {\n        clientId: \"\",\n        revisionNumber: BigInt(0),\n        revisionHeight: BigInt(0),\n        latestHeight: false,\n    };\n}\nexports.QueryConsensusStateRequest = {\n    typeUrl: \"/ibc.core.client.v1.QueryConsensusStateRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.revisionNumber !== BigInt(0)) {\n            writer.uint32(16).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== BigInt(0)) {\n            writer.uint32(24).uint64(message.revisionHeight);\n        }\n        if (message.latestHeight === true) {\n            writer.uint32(32).bool(message.latestHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConsensusStateRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.revisionNumber = reader.uint64();\n                    break;\n                case 3:\n                    message.revisionHeight = reader.uint64();\n                    break;\n                case 4:\n                    message.latestHeight = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConsensusStateRequest();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if ((0, helpers_1.isSet)(object.revisionNumber))\n            obj.revisionNumber = BigInt(object.revisionNumber.toString());\n        if ((0, helpers_1.isSet)(object.revisionHeight))\n            obj.revisionHeight = BigInt(object.revisionHeight.toString());\n        if ((0, helpers_1.isSet)(object.latestHeight))\n            obj.latestHeight = Boolean(object.latestHeight);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = (message.revisionNumber || BigInt(0)).toString());\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = (message.revisionHeight || BigInt(0)).toString());\n        message.latestHeight !== undefined && (obj.latestHeight = message.latestHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConsensusStateRequest();\n        message.clientId = object.clientId ?? \"\";\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = BigInt(object.revisionNumber.toString());\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = BigInt(object.revisionHeight.toString());\n        }\n        message.latestHeight = object.latestHeight ?? false;\n        return message;\n    },\n};\nfunction createBaseQueryConsensusStateResponse() {\n    return {\n        consensusState: undefined,\n        proof: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryConsensusStateResponse = {\n    typeUrl: \"/ibc.core.client.v1.QueryConsensusStateResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.consensusState !== undefined) {\n            any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(18).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConsensusStateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proof = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConsensusStateResponse();\n        if ((0, helpers_1.isSet)(object.consensusState))\n            obj.consensusState = any_1.Any.fromJSON(object.consensusState);\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : undefined);\n        message.proof !== undefined &&\n            (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConsensusStateResponse();\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = any_1.Any.fromPartial(object.consensusState);\n        }\n        message.proof = object.proof ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryConsensusStatesRequest() {\n    return {\n        clientId: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryConsensusStatesRequest = {\n    typeUrl: \"/ibc.core.client.v1.QueryConsensusStatesRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConsensusStatesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConsensusStatesRequest();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConsensusStatesRequest();\n        message.clientId = object.clientId ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryConsensusStatesResponse() {\n    return {\n        consensusStates: [],\n        pagination: undefined,\n    };\n}\nexports.QueryConsensusStatesResponse = {\n    typeUrl: \"/ibc.core.client.v1.QueryConsensusStatesResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.consensusStates) {\n            client_1.ConsensusStateWithHeight.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConsensusStatesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusStates.push(client_1.ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConsensusStatesResponse();\n        if (Array.isArray(object?.consensusStates))\n            obj.consensusStates = object.consensusStates.map((e) => client_1.ConsensusStateWithHeight.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? client_1.ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConsensusStatesResponse();\n        message.consensusStates =\n            object.consensusStates?.map((e) => client_1.ConsensusStateWithHeight.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryConsensusStateHeightsRequest() {\n    return {\n        clientId: \"\",\n        pagination: undefined,\n    };\n}\nexports.QueryConsensusStateHeightsRequest = {\n    typeUrl: \"/ibc.core.client.v1.QueryConsensusStateHeightsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConsensusStateHeightsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConsensusStateHeightsRequest();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConsensusStateHeightsRequest();\n        message.clientId = object.clientId ?? \"\";\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryConsensusStateHeightsResponse() {\n    return {\n        consensusStateHeights: [],\n        pagination: undefined,\n    };\n}\nexports.QueryConsensusStateHeightsResponse = {\n    typeUrl: \"/ibc.core.client.v1.QueryConsensusStateHeightsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.consensusStateHeights) {\n            client_1.Height.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConsensusStateHeightsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusStateHeights.push(client_1.Height.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConsensusStateHeightsResponse();\n        if (Array.isArray(object?.consensusStateHeights))\n            obj.consensusStateHeights = object.consensusStateHeights.map((e) => client_1.Height.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.consensusStateHeights) {\n            obj.consensusStateHeights = message.consensusStateHeights.map((e) => e ? client_1.Height.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStateHeights = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConsensusStateHeightsResponse();\n        message.consensusStateHeights = object.consensusStateHeights?.map((e) => client_1.Height.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryClientStatusRequest() {\n    return {\n        clientId: \"\",\n    };\n}\nexports.QueryClientStatusRequest = {\n    typeUrl: \"/ibc.core.client.v1.QueryClientStatusRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryClientStatusRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryClientStatusRequest();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryClientStatusRequest();\n        message.clientId = object.clientId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryClientStatusResponse() {\n    return {\n        status: \"\",\n    };\n}\nexports.QueryClientStatusResponse = {\n    typeUrl: \"/ibc.core.client.v1.QueryClientStatusResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.status !== \"\") {\n            writer.uint32(10).string(message.status);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryClientStatusResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.status = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryClientStatusResponse();\n        if ((0, helpers_1.isSet)(object.status))\n            obj.status = String(object.status);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.status !== undefined && (obj.status = message.status);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryClientStatusResponse();\n        message.status = object.status ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryClientParamsRequest() {\n    return {};\n}\nexports.QueryClientParamsRequest = {\n    typeUrl: \"/ibc.core.client.v1.QueryClientParamsRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryClientParamsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryClientParamsRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryClientParamsRequest();\n        return message;\n    },\n};\nfunction createBaseQueryClientParamsResponse() {\n    return {\n        params: undefined,\n    };\n}\nexports.QueryClientParamsResponse = {\n    typeUrl: \"/ibc.core.client.v1.QueryClientParamsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.params !== undefined) {\n            client_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryClientParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = client_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryClientParamsResponse();\n        if ((0, helpers_1.isSet)(object.params))\n            obj.params = client_1.Params.fromJSON(object.params);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? client_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryClientParamsResponse();\n        if (object.params !== undefined && object.params !== null) {\n            message.params = client_1.Params.fromPartial(object.params);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryUpgradedClientStateRequest() {\n    return {};\n}\nexports.QueryUpgradedClientStateRequest = {\n    typeUrl: \"/ibc.core.client.v1.QueryUpgradedClientStateRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryUpgradedClientStateRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryUpgradedClientStateRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryUpgradedClientStateRequest();\n        return message;\n    },\n};\nfunction createBaseQueryUpgradedClientStateResponse() {\n    return {\n        upgradedClientState: undefined,\n    };\n}\nexports.QueryUpgradedClientStateResponse = {\n    typeUrl: \"/ibc.core.client.v1.QueryUpgradedClientStateResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.upgradedClientState !== undefined) {\n            any_1.Any.encode(message.upgradedClientState, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryUpgradedClientStateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.upgradedClientState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryUpgradedClientStateResponse();\n        if ((0, helpers_1.isSet)(object.upgradedClientState))\n            obj.upgradedClientState = any_1.Any.fromJSON(object.upgradedClientState);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.upgradedClientState !== undefined &&\n            (obj.upgradedClientState = message.upgradedClientState\n                ? any_1.Any.toJSON(message.upgradedClientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryUpgradedClientStateResponse();\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = any_1.Any.fromPartial(object.upgradedClientState);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryUpgradedConsensusStateRequest() {\n    return {};\n}\nexports.QueryUpgradedConsensusStateRequest = {\n    typeUrl: \"/ibc.core.client.v1.QueryUpgradedConsensusStateRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryUpgradedConsensusStateRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryUpgradedConsensusStateRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryUpgradedConsensusStateRequest();\n        return message;\n    },\n};\nfunction createBaseQueryUpgradedConsensusStateResponse() {\n    return {\n        upgradedConsensusState: undefined,\n    };\n}\nexports.QueryUpgradedConsensusStateResponse = {\n    typeUrl: \"/ibc.core.client.v1.QueryUpgradedConsensusStateResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.upgradedConsensusState !== undefined) {\n            any_1.Any.encode(message.upgradedConsensusState, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryUpgradedConsensusStateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.upgradedConsensusState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryUpgradedConsensusStateResponse();\n        if ((0, helpers_1.isSet)(object.upgradedConsensusState))\n            obj.upgradedConsensusState = any_1.Any.fromJSON(object.upgradedConsensusState);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.upgradedConsensusState !== undefined &&\n            (obj.upgradedConsensusState = message.upgradedConsensusState\n                ? any_1.Any.toJSON(message.upgradedConsensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryUpgradedConsensusStateResponse();\n        if (object.upgradedConsensusState !== undefined && object.upgradedConsensusState !== null) {\n            message.upgradedConsensusState = any_1.Any.fromPartial(object.upgradedConsensusState);\n        }\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.ClientState = this.ClientState.bind(this);\n        this.ClientStates = this.ClientStates.bind(this);\n        this.ConsensusState = this.ConsensusState.bind(this);\n        this.ConsensusStates = this.ConsensusStates.bind(this);\n        this.ConsensusStateHeights = this.ConsensusStateHeights.bind(this);\n        this.ClientStatus = this.ClientStatus.bind(this);\n        this.ClientParams = this.ClientParams.bind(this);\n        this.UpgradedClientState = this.UpgradedClientState.bind(this);\n        this.UpgradedConsensusState = this.UpgradedConsensusState.bind(this);\n    }\n    ClientState(request) {\n        const data = exports.QueryClientStateRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"ClientState\", data);\n        return promise.then((data) => exports.QueryClientStateResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ClientStates(request = {\n        pagination: pagination_1.PageRequest.fromPartial({}),\n    }) {\n        const data = exports.QueryClientStatesRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"ClientStates\", data);\n        return promise.then((data) => exports.QueryClientStatesResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ConsensusState(request) {\n        const data = exports.QueryConsensusStateRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"ConsensusState\", data);\n        return promise.then((data) => exports.QueryConsensusStateResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ConsensusStates(request) {\n        const data = exports.QueryConsensusStatesRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"ConsensusStates\", data);\n        return promise.then((data) => exports.QueryConsensusStatesResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ConsensusStateHeights(request) {\n        const data = exports.QueryConsensusStateHeightsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"ConsensusStateHeights\", data);\n        return promise.then((data) => exports.QueryConsensusStateHeightsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ClientStatus(request) {\n        const data = exports.QueryClientStatusRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"ClientStatus\", data);\n        return promise.then((data) => exports.QueryClientStatusResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ClientParams(request = {}) {\n        const data = exports.QueryClientParamsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"ClientParams\", data);\n        return promise.then((data) => exports.QueryClientParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpgradedClientState(request = {}) {\n        const data = exports.QueryUpgradedClientStateRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"UpgradedClientState\", data);\n        return promise.then((data) => exports.QueryUpgradedClientStateResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpgradedConsensusState(request = {}) {\n        const data = exports.QueryUpgradedConsensusStateRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"UpgradedConsensusState\", data);\n        return promise.then((data) => exports.QueryUpgradedConsensusStateResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\n//# sourceMappingURL=query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgSubmitMisbehaviourResponse = exports.MsgSubmitMisbehaviour = exports.MsgUpgradeClientResponse = exports.MsgUpgradeClient = exports.MsgUpdateClientResponse = exports.MsgUpdateClient = exports.MsgCreateClientResponse = exports.MsgCreateClient = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.core.client.v1\";\nfunction createBaseMsgCreateClient() {\n    return {\n        clientState: undefined,\n        consensusState: undefined,\n        signer: \"\",\n    };\n}\nexports.MsgCreateClient = {\n    typeUrl: \"/ibc.core.client.v1.MsgCreateClient\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientState !== undefined) {\n            any_1.Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            any_1.Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateClient();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgCreateClient();\n        if ((0, helpers_1.isSet)(object.clientState))\n            obj.clientState = any_1.Any.fromJSON(object.clientState);\n        if ((0, helpers_1.isSet)(object.consensusState))\n            obj.consensusState = any_1.Any.fromJSON(object.consensusState);\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCreateClient();\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = any_1.Any.fromPartial(object.clientState);\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = any_1.Any.fromPartial(object.consensusState);\n        }\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgCreateClientResponse() {\n    return {};\n}\nexports.MsgCreateClientResponse = {\n    typeUrl: \"/ibc.core.client.v1.MsgCreateClientResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateClientResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgCreateClientResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgCreateClientResponse();\n        return message;\n    },\n};\nfunction createBaseMsgUpdateClient() {\n    return {\n        clientId: \"\",\n        clientMessage: undefined,\n        signer: \"\",\n    };\n}\nexports.MsgUpdateClient = {\n    typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientMessage !== undefined) {\n            any_1.Any.encode(message.clientMessage, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateClient();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMessage = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUpdateClient();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if ((0, helpers_1.isSet)(object.clientMessage))\n            obj.clientMessage = any_1.Any.fromJSON(object.clientMessage);\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientMessage !== undefined &&\n            (obj.clientMessage = message.clientMessage ? any_1.Any.toJSON(message.clientMessage) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateClient();\n        message.clientId = object.clientId ?? \"\";\n        if (object.clientMessage !== undefined && object.clientMessage !== null) {\n            message.clientMessage = any_1.Any.fromPartial(object.clientMessage);\n        }\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgUpdateClientResponse() {\n    return {};\n}\nexports.MsgUpdateClientResponse = {\n    typeUrl: \"/ibc.core.client.v1.MsgUpdateClientResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateClientResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgUpdateClientResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateClientResponse();\n        return message;\n    },\n};\nfunction createBaseMsgUpgradeClient() {\n    return {\n        clientId: \"\",\n        clientState: undefined,\n        consensusState: undefined,\n        proofUpgradeClient: new Uint8Array(),\n        proofUpgradeConsensusState: new Uint8Array(),\n        signer: \"\",\n    };\n}\nexports.MsgUpgradeClient = {\n    typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            any_1.Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            any_1.Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpgradeClient();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUpgradeClient();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if ((0, helpers_1.isSet)(object.clientState))\n            obj.clientState = any_1.Any.fromJSON(object.clientState);\n        if ((0, helpers_1.isSet)(object.consensusState))\n            obj.consensusState = any_1.Any.fromJSON(object.consensusState);\n        if ((0, helpers_1.isSet)(object.proofUpgradeClient))\n            obj.proofUpgradeClient = (0, helpers_1.bytesFromBase64)(object.proofUpgradeClient);\n        if ((0, helpers_1.isSet)(object.proofUpgradeConsensusState))\n            obj.proofUpgradeConsensusState = (0, helpers_1.bytesFromBase64)(object.proofUpgradeConsensusState);\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = (0, helpers_1.base64FromBytes)(message.proofUpgradeClient !== undefined ? message.proofUpgradeClient : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = (0, helpers_1.base64FromBytes)(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpgradeClient();\n        message.clientId = object.clientId ?? \"\";\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = any_1.Any.fromPartial(object.clientState);\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = any_1.Any.fromPartial(object.consensusState);\n        }\n        message.proofUpgradeClient = object.proofUpgradeClient ?? new Uint8Array();\n        message.proofUpgradeConsensusState = object.proofUpgradeConsensusState ?? new Uint8Array();\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgUpgradeClientResponse() {\n    return {};\n}\nexports.MsgUpgradeClientResponse = {\n    typeUrl: \"/ibc.core.client.v1.MsgUpgradeClientResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpgradeClientResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgUpgradeClientResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpgradeClientResponse();\n        return message;\n    },\n};\nfunction createBaseMsgSubmitMisbehaviour() {\n    return {\n        clientId: \"\",\n        misbehaviour: undefined,\n        signer: \"\",\n    };\n}\nexports.MsgSubmitMisbehaviour = {\n    typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            any_1.Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSubmitMisbehaviour();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgSubmitMisbehaviour();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if ((0, helpers_1.isSet)(object.misbehaviour))\n            obj.misbehaviour = any_1.Any.fromJSON(object.misbehaviour);\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour ? any_1.Any.toJSON(message.misbehaviour) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgSubmitMisbehaviour();\n        message.clientId = object.clientId ?? \"\";\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = any_1.Any.fromPartial(object.misbehaviour);\n        }\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgSubmitMisbehaviourResponse() {\n    return {};\n}\nexports.MsgSubmitMisbehaviourResponse = {\n    typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviourResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSubmitMisbehaviourResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgSubmitMisbehaviourResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgSubmitMisbehaviourResponse();\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.CreateClient = this.CreateClient.bind(this);\n        this.UpdateClient = this.UpdateClient.bind(this);\n        this.UpgradeClient = this.UpgradeClient.bind(this);\n        this.SubmitMisbehaviour = this.SubmitMisbehaviour.bind(this);\n    }\n    CreateClient(request) {\n        const data = exports.MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"CreateClient\", data);\n        return promise.then((data) => exports.MsgCreateClientResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpdateClient(request) {\n        const data = exports.MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpdateClient\", data);\n        return promise.then((data) => exports.MsgUpdateClientResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpgradeClient(request) {\n        const data = exports.MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpgradeClient\", data);\n        return promise.then((data) => exports.MsgUpgradeClientResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = exports.MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"SubmitMisbehaviour\", data);\n        return promise.then((data) => exports.MsgSubmitMisbehaviourResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MerkleProof = exports.MerklePath = exports.MerklePrefix = exports.MerkleRoot = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst proofs_1 = require(\"../../../../cosmos/ics23/v1/proofs\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.core.commitment.v1\";\nfunction createBaseMerkleRoot() {\n    return {\n        hash: new Uint8Array(),\n    };\n}\nexports.MerkleRoot = {\n    typeUrl: \"/ibc.core.commitment.v1.MerkleRoot\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMerkleRoot();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMerkleRoot();\n        if ((0, helpers_1.isSet)(object.hash))\n            obj.hash = (0, helpers_1.bytesFromBase64)(object.hash);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMerkleRoot();\n        message.hash = object.hash ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseMerklePrefix() {\n    return {\n        keyPrefix: new Uint8Array(),\n    };\n}\nexports.MerklePrefix = {\n    typeUrl: \"/ibc.core.commitment.v1.MerklePrefix\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMerklePrefix();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMerklePrefix();\n        if ((0, helpers_1.isSet)(object.keyPrefix))\n            obj.keyPrefix = (0, helpers_1.bytesFromBase64)(object.keyPrefix);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = (0, helpers_1.base64FromBytes)(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMerklePrefix();\n        message.keyPrefix = object.keyPrefix ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseMerklePath() {\n    return {\n        keyPath: [],\n    };\n}\nexports.MerklePath = {\n    typeUrl: \"/ibc.core.commitment.v1.MerklePath\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMerklePath();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMerklePath();\n        if (Array.isArray(object?.keyPath))\n            obj.keyPath = object.keyPath.map((e) => String(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMerklePath();\n        message.keyPath = object.keyPath?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseMerkleProof() {\n    return {\n        proofs: [],\n    };\n}\nexports.MerkleProof = {\n    typeUrl: \"/ibc.core.commitment.v1.MerkleProof\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.proofs) {\n            proofs_1.CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMerkleProof();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(proofs_1.CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMerkleProof();\n        if (Array.isArray(object?.proofs))\n            obj.proofs = object.proofs.map((e) => proofs_1.CommitmentProof.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => (e ? proofs_1.CommitmentProof.toJSON(e) : undefined));\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMerkleProof();\n        message.proofs = object.proofs?.map((e) => proofs_1.CommitmentProof.fromPartial(e)) || [];\n        return message;\n    },\n};\n//# sourceMappingURL=commitment.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Params = exports.Version = exports.ConnectionPaths = exports.ClientPaths = exports.Counterparty = exports.IdentifiedConnection = exports.ConnectionEnd = exports.stateToJSON = exports.stateFromJSON = exports.State = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst commitment_1 = require(\"../../commitment/v1/commitment\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nvar State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (exports.State = State = {}));\nfunction stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexports.stateFromJSON = stateFromJSON;\nfunction stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        case State.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.stateToJSON = stateToJSON;\nfunction createBaseConnectionEnd() {\n    return {\n        clientId: \"\",\n        versions: [],\n        state: 0,\n        counterparty: exports.Counterparty.fromPartial({}),\n        delayPeriod: BigInt(0),\n    };\n}\nexports.ConnectionEnd = {\n    typeUrl: \"/ibc.core.connection.v1.ConnectionEnd\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            exports.Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            exports.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== BigInt(0)) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConnectionEnd();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(exports.Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = exports.Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseConnectionEnd();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if (Array.isArray(object?.versions))\n            obj.versions = object.versions.map((e) => exports.Version.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.state))\n            obj.state = stateFromJSON(object.state);\n        if ((0, helpers_1.isSet)(object.counterparty))\n            obj.counterparty = exports.Counterparty.fromJSON(object.counterparty);\n        if ((0, helpers_1.isSet)(object.delayPeriod))\n            obj.delayPeriod = BigInt(object.delayPeriod.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => (e ? exports.Version.toJSON(e) : undefined));\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty ? exports.Counterparty.toJSON(message.counterparty) : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseConnectionEnd();\n        message.clientId = object.clientId ?? \"\";\n        message.versions = object.versions?.map((e) => exports.Version.fromPartial(e)) || [];\n        message.state = object.state ?? 0;\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = exports.Counterparty.fromPartial(object.counterparty);\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = BigInt(object.delayPeriod.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseIdentifiedConnection() {\n    return {\n        id: \"\",\n        clientId: \"\",\n        versions: [],\n        state: 0,\n        counterparty: exports.Counterparty.fromPartial({}),\n        delayPeriod: BigInt(0),\n    };\n}\nexports.IdentifiedConnection = {\n    typeUrl: \"/ibc.core.connection.v1.IdentifiedConnection\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            exports.Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            exports.Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== BigInt(0)) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseIdentifiedConnection();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(exports.Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = exports.Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseIdentifiedConnection();\n        if ((0, helpers_1.isSet)(object.id))\n            obj.id = String(object.id);\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if (Array.isArray(object?.versions))\n            obj.versions = object.versions.map((e) => exports.Version.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.state))\n            obj.state = stateFromJSON(object.state);\n        if ((0, helpers_1.isSet)(object.counterparty))\n            obj.counterparty = exports.Counterparty.fromJSON(object.counterparty);\n        if ((0, helpers_1.isSet)(object.delayPeriod))\n            obj.delayPeriod = BigInt(object.delayPeriod.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => (e ? exports.Version.toJSON(e) : undefined));\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty ? exports.Counterparty.toJSON(message.counterparty) : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseIdentifiedConnection();\n        message.id = object.id ?? \"\";\n        message.clientId = object.clientId ?? \"\";\n        message.versions = object.versions?.map((e) => exports.Version.fromPartial(e)) || [];\n        message.state = object.state ?? 0;\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = exports.Counterparty.fromPartial(object.counterparty);\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = BigInt(object.delayPeriod.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseCounterparty() {\n    return {\n        clientId: \"\",\n        connectionId: \"\",\n        prefix: commitment_1.MerklePrefix.fromPartial({}),\n    };\n}\nexports.Counterparty = {\n    typeUrl: \"/ibc.core.connection.v1.Counterparty\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            commitment_1.MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCounterparty();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = commitment_1.MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCounterparty();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if ((0, helpers_1.isSet)(object.connectionId))\n            obj.connectionId = String(object.connectionId);\n        if ((0, helpers_1.isSet)(object.prefix))\n            obj.prefix = commitment_1.MerklePrefix.fromJSON(object.prefix);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix ? commitment_1.MerklePrefix.toJSON(message.prefix) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCounterparty();\n        message.clientId = object.clientId ?? \"\";\n        message.connectionId = object.connectionId ?? \"\";\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = commitment_1.MerklePrefix.fromPartial(object.prefix);\n        }\n        return message;\n    },\n};\nfunction createBaseClientPaths() {\n    return {\n        paths: [],\n    };\n}\nexports.ClientPaths = {\n    typeUrl: \"/ibc.core.connection.v1.ClientPaths\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseClientPaths();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseClientPaths();\n        if (Array.isArray(object?.paths))\n            obj.paths = object.paths.map((e) => String(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseClientPaths();\n        message.paths = object.paths?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseConnectionPaths() {\n    return {\n        clientId: \"\",\n        paths: [],\n    };\n}\nexports.ConnectionPaths = {\n    typeUrl: \"/ibc.core.connection.v1.ConnectionPaths\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConnectionPaths();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseConnectionPaths();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if (Array.isArray(object?.paths))\n            obj.paths = object.paths.map((e) => String(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseConnectionPaths();\n        message.clientId = object.clientId ?? \"\";\n        message.paths = object.paths?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseVersion() {\n    return {\n        identifier: \"\",\n        features: [],\n    };\n}\nexports.Version = {\n    typeUrl: \"/ibc.core.connection.v1.Version\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseVersion();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseVersion();\n        if ((0, helpers_1.isSet)(object.identifier))\n            obj.identifier = String(object.identifier);\n        if (Array.isArray(object?.features))\n            obj.features = object.features.map((e) => String(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseVersion();\n        message.identifier = object.identifier ?? \"\";\n        message.features = object.features?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseParams() {\n    return {\n        maxExpectedTimePerBlock: BigInt(0),\n    };\n}\nexports.Params = {\n    typeUrl: \"/ibc.core.connection.v1.Params\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.maxExpectedTimePerBlock !== BigInt(0)) {\n            writer.uint32(8).uint64(message.maxExpectedTimePerBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxExpectedTimePerBlock = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseParams();\n        if ((0, helpers_1.isSet)(object.maxExpectedTimePerBlock))\n            obj.maxExpectedTimePerBlock = BigInt(object.maxExpectedTimePerBlock.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxExpectedTimePerBlock !== undefined &&\n            (obj.maxExpectedTimePerBlock = (message.maxExpectedTimePerBlock || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseParams();\n        if (object.maxExpectedTimePerBlock !== undefined && object.maxExpectedTimePerBlock !== null) {\n            message.maxExpectedTimePerBlock = BigInt(object.maxExpectedTimePerBlock.toString());\n        }\n        return message;\n    },\n};\n//# sourceMappingURL=connection.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QueryConnectionParamsResponse = exports.QueryConnectionParamsRequest = exports.QueryConnectionConsensusStateResponse = exports.QueryConnectionConsensusStateRequest = exports.QueryConnectionClientStateResponse = exports.QueryConnectionClientStateRequest = exports.QueryClientConnectionsResponse = exports.QueryClientConnectionsRequest = exports.QueryConnectionsResponse = exports.QueryConnectionsRequest = exports.QueryConnectionResponse = exports.QueryConnectionRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst pagination_1 = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nconst connection_1 = require(\"./connection\");\nconst client_1 = require(\"../../client/v1/client\");\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.core.connection.v1\";\nfunction createBaseQueryConnectionRequest() {\n    return {\n        connectionId: \"\",\n    };\n}\nexports.QueryConnectionRequest = {\n    typeUrl: \"/ibc.core.connection.v1.QueryConnectionRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConnectionRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConnectionRequest();\n        if ((0, helpers_1.isSet)(object.connectionId))\n            obj.connectionId = String(object.connectionId);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConnectionRequest();\n        message.connectionId = object.connectionId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryConnectionResponse() {\n    return {\n        connection: undefined,\n        proof: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryConnectionResponse = {\n    typeUrl: \"/ibc.core.connection.v1.QueryConnectionResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.connection !== undefined) {\n            connection_1.ConnectionEnd.encode(message.connection, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(18).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConnectionResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connection = connection_1.ConnectionEnd.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proof = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConnectionResponse();\n        if ((0, helpers_1.isSet)(object.connection))\n            obj.connection = connection_1.ConnectionEnd.fromJSON(object.connection);\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connection !== undefined &&\n            (obj.connection = message.connection ? connection_1.ConnectionEnd.toJSON(message.connection) : undefined);\n        message.proof !== undefined &&\n            (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConnectionResponse();\n        if (object.connection !== undefined && object.connection !== null) {\n            message.connection = connection_1.ConnectionEnd.fromPartial(object.connection);\n        }\n        message.proof = object.proof ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryConnectionsRequest() {\n    return {\n        pagination: undefined,\n    };\n}\nexports.QueryConnectionsRequest = {\n    typeUrl: \"/ibc.core.connection.v1.QueryConnectionsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConnectionsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConnectionsRequest();\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConnectionsRequest();\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryConnectionsResponse() {\n    return {\n        connections: [],\n        pagination: undefined,\n        height: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryConnectionsResponse = {\n    typeUrl: \"/ibc.core.connection.v1.QueryConnectionsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.connections) {\n            connection_1.IdentifiedConnection.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== undefined) {\n            client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConnectionsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connections.push(connection_1.IdentifiedConnection.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConnectionsResponse();\n        if (Array.isArray(object?.connections))\n            obj.connections = object.connections.map((e) => connection_1.IdentifiedConnection.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.pagination))\n            obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = client_1.Height.fromJSON(object.height);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.connections) {\n            obj.connections = message.connections.map((e) => (e ? connection_1.IdentifiedConnection.toJSON(e) : undefined));\n        }\n        else {\n            obj.connections = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConnectionsResponse();\n        message.connections = object.connections?.map((e) => connection_1.IdentifiedConnection.fromPartial(e)) || [];\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = client_1.Height.fromPartial(object.height);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryClientConnectionsRequest() {\n    return {\n        clientId: \"\",\n    };\n}\nexports.QueryClientConnectionsRequest = {\n    typeUrl: \"/ibc.core.connection.v1.QueryClientConnectionsRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryClientConnectionsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryClientConnectionsRequest();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryClientConnectionsRequest();\n        message.clientId = object.clientId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryClientConnectionsResponse() {\n    return {\n        connectionPaths: [],\n        proof: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryClientConnectionsResponse = {\n    typeUrl: \"/ibc.core.connection.v1.QueryClientConnectionsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.connectionPaths) {\n            writer.uint32(10).string(v);\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(18).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryClientConnectionsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionPaths.push(reader.string());\n                    break;\n                case 2:\n                    message.proof = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryClientConnectionsResponse();\n        if (Array.isArray(object?.connectionPaths))\n            obj.connectionPaths = object.connectionPaths.map((e) => String(e));\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.connectionPaths) {\n            obj.connectionPaths = message.connectionPaths.map((e) => e);\n        }\n        else {\n            obj.connectionPaths = [];\n        }\n        message.proof !== undefined &&\n            (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryClientConnectionsResponse();\n        message.connectionPaths = object.connectionPaths?.map((e) => e) || [];\n        message.proof = object.proof ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryConnectionClientStateRequest() {\n    return {\n        connectionId: \"\",\n    };\n}\nexports.QueryConnectionClientStateRequest = {\n    typeUrl: \"/ibc.core.connection.v1.QueryConnectionClientStateRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConnectionClientStateRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConnectionClientStateRequest();\n        if ((0, helpers_1.isSet)(object.connectionId))\n            obj.connectionId = String(object.connectionId);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConnectionClientStateRequest();\n        message.connectionId = object.connectionId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryConnectionClientStateResponse() {\n    return {\n        identifiedClientState: undefined,\n        proof: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryConnectionClientStateResponse = {\n    typeUrl: \"/ibc.core.connection.v1.QueryConnectionClientStateResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.identifiedClientState !== undefined) {\n            client_1.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(18).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConnectionClientStateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifiedClientState = client_1.IdentifiedClientState.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proof = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConnectionClientStateResponse();\n        if ((0, helpers_1.isSet)(object.identifiedClientState))\n            obj.identifiedClientState = client_1.IdentifiedClientState.fromJSON(object.identifiedClientState);\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifiedClientState !== undefined &&\n            (obj.identifiedClientState = message.identifiedClientState\n                ? client_1.IdentifiedClientState.toJSON(message.identifiedClientState)\n                : undefined);\n        message.proof !== undefined &&\n            (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConnectionClientStateResponse();\n        if (object.identifiedClientState !== undefined && object.identifiedClientState !== null) {\n            message.identifiedClientState = client_1.IdentifiedClientState.fromPartial(object.identifiedClientState);\n        }\n        message.proof = object.proof ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryConnectionConsensusStateRequest() {\n    return {\n        connectionId: \"\",\n        revisionNumber: BigInt(0),\n        revisionHeight: BigInt(0),\n    };\n}\nexports.QueryConnectionConsensusStateRequest = {\n    typeUrl: \"/ibc.core.connection.v1.QueryConnectionConsensusStateRequest\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.revisionNumber !== BigInt(0)) {\n            writer.uint32(16).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== BigInt(0)) {\n            writer.uint32(24).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConnectionConsensusStateRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.revisionNumber = reader.uint64();\n                    break;\n                case 3:\n                    message.revisionHeight = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConnectionConsensusStateRequest();\n        if ((0, helpers_1.isSet)(object.connectionId))\n            obj.connectionId = String(object.connectionId);\n        if ((0, helpers_1.isSet)(object.revisionNumber))\n            obj.revisionNumber = BigInt(object.revisionNumber.toString());\n        if ((0, helpers_1.isSet)(object.revisionHeight))\n            obj.revisionHeight = BigInt(object.revisionHeight.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = (message.revisionNumber || BigInt(0)).toString());\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = (message.revisionHeight || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConnectionConsensusStateRequest();\n        message.connectionId = object.connectionId ?? \"\";\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = BigInt(object.revisionNumber.toString());\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = BigInt(object.revisionHeight.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseQueryConnectionConsensusStateResponse() {\n    return {\n        consensusState: undefined,\n        clientId: \"\",\n        proof: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n    };\n}\nexports.QueryConnectionConsensusStateResponse = {\n    typeUrl: \"/ibc.core.connection.v1.QueryConnectionConsensusStateResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.consensusState !== undefined) {\n            any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(26).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConnectionConsensusStateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.proof = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConnectionConsensusStateResponse();\n        if ((0, helpers_1.isSet)(object.consensusState))\n            obj.consensusState = any_1.Any.fromJSON(object.consensusState);\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : undefined);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.proof !== undefined &&\n            (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConnectionConsensusStateResponse();\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = any_1.Any.fromPartial(object.consensusState);\n        }\n        message.clientId = object.clientId ?? \"\";\n        message.proof = object.proof ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        return message;\n    },\n};\nfunction createBaseQueryConnectionParamsRequest() {\n    return {};\n}\nexports.QueryConnectionParamsRequest = {\n    typeUrl: \"/ibc.core.connection.v1.QueryConnectionParamsRequest\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConnectionParamsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseQueryConnectionParamsRequest();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseQueryConnectionParamsRequest();\n        return message;\n    },\n};\nfunction createBaseQueryConnectionParamsResponse() {\n    return {\n        params: undefined,\n    };\n}\nexports.QueryConnectionParamsResponse = {\n    typeUrl: \"/ibc.core.connection.v1.QueryConnectionParamsResponse\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.params !== undefined) {\n            client_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryConnectionParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = client_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseQueryConnectionParamsResponse();\n        if ((0, helpers_1.isSet)(object.params))\n            obj.params = client_1.Params.fromJSON(object.params);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? client_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseQueryConnectionParamsResponse();\n        if (object.params !== undefined && object.params !== null) {\n            message.params = client_1.Params.fromPartial(object.params);\n        }\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Connection = this.Connection.bind(this);\n        this.Connections = this.Connections.bind(this);\n        this.ClientConnections = this.ClientConnections.bind(this);\n        this.ConnectionClientState = this.ConnectionClientState.bind(this);\n        this.ConnectionConsensusState = this.ConnectionConsensusState.bind(this);\n        this.ConnectionParams = this.ConnectionParams.bind(this);\n    }\n    Connection(request) {\n        const data = exports.QueryConnectionRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"Connection\", data);\n        return promise.then((data) => exports.QueryConnectionResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    Connections(request = {\n        pagination: pagination_1.PageRequest.fromPartial({}),\n    }) {\n        const data = exports.QueryConnectionsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"Connections\", data);\n        return promise.then((data) => exports.QueryConnectionsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ClientConnections(request) {\n        const data = exports.QueryClientConnectionsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ClientConnections\", data);\n        return promise.then((data) => exports.QueryClientConnectionsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ConnectionClientState(request) {\n        const data = exports.QueryConnectionClientStateRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ConnectionClientState\", data);\n        return promise.then((data) => exports.QueryConnectionClientStateResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ConnectionConsensusState(request) {\n        const data = exports.QueryConnectionConsensusStateRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ConnectionConsensusState\", data);\n        return promise.then((data) => exports.QueryConnectionConsensusStateResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ConnectionParams(request = {}) {\n        const data = exports.QueryConnectionParamsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ConnectionParams\", data);\n        return promise.then((data) => exports.QueryConnectionParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\n//# sourceMappingURL=query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgConnectionOpenConfirmResponse = exports.MsgConnectionOpenConfirm = exports.MsgConnectionOpenAckResponse = exports.MsgConnectionOpenAck = exports.MsgConnectionOpenTryResponse = exports.MsgConnectionOpenTry = exports.MsgConnectionOpenInitResponse = exports.MsgConnectionOpenInit = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst connection_1 = require(\"./connection\");\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst client_1 = require(\"../../client/v1/client\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.core.connection.v1\";\nfunction createBaseMsgConnectionOpenInit() {\n    return {\n        clientId: \"\",\n        counterparty: connection_1.Counterparty.fromPartial({}),\n        version: undefined,\n        delayPeriod: BigInt(0),\n        signer: \"\",\n    };\n}\nexports.MsgConnectionOpenInit = {\n    typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            connection_1.Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== BigInt(0)) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgConnectionOpenInit();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = connection_1.Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = reader.uint64();\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgConnectionOpenInit();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if ((0, helpers_1.isSet)(object.counterparty))\n            obj.counterparty = connection_1.Counterparty.fromJSON(object.counterparty);\n        if ((0, helpers_1.isSet)(object.version))\n            obj.version = connection_1.Version.fromJSON(object.version);\n        if ((0, helpers_1.isSet)(object.delayPeriod))\n            obj.delayPeriod = BigInt(object.delayPeriod.toString());\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version ? connection_1.Version.toJSON(message.version) : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || BigInt(0)).toString());\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgConnectionOpenInit();\n        message.clientId = object.clientId ?? \"\";\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = connection_1.Counterparty.fromPartial(object.counterparty);\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = connection_1.Version.fromPartial(object.version);\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = BigInt(object.delayPeriod.toString());\n        }\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgConnectionOpenInitResponse() {\n    return {};\n}\nexports.MsgConnectionOpenInitResponse = {\n    typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInitResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgConnectionOpenInitResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgConnectionOpenInitResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgConnectionOpenInitResponse();\n        return message;\n    },\n};\nfunction createBaseMsgConnectionOpenTry() {\n    return {\n        clientId: \"\",\n        previousConnectionId: \"\",\n        clientState: undefined,\n        counterparty: connection_1.Counterparty.fromPartial({}),\n        delayPeriod: BigInt(0),\n        counterpartyVersions: [],\n        proofHeight: client_1.Height.fromPartial({}),\n        proofInit: new Uint8Array(),\n        proofClient: new Uint8Array(),\n        proofConsensus: new Uint8Array(),\n        consensusHeight: client_1.Height.fromPartial({}),\n        signer: \"\",\n        hostConsensusStateProof: new Uint8Array(),\n    };\n}\nexports.MsgConnectionOpenTry = {\n    typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            any_1.Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            connection_1.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== BigInt(0)) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            connection_1.Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            client_1.Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        if (message.hostConsensusStateProof.length !== 0) {\n            writer.uint32(106).bytes(message.hostConsensusStateProof);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgConnectionOpenTry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = reader.uint64();\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(connection_1.Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                case 13:\n                    message.hostConsensusStateProof = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgConnectionOpenTry();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if ((0, helpers_1.isSet)(object.previousConnectionId))\n            obj.previousConnectionId = String(object.previousConnectionId);\n        if ((0, helpers_1.isSet)(object.clientState))\n            obj.clientState = any_1.Any.fromJSON(object.clientState);\n        if ((0, helpers_1.isSet)(object.counterparty))\n            obj.counterparty = connection_1.Counterparty.fromJSON(object.counterparty);\n        if ((0, helpers_1.isSet)(object.delayPeriod))\n            obj.delayPeriod = BigInt(object.delayPeriod.toString());\n        if (Array.isArray(object?.counterpartyVersions))\n            obj.counterpartyVersions = object.counterpartyVersions.map((e) => connection_1.Version.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        if ((0, helpers_1.isSet)(object.proofInit))\n            obj.proofInit = (0, helpers_1.bytesFromBase64)(object.proofInit);\n        if ((0, helpers_1.isSet)(object.proofClient))\n            obj.proofClient = (0, helpers_1.bytesFromBase64)(object.proofClient);\n        if ((0, helpers_1.isSet)(object.proofConsensus))\n            obj.proofConsensus = (0, helpers_1.bytesFromBase64)(object.proofConsensus);\n        if ((0, helpers_1.isSet)(object.consensusHeight))\n            obj.consensusHeight = client_1.Height.fromJSON(object.consensusHeight);\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        if ((0, helpers_1.isSet)(object.hostConsensusStateProof))\n            obj.hostConsensusStateProof = (0, helpers_1.bytesFromBase64)(object.hostConsensusStateProof);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined && (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || BigInt(0)).toString());\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => (e ? connection_1.Version.toJSON(e) : undefined));\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = (0, helpers_1.base64FromBytes)(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = (0, helpers_1.base64FromBytes)(message.proofClient !== undefined ? message.proofClient : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = (0, helpers_1.base64FromBytes)(message.proofConsensus !== undefined ? message.proofConsensus : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        message.hostConsensusStateProof !== undefined &&\n            (obj.hostConsensusStateProof = (0, helpers_1.base64FromBytes)(message.hostConsensusStateProof !== undefined ? message.hostConsensusStateProof : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgConnectionOpenTry();\n        message.clientId = object.clientId ?? \"\";\n        message.previousConnectionId = object.previousConnectionId ?? \"\";\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = any_1.Any.fromPartial(object.clientState);\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = connection_1.Counterparty.fromPartial(object.counterparty);\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = BigInt(object.delayPeriod.toString());\n        }\n        message.counterpartyVersions = object.counterpartyVersions?.map((e) => connection_1.Version.fromPartial(e)) || [];\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        message.proofInit = object.proofInit ?? new Uint8Array();\n        message.proofClient = object.proofClient ?? new Uint8Array();\n        message.proofConsensus = object.proofConsensus ?? new Uint8Array();\n        if (object.consensusHeight !== undefined && object.consensusHeight !== null) {\n            message.consensusHeight = client_1.Height.fromPartial(object.consensusHeight);\n        }\n        message.signer = object.signer ?? \"\";\n        message.hostConsensusStateProof = object.hostConsensusStateProof ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseMsgConnectionOpenTryResponse() {\n    return {};\n}\nexports.MsgConnectionOpenTryResponse = {\n    typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTryResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgConnectionOpenTryResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgConnectionOpenTryResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgConnectionOpenTryResponse();\n        return message;\n    },\n};\nfunction createBaseMsgConnectionOpenAck() {\n    return {\n        connectionId: \"\",\n        counterpartyConnectionId: \"\",\n        version: undefined,\n        clientState: undefined,\n        proofHeight: client_1.Height.fromPartial({}),\n        proofTry: new Uint8Array(),\n        proofClient: new Uint8Array(),\n        proofConsensus: new Uint8Array(),\n        consensusHeight: client_1.Height.fromPartial({}),\n        signer: \"\",\n        hostConsensusStateProof: new Uint8Array(),\n    };\n}\nexports.MsgConnectionOpenAck = {\n    typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            any_1.Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            client_1.Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        if (message.hostConsensusStateProof.length !== 0) {\n            writer.uint32(90).bytes(message.hostConsensusStateProof);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgConnectionOpenAck();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = connection_1.Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                case 11:\n                    message.hostConsensusStateProof = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgConnectionOpenAck();\n        if ((0, helpers_1.isSet)(object.connectionId))\n            obj.connectionId = String(object.connectionId);\n        if ((0, helpers_1.isSet)(object.counterpartyConnectionId))\n            obj.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        if ((0, helpers_1.isSet)(object.version))\n            obj.version = connection_1.Version.fromJSON(object.version);\n        if ((0, helpers_1.isSet)(object.clientState))\n            obj.clientState = any_1.Any.fromJSON(object.clientState);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        if ((0, helpers_1.isSet)(object.proofTry))\n            obj.proofTry = (0, helpers_1.bytesFromBase64)(object.proofTry);\n        if ((0, helpers_1.isSet)(object.proofClient))\n            obj.proofClient = (0, helpers_1.bytesFromBase64)(object.proofClient);\n        if ((0, helpers_1.isSet)(object.proofConsensus))\n            obj.proofConsensus = (0, helpers_1.bytesFromBase64)(object.proofConsensus);\n        if ((0, helpers_1.isSet)(object.consensusHeight))\n            obj.consensusHeight = client_1.Height.fromJSON(object.consensusHeight);\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        if ((0, helpers_1.isSet)(object.hostConsensusStateProof))\n            obj.hostConsensusStateProof = (0, helpers_1.bytesFromBase64)(object.hostConsensusStateProof);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version ? connection_1.Version.toJSON(message.version) : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = (0, helpers_1.base64FromBytes)(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = (0, helpers_1.base64FromBytes)(message.proofClient !== undefined ? message.proofClient : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = (0, helpers_1.base64FromBytes)(message.proofConsensus !== undefined ? message.proofConsensus : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        message.hostConsensusStateProof !== undefined &&\n            (obj.hostConsensusStateProof = (0, helpers_1.base64FromBytes)(message.hostConsensusStateProof !== undefined ? message.hostConsensusStateProof : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgConnectionOpenAck();\n        message.connectionId = object.connectionId ?? \"\";\n        message.counterpartyConnectionId = object.counterpartyConnectionId ?? \"\";\n        if (object.version !== undefined && object.version !== null) {\n            message.version = connection_1.Version.fromPartial(object.version);\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = any_1.Any.fromPartial(object.clientState);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        message.proofTry = object.proofTry ?? new Uint8Array();\n        message.proofClient = object.proofClient ?? new Uint8Array();\n        message.proofConsensus = object.proofConsensus ?? new Uint8Array();\n        if (object.consensusHeight !== undefined && object.consensusHeight !== null) {\n            message.consensusHeight = client_1.Height.fromPartial(object.consensusHeight);\n        }\n        message.signer = object.signer ?? \"\";\n        message.hostConsensusStateProof = object.hostConsensusStateProof ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseMsgConnectionOpenAckResponse() {\n    return {};\n}\nexports.MsgConnectionOpenAckResponse = {\n    typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAckResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgConnectionOpenAckResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgConnectionOpenAckResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgConnectionOpenAckResponse();\n        return message;\n    },\n};\nfunction createBaseMsgConnectionOpenConfirm() {\n    return {\n        connectionId: \"\",\n        proofAck: new Uint8Array(),\n        proofHeight: client_1.Height.fromPartial({}),\n        signer: \"\",\n    };\n}\nexports.MsgConnectionOpenConfirm = {\n    typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgConnectionOpenConfirm();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgConnectionOpenConfirm();\n        if ((0, helpers_1.isSet)(object.connectionId))\n            obj.connectionId = String(object.connectionId);\n        if ((0, helpers_1.isSet)(object.proofAck))\n            obj.proofAck = (0, helpers_1.bytesFromBase64)(object.proofAck);\n        if ((0, helpers_1.isSet)(object.proofHeight))\n            obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        if ((0, helpers_1.isSet)(object.signer))\n            obj.signer = String(object.signer);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = (0, helpers_1.base64FromBytes)(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgConnectionOpenConfirm();\n        message.connectionId = object.connectionId ?? \"\";\n        message.proofAck = object.proofAck ?? new Uint8Array();\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        message.signer = object.signer ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMsgConnectionOpenConfirmResponse() {\n    return {};\n}\nexports.MsgConnectionOpenConfirmResponse = {\n    typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirmResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgConnectionOpenConfirmResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgConnectionOpenConfirmResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgConnectionOpenConfirmResponse();\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.ConnectionOpenInit = this.ConnectionOpenInit.bind(this);\n        this.ConnectionOpenTry = this.ConnectionOpenTry.bind(this);\n        this.ConnectionOpenAck = this.ConnectionOpenAck.bind(this);\n        this.ConnectionOpenConfirm = this.ConnectionOpenConfirm.bind(this);\n    }\n    ConnectionOpenInit(request) {\n        const data = exports.MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => exports.MsgConnectionOpenInitResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = exports.MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => exports.MsgConnectionOpenTryResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = exports.MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => exports.MsgConnectionOpenAckResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = exports.MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => exports.MsgConnectionOpenConfirmResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Fraction = exports.Header = exports.Misbehaviour = exports.ConsensusState = exports.ClientState = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst duration_1 = require(\"../../../../google/protobuf/duration\");\nconst client_1 = require(\"../../../core/client/v1/client\");\nconst proofs_1 = require(\"../../../../cosmos/ics23/v1/proofs\");\nconst timestamp_1 = require(\"../../../../google/protobuf/timestamp\");\nconst commitment_1 = require(\"../../../core/commitment/v1/commitment\");\nconst types_1 = require(\"../../../../tendermint/types/types\");\nconst validator_1 = require(\"../../../../tendermint/types/validator\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.lightclients.tendermint.v1\";\nfunction createBaseClientState() {\n    return {\n        chainId: \"\",\n        trustLevel: exports.Fraction.fromPartial({}),\n        trustingPeriod: duration_1.Duration.fromPartial({}),\n        unbondingPeriod: duration_1.Duration.fromPartial({}),\n        maxClockDrift: duration_1.Duration.fromPartial({}),\n        frozenHeight: client_1.Height.fromPartial({}),\n        latestHeight: client_1.Height.fromPartial({}),\n        proofSpecs: [],\n        upgradePath: [],\n        allowUpdateAfterExpiry: false,\n        allowUpdateAfterMisbehaviour: false,\n    };\n}\nexports.ClientState = {\n    typeUrl: \"/ibc.lightclients.tendermint.v1.ClientState\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.chainId !== \"\") {\n            writer.uint32(10).string(message.chainId);\n        }\n        if (message.trustLevel !== undefined) {\n            exports.Fraction.encode(message.trustLevel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.trustingPeriod !== undefined) {\n            duration_1.Duration.encode(message.trustingPeriod, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.unbondingPeriod !== undefined) {\n            duration_1.Duration.encode(message.unbondingPeriod, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.maxClockDrift !== undefined) {\n            duration_1.Duration.encode(message.maxClockDrift, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.frozenHeight !== undefined) {\n            client_1.Height.encode(message.frozenHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.latestHeight !== undefined) {\n            client_1.Height.encode(message.latestHeight, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.proofSpecs) {\n            proofs_1.ProofSpec.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.upgradePath) {\n            writer.uint32(74).string(v);\n        }\n        if (message.allowUpdateAfterExpiry === true) {\n            writer.uint32(80).bool(message.allowUpdateAfterExpiry);\n        }\n        if (message.allowUpdateAfterMisbehaviour === true) {\n            writer.uint32(88).bool(message.allowUpdateAfterMisbehaviour);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseClientState();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chainId = reader.string();\n                    break;\n                case 2:\n                    message.trustLevel = exports.Fraction.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.trustingPeriod = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.unbondingPeriod = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.maxClockDrift = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.frozenHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.latestHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofSpecs.push(proofs_1.ProofSpec.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.upgradePath.push(reader.string());\n                    break;\n                case 10:\n                    message.allowUpdateAfterExpiry = reader.bool();\n                    break;\n                case 11:\n                    message.allowUpdateAfterMisbehaviour = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseClientState();\n        if ((0, helpers_1.isSet)(object.chainId))\n            obj.chainId = String(object.chainId);\n        if ((0, helpers_1.isSet)(object.trustLevel))\n            obj.trustLevel = exports.Fraction.fromJSON(object.trustLevel);\n        if ((0, helpers_1.isSet)(object.trustingPeriod))\n            obj.trustingPeriod = duration_1.Duration.fromJSON(object.trustingPeriod);\n        if ((0, helpers_1.isSet)(object.unbondingPeriod))\n            obj.unbondingPeriod = duration_1.Duration.fromJSON(object.unbondingPeriod);\n        if ((0, helpers_1.isSet)(object.maxClockDrift))\n            obj.maxClockDrift = duration_1.Duration.fromJSON(object.maxClockDrift);\n        if ((0, helpers_1.isSet)(object.frozenHeight))\n            obj.frozenHeight = client_1.Height.fromJSON(object.frozenHeight);\n        if ((0, helpers_1.isSet)(object.latestHeight))\n            obj.latestHeight = client_1.Height.fromJSON(object.latestHeight);\n        if (Array.isArray(object?.proofSpecs))\n            obj.proofSpecs = object.proofSpecs.map((e) => proofs_1.ProofSpec.fromJSON(e));\n        if (Array.isArray(object?.upgradePath))\n            obj.upgradePath = object.upgradePath.map((e) => String(e));\n        if ((0, helpers_1.isSet)(object.allowUpdateAfterExpiry))\n            obj.allowUpdateAfterExpiry = Boolean(object.allowUpdateAfterExpiry);\n        if ((0, helpers_1.isSet)(object.allowUpdateAfterMisbehaviour))\n            obj.allowUpdateAfterMisbehaviour = Boolean(object.allowUpdateAfterMisbehaviour);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.trustLevel !== undefined &&\n            (obj.trustLevel = message.trustLevel ? exports.Fraction.toJSON(message.trustLevel) : undefined);\n        message.trustingPeriod !== undefined &&\n            (obj.trustingPeriod = message.trustingPeriod ? duration_1.Duration.toJSON(message.trustingPeriod) : undefined);\n        message.unbondingPeriod !== undefined &&\n            (obj.unbondingPeriod = message.unbondingPeriod ? duration_1.Duration.toJSON(message.unbondingPeriod) : undefined);\n        message.maxClockDrift !== undefined &&\n            (obj.maxClockDrift = message.maxClockDrift ? duration_1.Duration.toJSON(message.maxClockDrift) : undefined);\n        message.frozenHeight !== undefined &&\n            (obj.frozenHeight = message.frozenHeight ? client_1.Height.toJSON(message.frozenHeight) : undefined);\n        message.latestHeight !== undefined &&\n            (obj.latestHeight = message.latestHeight ? client_1.Height.toJSON(message.latestHeight) : undefined);\n        if (message.proofSpecs) {\n            obj.proofSpecs = message.proofSpecs.map((e) => (e ? proofs_1.ProofSpec.toJSON(e) : undefined));\n        }\n        else {\n            obj.proofSpecs = [];\n        }\n        if (message.upgradePath) {\n            obj.upgradePath = message.upgradePath.map((e) => e);\n        }\n        else {\n            obj.upgradePath = [];\n        }\n        message.allowUpdateAfterExpiry !== undefined &&\n            (obj.allowUpdateAfterExpiry = message.allowUpdateAfterExpiry);\n        message.allowUpdateAfterMisbehaviour !== undefined &&\n            (obj.allowUpdateAfterMisbehaviour = message.allowUpdateAfterMisbehaviour);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseClientState();\n        message.chainId = object.chainId ?? \"\";\n        if (object.trustLevel !== undefined && object.trustLevel !== null) {\n            message.trustLevel = exports.Fraction.fromPartial(object.trustLevel);\n        }\n        if (object.trustingPeriod !== undefined && object.trustingPeriod !== null) {\n            message.trustingPeriod = duration_1.Duration.fromPartial(object.trustingPeriod);\n        }\n        if (object.unbondingPeriod !== undefined && object.unbondingPeriod !== null) {\n            message.unbondingPeriod = duration_1.Duration.fromPartial(object.unbondingPeriod);\n        }\n        if (object.maxClockDrift !== undefined && object.maxClockDrift !== null) {\n            message.maxClockDrift = duration_1.Duration.fromPartial(object.maxClockDrift);\n        }\n        if (object.frozenHeight !== undefined && object.frozenHeight !== null) {\n            message.frozenHeight = client_1.Height.fromPartial(object.frozenHeight);\n        }\n        if (object.latestHeight !== undefined && object.latestHeight !== null) {\n            message.latestHeight = client_1.Height.fromPartial(object.latestHeight);\n        }\n        message.proofSpecs = object.proofSpecs?.map((e) => proofs_1.ProofSpec.fromPartial(e)) || [];\n        message.upgradePath = object.upgradePath?.map((e) => e) || [];\n        message.allowUpdateAfterExpiry = object.allowUpdateAfterExpiry ?? false;\n        message.allowUpdateAfterMisbehaviour = object.allowUpdateAfterMisbehaviour ?? false;\n        return message;\n    },\n};\nfunction createBaseConsensusState() {\n    return {\n        timestamp: timestamp_1.Timestamp.fromPartial({}),\n        root: commitment_1.MerkleRoot.fromPartial({}),\n        nextValidatorsHash: new Uint8Array(),\n    };\n}\nexports.ConsensusState = {\n    typeUrl: \"/ibc.lightclients.tendermint.v1.ConsensusState\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.timestamp !== undefined) {\n            timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.root !== undefined) {\n            commitment_1.MerkleRoot.encode(message.root, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(26).bytes(message.nextValidatorsHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConsensusState();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.root = commitment_1.MerkleRoot.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseConsensusState();\n        if ((0, helpers_1.isSet)(object.timestamp))\n            obj.timestamp = (0, helpers_1.fromJsonTimestamp)(object.timestamp);\n        if ((0, helpers_1.isSet)(object.root))\n            obj.root = commitment_1.MerkleRoot.fromJSON(object.root);\n        if ((0, helpers_1.isSet)(object.nextValidatorsHash))\n            obj.nextValidatorsHash = (0, helpers_1.bytesFromBase64)(object.nextValidatorsHash);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.timestamp !== undefined && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());\n        message.root !== undefined && (obj.root = message.root ? commitment_1.MerkleRoot.toJSON(message.root) : undefined);\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = (0, helpers_1.base64FromBytes)(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseConsensusState();\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = timestamp_1.Timestamp.fromPartial(object.timestamp);\n        }\n        if (object.root !== undefined && object.root !== null) {\n            message.root = commitment_1.MerkleRoot.fromPartial(object.root);\n        }\n        message.nextValidatorsHash = object.nextValidatorsHash ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseMisbehaviour() {\n    return {\n        clientId: \"\",\n        header1: undefined,\n        header2: undefined,\n    };\n}\nexports.Misbehaviour = {\n    typeUrl: \"/ibc.lightclients.tendermint.v1.Misbehaviour\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header1 !== undefined) {\n            exports.Header.encode(message.header1, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.header2 !== undefined) {\n            exports.Header.encode(message.header2, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMisbehaviour();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header1 = exports.Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.header2 = exports.Header.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMisbehaviour();\n        if ((0, helpers_1.isSet)(object.clientId))\n            obj.clientId = String(object.clientId);\n        if ((0, helpers_1.isSet)(object.header1))\n            obj.header1 = exports.Header.fromJSON(object.header1);\n        if ((0, helpers_1.isSet)(object.header2))\n            obj.header2 = exports.Header.fromJSON(object.header2);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header1 !== undefined &&\n            (obj.header1 = message.header1 ? exports.Header.toJSON(message.header1) : undefined);\n        message.header2 !== undefined &&\n            (obj.header2 = message.header2 ? exports.Header.toJSON(message.header2) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMisbehaviour();\n        message.clientId = object.clientId ?? \"\";\n        if (object.header1 !== undefined && object.header1 !== null) {\n            message.header1 = exports.Header.fromPartial(object.header1);\n        }\n        if (object.header2 !== undefined && object.header2 !== null) {\n            message.header2 = exports.Header.fromPartial(object.header2);\n        }\n        return message;\n    },\n};\nfunction createBaseHeader() {\n    return {\n        signedHeader: undefined,\n        validatorSet: undefined,\n        trustedHeight: client_1.Height.fromPartial({}),\n        trustedValidators: undefined,\n    };\n}\nexports.Header = {\n    typeUrl: \"/ibc.lightclients.tendermint.v1.Header\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.signedHeader !== undefined) {\n            types_1.SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            validator_1.ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.trustedHeight !== undefined) {\n            client_1.Height.encode(message.trustedHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.trustedValidators !== undefined) {\n            validator_1.ValidatorSet.encode(message.trustedValidators, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseHeader();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = types_1.SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = validator_1.ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.trustedHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.trustedValidators = validator_1.ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseHeader();\n        if ((0, helpers_1.isSet)(object.signedHeader))\n            obj.signedHeader = types_1.SignedHeader.fromJSON(object.signedHeader);\n        if ((0, helpers_1.isSet)(object.validatorSet))\n            obj.validatorSet = validator_1.ValidatorSet.fromJSON(object.validatorSet);\n        if ((0, helpers_1.isSet)(object.trustedHeight))\n            obj.trustedHeight = client_1.Height.fromJSON(object.trustedHeight);\n        if ((0, helpers_1.isSet)(object.trustedValidators))\n            obj.trustedValidators = validator_1.ValidatorSet.fromJSON(object.trustedValidators);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader ? types_1.SignedHeader.toJSON(message.signedHeader) : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet ? validator_1.ValidatorSet.toJSON(message.validatorSet) : undefined);\n        message.trustedHeight !== undefined &&\n            (obj.trustedHeight = message.trustedHeight ? client_1.Height.toJSON(message.trustedHeight) : undefined);\n        message.trustedValidators !== undefined &&\n            (obj.trustedValidators = message.trustedValidators\n                ? validator_1.ValidatorSet.toJSON(message.trustedValidators)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseHeader();\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = types_1.SignedHeader.fromPartial(object.signedHeader);\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = validator_1.ValidatorSet.fromPartial(object.validatorSet);\n        }\n        if (object.trustedHeight !== undefined && object.trustedHeight !== null) {\n            message.trustedHeight = client_1.Height.fromPartial(object.trustedHeight);\n        }\n        if (object.trustedValidators !== undefined && object.trustedValidators !== null) {\n            message.trustedValidators = validator_1.ValidatorSet.fromPartial(object.trustedValidators);\n        }\n        return message;\n    },\n};\nfunction createBaseFraction() {\n    return {\n        numerator: BigInt(0),\n        denominator: BigInt(0),\n    };\n}\nexports.Fraction = {\n    typeUrl: \"/ibc.lightclients.tendermint.v1.Fraction\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.numerator !== BigInt(0)) {\n            writer.uint32(8).uint64(message.numerator);\n        }\n        if (message.denominator !== BigInt(0)) {\n            writer.uint32(16).uint64(message.denominator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFraction();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.numerator = reader.uint64();\n                    break;\n                case 2:\n                    message.denominator = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseFraction();\n        if ((0, helpers_1.isSet)(object.numerator))\n            obj.numerator = BigInt(object.numerator.toString());\n        if ((0, helpers_1.isSet)(object.denominator))\n            obj.denominator = BigInt(object.denominator.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.numerator !== undefined && (obj.numerator = (message.numerator || BigInt(0)).toString());\n        message.denominator !== undefined && (obj.denominator = (message.denominator || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseFraction();\n        if (object.numerator !== undefined && object.numerator !== null) {\n            message.numerator = BigInt(object.numerator.toString());\n        }\n        if (object.denominator !== undefined && object.denominator !== null) {\n            message.denominator = BigInt(object.denominator.toString());\n        }\n        return message;\n    },\n};\n//# sourceMappingURL=tendermint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResponsePrepareProposal = exports.ResponseApplySnapshotChunk = exports.ResponseLoadSnapshotChunk = exports.ResponseOfferSnapshot = exports.ResponseListSnapshots = exports.ResponseCommit = exports.ResponseEndBlock = exports.ResponseDeliverTx = exports.ResponseCheckTx = exports.ResponseBeginBlock = exports.ResponseQuery = exports.ResponseInitChain = exports.ResponseInfo = exports.ResponseFlush = exports.ResponseEcho = exports.ResponseException = exports.Response = exports.RequestProcessProposal = exports.RequestPrepareProposal = exports.RequestApplySnapshotChunk = exports.RequestLoadSnapshotChunk = exports.RequestOfferSnapshot = exports.RequestListSnapshots = exports.RequestCommit = exports.RequestEndBlock = exports.RequestDeliverTx = exports.RequestCheckTx = exports.RequestBeginBlock = exports.RequestQuery = exports.RequestInitChain = exports.RequestInfo = exports.RequestFlush = exports.RequestEcho = exports.Request = exports.misbehaviorTypeToJSON = exports.misbehaviorTypeFromJSON = exports.MisbehaviorType = exports.responseProcessProposal_ProposalStatusToJSON = exports.responseProcessProposal_ProposalStatusFromJSON = exports.ResponseProcessProposal_ProposalStatus = exports.responseApplySnapshotChunk_ResultToJSON = exports.responseApplySnapshotChunk_ResultFromJSON = exports.ResponseApplySnapshotChunk_Result = exports.responseOfferSnapshot_ResultToJSON = exports.responseOfferSnapshot_ResultFromJSON = exports.ResponseOfferSnapshot_Result = exports.checkTxTypeToJSON = exports.checkTxTypeFromJSON = exports.CheckTxType = exports.protobufPackage = void 0;\nexports.ABCIApplicationClientImpl = exports.Snapshot = exports.Misbehavior = exports.ExtendedVoteInfo = exports.VoteInfo = exports.ValidatorUpdate = exports.Validator = exports.TxResult = exports.EventAttribute = exports.Event = exports.ExtendedCommitInfo = exports.CommitInfo = exports.ResponseProcessProposal = void 0;\n/* eslint-disable */\nconst timestamp_1 = require(\"../../google/protobuf/timestamp\");\nconst params_1 = require(\"../types/params\");\nconst types_1 = require(\"../types/types\");\nconst proof_1 = require(\"../crypto/proof\");\nconst keys_1 = require(\"../crypto/keys\");\nconst binary_1 = require(\"../../binary\");\nconst helpers_1 = require(\"../../helpers\");\nexports.protobufPackage = \"tendermint.abci\";\nvar CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (exports.CheckTxType = CheckTxType = {}));\nfunction checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexports.checkTxTypeFromJSON = checkTxTypeFromJSON;\nfunction checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        case CheckTxType.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.checkTxTypeToJSON = checkTxTypeToJSON;\nvar ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (exports.ResponseOfferSnapshot_Result = ResponseOfferSnapshot_Result = {}));\nfunction responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexports.responseOfferSnapshot_ResultFromJSON = responseOfferSnapshot_ResultFromJSON;\nfunction responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        case ResponseOfferSnapshot_Result.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.responseOfferSnapshot_ResultToJSON = responseOfferSnapshot_ResultToJSON;\nvar ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (exports.ResponseApplySnapshotChunk_Result = ResponseApplySnapshotChunk_Result = {}));\nfunction responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexports.responseApplySnapshotChunk_ResultFromJSON = responseApplySnapshotChunk_ResultFromJSON;\nfunction responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.responseApplySnapshotChunk_ResultToJSON = responseApplySnapshotChunk_ResultToJSON;\nvar ResponseProcessProposal_ProposalStatus;\n(function (ResponseProcessProposal_ProposalStatus) {\n    ResponseProcessProposal_ProposalStatus[ResponseProcessProposal_ProposalStatus[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    ResponseProcessProposal_ProposalStatus[ResponseProcessProposal_ProposalStatus[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    ResponseProcessProposal_ProposalStatus[ResponseProcessProposal_ProposalStatus[\"REJECT\"] = 2] = \"REJECT\";\n    ResponseProcessProposal_ProposalStatus[ResponseProcessProposal_ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseProcessProposal_ProposalStatus || (exports.ResponseProcessProposal_ProposalStatus = ResponseProcessProposal_ProposalStatus = {}));\nfunction responseProcessProposal_ProposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseProcessProposal_ProposalStatus.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseProcessProposal_ProposalStatus.ACCEPT;\n        case 2:\n        case \"REJECT\":\n            return ResponseProcessProposal_ProposalStatus.REJECT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseProcessProposal_ProposalStatus.UNRECOGNIZED;\n    }\n}\nexports.responseProcessProposal_ProposalStatusFromJSON = responseProcessProposal_ProposalStatusFromJSON;\nfunction responseProcessProposal_ProposalStatusToJSON(object) {\n    switch (object) {\n        case ResponseProcessProposal_ProposalStatus.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseProcessProposal_ProposalStatus.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseProcessProposal_ProposalStatus.REJECT:\n            return \"REJECT\";\n        case ResponseProcessProposal_ProposalStatus.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.responseProcessProposal_ProposalStatusToJSON = responseProcessProposal_ProposalStatusToJSON;\nvar MisbehaviorType;\n(function (MisbehaviorType) {\n    MisbehaviorType[MisbehaviorType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    MisbehaviorType[MisbehaviorType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    MisbehaviorType[MisbehaviorType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    MisbehaviorType[MisbehaviorType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(MisbehaviorType || (exports.MisbehaviorType = MisbehaviorType = {}));\nfunction misbehaviorTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return MisbehaviorType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return MisbehaviorType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return MisbehaviorType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return MisbehaviorType.UNRECOGNIZED;\n    }\n}\nexports.misbehaviorTypeFromJSON = misbehaviorTypeFromJSON;\nfunction misbehaviorTypeToJSON(object) {\n    switch (object) {\n        case MisbehaviorType.UNKNOWN:\n            return \"UNKNOWN\";\n        case MisbehaviorType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case MisbehaviorType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        case MisbehaviorType.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.misbehaviorTypeToJSON = misbehaviorTypeToJSON;\nfunction createBaseRequest() {\n    return {\n        echo: undefined,\n        flush: undefined,\n        info: undefined,\n        initChain: undefined,\n        query: undefined,\n        beginBlock: undefined,\n        checkTx: undefined,\n        deliverTx: undefined,\n        endBlock: undefined,\n        commit: undefined,\n        listSnapshots: undefined,\n        offerSnapshot: undefined,\n        loadSnapshotChunk: undefined,\n        applySnapshotChunk: undefined,\n        prepareProposal: undefined,\n        processProposal: undefined,\n    };\n}\nexports.Request = {\n    typeUrl: \"/tendermint.abci.Request\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.echo !== undefined) {\n            exports.RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            exports.RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            exports.RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            exports.RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            exports.RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            exports.RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            exports.RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            exports.RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            exports.RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            exports.RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            exports.RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            exports.RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            exports.RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            exports.RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.prepareProposal !== undefined) {\n            exports.RequestPrepareProposal.encode(message.prepareProposal, writer.uint32(130).fork()).ldelim();\n        }\n        if (message.processProposal !== undefined) {\n            exports.RequestProcessProposal.encode(message.processProposal, writer.uint32(138).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = exports.RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = exports.RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = exports.RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = exports.RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = exports.RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = exports.RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = exports.RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = exports.RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = exports.RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = exports.RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = exports.RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = exports.RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = exports.RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = exports.RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.prepareProposal = exports.RequestPrepareProposal.decode(reader, reader.uint32());\n                    break;\n                case 17:\n                    message.processProposal = exports.RequestProcessProposal.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseRequest();\n        if ((0, helpers_1.isSet)(object.echo))\n            obj.echo = exports.RequestEcho.fromJSON(object.echo);\n        if ((0, helpers_1.isSet)(object.flush))\n            obj.flush = exports.RequestFlush.fromJSON(object.flush);\n        if ((0, helpers_1.isSet)(object.info))\n            obj.info = exports.RequestInfo.fromJSON(object.info);\n        if ((0, helpers_1.isSet)(object.initChain))\n            obj.initChain = exports.RequestInitChain.fromJSON(object.initChain);\n        if ((0, helpers_1.isSet)(object.query))\n            obj.query = exports.RequestQuery.fromJSON(object.query);\n        if ((0, helpers_1.isSet)(object.beginBlock))\n            obj.beginBlock = exports.RequestBeginBlock.fromJSON(object.beginBlock);\n        if ((0, helpers_1.isSet)(object.checkTx))\n            obj.checkTx = exports.RequestCheckTx.fromJSON(object.checkTx);\n        if ((0, helpers_1.isSet)(object.deliverTx))\n            obj.deliverTx = exports.RequestDeliverTx.fromJSON(object.deliverTx);\n        if ((0, helpers_1.isSet)(object.endBlock))\n            obj.endBlock = exports.RequestEndBlock.fromJSON(object.endBlock);\n        if ((0, helpers_1.isSet)(object.commit))\n            obj.commit = exports.RequestCommit.fromJSON(object.commit);\n        if ((0, helpers_1.isSet)(object.listSnapshots))\n            obj.listSnapshots = exports.RequestListSnapshots.fromJSON(object.listSnapshots);\n        if ((0, helpers_1.isSet)(object.offerSnapshot))\n            obj.offerSnapshot = exports.RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        if ((0, helpers_1.isSet)(object.loadSnapshotChunk))\n            obj.loadSnapshotChunk = exports.RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        if ((0, helpers_1.isSet)(object.applySnapshotChunk))\n            obj.applySnapshotChunk = exports.RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        if ((0, helpers_1.isSet)(object.prepareProposal))\n            obj.prepareProposal = exports.RequestPrepareProposal.fromJSON(object.prepareProposal);\n        if ((0, helpers_1.isSet)(object.processProposal))\n            obj.processProposal = exports.RequestProcessProposal.fromJSON(object.processProposal);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined && (obj.echo = message.echo ? exports.RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush ? exports.RequestFlush.toJSON(message.flush) : undefined);\n        message.info !== undefined && (obj.info = message.info ? exports.RequestInfo.toJSON(message.info) : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain ? exports.RequestInitChain.toJSON(message.initChain) : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query ? exports.RequestQuery.toJSON(message.query) : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock ? exports.RequestBeginBlock.toJSON(message.beginBlock) : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx ? exports.RequestCheckTx.toJSON(message.checkTx) : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx ? exports.RequestDeliverTx.toJSON(message.deliverTx) : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock ? exports.RequestEndBlock.toJSON(message.endBlock) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? exports.RequestCommit.toJSON(message.commit) : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? exports.RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? exports.RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? exports.RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? exports.RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        message.prepareProposal !== undefined &&\n            (obj.prepareProposal = message.prepareProposal\n                ? exports.RequestPrepareProposal.toJSON(message.prepareProposal)\n                : undefined);\n        message.processProposal !== undefined &&\n            (obj.processProposal = message.processProposal\n                ? exports.RequestProcessProposal.toJSON(message.processProposal)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseRequest();\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = exports.RequestEcho.fromPartial(object.echo);\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = exports.RequestFlush.fromPartial(object.flush);\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = exports.RequestInfo.fromPartial(object.info);\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = exports.RequestInitChain.fromPartial(object.initChain);\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = exports.RequestQuery.fromPartial(object.query);\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = exports.RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = exports.RequestCheckTx.fromPartial(object.checkTx);\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = exports.RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = exports.RequestEndBlock.fromPartial(object.endBlock);\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = exports.RequestCommit.fromPartial(object.commit);\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = exports.RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = exports.RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        if (object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = exports.RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        if (object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = exports.RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        if (object.prepareProposal !== undefined && object.prepareProposal !== null) {\n            message.prepareProposal = exports.RequestPrepareProposal.fromPartial(object.prepareProposal);\n        }\n        if (object.processProposal !== undefined && object.processProposal !== null) {\n            message.processProposal = exports.RequestProcessProposal.fromPartial(object.processProposal);\n        }\n        return message;\n    },\n};\nfunction createBaseRequestEcho() {\n    return {\n        message: \"\",\n    };\n}\nexports.RequestEcho = {\n    typeUrl: \"/tendermint.abci.RequestEcho\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestEcho();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseRequestEcho();\n        if ((0, helpers_1.isSet)(object.message))\n            obj.message = String(object.message);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseRequestEcho();\n        message.message = object.message ?? \"\";\n        return message;\n    },\n};\nfunction createBaseRequestFlush() {\n    return {};\n}\nexports.RequestFlush = {\n    typeUrl: \"/tendermint.abci.RequestFlush\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestFlush();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseRequestFlush();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseRequestFlush();\n        return message;\n    },\n};\nfunction createBaseRequestInfo() {\n    return {\n        version: \"\",\n        blockVersion: BigInt(0),\n        p2pVersion: BigInt(0),\n        abciVersion: \"\",\n    };\n}\nexports.RequestInfo = {\n    typeUrl: \"/tendermint.abci.RequestInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== BigInt(0)) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== BigInt(0)) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        if (message.abciVersion !== \"\") {\n            writer.uint32(34).string(message.abciVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = reader.uint64();\n                    break;\n                case 3:\n                    message.p2pVersion = reader.uint64();\n                    break;\n                case 4:\n                    message.abciVersion = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseRequestInfo();\n        if ((0, helpers_1.isSet)(object.version))\n            obj.version = String(object.version);\n        if ((0, helpers_1.isSet)(object.blockVersion))\n            obj.blockVersion = BigInt(object.blockVersion.toString());\n        if ((0, helpers_1.isSet)(object.p2pVersion))\n            obj.p2pVersion = BigInt(object.p2pVersion.toString());\n        if ((0, helpers_1.isSet)(object.abciVersion))\n            obj.abciVersion = String(object.abciVersion);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined && (obj.blockVersion = (message.blockVersion || BigInt(0)).toString());\n        message.p2pVersion !== undefined && (obj.p2pVersion = (message.p2pVersion || BigInt(0)).toString());\n        message.abciVersion !== undefined && (obj.abciVersion = message.abciVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseRequestInfo();\n        message.version = object.version ?? \"\";\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = BigInt(object.blockVersion.toString());\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = BigInt(object.p2pVersion.toString());\n        }\n        message.abciVersion = object.abciVersion ?? \"\";\n        return message;\n    },\n};\nfunction createBaseRequestInitChain() {\n    return {\n        time: timestamp_1.Timestamp.fromPartial({}),\n        chainId: \"\",\n        consensusParams: undefined,\n        validators: [],\n        appStateBytes: new Uint8Array(),\n        initialHeight: BigInt(0),\n    };\n}\nexports.RequestInitChain = {\n    typeUrl: \"/tendermint.abci.RequestInitChain\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.time !== undefined) {\n            timestamp_1.Timestamp.encode(message.time, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            params_1.ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            exports.ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== BigInt(0)) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestInitChain();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = params_1.ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(exports.ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseRequestInitChain();\n        if ((0, helpers_1.isSet)(object.time))\n            obj.time = (0, helpers_1.fromJsonTimestamp)(object.time);\n        if ((0, helpers_1.isSet)(object.chainId))\n            obj.chainId = String(object.chainId);\n        if ((0, helpers_1.isSet)(object.consensusParams))\n            obj.consensusParams = params_1.ConsensusParams.fromJSON(object.consensusParams);\n        if (Array.isArray(object?.validators))\n            obj.validators = object.validators.map((e) => exports.ValidatorUpdate.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.appStateBytes))\n            obj.appStateBytes = (0, helpers_1.bytesFromBase64)(object.appStateBytes);\n        if ((0, helpers_1.isSet)(object.initialHeight))\n            obj.initialHeight = BigInt(object.initialHeight.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined && (obj.time = (0, helpers_1.fromTimestamp)(message.time).toISOString());\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? params_1.ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? exports.ValidatorUpdate.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = (0, helpers_1.base64FromBytes)(message.appStateBytes !== undefined ? message.appStateBytes : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = (message.initialHeight || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseRequestInitChain();\n        if (object.time !== undefined && object.time !== null) {\n            message.time = timestamp_1.Timestamp.fromPartial(object.time);\n        }\n        message.chainId = object.chainId ?? \"\";\n        if (object.consensusParams !== undefined && object.consensusParams !== null) {\n            message.consensusParams = params_1.ConsensusParams.fromPartial(object.consensusParams);\n        }\n        message.validators = object.validators?.map((e) => exports.ValidatorUpdate.fromPartial(e)) || [];\n        message.appStateBytes = object.appStateBytes ?? new Uint8Array();\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = BigInt(object.initialHeight.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseRequestQuery() {\n    return {\n        data: new Uint8Array(),\n        path: \"\",\n        height: BigInt(0),\n        prove: false,\n    };\n}\nexports.RequestQuery = {\n    typeUrl: \"/tendermint.abci.RequestQuery\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== BigInt(0)) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestQuery();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = reader.int64();\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseRequestQuery();\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = (0, helpers_1.bytesFromBase64)(object.data);\n        if ((0, helpers_1.isSet)(object.path))\n            obj.path = String(object.path);\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        if ((0, helpers_1.isSet)(object.prove))\n            obj.prove = Boolean(object.prove);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = (0, helpers_1.base64FromBytes)(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseRequestQuery();\n        message.data = object.data ?? new Uint8Array();\n        message.path = object.path ?? \"\";\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        message.prove = object.prove ?? false;\n        return message;\n    },\n};\nfunction createBaseRequestBeginBlock() {\n    return {\n        hash: new Uint8Array(),\n        header: types_1.Header.fromPartial({}),\n        lastCommitInfo: exports.CommitInfo.fromPartial({}),\n        byzantineValidators: [],\n    };\n}\nexports.RequestBeginBlock = {\n    typeUrl: \"/tendermint.abci.RequestBeginBlock\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            types_1.Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            exports.CommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            exports.Misbehavior.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestBeginBlock();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = types_1.Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = exports.CommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(exports.Misbehavior.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseRequestBeginBlock();\n        if ((0, helpers_1.isSet)(object.hash))\n            obj.hash = (0, helpers_1.bytesFromBase64)(object.hash);\n        if ((0, helpers_1.isSet)(object.header))\n            obj.header = types_1.Header.fromJSON(object.header);\n        if ((0, helpers_1.isSet)(object.lastCommitInfo))\n            obj.lastCommitInfo = exports.CommitInfo.fromJSON(object.lastCommitInfo);\n        if (Array.isArray(object?.byzantineValidators))\n            obj.byzantineValidators = object.byzantineValidators.map((e) => exports.Misbehavior.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined && (obj.header = message.header ? types_1.Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo ? exports.CommitInfo.toJSON(message.lastCommitInfo) : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? exports.Misbehavior.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseRequestBeginBlock();\n        message.hash = object.hash ?? new Uint8Array();\n        if (object.header !== undefined && object.header !== null) {\n            message.header = types_1.Header.fromPartial(object.header);\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = exports.CommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        message.byzantineValidators = object.byzantineValidators?.map((e) => exports.Misbehavior.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseRequestCheckTx() {\n    return {\n        tx: new Uint8Array(),\n        type: 0,\n    };\n}\nexports.RequestCheckTx = {\n    typeUrl: \"/tendermint.abci.RequestCheckTx\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestCheckTx();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseRequestCheckTx();\n        if ((0, helpers_1.isSet)(object.tx))\n            obj.tx = (0, helpers_1.bytesFromBase64)(object.tx);\n        if ((0, helpers_1.isSet)(object.type))\n            obj.type = checkTxTypeFromJSON(object.type);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = (0, helpers_1.base64FromBytes)(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseRequestCheckTx();\n        message.tx = object.tx ?? new Uint8Array();\n        message.type = object.type ?? 0;\n        return message;\n    },\n};\nfunction createBaseRequestDeliverTx() {\n    return {\n        tx: new Uint8Array(),\n    };\n}\nexports.RequestDeliverTx = {\n    typeUrl: \"/tendermint.abci.RequestDeliverTx\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestDeliverTx();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseRequestDeliverTx();\n        if ((0, helpers_1.isSet)(object.tx))\n            obj.tx = (0, helpers_1.bytesFromBase64)(object.tx);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = (0, helpers_1.base64FromBytes)(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseRequestDeliverTx();\n        message.tx = object.tx ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseRequestEndBlock() {\n    return {\n        height: BigInt(0),\n    };\n}\nexports.RequestEndBlock = {\n    typeUrl: \"/tendermint.abci.RequestEndBlock\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.height !== BigInt(0)) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestEndBlock();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseRequestEndBlock();\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseRequestEndBlock();\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseRequestCommit() {\n    return {};\n}\nexports.RequestCommit = {\n    typeUrl: \"/tendermint.abci.RequestCommit\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestCommit();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseRequestCommit();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseRequestCommit();\n        return message;\n    },\n};\nfunction createBaseRequestListSnapshots() {\n    return {};\n}\nexports.RequestListSnapshots = {\n    typeUrl: \"/tendermint.abci.RequestListSnapshots\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestListSnapshots();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseRequestListSnapshots();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseRequestListSnapshots();\n        return message;\n    },\n};\nfunction createBaseRequestOfferSnapshot() {\n    return {\n        snapshot: undefined,\n        appHash: new Uint8Array(),\n    };\n}\nexports.RequestOfferSnapshot = {\n    typeUrl: \"/tendermint.abci.RequestOfferSnapshot\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.snapshot !== undefined) {\n            exports.Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestOfferSnapshot();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = exports.Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseRequestOfferSnapshot();\n        if ((0, helpers_1.isSet)(object.snapshot))\n            obj.snapshot = exports.Snapshot.fromJSON(object.snapshot);\n        if ((0, helpers_1.isSet)(object.appHash))\n            obj.appHash = (0, helpers_1.bytesFromBase64)(object.appHash);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot ? exports.Snapshot.toJSON(message.snapshot) : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = (0, helpers_1.base64FromBytes)(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseRequestOfferSnapshot();\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = exports.Snapshot.fromPartial(object.snapshot);\n        }\n        message.appHash = object.appHash ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseRequestLoadSnapshotChunk() {\n    return {\n        height: BigInt(0),\n        format: 0,\n        chunk: 0,\n    };\n}\nexports.RequestLoadSnapshotChunk = {\n    typeUrl: \"/tendermint.abci.RequestLoadSnapshotChunk\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.height !== BigInt(0)) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestLoadSnapshotChunk();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = reader.uint64();\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseRequestLoadSnapshotChunk();\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        if ((0, helpers_1.isSet)(object.format))\n            obj.format = Number(object.format);\n        if ((0, helpers_1.isSet)(object.chunk))\n            obj.chunk = Number(object.chunk);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        message.format !== undefined && (obj.format = Math.round(message.format));\n        message.chunk !== undefined && (obj.chunk = Math.round(message.chunk));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseRequestLoadSnapshotChunk();\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        message.format = object.format ?? 0;\n        message.chunk = object.chunk ?? 0;\n        return message;\n    },\n};\nfunction createBaseRequestApplySnapshotChunk() {\n    return {\n        index: 0,\n        chunk: new Uint8Array(),\n        sender: \"\",\n    };\n}\nexports.RequestApplySnapshotChunk = {\n    typeUrl: \"/tendermint.abci.RequestApplySnapshotChunk\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestApplySnapshotChunk();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseRequestApplySnapshotChunk();\n        if ((0, helpers_1.isSet)(object.index))\n            obj.index = Number(object.index);\n        if ((0, helpers_1.isSet)(object.chunk))\n            obj.chunk = (0, helpers_1.bytesFromBase64)(object.chunk);\n        if ((0, helpers_1.isSet)(object.sender))\n            obj.sender = String(object.sender);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = Math.round(message.index));\n        message.chunk !== undefined &&\n            (obj.chunk = (0, helpers_1.base64FromBytes)(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseRequestApplySnapshotChunk();\n        message.index = object.index ?? 0;\n        message.chunk = object.chunk ?? new Uint8Array();\n        message.sender = object.sender ?? \"\";\n        return message;\n    },\n};\nfunction createBaseRequestPrepareProposal() {\n    return {\n        maxTxBytes: BigInt(0),\n        txs: [],\n        localLastCommit: exports.ExtendedCommitInfo.fromPartial({}),\n        misbehavior: [],\n        height: BigInt(0),\n        time: timestamp_1.Timestamp.fromPartial({}),\n        nextValidatorsHash: new Uint8Array(),\n        proposerAddress: new Uint8Array(),\n    };\n}\nexports.RequestPrepareProposal = {\n    typeUrl: \"/tendermint.abci.RequestPrepareProposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.maxTxBytes !== BigInt(0)) {\n            writer.uint32(8).int64(message.maxTxBytes);\n        }\n        for (const v of message.txs) {\n            writer.uint32(18).bytes(v);\n        }\n        if (message.localLastCommit !== undefined) {\n            exports.ExtendedCommitInfo.encode(message.localLastCommit, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.misbehavior) {\n            exports.Misbehavior.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.height !== BigInt(0)) {\n            writer.uint32(40).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            timestamp_1.Timestamp.encode(message.time, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(58).bytes(message.nextValidatorsHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(66).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestPrepareProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxTxBytes = reader.int64();\n                    break;\n                case 2:\n                    message.txs.push(reader.bytes());\n                    break;\n                case 3:\n                    message.localLastCommit = exports.ExtendedCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.misbehavior.push(exports.Misbehavior.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.height = reader.int64();\n                    break;\n                case 6:\n                    message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 8:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseRequestPrepareProposal();\n        if ((0, helpers_1.isSet)(object.maxTxBytes))\n            obj.maxTxBytes = BigInt(object.maxTxBytes.toString());\n        if (Array.isArray(object?.txs))\n            obj.txs = object.txs.map((e) => (0, helpers_1.bytesFromBase64)(e));\n        if ((0, helpers_1.isSet)(object.localLastCommit))\n            obj.localLastCommit = exports.ExtendedCommitInfo.fromJSON(object.localLastCommit);\n        if (Array.isArray(object?.misbehavior))\n            obj.misbehavior = object.misbehavior.map((e) => exports.Misbehavior.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        if ((0, helpers_1.isSet)(object.time))\n            obj.time = (0, helpers_1.fromJsonTimestamp)(object.time);\n        if ((0, helpers_1.isSet)(object.nextValidatorsHash))\n            obj.nextValidatorsHash = (0, helpers_1.bytesFromBase64)(object.nextValidatorsHash);\n        if ((0, helpers_1.isSet)(object.proposerAddress))\n            obj.proposerAddress = (0, helpers_1.bytesFromBase64)(object.proposerAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxTxBytes !== undefined && (obj.maxTxBytes = (message.maxTxBytes || BigInt(0)).toString());\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (0, helpers_1.base64FromBytes)(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        message.localLastCommit !== undefined &&\n            (obj.localLastCommit = message.localLastCommit\n                ? exports.ExtendedCommitInfo.toJSON(message.localLastCommit)\n                : undefined);\n        if (message.misbehavior) {\n            obj.misbehavior = message.misbehavior.map((e) => (e ? exports.Misbehavior.toJSON(e) : undefined));\n        }\n        else {\n            obj.misbehavior = [];\n        }\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        message.time !== undefined && (obj.time = (0, helpers_1.fromTimestamp)(message.time).toISOString());\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = (0, helpers_1.base64FromBytes)(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = (0, helpers_1.base64FromBytes)(message.proposerAddress !== undefined ? message.proposerAddress : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseRequestPrepareProposal();\n        if (object.maxTxBytes !== undefined && object.maxTxBytes !== null) {\n            message.maxTxBytes = BigInt(object.maxTxBytes.toString());\n        }\n        message.txs = object.txs?.map((e) => e) || [];\n        if (object.localLastCommit !== undefined && object.localLastCommit !== null) {\n            message.localLastCommit = exports.ExtendedCommitInfo.fromPartial(object.localLastCommit);\n        }\n        message.misbehavior = object.misbehavior?.map((e) => exports.Misbehavior.fromPartial(e)) || [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = timestamp_1.Timestamp.fromPartial(object.time);\n        }\n        message.nextValidatorsHash = object.nextValidatorsHash ?? new Uint8Array();\n        message.proposerAddress = object.proposerAddress ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseRequestProcessProposal() {\n    return {\n        txs: [],\n        proposedLastCommit: exports.CommitInfo.fromPartial({}),\n        misbehavior: [],\n        hash: new Uint8Array(),\n        height: BigInt(0),\n        time: timestamp_1.Timestamp.fromPartial({}),\n        nextValidatorsHash: new Uint8Array(),\n        proposerAddress: new Uint8Array(),\n    };\n}\nexports.RequestProcessProposal = {\n    typeUrl: \"/tendermint.abci.RequestProcessProposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        if (message.proposedLastCommit !== undefined) {\n            exports.CommitInfo.encode(message.proposedLastCommit, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.misbehavior) {\n            exports.Misbehavior.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.height !== BigInt(0)) {\n            writer.uint32(40).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            timestamp_1.Timestamp.encode(message.time, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(58).bytes(message.nextValidatorsHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(66).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestProcessProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                case 2:\n                    message.proposedLastCommit = exports.CommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.misbehavior.push(exports.Misbehavior.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.height = reader.int64();\n                    break;\n                case 6:\n                    message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 8:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseRequestProcessProposal();\n        if (Array.isArray(object?.txs))\n            obj.txs = object.txs.map((e) => (0, helpers_1.bytesFromBase64)(e));\n        if ((0, helpers_1.isSet)(object.proposedLastCommit))\n            obj.proposedLastCommit = exports.CommitInfo.fromJSON(object.proposedLastCommit);\n        if (Array.isArray(object?.misbehavior))\n            obj.misbehavior = object.misbehavior.map((e) => exports.Misbehavior.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.hash))\n            obj.hash = (0, helpers_1.bytesFromBase64)(object.hash);\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        if ((0, helpers_1.isSet)(object.time))\n            obj.time = (0, helpers_1.fromJsonTimestamp)(object.time);\n        if ((0, helpers_1.isSet)(object.nextValidatorsHash))\n            obj.nextValidatorsHash = (0, helpers_1.bytesFromBase64)(object.nextValidatorsHash);\n        if ((0, helpers_1.isSet)(object.proposerAddress))\n            obj.proposerAddress = (0, helpers_1.bytesFromBase64)(object.proposerAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (0, helpers_1.base64FromBytes)(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        message.proposedLastCommit !== undefined &&\n            (obj.proposedLastCommit = message.proposedLastCommit\n                ? exports.CommitInfo.toJSON(message.proposedLastCommit)\n                : undefined);\n        if (message.misbehavior) {\n            obj.misbehavior = message.misbehavior.map((e) => (e ? exports.Misbehavior.toJSON(e) : undefined));\n        }\n        else {\n            obj.misbehavior = [];\n        }\n        message.hash !== undefined &&\n            (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        message.time !== undefined && (obj.time = (0, helpers_1.fromTimestamp)(message.time).toISOString());\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = (0, helpers_1.base64FromBytes)(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = (0, helpers_1.base64FromBytes)(message.proposerAddress !== undefined ? message.proposerAddress : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseRequestProcessProposal();\n        message.txs = object.txs?.map((e) => e) || [];\n        if (object.proposedLastCommit !== undefined && object.proposedLastCommit !== null) {\n            message.proposedLastCommit = exports.CommitInfo.fromPartial(object.proposedLastCommit);\n        }\n        message.misbehavior = object.misbehavior?.map((e) => exports.Misbehavior.fromPartial(e)) || [];\n        message.hash = object.hash ?? new Uint8Array();\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = timestamp_1.Timestamp.fromPartial(object.time);\n        }\n        message.nextValidatorsHash = object.nextValidatorsHash ?? new Uint8Array();\n        message.proposerAddress = object.proposerAddress ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseResponse() {\n    return {\n        exception: undefined,\n        echo: undefined,\n        flush: undefined,\n        info: undefined,\n        initChain: undefined,\n        query: undefined,\n        beginBlock: undefined,\n        checkTx: undefined,\n        deliverTx: undefined,\n        endBlock: undefined,\n        commit: undefined,\n        listSnapshots: undefined,\n        offerSnapshot: undefined,\n        loadSnapshotChunk: undefined,\n        applySnapshotChunk: undefined,\n        prepareProposal: undefined,\n        processProposal: undefined,\n    };\n}\nexports.Response = {\n    typeUrl: \"/tendermint.abci.Response\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.exception !== undefined) {\n            exports.ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            exports.ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            exports.ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            exports.ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            exports.ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            exports.ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            exports.ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            exports.ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            exports.ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            exports.ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            exports.ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            exports.ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            exports.ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            exports.ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            exports.ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        if (message.prepareProposal !== undefined) {\n            exports.ResponsePrepareProposal.encode(message.prepareProposal, writer.uint32(138).fork()).ldelim();\n        }\n        if (message.processProposal !== undefined) {\n            exports.ResponseProcessProposal.encode(message.processProposal, writer.uint32(146).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = exports.ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = exports.ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = exports.ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = exports.ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = exports.ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = exports.ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = exports.ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = exports.ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = exports.ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = exports.ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = exports.ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = exports.ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = exports.ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = exports.ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = exports.ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 17:\n                    message.prepareProposal = exports.ResponsePrepareProposal.decode(reader, reader.uint32());\n                    break;\n                case 18:\n                    message.processProposal = exports.ResponseProcessProposal.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponse();\n        if ((0, helpers_1.isSet)(object.exception))\n            obj.exception = exports.ResponseException.fromJSON(object.exception);\n        if ((0, helpers_1.isSet)(object.echo))\n            obj.echo = exports.ResponseEcho.fromJSON(object.echo);\n        if ((0, helpers_1.isSet)(object.flush))\n            obj.flush = exports.ResponseFlush.fromJSON(object.flush);\n        if ((0, helpers_1.isSet)(object.info))\n            obj.info = exports.ResponseInfo.fromJSON(object.info);\n        if ((0, helpers_1.isSet)(object.initChain))\n            obj.initChain = exports.ResponseInitChain.fromJSON(object.initChain);\n        if ((0, helpers_1.isSet)(object.query))\n            obj.query = exports.ResponseQuery.fromJSON(object.query);\n        if ((0, helpers_1.isSet)(object.beginBlock))\n            obj.beginBlock = exports.ResponseBeginBlock.fromJSON(object.beginBlock);\n        if ((0, helpers_1.isSet)(object.checkTx))\n            obj.checkTx = exports.ResponseCheckTx.fromJSON(object.checkTx);\n        if ((0, helpers_1.isSet)(object.deliverTx))\n            obj.deliverTx = exports.ResponseDeliverTx.fromJSON(object.deliverTx);\n        if ((0, helpers_1.isSet)(object.endBlock))\n            obj.endBlock = exports.ResponseEndBlock.fromJSON(object.endBlock);\n        if ((0, helpers_1.isSet)(object.commit))\n            obj.commit = exports.ResponseCommit.fromJSON(object.commit);\n        if ((0, helpers_1.isSet)(object.listSnapshots))\n            obj.listSnapshots = exports.ResponseListSnapshots.fromJSON(object.listSnapshots);\n        if ((0, helpers_1.isSet)(object.offerSnapshot))\n            obj.offerSnapshot = exports.ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        if ((0, helpers_1.isSet)(object.loadSnapshotChunk))\n            obj.loadSnapshotChunk = exports.ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        if ((0, helpers_1.isSet)(object.applySnapshotChunk))\n            obj.applySnapshotChunk = exports.ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        if ((0, helpers_1.isSet)(object.prepareProposal))\n            obj.prepareProposal = exports.ResponsePrepareProposal.fromJSON(object.prepareProposal);\n        if ((0, helpers_1.isSet)(object.processProposal))\n            obj.processProposal = exports.ResponseProcessProposal.fromJSON(object.processProposal);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception ? exports.ResponseException.toJSON(message.exception) : undefined);\n        message.echo !== undefined && (obj.echo = message.echo ? exports.ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush ? exports.ResponseFlush.toJSON(message.flush) : undefined);\n        message.info !== undefined && (obj.info = message.info ? exports.ResponseInfo.toJSON(message.info) : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain ? exports.ResponseInitChain.toJSON(message.initChain) : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query ? exports.ResponseQuery.toJSON(message.query) : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock ? exports.ResponseBeginBlock.toJSON(message.beginBlock) : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx ? exports.ResponseCheckTx.toJSON(message.checkTx) : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx ? exports.ResponseDeliverTx.toJSON(message.deliverTx) : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock ? exports.ResponseEndBlock.toJSON(message.endBlock) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? exports.ResponseCommit.toJSON(message.commit) : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? exports.ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? exports.ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? exports.ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? exports.ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        message.prepareProposal !== undefined &&\n            (obj.prepareProposal = message.prepareProposal\n                ? exports.ResponsePrepareProposal.toJSON(message.prepareProposal)\n                : undefined);\n        message.processProposal !== undefined &&\n            (obj.processProposal = message.processProposal\n                ? exports.ResponseProcessProposal.toJSON(message.processProposal)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponse();\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = exports.ResponseException.fromPartial(object.exception);\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = exports.ResponseEcho.fromPartial(object.echo);\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = exports.ResponseFlush.fromPartial(object.flush);\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = exports.ResponseInfo.fromPartial(object.info);\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = exports.ResponseInitChain.fromPartial(object.initChain);\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = exports.ResponseQuery.fromPartial(object.query);\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = exports.ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = exports.ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = exports.ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = exports.ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = exports.ResponseCommit.fromPartial(object.commit);\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = exports.ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = exports.ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        if (object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = exports.ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        if (object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = exports.ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        if (object.prepareProposal !== undefined && object.prepareProposal !== null) {\n            message.prepareProposal = exports.ResponsePrepareProposal.fromPartial(object.prepareProposal);\n        }\n        if (object.processProposal !== undefined && object.processProposal !== null) {\n            message.processProposal = exports.ResponseProcessProposal.fromPartial(object.processProposal);\n        }\n        return message;\n    },\n};\nfunction createBaseResponseException() {\n    return {\n        error: \"\",\n    };\n}\nexports.ResponseException = {\n    typeUrl: \"/tendermint.abci.ResponseException\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseException();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponseException();\n        if ((0, helpers_1.isSet)(object.error))\n            obj.error = String(object.error);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponseException();\n        message.error = object.error ?? \"\";\n        return message;\n    },\n};\nfunction createBaseResponseEcho() {\n    return {\n        message: \"\",\n    };\n}\nexports.ResponseEcho = {\n    typeUrl: \"/tendermint.abci.ResponseEcho\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseEcho();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponseEcho();\n        if ((0, helpers_1.isSet)(object.message))\n            obj.message = String(object.message);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponseEcho();\n        message.message = object.message ?? \"\";\n        return message;\n    },\n};\nfunction createBaseResponseFlush() {\n    return {};\n}\nexports.ResponseFlush = {\n    typeUrl: \"/tendermint.abci.ResponseFlush\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseFlush();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseResponseFlush();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseResponseFlush();\n        return message;\n    },\n};\nfunction createBaseResponseInfo() {\n    return {\n        data: \"\",\n        version: \"\",\n        appVersion: BigInt(0),\n        lastBlockHeight: BigInt(0),\n        lastBlockAppHash: new Uint8Array(),\n    };\n}\nexports.ResponseInfo = {\n    typeUrl: \"/tendermint.abci.ResponseInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== BigInt(0)) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== BigInt(0)) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = reader.uint64();\n                    break;\n                case 4:\n                    message.lastBlockHeight = reader.int64();\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponseInfo();\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = String(object.data);\n        if ((0, helpers_1.isSet)(object.version))\n            obj.version = String(object.version);\n        if ((0, helpers_1.isSet)(object.appVersion))\n            obj.appVersion = BigInt(object.appVersion.toString());\n        if ((0, helpers_1.isSet)(object.lastBlockHeight))\n            obj.lastBlockHeight = BigInt(object.lastBlockHeight.toString());\n        if ((0, helpers_1.isSet)(object.lastBlockAppHash))\n            obj.lastBlockAppHash = (0, helpers_1.bytesFromBase64)(object.lastBlockAppHash);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = (message.appVersion || BigInt(0)).toString());\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = (message.lastBlockHeight || BigInt(0)).toString());\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = (0, helpers_1.base64FromBytes)(message.lastBlockAppHash !== undefined ? message.lastBlockAppHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponseInfo();\n        message.data = object.data ?? \"\";\n        message.version = object.version ?? \"\";\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = BigInt(object.appVersion.toString());\n        }\n        if (object.lastBlockHeight !== undefined && object.lastBlockHeight !== null) {\n            message.lastBlockHeight = BigInt(object.lastBlockHeight.toString());\n        }\n        message.lastBlockAppHash = object.lastBlockAppHash ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseResponseInitChain() {\n    return {\n        consensusParams: undefined,\n        validators: [],\n        appHash: new Uint8Array(),\n    };\n}\nexports.ResponseInitChain = {\n    typeUrl: \"/tendermint.abci.ResponseInitChain\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.consensusParams !== undefined) {\n            params_1.ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            exports.ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseInitChain();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = params_1.ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(exports.ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponseInitChain();\n        if ((0, helpers_1.isSet)(object.consensusParams))\n            obj.consensusParams = params_1.ConsensusParams.fromJSON(object.consensusParams);\n        if (Array.isArray(object?.validators))\n            obj.validators = object.validators.map((e) => exports.ValidatorUpdate.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.appHash))\n            obj.appHash = (0, helpers_1.bytesFromBase64)(object.appHash);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? params_1.ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? exports.ValidatorUpdate.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = (0, helpers_1.base64FromBytes)(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponseInitChain();\n        if (object.consensusParams !== undefined && object.consensusParams !== null) {\n            message.consensusParams = params_1.ConsensusParams.fromPartial(object.consensusParams);\n        }\n        message.validators = object.validators?.map((e) => exports.ValidatorUpdate.fromPartial(e)) || [];\n        message.appHash = object.appHash ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseResponseQuery() {\n    return {\n        code: 0,\n        log: \"\",\n        info: \"\",\n        index: BigInt(0),\n        key: new Uint8Array(),\n        value: new Uint8Array(),\n        proofOps: undefined,\n        height: BigInt(0),\n        codespace: \"\",\n    };\n}\nexports.ResponseQuery = {\n    typeUrl: \"/tendermint.abci.ResponseQuery\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== BigInt(0)) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            proof_1.ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== BigInt(0)) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseQuery();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = reader.int64();\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = proof_1.ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = reader.int64();\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponseQuery();\n        if ((0, helpers_1.isSet)(object.code))\n            obj.code = Number(object.code);\n        if ((0, helpers_1.isSet)(object.log))\n            obj.log = String(object.log);\n        if ((0, helpers_1.isSet)(object.info))\n            obj.info = String(object.info);\n        if ((0, helpers_1.isSet)(object.index))\n            obj.index = BigInt(object.index.toString());\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = (0, helpers_1.bytesFromBase64)(object.key);\n        if ((0, helpers_1.isSet)(object.value))\n            obj.value = (0, helpers_1.bytesFromBase64)(object.value);\n        if ((0, helpers_1.isSet)(object.proofOps))\n            obj.proofOps = proof_1.ProofOps.fromJSON(object.proofOps);\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        if ((0, helpers_1.isSet)(object.codespace))\n            obj.codespace = String(object.codespace);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = Math.round(message.code));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = (message.index || BigInt(0)).toString());\n        message.key !== undefined &&\n            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = (0, helpers_1.base64FromBytes)(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps ? proof_1.ProofOps.toJSON(message.proofOps) : undefined);\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponseQuery();\n        message.code = object.code ?? 0;\n        message.log = object.log ?? \"\";\n        message.info = object.info ?? \"\";\n        if (object.index !== undefined && object.index !== null) {\n            message.index = BigInt(object.index.toString());\n        }\n        message.key = object.key ?? new Uint8Array();\n        message.value = object.value ?? new Uint8Array();\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = proof_1.ProofOps.fromPartial(object.proofOps);\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        message.codespace = object.codespace ?? \"\";\n        return message;\n    },\n};\nfunction createBaseResponseBeginBlock() {\n    return {\n        events: [],\n    };\n}\nexports.ResponseBeginBlock = {\n    typeUrl: \"/tendermint.abci.ResponseBeginBlock\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.events) {\n            exports.Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseBeginBlock();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(exports.Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponseBeginBlock();\n        if (Array.isArray(object?.events))\n            obj.events = object.events.map((e) => exports.Event.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? exports.Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponseBeginBlock();\n        message.events = object.events?.map((e) => exports.Event.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseResponseCheckTx() {\n    return {\n        code: 0,\n        data: new Uint8Array(),\n        log: \"\",\n        info: \"\",\n        gasWanted: BigInt(0),\n        gasUsed: BigInt(0),\n        events: [],\n        codespace: \"\",\n        sender: \"\",\n        priority: BigInt(0),\n        mempoolError: \"\",\n    };\n}\nexports.ResponseCheckTx = {\n    typeUrl: \"/tendermint.abci.ResponseCheckTx\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== BigInt(0)) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== BigInt(0)) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            exports.Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(74).string(message.sender);\n        }\n        if (message.priority !== BigInt(0)) {\n            writer.uint32(80).int64(message.priority);\n        }\n        if (message.mempoolError !== \"\") {\n            writer.uint32(90).string(message.mempoolError);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseCheckTx();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = reader.int64();\n                    break;\n                case 6:\n                    message.gasUsed = reader.int64();\n                    break;\n                case 7:\n                    message.events.push(exports.Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                case 9:\n                    message.sender = reader.string();\n                    break;\n                case 10:\n                    message.priority = reader.int64();\n                    break;\n                case 11:\n                    message.mempoolError = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponseCheckTx();\n        if ((0, helpers_1.isSet)(object.code))\n            obj.code = Number(object.code);\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = (0, helpers_1.bytesFromBase64)(object.data);\n        if ((0, helpers_1.isSet)(object.log))\n            obj.log = String(object.log);\n        if ((0, helpers_1.isSet)(object.info))\n            obj.info = String(object.info);\n        if ((0, helpers_1.isSet)(object.gas_wanted))\n            obj.gasWanted = BigInt(object.gas_wanted.toString());\n        if ((0, helpers_1.isSet)(object.gas_used))\n            obj.gasUsed = BigInt(object.gas_used.toString());\n        if (Array.isArray(object?.events))\n            obj.events = object.events.map((e) => exports.Event.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.codespace))\n            obj.codespace = String(object.codespace);\n        if ((0, helpers_1.isSet)(object.sender))\n            obj.sender = String(object.sender);\n        if ((0, helpers_1.isSet)(object.priority))\n            obj.priority = BigInt(object.priority.toString());\n        if ((0, helpers_1.isSet)(object.mempoolError))\n            obj.mempoolError = String(object.mempoolError);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = Math.round(message.code));\n        message.data !== undefined &&\n            (obj.data = (0, helpers_1.base64FromBytes)(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gas_wanted = (message.gasWanted || BigInt(0)).toString());\n        message.gasUsed !== undefined && (obj.gas_used = (message.gasUsed || BigInt(0)).toString());\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? exports.Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.priority !== undefined && (obj.priority = (message.priority || BigInt(0)).toString());\n        message.mempoolError !== undefined && (obj.mempoolError = message.mempoolError);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponseCheckTx();\n        message.code = object.code ?? 0;\n        message.data = object.data ?? new Uint8Array();\n        message.log = object.log ?? \"\";\n        message.info = object.info ?? \"\";\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = BigInt(object.gasWanted.toString());\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = BigInt(object.gasUsed.toString());\n        }\n        message.events = object.events?.map((e) => exports.Event.fromPartial(e)) || [];\n        message.codespace = object.codespace ?? \"\";\n        message.sender = object.sender ?? \"\";\n        if (object.priority !== undefined && object.priority !== null) {\n            message.priority = BigInt(object.priority.toString());\n        }\n        message.mempoolError = object.mempoolError ?? \"\";\n        return message;\n    },\n};\nfunction createBaseResponseDeliverTx() {\n    return {\n        code: 0,\n        data: new Uint8Array(),\n        log: \"\",\n        info: \"\",\n        gasWanted: BigInt(0),\n        gasUsed: BigInt(0),\n        events: [],\n        codespace: \"\",\n    };\n}\nexports.ResponseDeliverTx = {\n    typeUrl: \"/tendermint.abci.ResponseDeliverTx\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== BigInt(0)) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== BigInt(0)) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            exports.Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseDeliverTx();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = reader.int64();\n                    break;\n                case 6:\n                    message.gasUsed = reader.int64();\n                    break;\n                case 7:\n                    message.events.push(exports.Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponseDeliverTx();\n        if ((0, helpers_1.isSet)(object.code))\n            obj.code = Number(object.code);\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = (0, helpers_1.bytesFromBase64)(object.data);\n        if ((0, helpers_1.isSet)(object.log))\n            obj.log = String(object.log);\n        if ((0, helpers_1.isSet)(object.info))\n            obj.info = String(object.info);\n        if ((0, helpers_1.isSet)(object.gas_wanted))\n            obj.gasWanted = BigInt(object.gas_wanted.toString());\n        if ((0, helpers_1.isSet)(object.gas_used))\n            obj.gasUsed = BigInt(object.gas_used.toString());\n        if (Array.isArray(object?.events))\n            obj.events = object.events.map((e) => exports.Event.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.codespace))\n            obj.codespace = String(object.codespace);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = Math.round(message.code));\n        message.data !== undefined &&\n            (obj.data = (0, helpers_1.base64FromBytes)(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gas_wanted = (message.gasWanted || BigInt(0)).toString());\n        message.gasUsed !== undefined && (obj.gas_used = (message.gasUsed || BigInt(0)).toString());\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? exports.Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponseDeliverTx();\n        message.code = object.code ?? 0;\n        message.data = object.data ?? new Uint8Array();\n        message.log = object.log ?? \"\";\n        message.info = object.info ?? \"\";\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = BigInt(object.gasWanted.toString());\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = BigInt(object.gasUsed.toString());\n        }\n        message.events = object.events?.map((e) => exports.Event.fromPartial(e)) || [];\n        message.codespace = object.codespace ?? \"\";\n        return message;\n    },\n};\nfunction createBaseResponseEndBlock() {\n    return {\n        validatorUpdates: [],\n        consensusParamUpdates: undefined,\n        events: [],\n    };\n}\nexports.ResponseEndBlock = {\n    typeUrl: \"/tendermint.abci.ResponseEndBlock\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.validatorUpdates) {\n            exports.ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            params_1.ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            exports.Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseEndBlock();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(exports.ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = params_1.ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(exports.Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponseEndBlock();\n        if (Array.isArray(object?.validatorUpdates))\n            obj.validatorUpdates = object.validatorUpdates.map((e) => exports.ValidatorUpdate.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.consensusParamUpdates))\n            obj.consensusParamUpdates = params_1.ConsensusParams.fromJSON(object.consensusParamUpdates);\n        if (Array.isArray(object?.events))\n            obj.events = object.events.map((e) => exports.Event.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => (e ? exports.ValidatorUpdate.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? params_1.ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? exports.Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponseEndBlock();\n        message.validatorUpdates = object.validatorUpdates?.map((e) => exports.ValidatorUpdate.fromPartial(e)) || [];\n        if (object.consensusParamUpdates !== undefined && object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = params_1.ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        message.events = object.events?.map((e) => exports.Event.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseResponseCommit() {\n    return {\n        data: new Uint8Array(),\n        retainHeight: BigInt(0),\n    };\n}\nexports.ResponseCommit = {\n    typeUrl: \"/tendermint.abci.ResponseCommit\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== BigInt(0)) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseCommit();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponseCommit();\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = (0, helpers_1.bytesFromBase64)(object.data);\n        if ((0, helpers_1.isSet)(object.retainHeight))\n            obj.retainHeight = BigInt(object.retainHeight.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = (0, helpers_1.base64FromBytes)(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined && (obj.retainHeight = (message.retainHeight || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponseCommit();\n        message.data = object.data ?? new Uint8Array();\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = BigInt(object.retainHeight.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseResponseListSnapshots() {\n    return {\n        snapshots: [],\n    };\n}\nexports.ResponseListSnapshots = {\n    typeUrl: \"/tendermint.abci.ResponseListSnapshots\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.snapshots) {\n            exports.Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseListSnapshots();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(exports.Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponseListSnapshots();\n        if (Array.isArray(object?.snapshots))\n            obj.snapshots = object.snapshots.map((e) => exports.Snapshot.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => (e ? exports.Snapshot.toJSON(e) : undefined));\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponseListSnapshots();\n        message.snapshots = object.snapshots?.map((e) => exports.Snapshot.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseResponseOfferSnapshot() {\n    return {\n        result: 0,\n    };\n}\nexports.ResponseOfferSnapshot = {\n    typeUrl: \"/tendermint.abci.ResponseOfferSnapshot\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseOfferSnapshot();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponseOfferSnapshot();\n        if ((0, helpers_1.isSet)(object.result))\n            obj.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined && (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponseOfferSnapshot();\n        message.result = object.result ?? 0;\n        return message;\n    },\n};\nfunction createBaseResponseLoadSnapshotChunk() {\n    return {\n        chunk: new Uint8Array(),\n    };\n}\nexports.ResponseLoadSnapshotChunk = {\n    typeUrl: \"/tendermint.abci.ResponseLoadSnapshotChunk\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseLoadSnapshotChunk();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponseLoadSnapshotChunk();\n        if ((0, helpers_1.isSet)(object.chunk))\n            obj.chunk = (0, helpers_1.bytesFromBase64)(object.chunk);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = (0, helpers_1.base64FromBytes)(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponseLoadSnapshotChunk();\n        message.chunk = object.chunk ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseResponseApplySnapshotChunk() {\n    return {\n        result: 0,\n        refetchChunks: [],\n        rejectSenders: [],\n    };\n}\nexports.ResponseApplySnapshotChunk = {\n    typeUrl: \"/tendermint.abci.ResponseApplySnapshotChunk\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseApplySnapshotChunk();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponseApplySnapshotChunk();\n        if ((0, helpers_1.isSet)(object.result))\n            obj.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        if (Array.isArray(object?.refetchChunks))\n            obj.refetchChunks = object.refetchChunks.map((e) => Number(e));\n        if (Array.isArray(object?.rejectSenders))\n            obj.rejectSenders = object.rejectSenders.map((e) => String(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined && (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => Math.round(e));\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponseApplySnapshotChunk();\n        message.result = object.result ?? 0;\n        message.refetchChunks = object.refetchChunks?.map((e) => e) || [];\n        message.rejectSenders = object.rejectSenders?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseResponsePrepareProposal() {\n    return {\n        txs: [],\n    };\n}\nexports.ResponsePrepareProposal = {\n    typeUrl: \"/tendermint.abci.ResponsePrepareProposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponsePrepareProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponsePrepareProposal();\n        if (Array.isArray(object?.txs))\n            obj.txs = object.txs.map((e) => (0, helpers_1.bytesFromBase64)(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (0, helpers_1.base64FromBytes)(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponsePrepareProposal();\n        message.txs = object.txs?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseResponseProcessProposal() {\n    return {\n        status: 0,\n    };\n}\nexports.ResponseProcessProposal = {\n    typeUrl: \"/tendermint.abci.ResponseProcessProposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.status !== 0) {\n            writer.uint32(8).int32(message.status);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseProcessProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.status = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseResponseProcessProposal();\n        if ((0, helpers_1.isSet)(object.status))\n            obj.status = responseProcessProposal_ProposalStatusFromJSON(object.status);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.status !== undefined &&\n            (obj.status = responseProcessProposal_ProposalStatusToJSON(message.status));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseResponseProcessProposal();\n        message.status = object.status ?? 0;\n        return message;\n    },\n};\nfunction createBaseCommitInfo() {\n    return {\n        round: 0,\n        votes: [],\n    };\n}\nexports.CommitInfo = {\n    typeUrl: \"/tendermint.abci.CommitInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            exports.VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCommitInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(exports.VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCommitInfo();\n        if ((0, helpers_1.isSet)(object.round))\n            obj.round = Number(object.round);\n        if (Array.isArray(object?.votes))\n            obj.votes = object.votes.map((e) => exports.VoteInfo.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = Math.round(message.round));\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => (e ? exports.VoteInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCommitInfo();\n        message.round = object.round ?? 0;\n        message.votes = object.votes?.map((e) => exports.VoteInfo.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseExtendedCommitInfo() {\n    return {\n        round: 0,\n        votes: [],\n    };\n}\nexports.ExtendedCommitInfo = {\n    typeUrl: \"/tendermint.abci.ExtendedCommitInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            exports.ExtendedVoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExtendedCommitInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(exports.ExtendedVoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseExtendedCommitInfo();\n        if ((0, helpers_1.isSet)(object.round))\n            obj.round = Number(object.round);\n        if (Array.isArray(object?.votes))\n            obj.votes = object.votes.map((e) => exports.ExtendedVoteInfo.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = Math.round(message.round));\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => (e ? exports.ExtendedVoteInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseExtendedCommitInfo();\n        message.round = object.round ?? 0;\n        message.votes = object.votes?.map((e) => exports.ExtendedVoteInfo.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseEvent() {\n    return {\n        type: \"\",\n        attributes: [],\n    };\n}\nexports.Event = {\n    typeUrl: \"/tendermint.abci.Event\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            exports.EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEvent();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(exports.EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseEvent();\n        if ((0, helpers_1.isSet)(object.type))\n            obj.type = String(object.type);\n        if (Array.isArray(object?.attributes))\n            obj.attributes = object.attributes.map((e) => exports.EventAttribute.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => (e ? exports.EventAttribute.toJSON(e) : undefined));\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseEvent();\n        message.type = object.type ?? \"\";\n        message.attributes = object.attributes?.map((e) => exports.EventAttribute.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseEventAttribute() {\n    return {\n        key: \"\",\n        value: \"\",\n        index: false,\n    };\n}\nexports.EventAttribute = {\n    typeUrl: \"/tendermint.abci.EventAttribute\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEventAttribute();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseEventAttribute();\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = String(object.key);\n        if ((0, helpers_1.isSet)(object.value))\n            obj.value = String(object.value);\n        if ((0, helpers_1.isSet)(object.index))\n            obj.index = Boolean(object.index);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseEventAttribute();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        message.index = object.index ?? false;\n        return message;\n    },\n};\nfunction createBaseTxResult() {\n    return {\n        height: BigInt(0),\n        index: 0,\n        tx: new Uint8Array(),\n        result: exports.ResponseDeliverTx.fromPartial({}),\n    };\n}\nexports.TxResult = {\n    typeUrl: \"/tendermint.abci.TxResult\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.height !== BigInt(0)) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            exports.ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTxResult();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = reader.int64();\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = exports.ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTxResult();\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        if ((0, helpers_1.isSet)(object.index))\n            obj.index = Number(object.index);\n        if ((0, helpers_1.isSet)(object.tx))\n            obj.tx = (0, helpers_1.bytesFromBase64)(object.tx);\n        if ((0, helpers_1.isSet)(object.result))\n            obj.result = exports.ResponseDeliverTx.fromJSON(object.result);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        message.index !== undefined && (obj.index = Math.round(message.index));\n        message.tx !== undefined &&\n            (obj.tx = (0, helpers_1.base64FromBytes)(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result ? exports.ResponseDeliverTx.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTxResult();\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        message.index = object.index ?? 0;\n        message.tx = object.tx ?? new Uint8Array();\n        if (object.result !== undefined && object.result !== null) {\n            message.result = exports.ResponseDeliverTx.fromPartial(object.result);\n        }\n        return message;\n    },\n};\nfunction createBaseValidator() {\n    return {\n        address: new Uint8Array(),\n        power: BigInt(0),\n    };\n}\nexports.Validator = {\n    typeUrl: \"/tendermint.abci.Validator\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== BigInt(0)) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValidator();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseValidator();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = (0, helpers_1.bytesFromBase64)(object.address);\n        if ((0, helpers_1.isSet)(object.power))\n            obj.power = BigInt(object.power.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = (0, helpers_1.base64FromBytes)(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = (message.power || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseValidator();\n        message.address = object.address ?? new Uint8Array();\n        if (object.power !== undefined && object.power !== null) {\n            message.power = BigInt(object.power.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseValidatorUpdate() {\n    return {\n        pubKey: keys_1.PublicKey.fromPartial({}),\n        power: BigInt(0),\n    };\n}\nexports.ValidatorUpdate = {\n    typeUrl: \"/tendermint.abci.ValidatorUpdate\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.pubKey !== undefined) {\n            keys_1.PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== BigInt(0)) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValidatorUpdate();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseValidatorUpdate();\n        if ((0, helpers_1.isSet)(object.pubKey))\n            obj.pubKey = keys_1.PublicKey.fromJSON(object.pubKey);\n        if ((0, helpers_1.isSet)(object.power))\n            obj.power = BigInt(object.power.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : undefined);\n        message.power !== undefined && (obj.power = (message.power || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseValidatorUpdate();\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = keys_1.PublicKey.fromPartial(object.pubKey);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = BigInt(object.power.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseVoteInfo() {\n    return {\n        validator: exports.Validator.fromPartial({}),\n        signedLastBlock: false,\n    };\n}\nexports.VoteInfo = {\n    typeUrl: \"/tendermint.abci.VoteInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.validator !== undefined) {\n            exports.Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseVoteInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = exports.Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseVoteInfo();\n        if ((0, helpers_1.isSet)(object.validator))\n            obj.validator = exports.Validator.fromJSON(object.validator);\n        if ((0, helpers_1.isSet)(object.signedLastBlock))\n            obj.signedLastBlock = Boolean(object.signedLastBlock);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator ? exports.Validator.toJSON(message.validator) : undefined);\n        message.signedLastBlock !== undefined && (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseVoteInfo();\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = exports.Validator.fromPartial(object.validator);\n        }\n        message.signedLastBlock = object.signedLastBlock ?? false;\n        return message;\n    },\n};\nfunction createBaseExtendedVoteInfo() {\n    return {\n        validator: exports.Validator.fromPartial({}),\n        signedLastBlock: false,\n        voteExtension: new Uint8Array(),\n    };\n}\nexports.ExtendedVoteInfo = {\n    typeUrl: \"/tendermint.abci.ExtendedVoteInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.validator !== undefined) {\n            exports.Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        if (message.voteExtension.length !== 0) {\n            writer.uint32(26).bytes(message.voteExtension);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExtendedVoteInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = exports.Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                case 3:\n                    message.voteExtension = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseExtendedVoteInfo();\n        if ((0, helpers_1.isSet)(object.validator))\n            obj.validator = exports.Validator.fromJSON(object.validator);\n        if ((0, helpers_1.isSet)(object.signedLastBlock))\n            obj.signedLastBlock = Boolean(object.signedLastBlock);\n        if ((0, helpers_1.isSet)(object.voteExtension))\n            obj.voteExtension = (0, helpers_1.bytesFromBase64)(object.voteExtension);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator ? exports.Validator.toJSON(message.validator) : undefined);\n        message.signedLastBlock !== undefined && (obj.signedLastBlock = message.signedLastBlock);\n        message.voteExtension !== undefined &&\n            (obj.voteExtension = (0, helpers_1.base64FromBytes)(message.voteExtension !== undefined ? message.voteExtension : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseExtendedVoteInfo();\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = exports.Validator.fromPartial(object.validator);\n        }\n        message.signedLastBlock = object.signedLastBlock ?? false;\n        message.voteExtension = object.voteExtension ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseMisbehavior() {\n    return {\n        type: 0,\n        validator: exports.Validator.fromPartial({}),\n        height: BigInt(0),\n        time: timestamp_1.Timestamp.fromPartial({}),\n        totalVotingPower: BigInt(0),\n    };\n}\nexports.Misbehavior = {\n    typeUrl: \"/tendermint.abci.Misbehavior\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            exports.Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== BigInt(0)) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            timestamp_1.Timestamp.encode(message.time, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== BigInt(0)) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMisbehavior();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = exports.Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = reader.int64();\n                    break;\n                case 4:\n                    message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.totalVotingPower = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMisbehavior();\n        if ((0, helpers_1.isSet)(object.type))\n            obj.type = misbehaviorTypeFromJSON(object.type);\n        if ((0, helpers_1.isSet)(object.validator))\n            obj.validator = exports.Validator.fromJSON(object.validator);\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        if ((0, helpers_1.isSet)(object.time))\n            obj.time = (0, helpers_1.fromJsonTimestamp)(object.time);\n        if ((0, helpers_1.isSet)(object.totalVotingPower))\n            obj.totalVotingPower = BigInt(object.totalVotingPower.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = misbehaviorTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator ? exports.Validator.toJSON(message.validator) : undefined);\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        message.time !== undefined && (obj.time = (0, helpers_1.fromTimestamp)(message.time).toISOString());\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = (message.totalVotingPower || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMisbehavior();\n        message.type = object.type ?? 0;\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = exports.Validator.fromPartial(object.validator);\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = timestamp_1.Timestamp.fromPartial(object.time);\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = BigInt(object.totalVotingPower.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseSnapshot() {\n    return {\n        height: BigInt(0),\n        format: 0,\n        chunks: 0,\n        hash: new Uint8Array(),\n        metadata: new Uint8Array(),\n    };\n}\nexports.Snapshot = {\n    typeUrl: \"/tendermint.abci.Snapshot\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.height !== BigInt(0)) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnapshot();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = reader.uint64();\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSnapshot();\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        if ((0, helpers_1.isSet)(object.format))\n            obj.format = Number(object.format);\n        if ((0, helpers_1.isSet)(object.chunks))\n            obj.chunks = Number(object.chunks);\n        if ((0, helpers_1.isSet)(object.hash))\n            obj.hash = (0, helpers_1.bytesFromBase64)(object.hash);\n        if ((0, helpers_1.isSet)(object.metadata))\n            obj.metadata = (0, helpers_1.bytesFromBase64)(object.metadata);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        message.format !== undefined && (obj.format = Math.round(message.format));\n        message.chunks !== undefined && (obj.chunks = Math.round(message.chunks));\n        message.hash !== undefined &&\n            (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = (0, helpers_1.base64FromBytes)(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSnapshot();\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        message.format = object.format ?? 0;\n        message.chunks = object.chunks ?? 0;\n        message.hash = object.hash ?? new Uint8Array();\n        message.metadata = object.metadata ?? new Uint8Array();\n        return message;\n    },\n};\nclass ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Echo = this.Echo.bind(this);\n        this.Flush = this.Flush.bind(this);\n        this.Info = this.Info.bind(this);\n        this.DeliverTx = this.DeliverTx.bind(this);\n        this.CheckTx = this.CheckTx.bind(this);\n        this.Query = this.Query.bind(this);\n        this.Commit = this.Commit.bind(this);\n        this.InitChain = this.InitChain.bind(this);\n        this.BeginBlock = this.BeginBlock.bind(this);\n        this.EndBlock = this.EndBlock.bind(this);\n        this.ListSnapshots = this.ListSnapshots.bind(this);\n        this.OfferSnapshot = this.OfferSnapshot.bind(this);\n        this.LoadSnapshotChunk = this.LoadSnapshotChunk.bind(this);\n        this.ApplySnapshotChunk = this.ApplySnapshotChunk.bind(this);\n        this.PrepareProposal = this.PrepareProposal.bind(this);\n        this.ProcessProposal = this.ProcessProposal.bind(this);\n    }\n    Echo(request) {\n        const data = exports.RequestEcho.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Echo\", data);\n        return promise.then((data) => exports.ResponseEcho.decode(new binary_1.BinaryReader(data)));\n    }\n    Flush(request = {}) {\n        const data = exports.RequestFlush.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Flush\", data);\n        return promise.then((data) => exports.ResponseFlush.decode(new binary_1.BinaryReader(data)));\n    }\n    Info(request) {\n        const data = exports.RequestInfo.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Info\", data);\n        return promise.then((data) => exports.ResponseInfo.decode(new binary_1.BinaryReader(data)));\n    }\n    DeliverTx(request) {\n        const data = exports.RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"DeliverTx\", data);\n        return promise.then((data) => exports.ResponseDeliverTx.decode(new binary_1.BinaryReader(data)));\n    }\n    CheckTx(request) {\n        const data = exports.RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"CheckTx\", data);\n        return promise.then((data) => exports.ResponseCheckTx.decode(new binary_1.BinaryReader(data)));\n    }\n    Query(request) {\n        const data = exports.RequestQuery.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Query\", data);\n        return promise.then((data) => exports.ResponseQuery.decode(new binary_1.BinaryReader(data)));\n    }\n    Commit(request = {}) {\n        const data = exports.RequestCommit.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Commit\", data);\n        return promise.then((data) => exports.ResponseCommit.decode(new binary_1.BinaryReader(data)));\n    }\n    InitChain(request) {\n        const data = exports.RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"InitChain\", data);\n        return promise.then((data) => exports.ResponseInitChain.decode(new binary_1.BinaryReader(data)));\n    }\n    BeginBlock(request) {\n        const data = exports.RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"BeginBlock\", data);\n        return promise.then((data) => exports.ResponseBeginBlock.decode(new binary_1.BinaryReader(data)));\n    }\n    EndBlock(request) {\n        const data = exports.RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"EndBlock\", data);\n        return promise.then((data) => exports.ResponseEndBlock.decode(new binary_1.BinaryReader(data)));\n    }\n    ListSnapshots(request = {}) {\n        const data = exports.RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ListSnapshots\", data);\n        return promise.then((data) => exports.ResponseListSnapshots.decode(new binary_1.BinaryReader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = exports.RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"OfferSnapshot\", data);\n        return promise.then((data) => exports.ResponseOfferSnapshot.decode(new binary_1.BinaryReader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = exports.RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"LoadSnapshotChunk\", data);\n        return promise.then((data) => exports.ResponseLoadSnapshotChunk.decode(new binary_1.BinaryReader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = exports.RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ApplySnapshotChunk\", data);\n        return promise.then((data) => exports.ResponseApplySnapshotChunk.decode(new binary_1.BinaryReader(data)));\n    }\n    PrepareProposal(request) {\n        const data = exports.RequestPrepareProposal.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"PrepareProposal\", data);\n        return promise.then((data) => exports.ResponsePrepareProposal.decode(new binary_1.BinaryReader(data)));\n    }\n    ProcessProposal(request) {\n        const data = exports.RequestProcessProposal.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ProcessProposal\", data);\n        return promise.then((data) => exports.ResponseProcessProposal.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.ABCIApplicationClientImpl = ABCIApplicationClientImpl;\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PublicKey = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst binary_1 = require(\"../../binary\");\nconst helpers_1 = require(\"../../helpers\");\nexports.protobufPackage = \"tendermint.crypto\";\nfunction createBasePublicKey() {\n    return {\n        ed25519: undefined,\n        secp256k1: undefined,\n    };\n}\nexports.PublicKey = {\n    typeUrl: \"/tendermint.crypto.PublicKey\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePublicKey();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBasePublicKey();\n        if ((0, helpers_1.isSet)(object.ed25519))\n            obj.ed25519 = (0, helpers_1.bytesFromBase64)(object.ed25519);\n        if ((0, helpers_1.isSet)(object.secp256k1))\n            obj.secp256k1 = (0, helpers_1.bytesFromBase64)(object.secp256k1);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 = message.ed25519 !== undefined ? (0, helpers_1.base64FromBytes)(message.ed25519) : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 = message.secp256k1 !== undefined ? (0, helpers_1.base64FromBytes)(message.secp256k1) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBasePublicKey();\n        message.ed25519 = object.ed25519 ?? undefined;\n        message.secp256k1 = object.secp256k1 ?? undefined;\n        return message;\n    },\n};\n//# sourceMappingURL=keys.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProofOps = exports.ProofOp = exports.DominoOp = exports.ValueOp = exports.Proof = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst binary_1 = require(\"../../binary\");\nconst helpers_1 = require(\"../../helpers\");\nexports.protobufPackage = \"tendermint.crypto\";\nfunction createBaseProof() {\n    return {\n        total: BigInt(0),\n        index: BigInt(0),\n        leafHash: new Uint8Array(),\n        aunts: [],\n    };\n}\nexports.Proof = {\n    typeUrl: \"/tendermint.crypto.Proof\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.total !== BigInt(0)) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== BigInt(0)) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseProof();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.int64();\n                    break;\n                case 2:\n                    message.index = reader.int64();\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseProof();\n        if ((0, helpers_1.isSet)(object.total))\n            obj.total = BigInt(object.total.toString());\n        if ((0, helpers_1.isSet)(object.index))\n            obj.index = BigInt(object.index.toString());\n        if ((0, helpers_1.isSet)(object.leafHash))\n            obj.leafHash = (0, helpers_1.bytesFromBase64)(object.leafHash);\n        if (Array.isArray(object?.aunts))\n            obj.aunts = object.aunts.map((e) => (0, helpers_1.bytesFromBase64)(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = (message.total || BigInt(0)).toString());\n        message.index !== undefined && (obj.index = (message.index || BigInt(0)).toString());\n        message.leafHash !== undefined &&\n            (obj.leafHash = (0, helpers_1.base64FromBytes)(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => (0, helpers_1.base64FromBytes)(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseProof();\n        if (object.total !== undefined && object.total !== null) {\n            message.total = BigInt(object.total.toString());\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = BigInt(object.index.toString());\n        }\n        message.leafHash = object.leafHash ?? new Uint8Array();\n        message.aunts = object.aunts?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseValueOp() {\n    return {\n        key: new Uint8Array(),\n        proof: undefined,\n    };\n}\nexports.ValueOp = {\n    typeUrl: \"/tendermint.crypto.ValueOp\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            exports.Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValueOp();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = exports.Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseValueOp();\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = (0, helpers_1.bytesFromBase64)(object.key);\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = exports.Proof.fromJSON(object.proof);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? exports.Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseValueOp();\n        message.key = object.key ?? new Uint8Array();\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = exports.Proof.fromPartial(object.proof);\n        }\n        return message;\n    },\n};\nfunction createBaseDominoOp() {\n    return {\n        key: \"\",\n        input: \"\",\n        output: \"\",\n    };\n}\nexports.DominoOp = {\n    typeUrl: \"/tendermint.crypto.DominoOp\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDominoOp();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseDominoOp();\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = String(object.key);\n        if ((0, helpers_1.isSet)(object.input))\n            obj.input = String(object.input);\n        if ((0, helpers_1.isSet)(object.output))\n            obj.output = String(object.output);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseDominoOp();\n        message.key = object.key ?? \"\";\n        message.input = object.input ?? \"\";\n        message.output = object.output ?? \"\";\n        return message;\n    },\n};\nfunction createBaseProofOp() {\n    return {\n        type: \"\",\n        key: new Uint8Array(),\n        data: new Uint8Array(),\n    };\n}\nexports.ProofOp = {\n    typeUrl: \"/tendermint.crypto.ProofOp\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseProofOp();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseProofOp();\n        if ((0, helpers_1.isSet)(object.type))\n            obj.type = String(object.type);\n        if ((0, helpers_1.isSet)(object.key))\n            obj.key = (0, helpers_1.bytesFromBase64)(object.key);\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = (0, helpers_1.bytesFromBase64)(object.data);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = (0, helpers_1.base64FromBytes)(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseProofOp();\n        message.type = object.type ?? \"\";\n        message.key = object.key ?? new Uint8Array();\n        message.data = object.data ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseProofOps() {\n    return {\n        ops: [],\n    };\n}\nexports.ProofOps = {\n    typeUrl: \"/tendermint.crypto.ProofOps\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.ops) {\n            exports.ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseProofOps();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(exports.ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseProofOps();\n        if (Array.isArray(object?.ops))\n            obj.ops = object.ops.map((e) => exports.ProofOp.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? exports.ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseProofOps();\n        message.ops = object.ops?.map((e) => exports.ProofOp.fromPartial(e)) || [];\n        return message;\n    },\n};\n//# sourceMappingURL=proof.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Block = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst types_1 = require(\"./types\");\nconst evidence_1 = require(\"./evidence\");\nconst binary_1 = require(\"../../binary\");\nconst helpers_1 = require(\"../../helpers\");\nexports.protobufPackage = \"tendermint.types\";\nfunction createBaseBlock() {\n    return {\n        header: types_1.Header.fromPartial({}),\n        data: types_1.Data.fromPartial({}),\n        evidence: evidence_1.EvidenceList.fromPartial({}),\n        lastCommit: undefined,\n    };\n}\nexports.Block = {\n    typeUrl: \"/tendermint.types.Block\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.header !== undefined) {\n            types_1.Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.data !== undefined) {\n            types_1.Data.encode(message.data, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            evidence_1.EvidenceList.encode(message.evidence, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.lastCommit !== undefined) {\n            types_1.Commit.encode(message.lastCommit, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBlock();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = types_1.Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.data = types_1.Data.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.evidence = evidence_1.EvidenceList.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.lastCommit = types_1.Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseBlock();\n        if ((0, helpers_1.isSet)(object.header))\n            obj.header = types_1.Header.fromJSON(object.header);\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = types_1.Data.fromJSON(object.data);\n        if ((0, helpers_1.isSet)(object.evidence))\n            obj.evidence = evidence_1.EvidenceList.fromJSON(object.evidence);\n        if ((0, helpers_1.isSet)(object.lastCommit))\n            obj.lastCommit = types_1.Commit.fromJSON(object.lastCommit);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? types_1.Header.toJSON(message.header) : undefined);\n        message.data !== undefined && (obj.data = message.data ? types_1.Data.toJSON(message.data) : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence ? evidence_1.EvidenceList.toJSON(message.evidence) : undefined);\n        message.lastCommit !== undefined &&\n            (obj.lastCommit = message.lastCommit ? types_1.Commit.toJSON(message.lastCommit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseBlock();\n        if (object.header !== undefined && object.header !== null) {\n            message.header = types_1.Header.fromPartial(object.header);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = types_1.Data.fromPartial(object.data);\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = evidence_1.EvidenceList.fromPartial(object.evidence);\n        }\n        if (object.lastCommit !== undefined && object.lastCommit !== null) {\n            message.lastCommit = types_1.Commit.fromPartial(object.lastCommit);\n        }\n        return message;\n    },\n};\n//# sourceMappingURL=block.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EvidenceList = exports.LightClientAttackEvidence = exports.DuplicateVoteEvidence = exports.Evidence = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst types_1 = require(\"./types\");\nconst timestamp_1 = require(\"../../google/protobuf/timestamp\");\nconst validator_1 = require(\"./validator\");\nconst binary_1 = require(\"../../binary\");\nconst helpers_1 = require(\"../../helpers\");\nexports.protobufPackage = \"tendermint.types\";\nfunction createBaseEvidence() {\n    return {\n        duplicateVoteEvidence: undefined,\n        lightClientAttackEvidence: undefined,\n    };\n}\nexports.Evidence = {\n    typeUrl: \"/tendermint.types.Evidence\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.duplicateVoteEvidence !== undefined) {\n            exports.DuplicateVoteEvidence.encode(message.duplicateVoteEvidence, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lightClientAttackEvidence !== undefined) {\n            exports.LightClientAttackEvidence.encode(message.lightClientAttackEvidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEvidence();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.duplicateVoteEvidence = exports.DuplicateVoteEvidence.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lightClientAttackEvidence = exports.LightClientAttackEvidence.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseEvidence();\n        if ((0, helpers_1.isSet)(object.duplicateVoteEvidence))\n            obj.duplicateVoteEvidence = exports.DuplicateVoteEvidence.fromJSON(object.duplicateVoteEvidence);\n        if ((0, helpers_1.isSet)(object.lightClientAttackEvidence))\n            obj.lightClientAttackEvidence = exports.LightClientAttackEvidence.fromJSON(object.lightClientAttackEvidence);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.duplicateVoteEvidence !== undefined &&\n            (obj.duplicateVoteEvidence = message.duplicateVoteEvidence\n                ? exports.DuplicateVoteEvidence.toJSON(message.duplicateVoteEvidence)\n                : undefined);\n        message.lightClientAttackEvidence !== undefined &&\n            (obj.lightClientAttackEvidence = message.lightClientAttackEvidence\n                ? exports.LightClientAttackEvidence.toJSON(message.lightClientAttackEvidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseEvidence();\n        if (object.duplicateVoteEvidence !== undefined && object.duplicateVoteEvidence !== null) {\n            message.duplicateVoteEvidence = exports.DuplicateVoteEvidence.fromPartial(object.duplicateVoteEvidence);\n        }\n        if (object.lightClientAttackEvidence !== undefined && object.lightClientAttackEvidence !== null) {\n            message.lightClientAttackEvidence = exports.LightClientAttackEvidence.fromPartial(object.lightClientAttackEvidence);\n        }\n        return message;\n    },\n};\nfunction createBaseDuplicateVoteEvidence() {\n    return {\n        voteA: undefined,\n        voteB: undefined,\n        totalVotingPower: BigInt(0),\n        validatorPower: BigInt(0),\n        timestamp: timestamp_1.Timestamp.fromPartial({}),\n    };\n}\nexports.DuplicateVoteEvidence = {\n    typeUrl: \"/tendermint.types.DuplicateVoteEvidence\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.voteA !== undefined) {\n            types_1.Vote.encode(message.voteA, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.voteB !== undefined) {\n            types_1.Vote.encode(message.voteB, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== BigInt(0)) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        if (message.validatorPower !== BigInt(0)) {\n            writer.uint32(32).int64(message.validatorPower);\n        }\n        if (message.timestamp !== undefined) {\n            timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDuplicateVoteEvidence();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.voteA = types_1.Vote.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.voteB = types_1.Vote.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = reader.int64();\n                    break;\n                case 4:\n                    message.validatorPower = reader.int64();\n                    break;\n                case 5:\n                    message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseDuplicateVoteEvidence();\n        if ((0, helpers_1.isSet)(object.voteA))\n            obj.voteA = types_1.Vote.fromJSON(object.voteA);\n        if ((0, helpers_1.isSet)(object.voteB))\n            obj.voteB = types_1.Vote.fromJSON(object.voteB);\n        if ((0, helpers_1.isSet)(object.totalVotingPower))\n            obj.totalVotingPower = BigInt(object.totalVotingPower.toString());\n        if ((0, helpers_1.isSet)(object.validatorPower))\n            obj.validatorPower = BigInt(object.validatorPower.toString());\n        if ((0, helpers_1.isSet)(object.timestamp))\n            obj.timestamp = (0, helpers_1.fromJsonTimestamp)(object.timestamp);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.voteA !== undefined && (obj.voteA = message.voteA ? types_1.Vote.toJSON(message.voteA) : undefined);\n        message.voteB !== undefined && (obj.voteB = message.voteB ? types_1.Vote.toJSON(message.voteB) : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = (message.totalVotingPower || BigInt(0)).toString());\n        message.validatorPower !== undefined &&\n            (obj.validatorPower = (message.validatorPower || BigInt(0)).toString());\n        message.timestamp !== undefined && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseDuplicateVoteEvidence();\n        if (object.voteA !== undefined && object.voteA !== null) {\n            message.voteA = types_1.Vote.fromPartial(object.voteA);\n        }\n        if (object.voteB !== undefined && object.voteB !== null) {\n            message.voteB = types_1.Vote.fromPartial(object.voteB);\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = BigInt(object.totalVotingPower.toString());\n        }\n        if (object.validatorPower !== undefined && object.validatorPower !== null) {\n            message.validatorPower = BigInt(object.validatorPower.toString());\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = timestamp_1.Timestamp.fromPartial(object.timestamp);\n        }\n        return message;\n    },\n};\nfunction createBaseLightClientAttackEvidence() {\n    return {\n        conflictingBlock: undefined,\n        commonHeight: BigInt(0),\n        byzantineValidators: [],\n        totalVotingPower: BigInt(0),\n        timestamp: timestamp_1.Timestamp.fromPartial({}),\n    };\n}\nexports.LightClientAttackEvidence = {\n    typeUrl: \"/tendermint.types.LightClientAttackEvidence\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.conflictingBlock !== undefined) {\n            types_1.LightBlock.encode(message.conflictingBlock, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commonHeight !== BigInt(0)) {\n            writer.uint32(16).int64(message.commonHeight);\n        }\n        for (const v of message.byzantineValidators) {\n            validator_1.Validator.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== BigInt(0)) {\n            writer.uint32(32).int64(message.totalVotingPower);\n        }\n        if (message.timestamp !== undefined) {\n            timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLightClientAttackEvidence();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.conflictingBlock = types_1.LightBlock.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commonHeight = reader.int64();\n                    break;\n                case 3:\n                    message.byzantineValidators.push(validator_1.Validator.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.totalVotingPower = reader.int64();\n                    break;\n                case 5:\n                    message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseLightClientAttackEvidence();\n        if ((0, helpers_1.isSet)(object.conflictingBlock))\n            obj.conflictingBlock = types_1.LightBlock.fromJSON(object.conflictingBlock);\n        if ((0, helpers_1.isSet)(object.commonHeight))\n            obj.commonHeight = BigInt(object.commonHeight.toString());\n        if (Array.isArray(object?.byzantineValidators))\n            obj.byzantineValidators = object.byzantineValidators.map((e) => validator_1.Validator.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.totalVotingPower))\n            obj.totalVotingPower = BigInt(object.totalVotingPower.toString());\n        if ((0, helpers_1.isSet)(object.timestamp))\n            obj.timestamp = (0, helpers_1.fromJsonTimestamp)(object.timestamp);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.conflictingBlock !== undefined &&\n            (obj.conflictingBlock = message.conflictingBlock\n                ? types_1.LightBlock.toJSON(message.conflictingBlock)\n                : undefined);\n        message.commonHeight !== undefined && (obj.commonHeight = (message.commonHeight || BigInt(0)).toString());\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => (e ? validator_1.Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = (message.totalVotingPower || BigInt(0)).toString());\n        message.timestamp !== undefined && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseLightClientAttackEvidence();\n        if (object.conflictingBlock !== undefined && object.conflictingBlock !== null) {\n            message.conflictingBlock = types_1.LightBlock.fromPartial(object.conflictingBlock);\n        }\n        if (object.commonHeight !== undefined && object.commonHeight !== null) {\n            message.commonHeight = BigInt(object.commonHeight.toString());\n        }\n        message.byzantineValidators = object.byzantineValidators?.map((e) => validator_1.Validator.fromPartial(e)) || [];\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = BigInt(object.totalVotingPower.toString());\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = timestamp_1.Timestamp.fromPartial(object.timestamp);\n        }\n        return message;\n    },\n};\nfunction createBaseEvidenceList() {\n    return {\n        evidence: [],\n    };\n}\nexports.EvidenceList = {\n    typeUrl: \"/tendermint.types.EvidenceList\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.evidence) {\n            exports.Evidence.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEvidenceList();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.evidence.push(exports.Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseEvidenceList();\n        if (Array.isArray(object?.evidence))\n            obj.evidence = object.evidence.map((e) => exports.Evidence.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.evidence) {\n            obj.evidence = message.evidence.map((e) => (e ? exports.Evidence.toJSON(e) : undefined));\n        }\n        else {\n            obj.evidence = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseEvidenceList();\n        message.evidence = object.evidence?.map((e) => exports.Evidence.fromPartial(e)) || [];\n        return message;\n    },\n};\n//# sourceMappingURL=evidence.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HashedParams = exports.VersionParams = exports.ValidatorParams = exports.EvidenceParams = exports.BlockParams = exports.ConsensusParams = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst duration_1 = require(\"../../google/protobuf/duration\");\nconst binary_1 = require(\"../../binary\");\nconst helpers_1 = require(\"../../helpers\");\nexports.protobufPackage = \"tendermint.types\";\nfunction createBaseConsensusParams() {\n    return {\n        block: undefined,\n        evidence: undefined,\n        validator: undefined,\n        version: undefined,\n    };\n}\nexports.ConsensusParams = {\n    typeUrl: \"/tendermint.types.ConsensusParams\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.block !== undefined) {\n            exports.BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            exports.EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            exports.ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            exports.VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConsensusParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = exports.BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = exports.EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = exports.ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = exports.VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseConsensusParams();\n        if ((0, helpers_1.isSet)(object.block))\n            obj.block = exports.BlockParams.fromJSON(object.block);\n        if ((0, helpers_1.isSet)(object.evidence))\n            obj.evidence = exports.EvidenceParams.fromJSON(object.evidence);\n        if ((0, helpers_1.isSet)(object.validator))\n            obj.validator = exports.ValidatorParams.fromJSON(object.validator);\n        if ((0, helpers_1.isSet)(object.version))\n            obj.version = exports.VersionParams.fromJSON(object.version);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block ? exports.BlockParams.toJSON(message.block) : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence ? exports.EvidenceParams.toJSON(message.evidence) : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator ? exports.ValidatorParams.toJSON(message.validator) : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version ? exports.VersionParams.toJSON(message.version) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseConsensusParams();\n        if (object.block !== undefined && object.block !== null) {\n            message.block = exports.BlockParams.fromPartial(object.block);\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = exports.EvidenceParams.fromPartial(object.evidence);\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = exports.ValidatorParams.fromPartial(object.validator);\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = exports.VersionParams.fromPartial(object.version);\n        }\n        return message;\n    },\n};\nfunction createBaseBlockParams() {\n    return {\n        maxBytes: BigInt(0),\n        maxGas: BigInt(0),\n    };\n}\nexports.BlockParams = {\n    typeUrl: \"/tendermint.types.BlockParams\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.maxBytes !== BigInt(0)) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== BigInt(0)) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBlockParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = reader.int64();\n                    break;\n                case 2:\n                    message.maxGas = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseBlockParams();\n        if ((0, helpers_1.isSet)(object.maxBytes))\n            obj.maxBytes = BigInt(object.maxBytes.toString());\n        if ((0, helpers_1.isSet)(object.maxGas))\n            obj.maxGas = BigInt(object.maxGas.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = (message.maxBytes || BigInt(0)).toString());\n        message.maxGas !== undefined && (obj.maxGas = (message.maxGas || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseBlockParams();\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = BigInt(object.maxBytes.toString());\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = BigInt(object.maxGas.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseEvidenceParams() {\n    return {\n        maxAgeNumBlocks: BigInt(0),\n        maxAgeDuration: duration_1.Duration.fromPartial({}),\n        maxBytes: BigInt(0),\n    };\n}\nexports.EvidenceParams = {\n    typeUrl: \"/tendermint.types.EvidenceParams\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.maxAgeNumBlocks !== BigInt(0)) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            duration_1.Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== BigInt(0)) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEvidenceParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = reader.int64();\n                    break;\n                case 2:\n                    message.maxAgeDuration = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseEvidenceParams();\n        if ((0, helpers_1.isSet)(object.maxAgeNumBlocks))\n            obj.maxAgeNumBlocks = BigInt(object.maxAgeNumBlocks.toString());\n        if ((0, helpers_1.isSet)(object.maxAgeDuration))\n            obj.maxAgeDuration = duration_1.Duration.fromJSON(object.maxAgeDuration);\n        if ((0, helpers_1.isSet)(object.maxBytes))\n            obj.maxBytes = BigInt(object.maxBytes.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = (message.maxAgeNumBlocks || BigInt(0)).toString());\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration ? duration_1.Duration.toJSON(message.maxAgeDuration) : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = (message.maxBytes || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseEvidenceParams();\n        if (object.maxAgeNumBlocks !== undefined && object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = BigInt(object.maxAgeNumBlocks.toString());\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = duration_1.Duration.fromPartial(object.maxAgeDuration);\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = BigInt(object.maxBytes.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseValidatorParams() {\n    return {\n        pubKeyTypes: [],\n    };\n}\nexports.ValidatorParams = {\n    typeUrl: \"/tendermint.types.ValidatorParams\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValidatorParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseValidatorParams();\n        if (Array.isArray(object?.pubKeyTypes))\n            obj.pubKeyTypes = object.pubKeyTypes.map((e) => String(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseValidatorParams();\n        message.pubKeyTypes = object.pubKeyTypes?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseVersionParams() {\n    return {\n        app: BigInt(0),\n    };\n}\nexports.VersionParams = {\n    typeUrl: \"/tendermint.types.VersionParams\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.app !== BigInt(0)) {\n            writer.uint32(8).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseVersionParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.app = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseVersionParams();\n        if ((0, helpers_1.isSet)(object.app))\n            obj.app = BigInt(object.app.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.app !== undefined && (obj.app = (message.app || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseVersionParams();\n        if (object.app !== undefined && object.app !== null) {\n            message.app = BigInt(object.app.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseHashedParams() {\n    return {\n        blockMaxBytes: BigInt(0),\n        blockMaxGas: BigInt(0),\n    };\n}\nexports.HashedParams = {\n    typeUrl: \"/tendermint.types.HashedParams\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.blockMaxBytes !== BigInt(0)) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== BigInt(0)) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseHashedParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = reader.int64();\n                    break;\n                case 2:\n                    message.blockMaxGas = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseHashedParams();\n        if ((0, helpers_1.isSet)(object.blockMaxBytes))\n            obj.blockMaxBytes = BigInt(object.blockMaxBytes.toString());\n        if ((0, helpers_1.isSet)(object.blockMaxGas))\n            obj.blockMaxGas = BigInt(object.blockMaxGas.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = (message.blockMaxBytes || BigInt(0)).toString());\n        message.blockMaxGas !== undefined && (obj.blockMaxGas = (message.blockMaxGas || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseHashedParams();\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = BigInt(object.blockMaxBytes.toString());\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = BigInt(object.blockMaxGas.toString());\n        }\n        return message;\n    },\n};\n//# sourceMappingURL=params.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TxProof = exports.BlockMeta = exports.LightBlock = exports.SignedHeader = exports.Proposal = exports.CommitSig = exports.Commit = exports.Vote = exports.Data = exports.Header = exports.BlockID = exports.Part = exports.PartSetHeader = exports.signedMsgTypeToJSON = exports.signedMsgTypeFromJSON = exports.SignedMsgType = exports.blockIDFlagToJSON = exports.blockIDFlagFromJSON = exports.BlockIDFlag = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst proof_1 = require(\"../crypto/proof\");\nconst types_1 = require(\"../version/types\");\nconst timestamp_1 = require(\"../../google/protobuf/timestamp\");\nconst validator_1 = require(\"./validator\");\nconst binary_1 = require(\"../../binary\");\nconst helpers_1 = require(\"../../helpers\");\nexports.protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nvar BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (exports.BlockIDFlag = BlockIDFlag = {}));\nfunction blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexports.blockIDFlagFromJSON = blockIDFlagFromJSON;\nfunction blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        case BlockIDFlag.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.blockIDFlagToJSON = blockIDFlagToJSON;\n/** SignedMsgType is a type of signed message in the consensus. */\nvar SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (exports.SignedMsgType = SignedMsgType = {}));\nfunction signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexports.signedMsgTypeFromJSON = signedMsgTypeFromJSON;\nfunction signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        case SignedMsgType.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexports.signedMsgTypeToJSON = signedMsgTypeToJSON;\nfunction createBasePartSetHeader() {\n    return {\n        total: 0,\n        hash: new Uint8Array(),\n    };\n}\nexports.PartSetHeader = {\n    typeUrl: \"/tendermint.types.PartSetHeader\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePartSetHeader();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBasePartSetHeader();\n        if ((0, helpers_1.isSet)(object.total))\n            obj.total = Number(object.total);\n        if ((0, helpers_1.isSet)(object.hash))\n            obj.hash = (0, helpers_1.bytesFromBase64)(object.hash);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = Math.round(message.total));\n        message.hash !== undefined &&\n            (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBasePartSetHeader();\n        message.total = object.total ?? 0;\n        message.hash = object.hash ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBasePart() {\n    return {\n        index: 0,\n        bytes: new Uint8Array(),\n        proof: proof_1.Proof.fromPartial({}),\n    };\n}\nexports.Part = {\n    typeUrl: \"/tendermint.types.Part\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            proof_1.Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePart();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = proof_1.Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBasePart();\n        if ((0, helpers_1.isSet)(object.index))\n            obj.index = Number(object.index);\n        if ((0, helpers_1.isSet)(object.bytes))\n            obj.bytes = (0, helpers_1.bytesFromBase64)(object.bytes);\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = proof_1.Proof.fromJSON(object.proof);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = Math.round(message.index));\n        message.bytes !== undefined &&\n            (obj.bytes = (0, helpers_1.base64FromBytes)(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? proof_1.Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBasePart();\n        message.index = object.index ?? 0;\n        message.bytes = object.bytes ?? new Uint8Array();\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = proof_1.Proof.fromPartial(object.proof);\n        }\n        return message;\n    },\n};\nfunction createBaseBlockID() {\n    return {\n        hash: new Uint8Array(),\n        partSetHeader: exports.PartSetHeader.fromPartial({}),\n    };\n}\nexports.BlockID = {\n    typeUrl: \"/tendermint.types.BlockID\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            exports.PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBlockID();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = exports.PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseBlockID();\n        if ((0, helpers_1.isSet)(object.hash))\n            obj.hash = (0, helpers_1.bytesFromBase64)(object.hash);\n        if ((0, helpers_1.isSet)(object.partSetHeader))\n            obj.partSetHeader = exports.PartSetHeader.fromJSON(object.partSetHeader);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader ? exports.PartSetHeader.toJSON(message.partSetHeader) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseBlockID();\n        message.hash = object.hash ?? new Uint8Array();\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = exports.PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        return message;\n    },\n};\nfunction createBaseHeader() {\n    return {\n        version: types_1.Consensus.fromPartial({}),\n        chainId: \"\",\n        height: BigInt(0),\n        time: timestamp_1.Timestamp.fromPartial({}),\n        lastBlockId: exports.BlockID.fromPartial({}),\n        lastCommitHash: new Uint8Array(),\n        dataHash: new Uint8Array(),\n        validatorsHash: new Uint8Array(),\n        nextValidatorsHash: new Uint8Array(),\n        consensusHash: new Uint8Array(),\n        appHash: new Uint8Array(),\n        lastResultsHash: new Uint8Array(),\n        evidenceHash: new Uint8Array(),\n        proposerAddress: new Uint8Array(),\n    };\n}\nexports.Header = {\n    typeUrl: \"/tendermint.types.Header\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.version !== undefined) {\n            types_1.Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== BigInt(0)) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            timestamp_1.Timestamp.encode(message.time, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            exports.BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseHeader();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = types_1.Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = reader.int64();\n                    break;\n                case 4:\n                    message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.lastBlockId = exports.BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseHeader();\n        if ((0, helpers_1.isSet)(object.version))\n            obj.version = types_1.Consensus.fromJSON(object.version);\n        if ((0, helpers_1.isSet)(object.chainId))\n            obj.chainId = String(object.chainId);\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        if ((0, helpers_1.isSet)(object.time))\n            obj.time = (0, helpers_1.fromJsonTimestamp)(object.time);\n        if ((0, helpers_1.isSet)(object.lastBlockId))\n            obj.lastBlockId = exports.BlockID.fromJSON(object.lastBlockId);\n        if ((0, helpers_1.isSet)(object.lastCommitHash))\n            obj.lastCommitHash = (0, helpers_1.bytesFromBase64)(object.lastCommitHash);\n        if ((0, helpers_1.isSet)(object.dataHash))\n            obj.dataHash = (0, helpers_1.bytesFromBase64)(object.dataHash);\n        if ((0, helpers_1.isSet)(object.validatorsHash))\n            obj.validatorsHash = (0, helpers_1.bytesFromBase64)(object.validatorsHash);\n        if ((0, helpers_1.isSet)(object.nextValidatorsHash))\n            obj.nextValidatorsHash = (0, helpers_1.bytesFromBase64)(object.nextValidatorsHash);\n        if ((0, helpers_1.isSet)(object.consensusHash))\n            obj.consensusHash = (0, helpers_1.bytesFromBase64)(object.consensusHash);\n        if ((0, helpers_1.isSet)(object.appHash))\n            obj.appHash = (0, helpers_1.bytesFromBase64)(object.appHash);\n        if ((0, helpers_1.isSet)(object.lastResultsHash))\n            obj.lastResultsHash = (0, helpers_1.bytesFromBase64)(object.lastResultsHash);\n        if ((0, helpers_1.isSet)(object.evidenceHash))\n            obj.evidenceHash = (0, helpers_1.bytesFromBase64)(object.evidenceHash);\n        if ((0, helpers_1.isSet)(object.proposerAddress))\n            obj.proposerAddress = (0, helpers_1.bytesFromBase64)(object.proposerAddress);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version ? types_1.Consensus.toJSON(message.version) : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        message.time !== undefined && (obj.time = (0, helpers_1.fromTimestamp)(message.time).toISOString());\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId ? exports.BlockID.toJSON(message.lastBlockId) : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = (0, helpers_1.base64FromBytes)(message.lastCommitHash !== undefined ? message.lastCommitHash : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = (0, helpers_1.base64FromBytes)(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = (0, helpers_1.base64FromBytes)(message.validatorsHash !== undefined ? message.validatorsHash : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = (0, helpers_1.base64FromBytes)(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = (0, helpers_1.base64FromBytes)(message.consensusHash !== undefined ? message.consensusHash : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = (0, helpers_1.base64FromBytes)(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = (0, helpers_1.base64FromBytes)(message.lastResultsHash !== undefined ? message.lastResultsHash : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = (0, helpers_1.base64FromBytes)(message.evidenceHash !== undefined ? message.evidenceHash : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = (0, helpers_1.base64FromBytes)(message.proposerAddress !== undefined ? message.proposerAddress : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseHeader();\n        if (object.version !== undefined && object.version !== null) {\n            message.version = types_1.Consensus.fromPartial(object.version);\n        }\n        message.chainId = object.chainId ?? \"\";\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = timestamp_1.Timestamp.fromPartial(object.time);\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = exports.BlockID.fromPartial(object.lastBlockId);\n        }\n        message.lastCommitHash = object.lastCommitHash ?? new Uint8Array();\n        message.dataHash = object.dataHash ?? new Uint8Array();\n        message.validatorsHash = object.validatorsHash ?? new Uint8Array();\n        message.nextValidatorsHash = object.nextValidatorsHash ?? new Uint8Array();\n        message.consensusHash = object.consensusHash ?? new Uint8Array();\n        message.appHash = object.appHash ?? new Uint8Array();\n        message.lastResultsHash = object.lastResultsHash ?? new Uint8Array();\n        message.evidenceHash = object.evidenceHash ?? new Uint8Array();\n        message.proposerAddress = object.proposerAddress ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseData() {\n    return {\n        txs: [],\n    };\n}\nexports.Data = {\n    typeUrl: \"/tendermint.types.Data\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseData();\n        if (Array.isArray(object?.txs))\n            obj.txs = object.txs.map((e) => (0, helpers_1.bytesFromBase64)(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (0, helpers_1.base64FromBytes)(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseData();\n        message.txs = object.txs?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseVote() {\n    return {\n        type: 0,\n        height: BigInt(0),\n        round: 0,\n        blockId: exports.BlockID.fromPartial({}),\n        timestamp: timestamp_1.Timestamp.fromPartial({}),\n        validatorAddress: new Uint8Array(),\n        validatorIndex: 0,\n        signature: new Uint8Array(),\n    };\n}\nexports.Vote = {\n    typeUrl: \"/tendermint.types.Vote\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== BigInt(0)) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            exports.BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseVote();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = reader.int64();\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = exports.BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseVote();\n        if ((0, helpers_1.isSet)(object.type))\n            obj.type = signedMsgTypeFromJSON(object.type);\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        if ((0, helpers_1.isSet)(object.round))\n            obj.round = Number(object.round);\n        if ((0, helpers_1.isSet)(object.blockId))\n            obj.blockId = exports.BlockID.fromJSON(object.blockId);\n        if ((0, helpers_1.isSet)(object.timestamp))\n            obj.timestamp = (0, helpers_1.fromJsonTimestamp)(object.timestamp);\n        if ((0, helpers_1.isSet)(object.validatorAddress))\n            obj.validatorAddress = (0, helpers_1.bytesFromBase64)(object.validatorAddress);\n        if ((0, helpers_1.isSet)(object.validatorIndex))\n            obj.validatorIndex = Number(object.validatorIndex);\n        if ((0, helpers_1.isSet)(object.signature))\n            obj.signature = (0, helpers_1.bytesFromBase64)(object.signature);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        message.round !== undefined && (obj.round = Math.round(message.round));\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = (0, helpers_1.base64FromBytes)(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n        message.validatorIndex !== undefined && (obj.validatorIndex = Math.round(message.validatorIndex));\n        message.signature !== undefined &&\n            (obj.signature = (0, helpers_1.base64FromBytes)(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseVote();\n        message.type = object.type ?? 0;\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        message.round = object.round ?? 0;\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = exports.BlockID.fromPartial(object.blockId);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = timestamp_1.Timestamp.fromPartial(object.timestamp);\n        }\n        message.validatorAddress = object.validatorAddress ?? new Uint8Array();\n        message.validatorIndex = object.validatorIndex ?? 0;\n        message.signature = object.signature ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseCommit() {\n    return {\n        height: BigInt(0),\n        round: 0,\n        blockId: exports.BlockID.fromPartial({}),\n        signatures: [],\n    };\n}\nexports.Commit = {\n    typeUrl: \"/tendermint.types.Commit\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.height !== BigInt(0)) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            exports.BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            exports.CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCommit();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = reader.int64();\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = exports.BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(exports.CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCommit();\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        if ((0, helpers_1.isSet)(object.round))\n            obj.round = Number(object.round);\n        if ((0, helpers_1.isSet)(object.blockId))\n            obj.blockId = exports.BlockID.fromJSON(object.blockId);\n        if (Array.isArray(object?.signatures))\n            obj.signatures = object.signatures.map((e) => exports.CommitSig.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        message.round !== undefined && (obj.round = Math.round(message.round));\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => (e ? exports.CommitSig.toJSON(e) : undefined));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCommit();\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        message.round = object.round ?? 0;\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = exports.BlockID.fromPartial(object.blockId);\n        }\n        message.signatures = object.signatures?.map((e) => exports.CommitSig.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseCommitSig() {\n    return {\n        blockIdFlag: 0,\n        validatorAddress: new Uint8Array(),\n        timestamp: timestamp_1.Timestamp.fromPartial({}),\n        signature: new Uint8Array(),\n    };\n}\nexports.CommitSig = {\n    typeUrl: \"/tendermint.types.CommitSig\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCommitSig();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseCommitSig();\n        if ((0, helpers_1.isSet)(object.blockIdFlag))\n            obj.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        if ((0, helpers_1.isSet)(object.validatorAddress))\n            obj.validatorAddress = (0, helpers_1.bytesFromBase64)(object.validatorAddress);\n        if ((0, helpers_1.isSet)(object.timestamp))\n            obj.timestamp = (0, helpers_1.fromJsonTimestamp)(object.timestamp);\n        if ((0, helpers_1.isSet)(object.signature))\n            obj.signature = (0, helpers_1.bytesFromBase64)(object.signature);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined && (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = (0, helpers_1.base64FromBytes)(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n        message.timestamp !== undefined && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());\n        message.signature !== undefined &&\n            (obj.signature = (0, helpers_1.base64FromBytes)(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseCommitSig();\n        message.blockIdFlag = object.blockIdFlag ?? 0;\n        message.validatorAddress = object.validatorAddress ?? new Uint8Array();\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = timestamp_1.Timestamp.fromPartial(object.timestamp);\n        }\n        message.signature = object.signature ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseProposal() {\n    return {\n        type: 0,\n        height: BigInt(0),\n        round: 0,\n        polRound: 0,\n        blockId: exports.BlockID.fromPartial({}),\n        timestamp: timestamp_1.Timestamp.fromPartial({}),\n        signature: new Uint8Array(),\n    };\n}\nexports.Proposal = {\n    typeUrl: \"/tendermint.types.Proposal\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== BigInt(0)) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            exports.BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseProposal();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = reader.int64();\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = exports.BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseProposal();\n        if ((0, helpers_1.isSet)(object.type))\n            obj.type = signedMsgTypeFromJSON(object.type);\n        if ((0, helpers_1.isSet)(object.height))\n            obj.height = BigInt(object.height.toString());\n        if ((0, helpers_1.isSet)(object.round))\n            obj.round = Number(object.round);\n        if ((0, helpers_1.isSet)(object.polRound))\n            obj.polRound = Number(object.polRound);\n        if ((0, helpers_1.isSet)(object.blockId))\n            obj.blockId = exports.BlockID.fromJSON(object.blockId);\n        if ((0, helpers_1.isSet)(object.timestamp))\n            obj.timestamp = (0, helpers_1.fromJsonTimestamp)(object.timestamp);\n        if ((0, helpers_1.isSet)(object.signature))\n            obj.signature = (0, helpers_1.bytesFromBase64)(object.signature);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = (message.height || BigInt(0)).toString());\n        message.round !== undefined && (obj.round = Math.round(message.round));\n        message.polRound !== undefined && (obj.polRound = Math.round(message.polRound));\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());\n        message.signature !== undefined &&\n            (obj.signature = (0, helpers_1.base64FromBytes)(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseProposal();\n        message.type = object.type ?? 0;\n        if (object.height !== undefined && object.height !== null) {\n            message.height = BigInt(object.height.toString());\n        }\n        message.round = object.round ?? 0;\n        message.polRound = object.polRound ?? 0;\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = exports.BlockID.fromPartial(object.blockId);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = timestamp_1.Timestamp.fromPartial(object.timestamp);\n        }\n        message.signature = object.signature ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseSignedHeader() {\n    return {\n        header: undefined,\n        commit: undefined,\n    };\n}\nexports.SignedHeader = {\n    typeUrl: \"/tendermint.types.SignedHeader\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.header !== undefined) {\n            exports.Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            exports.Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSignedHeader();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = exports.Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = exports.Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSignedHeader();\n        if ((0, helpers_1.isSet)(object.header))\n            obj.header = exports.Header.fromJSON(object.header);\n        if ((0, helpers_1.isSet)(object.commit))\n            obj.commit = exports.Commit.fromJSON(object.commit);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? exports.Header.toJSON(message.header) : undefined);\n        message.commit !== undefined && (obj.commit = message.commit ? exports.Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSignedHeader();\n        if (object.header !== undefined && object.header !== null) {\n            message.header = exports.Header.fromPartial(object.header);\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = exports.Commit.fromPartial(object.commit);\n        }\n        return message;\n    },\n};\nfunction createBaseLightBlock() {\n    return {\n        signedHeader: undefined,\n        validatorSet: undefined,\n    };\n}\nexports.LightBlock = {\n    typeUrl: \"/tendermint.types.LightBlock\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.signedHeader !== undefined) {\n            exports.SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            validator_1.ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLightBlock();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = exports.SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = validator_1.ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseLightBlock();\n        if ((0, helpers_1.isSet)(object.signedHeader))\n            obj.signedHeader = exports.SignedHeader.fromJSON(object.signedHeader);\n        if ((0, helpers_1.isSet)(object.validatorSet))\n            obj.validatorSet = validator_1.ValidatorSet.fromJSON(object.validatorSet);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader ? exports.SignedHeader.toJSON(message.signedHeader) : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet ? validator_1.ValidatorSet.toJSON(message.validatorSet) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseLightBlock();\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = exports.SignedHeader.fromPartial(object.signedHeader);\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = validator_1.ValidatorSet.fromPartial(object.validatorSet);\n        }\n        return message;\n    },\n};\nfunction createBaseBlockMeta() {\n    return {\n        blockId: exports.BlockID.fromPartial({}),\n        blockSize: BigInt(0),\n        header: exports.Header.fromPartial({}),\n        numTxs: BigInt(0),\n    };\n}\nexports.BlockMeta = {\n    typeUrl: \"/tendermint.types.BlockMeta\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.blockId !== undefined) {\n            exports.BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== BigInt(0)) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            exports.Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== BigInt(0)) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBlockMeta();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = exports.BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = reader.int64();\n                    break;\n                case 3:\n                    message.header = exports.Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseBlockMeta();\n        if ((0, helpers_1.isSet)(object.blockId))\n            obj.blockId = exports.BlockID.fromJSON(object.blockId);\n        if ((0, helpers_1.isSet)(object.blockSize))\n            obj.blockSize = BigInt(object.blockSize.toString());\n        if ((0, helpers_1.isSet)(object.header))\n            obj.header = exports.Header.fromJSON(object.header);\n        if ((0, helpers_1.isSet)(object.numTxs))\n            obj.numTxs = BigInt(object.numTxs.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : undefined);\n        message.blockSize !== undefined && (obj.blockSize = (message.blockSize || BigInt(0)).toString());\n        message.header !== undefined && (obj.header = message.header ? exports.Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = (message.numTxs || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseBlockMeta();\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = exports.BlockID.fromPartial(object.blockId);\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = BigInt(object.blockSize.toString());\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = exports.Header.fromPartial(object.header);\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = BigInt(object.numTxs.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseTxProof() {\n    return {\n        rootHash: new Uint8Array(),\n        data: new Uint8Array(),\n        proof: undefined,\n    };\n}\nexports.TxProof = {\n    typeUrl: \"/tendermint.types.TxProof\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            proof_1.Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTxProof();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = proof_1.Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTxProof();\n        if ((0, helpers_1.isSet)(object.rootHash))\n            obj.rootHash = (0, helpers_1.bytesFromBase64)(object.rootHash);\n        if ((0, helpers_1.isSet)(object.data))\n            obj.data = (0, helpers_1.bytesFromBase64)(object.data);\n        if ((0, helpers_1.isSet)(object.proof))\n            obj.proof = proof_1.Proof.fromJSON(object.proof);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = (0, helpers_1.base64FromBytes)(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = (0, helpers_1.base64FromBytes)(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? proof_1.Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTxProof();\n        message.rootHash = object.rootHash ?? new Uint8Array();\n        message.data = object.data ?? new Uint8Array();\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = proof_1.Proof.fromPartial(object.proof);\n        }\n        return message;\n    },\n};\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimpleValidator = exports.Validator = exports.ValidatorSet = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst keys_1 = require(\"../crypto/keys\");\nconst binary_1 = require(\"../../binary\");\nconst helpers_1 = require(\"../../helpers\");\nexports.protobufPackage = \"tendermint.types\";\nfunction createBaseValidatorSet() {\n    return {\n        validators: [],\n        proposer: undefined,\n        totalVotingPower: BigInt(0),\n    };\n}\nexports.ValidatorSet = {\n    typeUrl: \"/tendermint.types.ValidatorSet\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.validators) {\n            exports.Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            exports.Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== BigInt(0)) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValidatorSet();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(exports.Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = exports.Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseValidatorSet();\n        if (Array.isArray(object?.validators))\n            obj.validators = object.validators.map((e) => exports.Validator.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.proposer))\n            obj.proposer = exports.Validator.fromJSON(object.proposer);\n        if ((0, helpers_1.isSet)(object.totalVotingPower))\n            obj.totalVotingPower = BigInt(object.totalVotingPower.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? exports.Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer ? exports.Validator.toJSON(message.proposer) : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = (message.totalVotingPower || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseValidatorSet();\n        message.validators = object.validators?.map((e) => exports.Validator.fromPartial(e)) || [];\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = exports.Validator.fromPartial(object.proposer);\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = BigInt(object.totalVotingPower.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseValidator() {\n    return {\n        address: new Uint8Array(),\n        pubKey: keys_1.PublicKey.fromPartial({}),\n        votingPower: BigInt(0),\n        proposerPriority: BigInt(0),\n    };\n}\nexports.Validator = {\n    typeUrl: \"/tendermint.types.Validator\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            keys_1.PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== BigInt(0)) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== BigInt(0)) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValidator();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = reader.int64();\n                    break;\n                case 4:\n                    message.proposerPriority = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseValidator();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = (0, helpers_1.bytesFromBase64)(object.address);\n        if ((0, helpers_1.isSet)(object.pubKey))\n            obj.pubKey = keys_1.PublicKey.fromJSON(object.pubKey);\n        if ((0, helpers_1.isSet)(object.votingPower))\n            obj.votingPower = BigInt(object.votingPower.toString());\n        if ((0, helpers_1.isSet)(object.proposerPriority))\n            obj.proposerPriority = BigInt(object.proposerPriority.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = (0, helpers_1.base64FromBytes)(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = (message.votingPower || BigInt(0)).toString());\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = (message.proposerPriority || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseValidator();\n        message.address = object.address ?? new Uint8Array();\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = keys_1.PublicKey.fromPartial(object.pubKey);\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = BigInt(object.votingPower.toString());\n        }\n        if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n            message.proposerPriority = BigInt(object.proposerPriority.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseSimpleValidator() {\n    return {\n        pubKey: undefined,\n        votingPower: BigInt(0),\n    };\n}\nexports.SimpleValidator = {\n    typeUrl: \"/tendermint.types.SimpleValidator\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.pubKey !== undefined) {\n            keys_1.PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== BigInt(0)) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSimpleValidator();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSimpleValidator();\n        if ((0, helpers_1.isSet)(object.pubKey))\n            obj.pubKey = keys_1.PublicKey.fromJSON(object.pubKey);\n        if ((0, helpers_1.isSet)(object.votingPower))\n            obj.votingPower = BigInt(object.votingPower.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = (message.votingPower || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSimpleValidator();\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = keys_1.PublicKey.fromPartial(object.pubKey);\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = BigInt(object.votingPower.toString());\n        }\n        return message;\n    },\n};\n//# sourceMappingURL=validator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Consensus = exports.App = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst binary_1 = require(\"../../binary\");\nconst helpers_1 = require(\"../../helpers\");\nexports.protobufPackage = \"tendermint.version\";\nfunction createBaseApp() {\n    return {\n        protocol: BigInt(0),\n        software: \"\",\n    };\n}\nexports.App = {\n    typeUrl: \"/tendermint.version.App\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.protocol !== BigInt(0)) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseApp();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = reader.uint64();\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseApp();\n        if ((0, helpers_1.isSet)(object.protocol))\n            obj.protocol = BigInt(object.protocol.toString());\n        if ((0, helpers_1.isSet)(object.software))\n            obj.software = String(object.software);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = (message.protocol || BigInt(0)).toString());\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseApp();\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = BigInt(object.protocol.toString());\n        }\n        message.software = object.software ?? \"\";\n        return message;\n    },\n};\nfunction createBaseConsensus() {\n    return {\n        block: BigInt(0),\n        app: BigInt(0),\n    };\n}\nexports.Consensus = {\n    typeUrl: \"/tendermint.version.Consensus\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.block !== BigInt(0)) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== BigInt(0)) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConsensus();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = reader.uint64();\n                    break;\n                case 2:\n                    message.app = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseConsensus();\n        if ((0, helpers_1.isSet)(object.block))\n            obj.block = BigInt(object.block.toString());\n        if ((0, helpers_1.isSet)(object.app))\n            obj.app = BigInt(object.app.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = (message.block || BigInt(0)).toString());\n        message.app !== undefined && (obj.app = (message.app || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseConsensus();\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BigInt(object.block.toString());\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = BigInt(object.app.toString());\n        }\n        return message;\n    },\n};\n//# sourceMappingURL=types.js.map","/* eslint-disable */\n/**\n * This file and any referenced files were automatically generated by @cosmology/telescope@1.0.7\n * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain\n * and run the transpile command or yarn proto command to regenerate this bundle.\n */\n// Copyright (c) 2016, Daniel Wirtz  All rights reserved.\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n// * Redistributions of source code must retain the above copyright\n//   notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above copyright\n//   notice, this list of conditions and the following disclaimer in the\n//   documentation and/or other materials provided with the distribution.\n// * Neither the name of its author, nor the names of its contributors\n//   may be used to endorse or promote products derived from this software\n//   without specific prior written permission.\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utf8Write = exports.utf8Read = exports.utf8Length = void 0;\n/**\n * Calculates the UTF8 byte length of a string.\n * @param {string} string String\n * @returns {number} Byte length\n */\nfunction utf8Length(str) {\n    let len = 0, c = 0;\n    for (let i = 0; i < str.length; ++i) {\n        c = str.charCodeAt(i);\n        if (c < 128)\n            len += 1;\n        else if (c < 2048)\n            len += 2;\n        else if ((c & 0xfc00) === 0xd800 && (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n            ++i;\n            len += 4;\n        }\n        else\n            len += 3;\n    }\n    return len;\n}\nexports.utf8Length = utf8Length;\n/**\n * Reads UTF8 bytes as a string.\n * @param {Uint8Array} buffer Source buffer\n * @param {number} start Source start\n * @param {number} end Source end\n * @returns {string} String read\n */\nfunction utf8Read(buffer, start, end) {\n    const len = end - start;\n    if (len < 1)\n        return \"\";\n    const chunk = [];\n    let parts = [], i = 0, // char offset\n    t; // temporary\n    while (start < end) {\n        t = buffer[start++];\n        if (t < 128)\n            chunk[i++] = t;\n        else if (t > 191 && t < 224)\n            chunk[i++] = ((t & 31) << 6) | (buffer[start++] & 63);\n        else if (t > 239 && t < 365) {\n            t =\n                (((t & 7) << 18) |\n                    ((buffer[start++] & 63) << 12) |\n                    ((buffer[start++] & 63) << 6) |\n                    (buffer[start++] & 63)) -\n                    0x10000;\n            chunk[i++] = 0xd800 + (t >> 10);\n            chunk[i++] = 0xdc00 + (t & 1023);\n        }\n        else\n            chunk[i++] = ((t & 15) << 12) | ((buffer[start++] & 63) << 6) | (buffer[start++] & 63);\n        if (i > 8191) {\n            (parts || (parts = [])).push(String.fromCharCode(...chunk));\n            i = 0;\n        }\n    }\n    if (parts) {\n        if (i)\n            parts.push(String.fromCharCode(...chunk.slice(0, i)));\n        return parts.join(\"\");\n    }\n    return String.fromCharCode(...chunk.slice(0, i));\n}\nexports.utf8Read = utf8Read;\n/**\n * Writes a string as UTF8 bytes.\n * @param {string} string Source string\n * @param {Uint8Array} buffer Destination buffer\n * @param {number} offset Destination offset\n * @returns {number} Bytes written\n */\nfunction utf8Write(str, buffer, offset) {\n    const start = offset;\n    let c1, // character 1\n    c2; // character 2\n    for (let i = 0; i < str.length; ++i) {\n        c1 = str.charCodeAt(i);\n        if (c1 < 128) {\n            buffer[offset++] = c1;\n        }\n        else if (c1 < 2048) {\n            buffer[offset++] = (c1 >> 6) | 192;\n            buffer[offset++] = (c1 & 63) | 128;\n        }\n        else if ((c1 & 0xfc00) === 0xd800 && ((c2 = str.charCodeAt(i + 1)) & 0xfc00) === 0xdc00) {\n            c1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff);\n            ++i;\n            buffer[offset++] = (c1 >> 18) | 240;\n            buffer[offset++] = ((c1 >> 12) & 63) | 128;\n            buffer[offset++] = ((c1 >> 6) & 63) | 128;\n            buffer[offset++] = (c1 & 63) | 128;\n        }\n        else {\n            buffer[offset++] = (c1 >> 12) | 224;\n            buffer[offset++] = ((c1 >> 6) & 63) | 128;\n            buffer[offset++] = (c1 & 63) | 128;\n        }\n    }\n    return offset - start;\n}\nexports.utf8Write = utf8Write;\n//# sourceMappingURL=utf8.js.map","\"use strict\";\n/* eslint-disable */\n/**\n * This file and any referenced files were automatically generated by @cosmology/telescope@1.0.7\n * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain\n * and run the transpile command or yarn proto command to regenerate this bundle.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeByte = exports.writeFixed32 = exports.int64Length = exports.writeVarint64 = exports.writeVarint32 = exports.readInt32 = exports.readUInt32 = exports.zzDecode = exports.zzEncode = exports.varint32read = exports.varint32write = exports.uInt64ToString = exports.int64ToString = exports.int64FromString = exports.varint64write = exports.varint64read = void 0;\n// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nfunction varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\nexports.varint64read = varint64read;\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nfunction varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\nexports.varint64write = varint64write;\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === \"-\";\n    if (minus) {\n        dec = dec.slice(1);\n    }\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\nexports.int64FromString = int64FromString;\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64ToString(lo, hi) {\n    let bits = newBits(lo, hi);\n    // If we're treating the input as a signed value and the high bit is set, do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = bits.hi & 0x80000000;\n    if (negative) {\n        bits = negate(bits.lo, bits.hi);\n    }\n    const result = uInt64ToString(bits.lo, bits.hi);\n    return negative ? \"-\" + result : result;\n}\nexports.int64ToString = int64ToString;\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction uInt64ToString(lo, hi) {\n    ({ lo, hi } = toUnsigned(lo, hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1fffff) {\n        return String(TWO_PWR_32_DBL * hi + lo);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xffffff;\n    const mid = ((lo >>> 24) | (hi << 8)) & 0xffffff;\n    const high = (hi >> 16) & 0xffff;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + mid * 6777216 + high * 6710656;\n    let digitB = mid + high * 8147497;\n    let digitC = high * 2;\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0, then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this, we can assume both digitB\n    // and digitA need leading zeros.\n    return digitC.toString() + decimalFrom1e7WithLeadingZeros(digitB) + decimalFrom1e7WithLeadingZeros(digitA);\n}\nexports.uInt64ToString = uInt64ToString;\nfunction toUnsigned(lo, hi) {\n    return { lo: lo >>> 0, hi: hi >>> 0 };\n}\nfunction newBits(lo, hi) {\n    return { lo: lo | 0, hi: hi | 0 };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n    highBits = ~highBits;\n    if (lowBits) {\n        lowBits = ~lowBits + 1;\n    }\n    else {\n        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n        // adding 1 to that, results in 0x100000000, which leaves\n        // the low bits 0x0 and simply adds one to the high bits.\n        highBits += 1;\n    }\n    return newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n    const partial = String(digit1e7);\n    return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nfunction varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push((value & 127) | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\nexports.varint32write = varint32write;\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nfunction varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error(\"invalid varint\");\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\nexports.varint32read = varint32read;\n/**\n * encode zig zag\n */\nfunction zzEncode(lo, hi) {\n    let mask = hi >> 31;\n    hi = (((hi << 1) | (lo >>> 31)) ^ mask) >>> 0;\n    lo = ((lo << 1) ^ mask) >>> 0;\n    return [lo, hi];\n}\nexports.zzEncode = zzEncode;\n/**\n * decode zig zag\n */\nfunction zzDecode(lo, hi) {\n    let mask = -(lo & 1);\n    lo = (((lo >>> 1) | (hi << 31)) ^ mask) >>> 0;\n    hi = ((hi >>> 1) ^ mask) >>> 0;\n    return [lo, hi];\n}\nexports.zzDecode = zzDecode;\n/**\n * unsigned int32 without moving pos.\n */\nfunction readUInt32(buf, pos) {\n    return (buf[pos] | (buf[pos + 1] << 8) | (buf[pos + 2] << 16)) + buf[pos + 3] * 0x1000000;\n}\nexports.readUInt32 = readUInt32;\n/**\n * signed int32 without moving pos.\n */\nfunction readInt32(buf, pos) {\n    return (buf[pos] | (buf[pos + 1] << 8) | (buf[pos + 2] << 16)) + (buf[pos + 3] << 24);\n}\nexports.readInt32 = readInt32;\n/**\n * writing varint32 to pos\n */\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = (val & 127) | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\nexports.writeVarint32 = writeVarint32;\n/**\n * writing varint64 to pos\n */\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = (val.lo & 127) | 128;\n        val.lo = ((val.lo >>> 7) | (val.hi << 25)) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = (val.lo & 127) | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\nexports.writeVarint64 = writeVarint64;\nfunction int64Length(lo, hi) {\n    let part0 = lo, part1 = ((lo >>> 28) | (hi << 4)) >>> 0, part2 = hi >>> 24;\n    return part2 === 0\n        ? part1 === 0\n            ? part0 < 16384\n                ? part0 < 128\n                    ? 1\n                    : 2\n                : part0 < 2097152\n                    ? 3\n                    : 4\n            : part1 < 16384\n                ? part1 < 128\n                    ? 5\n                    : 6\n                : part1 < 2097152\n                    ? 7\n                    : 8\n        : part2 < 128\n            ? 9\n            : 10;\n}\nexports.int64Length = int64Length;\nfunction writeFixed32(val, buf, pos) {\n    buf[pos] = val & 255;\n    buf[pos + 1] = (val >>> 8) & 255;\n    buf[pos + 2] = (val >>> 16) & 255;\n    buf[pos + 3] = val >>> 24;\n}\nexports.writeFixed32 = writeFixed32;\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\nexports.writeByte = writeByte;\n//# sourceMappingURL=varint.js.map","// Axios v1.7.4 Copyright (c) 2024 Matt Zabriskie and contributors\n'use strict';\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n};\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n};\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n};\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  };\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n};\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n};\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n};\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n};\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n};\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n};\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n};\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n};\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n};\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n};\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  };\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n};\n\nconst noop = () => {};\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n};\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz';\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n};\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0];\n  }\n\n  return str;\n};\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  };\n\n  return visit(obj, 0);\n};\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nvar utils$1 = {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils$1.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils$1.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype$1 = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype$1, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype$1);\n\n  utils$1.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n// eslint-disable-next-line strict\nvar httpAdapter = null;\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils$1.isPlainObject(thing) || utils$1.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils$1.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils$1.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils$1.toFlatObject(utils$1, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils$1.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils$1.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils$1.isSpecCompliantForm(formData);\n\n  if (!utils$1.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils$1.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils$1.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils$1.isArrayBuffer(value) || utils$1.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils$1.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils$1.isArray(value) && isFlatArray(value)) ||\n        ((utils$1.isFileList(value) || utils$1.endsWith(key, '[]')) && (arr = utils$1.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils$1.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils$1.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils$1.forEach(value, function each(el, key) {\n      const result = !(utils$1.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils$1.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode$1(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode$1);\n  } : encode$1;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils$1.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils$1.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nvar InterceptorManager$1 = InterceptorManager;\n\nvar transitionalDefaults = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n\nvar URLSearchParams$1 = typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n\nvar FormData$1 = typeof FormData !== 'undefined' ? FormData : null;\n\nvar Blob$1 = typeof Blob !== 'undefined' ? Blob : null;\n\nvar platform$1 = {\n  isBrowser: true,\n  classes: {\n    URLSearchParams: URLSearchParams$1,\n    FormData: FormData$1,\n    Blob: Blob$1\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n\nconst hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  hasBrowserEnv: hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv: hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv: hasStandardBrowserEnv,\n  origin: origin\n});\n\nvar platform = {\n  ...utils,\n  ...platform$1\n};\n\nfunction toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils$1.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils$1.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils$1.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils$1.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils$1.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils$1.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils$1.isFormData(formData) && utils$1.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils$1.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils$1.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils$1.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils$1.isObject(data);\n\n    if (isObjectPayload && utils$1.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils$1.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils$1.isArrayBuffer(data) ||\n      utils$1.isBuffer(data) ||\n      utils$1.isStream(data) ||\n      utils$1.isFile(data) ||\n      utils$1.isBlob(data) ||\n      utils$1.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils$1.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils$1.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils$1.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils$1.isResponse(data) || utils$1.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils$1.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils$1.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nvar defaults$1 = defaults;\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils$1.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nvar parseHeaders = rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils$1.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils$1.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils$1.isString(value)) return;\n\n  if (utils$1.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils$1.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils$1.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils$1.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils$1.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils$1.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite);\n    } else if(utils$1.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils$1.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils$1.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils$1.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils$1.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils$1.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils$1.forEach(this, (value, header) => {\n      const key = utils$1.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils$1.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils$1.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils$1.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils$1.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils$1.freezeMethods(AxiosHeaders);\n\nvar AxiosHeaders$1 = AxiosHeaders;\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || defaults$1;\n  const context = response || config;\n  const headers = AxiosHeaders$1.from(context.headers);\n  let data = context.data;\n\n  utils$1.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils$1.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\n/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  };\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs);\n        }, threshold - passed);\n      }\n    }\n  };\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nconst progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n};\n\nconst progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n};\n\nconst asyncDecorator = (fn) => (...args) => utils$1.asap(() => fn(...args));\n\nvar isURLSameOrigin = platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils$1.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n\nvar cookies = platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils$1.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils$1.isString(path) && cookie.push('path=' + path);\n\n      utils$1.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders$1 ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils$1.isPlainObject(target) && utils$1.isPlainObject(source)) {\n      return utils$1.merge.call({caseless}, target, source);\n    } else if (utils$1.isPlainObject(source)) {\n      return utils$1.merge({}, source);\n    } else if (utils$1.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils$1.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils$1.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n\nvar resolveConfig = (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders$1.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils$1.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils$1.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n};\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nvar xhrAdapter = isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders$1.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders$1.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils$1.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils$1.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n};\n\nconst composeSignals = (signals, timeout) => {\n  let controller = new AbortController();\n\n  let aborted;\n\n  const onabort = function (cancel) {\n    if (!aborted) {\n      aborted = true;\n      unsubscribe();\n      const err = cancel instanceof Error ? cancel : this.reason;\n      controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n    }\n  };\n\n  let timer = timeout && setTimeout(() => {\n    onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT));\n  }, timeout);\n\n  const unsubscribe = () => {\n    if (signals) {\n      timer && clearTimeout(timer);\n      timer = null;\n      signals.forEach(signal => {\n        signal &&\n        (signal.removeEventListener ? signal.removeEventListener('abort', onabort) : signal.unsubscribe(onabort));\n      });\n      signals = null;\n    }\n  };\n\n  signals.forEach((signal) => signal && signal.addEventListener && signal.addEventListener('abort', onabort));\n\n  const {signal} = controller;\n\n  signal.unsubscribe = unsubscribe;\n\n  return [signal, () => {\n    timer && clearTimeout(timer);\n    timer = null;\n  }];\n};\n\nvar composeSignals$1 = composeSignals;\n\nconst streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n};\n\nconst readBytes = async function* (iterable, chunkSize, encode) {\n  for await (const chunk of iterable) {\n    yield* streamChunk(ArrayBuffer.isView(chunk) ? chunk : (await encode(String(chunk))), chunkSize);\n  }\n};\n\nconst trackStream = (stream, chunkSize, onProgress, onFinish, encode) => {\n  const iterator = readBytes(stream, chunkSize, encode);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  };\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n};\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n};\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils$1.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils$1.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      });\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils$1.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils$1.isSpecCompliantForm(body)) {\n    return (await new Request(body).arrayBuffer()).byteLength;\n  }\n\n  if(utils$1.isArrayBufferView(body) || utils$1.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils$1.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils$1.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n};\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils$1.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n};\n\nvar fetchAdapter = isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let [composedSignal, stopTimeout] = (signal || cancelToken || timeout) ?\n    composeSignals$1([signal, cancelToken], timeout) : [];\n\n  let finished, request;\n\n  const onFinish = () => {\n    !finished && setTimeout(() => {\n      composedSignal && composedSignal.unsubscribe();\n    });\n\n    finished = true;\n  };\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils$1.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader);\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush, encodeText);\n      }\n    }\n\n    if (!utils$1.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: withCredentials\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || isStreamResponse)) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils$1.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          isStreamResponse && onFinish();\n        }, encodeText),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils$1.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && onFinish();\n\n    stopTimeout && stopTimeout();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders$1.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      });\n    })\n  } catch (err) {\n    onFinish();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n};\n\nutils$1.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils$1.isFunction(adapter) || adapter === null || adapter === false;\n\nvar adapters = {\n  getAdapter: (adapters) => {\n    adapters = utils$1.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n};\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders$1.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults$1.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders$1.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders$1.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n\nconst VERSION = \"1.7.4\";\n\nconst validators$1 = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators$1[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators$1.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nvar validator = {\n  assertOptions,\n  validators: validators$1\n};\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager$1(),\n      response: new InterceptorManager$1()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack;\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils$1.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        };\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils$1.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils$1.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders$1.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils$1.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils$1.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nvar Axios$1 = Axios;\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nvar CancelToken$1 = CancelToken;\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return utils$1.isObject(payload) && (payload.isAxiosError === true);\n}\n\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nvar HttpStatusCode$1 = HttpStatusCode;\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios$1(defaultConfig);\n  const instance = bind(Axios$1.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils$1.extend(instance, Axios$1.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils$1.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults$1);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios$1;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken$1;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders$1;\n\naxios.formToJSON = thing => formDataToJSON(utils$1.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode$1;\n\naxios.default = axios;\n\nmodule.exports = axios;\n//# sourceMappingURL=axios.cjs.map\n","import { __assign, __rest } from \"tslib\";\nimport { wrap } from \"optimism\";\nimport { cacheSizes, getFragmentQueryDocument, } from \"../../utilities/index.js\";\nimport { WeakCache } from \"@wry/caches\";\nimport { getApolloCacheMemoryInternals } from \"../../utilities/caching/getMemoryInternals.js\";\nvar ApolloCache = /** @class */ (function () {\n    function ApolloCache() {\n        this.assumeImmutableResults = false;\n        // Make sure we compute the same (===) fragment query document every\n        // time we receive the same fragment in readFragment.\n        this.getFragmentDoc = wrap(getFragmentQueryDocument, {\n            max: cacheSizes[\"cache.fragmentQueryDocuments\"] ||\n                1000 /* defaultCacheSizes[\"cache.fragmentQueryDocuments\"] */,\n            cache: WeakCache,\n        });\n    }\n    // Transactional API\n    // The batch method is intended to replace/subsume both performTransaction\n    // and recordOptimisticTransaction, but performTransaction came first, so we\n    // provide a default batch implementation that's just another way of calling\n    // performTransaction. Subclasses of ApolloCache (such as InMemoryCache) can\n    // override the batch method to do more interesting things with its options.\n    ApolloCache.prototype.batch = function (options) {\n        var _this = this;\n        var optimisticId = typeof options.optimistic === \"string\" ? options.optimistic\n            : options.optimistic === false ? null\n                : void 0;\n        var updateResult;\n        this.performTransaction(function () { return (updateResult = options.update(_this)); }, optimisticId);\n        return updateResult;\n    };\n    ApolloCache.prototype.recordOptimisticTransaction = function (transaction, optimisticId) {\n        this.performTransaction(transaction, optimisticId);\n    };\n    // Optional API\n    // Called once per input document, allowing the cache to make static changes\n    // to the query, such as adding __typename fields.\n    ApolloCache.prototype.transformDocument = function (document) {\n        return document;\n    };\n    // Called before each ApolloLink request, allowing the cache to make dynamic\n    // changes to the query, such as filling in missing fragment definitions.\n    ApolloCache.prototype.transformForLink = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.identify = function (object) {\n        return;\n    };\n    ApolloCache.prototype.gc = function () {\n        return [];\n    };\n    ApolloCache.prototype.modify = function (options) {\n        return false;\n    };\n    // DataProxy API\n    ApolloCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = !!options.optimistic; }\n        return this.read(__assign(__assign({}, options), { rootId: options.id || \"ROOT_QUERY\", optimistic: optimistic }));\n    };\n    ApolloCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = !!options.optimistic; }\n        return this.read(__assign(__assign({}, options), { query: this.getFragmentDoc(options.fragment, options.fragmentName), rootId: options.id, optimistic: optimistic }));\n    };\n    ApolloCache.prototype.writeQuery = function (_a) {\n        var id = _a.id, data = _a.data, options = __rest(_a, [\"id\", \"data\"]);\n        return this.write(Object.assign(options, {\n            dataId: id || \"ROOT_QUERY\",\n            result: data,\n        }));\n    };\n    ApolloCache.prototype.writeFragment = function (_a) {\n        var id = _a.id, data = _a.data, fragment = _a.fragment, fragmentName = _a.fragmentName, options = __rest(_a, [\"id\", \"data\", \"fragment\", \"fragmentName\"]);\n        return this.write(Object.assign(options, {\n            query: this.getFragmentDoc(fragment, fragmentName),\n            dataId: id,\n            result: data,\n        }));\n    };\n    ApolloCache.prototype.updateQuery = function (options, update) {\n        return this.batch({\n            update: function (cache) {\n                var value = cache.readQuery(options);\n                var data = update(value);\n                if (data === void 0 || data === null)\n                    return value;\n                cache.writeQuery(__assign(__assign({}, options), { data: data }));\n                return data;\n            },\n        });\n    };\n    ApolloCache.prototype.updateFragment = function (options, update) {\n        return this.batch({\n            update: function (cache) {\n                var value = cache.readFragment(options);\n                var data = update(value);\n                if (data === void 0 || data === null)\n                    return value;\n                cache.writeFragment(__assign(__assign({}, options), { data: data }));\n                return data;\n            },\n        });\n    };\n    return ApolloCache;\n}());\nexport { ApolloCache };\nif (globalThis.__DEV__ !== false) {\n    ApolloCache.prototype.getMemoryInternals = getApolloCacheMemoryInternals;\n}\n//# sourceMappingURL=cache.js.map","import { __extends } from \"tslib\";\nvar MissingFieldError = /** @class */ (function (_super) {\n    __extends(MissingFieldError, _super);\n    function MissingFieldError(message, path, query, variables) {\n        var _a;\n        // 'Error' breaks prototype chain here\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        _this.path = path;\n        _this.query = query;\n        _this.variables = variables;\n        if (Array.isArray(_this.path)) {\n            _this.missing = _this.message;\n            for (var i = _this.path.length - 1; i >= 0; --i) {\n                _this.missing = (_a = {}, _a[_this.path[i]] = _this.missing, _a);\n            }\n        }\n        else {\n            _this.missing = _this.path;\n        }\n        // We're not using `Object.setPrototypeOf` here as it isn't fully supported\n        // on Android (see issue #3236).\n        _this.__proto__ = MissingFieldError.prototype;\n        return _this;\n    }\n    return MissingFieldError;\n}(Error));\nexport { MissingFieldError };\n//# sourceMappingURL=common.js.map","import { isReference, isField, DeepMerger, resultKeyNameFromField, shouldInclude, isNonNullObject, compact, createFragmentMap, getFragmentDefinitions, isArray, } from \"../../utilities/index.js\";\nexport var hasOwn = Object.prototype.hasOwnProperty;\nexport function isNullish(value) {\n    return value === null || value === void 0;\n}\nexport { isArray };\nexport function defaultDataIdFromObject(_a, context) {\n    var __typename = _a.__typename, id = _a.id, _id = _a._id;\n    if (typeof __typename === \"string\") {\n        if (context) {\n            context.keyObject =\n                !isNullish(id) ? { id: id }\n                    : !isNullish(_id) ? { _id: _id }\n                        : void 0;\n        }\n        // If there is no object.id, fall back to object._id.\n        if (isNullish(id) && !isNullish(_id)) {\n            id = _id;\n        }\n        if (!isNullish(id)) {\n            return \"\".concat(__typename, \":\").concat(typeof id === \"number\" || typeof id === \"string\" ?\n                id\n                : JSON.stringify(id));\n        }\n    }\n}\nvar defaultConfig = {\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    resultCaching: true,\n    // Thanks to the shouldCanonizeResults helper, this should be the only line\n    // you have to change to reenable canonization by default in the future.\n    canonizeResults: false,\n};\nexport function normalizeConfig(config) {\n    return compact(defaultConfig, config);\n}\nexport function shouldCanonizeResults(config) {\n    var value = config.canonizeResults;\n    return value === void 0 ? defaultConfig.canonizeResults : value;\n}\nexport function getTypenameFromStoreObject(store, objectOrReference) {\n    return isReference(objectOrReference) ?\n        store.get(objectOrReference.__ref, \"__typename\")\n        : objectOrReference && objectOrReference.__typename;\n}\nexport var TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;\nexport function fieldNameFromStoreName(storeFieldName) {\n    var match = storeFieldName.match(TypeOrFieldNameRegExp);\n    return match ? match[0] : storeFieldName;\n}\nexport function selectionSetMatchesResult(selectionSet, result, variables) {\n    if (isNonNullObject(result)) {\n        return isArray(result) ?\n            result.every(function (item) {\n                return selectionSetMatchesResult(selectionSet, item, variables);\n            })\n            : selectionSet.selections.every(function (field) {\n                if (isField(field) && shouldInclude(field, variables)) {\n                    var key = resultKeyNameFromField(field);\n                    return (hasOwn.call(result, key) &&\n                        (!field.selectionSet ||\n                            selectionSetMatchesResult(field.selectionSet, result[key], variables)));\n                }\n                // If the selection has been skipped with @skip(true) or\n                // @include(false), it should not count against the matching. If\n                // the selection is not a field, it must be a fragment (inline or\n                // named). We will determine if selectionSetMatchesResult for that\n                // fragment when we get to it, so for now we return true.\n                return true;\n            });\n    }\n    return false;\n}\nexport function storeValueIsStoreObject(value) {\n    return isNonNullObject(value) && !isReference(value) && !isArray(value);\n}\nexport function makeProcessedFieldsMerger() {\n    return new DeepMerger();\n}\nexport function extractFragmentContext(document, fragments) {\n    // FragmentMap consisting only of fragments defined directly in document, not\n    // including other fragments registered in the FragmentRegistry.\n    var fragmentMap = createFragmentMap(getFragmentDefinitions(document));\n    return {\n        fragmentMap: fragmentMap,\n        lookupFragment: function (name) {\n            var def = fragmentMap[name];\n            if (!def && fragments) {\n                def = fragments.lookup(name);\n            }\n            return def || null;\n        },\n    };\n}\n//# sourceMappingURL=helpers.js.map","import { __assign, __extends, __rest } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport { dep } from \"optimism\";\nimport { equal } from \"@wry/equality\";\nimport { Trie } from \"@wry/trie\";\nimport { isReference, makeReference, DeepMerger, maybeDeepFreeze, canUseWeakMap, isNonNullObject, } from \"../../utilities/index.js\";\nimport { hasOwn, fieldNameFromStoreName } from \"./helpers.js\";\nvar DELETE = Object.create(null);\nvar delModifier = function () { return DELETE; };\nvar INVALIDATE = Object.create(null);\nvar EntityStore = /** @class */ (function () {\n    function EntityStore(policies, group) {\n        var _this = this;\n        this.policies = policies;\n        this.group = group;\n        this.data = Object.create(null);\n        // Maps root entity IDs to the number of times they have been retained, minus\n        // the number of times they have been released. Retained entities keep other\n        // entities they reference (even indirectly) from being garbage collected.\n        this.rootIds = Object.create(null);\n        // Lazily tracks { __ref: <dataId> } strings contained by this.data[dataId].\n        this.refs = Object.create(null);\n        // Bound function that can be passed around to provide easy access to fields\n        // of Reference objects as well as ordinary objects.\n        this.getFieldValue = function (objectOrReference, storeFieldName) {\n            return maybeDeepFreeze(isReference(objectOrReference) ?\n                _this.get(objectOrReference.__ref, storeFieldName)\n                : objectOrReference && objectOrReference[storeFieldName]);\n        };\n        // Returns true for non-normalized StoreObjects and non-dangling\n        // References, indicating that readField(name, objOrRef) has a chance of\n        // working. Useful for filtering out dangling references from lists.\n        this.canRead = function (objOrRef) {\n            return isReference(objOrRef) ?\n                _this.has(objOrRef.__ref)\n                : typeof objOrRef === \"object\";\n        };\n        // Bound function that converts an id or an object with a __typename and\n        // primary key fields to a Reference object. If called with a Reference object,\n        // that same Reference object is returned. Pass true for mergeIntoStore to persist\n        // an object into the store.\n        this.toReference = function (objOrIdOrRef, mergeIntoStore) {\n            if (typeof objOrIdOrRef === \"string\") {\n                return makeReference(objOrIdOrRef);\n            }\n            if (isReference(objOrIdOrRef)) {\n                return objOrIdOrRef;\n            }\n            var id = _this.policies.identify(objOrIdOrRef)[0];\n            if (id) {\n                var ref = makeReference(id);\n                if (mergeIntoStore) {\n                    _this.merge(id, objOrIdOrRef);\n                }\n                return ref;\n            }\n        };\n    }\n    // Although the EntityStore class is abstract, it contains concrete\n    // implementations of the various NormalizedCache interface methods that\n    // are inherited by the Root and Layer subclasses.\n    EntityStore.prototype.toObject = function () {\n        return __assign({}, this.data);\n    };\n    EntityStore.prototype.has = function (dataId) {\n        return this.lookup(dataId, true) !== void 0;\n    };\n    EntityStore.prototype.get = function (dataId, fieldName) {\n        this.group.depend(dataId, fieldName);\n        if (hasOwn.call(this.data, dataId)) {\n            var storeObject = this.data[dataId];\n            if (storeObject && hasOwn.call(storeObject, fieldName)) {\n                return storeObject[fieldName];\n            }\n        }\n        if (fieldName === \"__typename\" &&\n            hasOwn.call(this.policies.rootTypenamesById, dataId)) {\n            return this.policies.rootTypenamesById[dataId];\n        }\n        if (this instanceof Layer) {\n            return this.parent.get(dataId, fieldName);\n        }\n    };\n    EntityStore.prototype.lookup = function (dataId, dependOnExistence) {\n        // The has method (above) calls lookup with dependOnExistence = true, so\n        // that it can later be invalidated when we add or remove a StoreObject for\n        // this dataId. Any consumer who cares about the contents of the StoreObject\n        // should not rely on this dependency, since the contents could change\n        // without the object being added or removed.\n        if (dependOnExistence)\n            this.group.depend(dataId, \"__exists\");\n        if (hasOwn.call(this.data, dataId)) {\n            return this.data[dataId];\n        }\n        if (this instanceof Layer) {\n            return this.parent.lookup(dataId, dependOnExistence);\n        }\n        if (this.policies.rootTypenamesById[dataId]) {\n            return Object.create(null);\n        }\n    };\n    EntityStore.prototype.merge = function (older, newer) {\n        var _this = this;\n        var dataId;\n        // Convert unexpected references to ID strings.\n        if (isReference(older))\n            older = older.__ref;\n        if (isReference(newer))\n            newer = newer.__ref;\n        var existing = typeof older === \"string\" ? this.lookup((dataId = older)) : older;\n        var incoming = typeof newer === \"string\" ? this.lookup((dataId = newer)) : newer;\n        // If newer was a string ID, but that ID was not defined in this store,\n        // then there are no fields to be merged, so we're done.\n        if (!incoming)\n            return;\n        invariant(typeof dataId === \"string\", 1);\n        var merged = new DeepMerger(storeObjectReconciler).merge(existing, incoming);\n        // Even if merged === existing, existing may have come from a lower\n        // layer, so we always need to set this.data[dataId] on this level.\n        this.data[dataId] = merged;\n        if (merged !== existing) {\n            delete this.refs[dataId];\n            if (this.group.caching) {\n                var fieldsToDirty_1 = Object.create(null);\n                // If we added a new StoreObject where there was previously none, dirty\n                // anything that depended on the existence of this dataId, such as the\n                // EntityStore#has method.\n                if (!existing)\n                    fieldsToDirty_1.__exists = 1;\n                // Now invalidate dependents who called getFieldValue for any fields\n                // that are changing as a result of this merge.\n                Object.keys(incoming).forEach(function (storeFieldName) {\n                    if (!existing ||\n                        existing[storeFieldName] !== merged[storeFieldName]) {\n                        // Always dirty the full storeFieldName, which may include\n                        // serialized arguments following the fieldName prefix.\n                        fieldsToDirty_1[storeFieldName] = 1;\n                        // Also dirty fieldNameFromStoreName(storeFieldName) if it's\n                        // different from storeFieldName and this field does not have\n                        // keyArgs configured, because that means the cache can't make\n                        // any assumptions about how field values with the same field\n                        // name but different arguments might be interrelated, so it\n                        // must err on the side of invalidating all field values that\n                        // share the same short fieldName, regardless of arguments.\n                        var fieldName = fieldNameFromStoreName(storeFieldName);\n                        if (fieldName !== storeFieldName &&\n                            !_this.policies.hasKeyArgs(merged.__typename, fieldName)) {\n                            fieldsToDirty_1[fieldName] = 1;\n                        }\n                        // If merged[storeFieldName] has become undefined, and this is the\n                        // Root layer, actually delete the property from the merged object,\n                        // which is guaranteed to have been created fresh in this method.\n                        if (merged[storeFieldName] === void 0 && !(_this instanceof Layer)) {\n                            delete merged[storeFieldName];\n                        }\n                    }\n                });\n                if (fieldsToDirty_1.__typename &&\n                    !(existing && existing.__typename) &&\n                    // Since we return default root __typename strings\n                    // automatically from store.get, we don't need to dirty the\n                    // ROOT_QUERY.__typename field if merged.__typename is equal\n                    // to the default string (usually \"Query\").\n                    this.policies.rootTypenamesById[dataId] === merged.__typename) {\n                    delete fieldsToDirty_1.__typename;\n                }\n                Object.keys(fieldsToDirty_1).forEach(function (fieldName) {\n                    return _this.group.dirty(dataId, fieldName);\n                });\n            }\n        }\n    };\n    EntityStore.prototype.modify = function (dataId, fields) {\n        var _this = this;\n        var storeObject = this.lookup(dataId);\n        if (storeObject) {\n            var changedFields_1 = Object.create(null);\n            var needToMerge_1 = false;\n            var allDeleted_1 = true;\n            var sharedDetails_1 = {\n                DELETE: DELETE,\n                INVALIDATE: INVALIDATE,\n                isReference: isReference,\n                toReference: this.toReference,\n                canRead: this.canRead,\n                readField: function (fieldNameOrOptions, from) {\n                    return _this.policies.readField(typeof fieldNameOrOptions === \"string\" ?\n                        {\n                            fieldName: fieldNameOrOptions,\n                            from: from || makeReference(dataId),\n                        }\n                        : fieldNameOrOptions, { store: _this });\n                },\n            };\n            Object.keys(storeObject).forEach(function (storeFieldName) {\n                var fieldName = fieldNameFromStoreName(storeFieldName);\n                var fieldValue = storeObject[storeFieldName];\n                if (fieldValue === void 0)\n                    return;\n                var modify = typeof fields === \"function\" ? fields : (fields[storeFieldName] || fields[fieldName]);\n                if (modify) {\n                    var newValue = modify === delModifier ? DELETE : (modify(maybeDeepFreeze(fieldValue), __assign(__assign({}, sharedDetails_1), { fieldName: fieldName, storeFieldName: storeFieldName, storage: _this.getStorage(dataId, storeFieldName) })));\n                    if (newValue === INVALIDATE) {\n                        _this.group.dirty(dataId, storeFieldName);\n                    }\n                    else {\n                        if (newValue === DELETE)\n                            newValue = void 0;\n                        if (newValue !== fieldValue) {\n                            changedFields_1[storeFieldName] = newValue;\n                            needToMerge_1 = true;\n                            fieldValue = newValue;\n                            if (globalThis.__DEV__ !== false) {\n                                var checkReference = function (ref) {\n                                    if (_this.lookup(ref.__ref) === undefined) {\n                                        globalThis.__DEV__ !== false && invariant.warn(2, ref);\n                                        return true;\n                                    }\n                                };\n                                if (isReference(newValue)) {\n                                    checkReference(newValue);\n                                }\n                                else if (Array.isArray(newValue)) {\n                                    // Warn about writing \"mixed\" arrays of Reference and non-Reference objects\n                                    var seenReference = false;\n                                    var someNonReference = void 0;\n                                    for (var _i = 0, newValue_1 = newValue; _i < newValue_1.length; _i++) {\n                                        var value = newValue_1[_i];\n                                        if (isReference(value)) {\n                                            seenReference = true;\n                                            if (checkReference(value))\n                                                break;\n                                        }\n                                        else {\n                                            // Do not warn on primitive values, since those could never be represented\n                                            // by a reference. This is a valid (albeit uncommon) use case.\n                                            if (typeof value === \"object\" && !!value) {\n                                                var id = _this.policies.identify(value)[0];\n                                                // check if object could even be referenced, otherwise we are not interested in it for this warning\n                                                if (id) {\n                                                    someNonReference = value;\n                                                }\n                                            }\n                                        }\n                                        if (seenReference && someNonReference !== undefined) {\n                                            globalThis.__DEV__ !== false && invariant.warn(3, someNonReference);\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (fieldValue !== void 0) {\n                    allDeleted_1 = false;\n                }\n            });\n            if (needToMerge_1) {\n                this.merge(dataId, changedFields_1);\n                if (allDeleted_1) {\n                    if (this instanceof Layer) {\n                        this.data[dataId] = void 0;\n                    }\n                    else {\n                        delete this.data[dataId];\n                    }\n                    this.group.dirty(dataId, \"__exists\");\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    // If called with only one argument, removes the entire entity\n    // identified by dataId. If called with a fieldName as well, removes all\n    // fields of that entity whose names match fieldName according to the\n    // fieldNameFromStoreName helper function. If called with a fieldName\n    // and variables, removes all fields of that entity whose names match fieldName\n    // and whose arguments when cached exactly match the variables passed.\n    EntityStore.prototype.delete = function (dataId, fieldName, args) {\n        var _a;\n        var storeObject = this.lookup(dataId);\n        if (storeObject) {\n            var typename = this.getFieldValue(storeObject, \"__typename\");\n            var storeFieldName = fieldName && args ?\n                this.policies.getStoreFieldName({ typename: typename, fieldName: fieldName, args: args })\n                : fieldName;\n            return this.modify(dataId, storeFieldName ? (_a = {},\n                _a[storeFieldName] = delModifier,\n                _a) : delModifier);\n        }\n        return false;\n    };\n    EntityStore.prototype.evict = function (options, limit) {\n        var evicted = false;\n        if (options.id) {\n            if (hasOwn.call(this.data, options.id)) {\n                evicted = this.delete(options.id, options.fieldName, options.args);\n            }\n            if (this instanceof Layer && this !== limit) {\n                evicted = this.parent.evict(options, limit) || evicted;\n            }\n            // Always invalidate the field to trigger rereading of watched\n            // queries, even if no cache data was modified by the eviction,\n            // because queries may depend on computed fields with custom read\n            // functions, whose values are not stored in the EntityStore.\n            if (options.fieldName || evicted) {\n                this.group.dirty(options.id, options.fieldName || \"__exists\");\n            }\n        }\n        return evicted;\n    };\n    EntityStore.prototype.clear = function () {\n        this.replace(null);\n    };\n    EntityStore.prototype.extract = function () {\n        var _this = this;\n        var obj = this.toObject();\n        var extraRootIds = [];\n        this.getRootIdSet().forEach(function (id) {\n            if (!hasOwn.call(_this.policies.rootTypenamesById, id)) {\n                extraRootIds.push(id);\n            }\n        });\n        if (extraRootIds.length) {\n            obj.__META = { extraRootIds: extraRootIds.sort() };\n        }\n        return obj;\n    };\n    EntityStore.prototype.replace = function (newData) {\n        var _this = this;\n        Object.keys(this.data).forEach(function (dataId) {\n            if (!(newData && hasOwn.call(newData, dataId))) {\n                _this.delete(dataId);\n            }\n        });\n        if (newData) {\n            var __META = newData.__META, rest_1 = __rest(newData, [\"__META\"]);\n            Object.keys(rest_1).forEach(function (dataId) {\n                _this.merge(dataId, rest_1[dataId]);\n            });\n            if (__META) {\n                __META.extraRootIds.forEach(this.retain, this);\n            }\n        }\n    };\n    EntityStore.prototype.retain = function (rootId) {\n        return (this.rootIds[rootId] = (this.rootIds[rootId] || 0) + 1);\n    };\n    EntityStore.prototype.release = function (rootId) {\n        if (this.rootIds[rootId] > 0) {\n            var count = --this.rootIds[rootId];\n            if (!count)\n                delete this.rootIds[rootId];\n            return count;\n        }\n        return 0;\n    };\n    // Return a Set<string> of all the ID strings that have been retained by\n    // this layer/root *and* any layers/roots beneath it.\n    EntityStore.prototype.getRootIdSet = function (ids) {\n        if (ids === void 0) { ids = new Set(); }\n        Object.keys(this.rootIds).forEach(ids.add, ids);\n        if (this instanceof Layer) {\n            this.parent.getRootIdSet(ids);\n        }\n        else {\n            // Official singleton IDs like ROOT_QUERY and ROOT_MUTATION are\n            // always considered roots for garbage collection, regardless of\n            // their retainment counts in this.rootIds.\n            Object.keys(this.policies.rootTypenamesById).forEach(ids.add, ids);\n        }\n        return ids;\n    };\n    // The goal of garbage collection is to remove IDs from the Root layer of the\n    // store that are no longer reachable starting from any IDs that have been\n    // explicitly retained (see retain and release, above). Returns an array of\n    // dataId strings that were removed from the store.\n    EntityStore.prototype.gc = function () {\n        var _this = this;\n        var ids = this.getRootIdSet();\n        var snapshot = this.toObject();\n        ids.forEach(function (id) {\n            if (hasOwn.call(snapshot, id)) {\n                // Because we are iterating over an ECMAScript Set, the IDs we add here\n                // will be visited in later iterations of the forEach loop only if they\n                // were not previously contained by the Set.\n                Object.keys(_this.findChildRefIds(id)).forEach(ids.add, ids);\n                // By removing IDs from the snapshot object here, we protect them from\n                // getting removed from the root store layer below.\n                delete snapshot[id];\n            }\n        });\n        var idsToRemove = Object.keys(snapshot);\n        if (idsToRemove.length) {\n            var root_1 = this;\n            while (root_1 instanceof Layer)\n                root_1 = root_1.parent;\n            idsToRemove.forEach(function (id) { return root_1.delete(id); });\n        }\n        return idsToRemove;\n    };\n    EntityStore.prototype.findChildRefIds = function (dataId) {\n        if (!hasOwn.call(this.refs, dataId)) {\n            var found_1 = (this.refs[dataId] = Object.create(null));\n            var root = this.data[dataId];\n            if (!root)\n                return found_1;\n            var workSet_1 = new Set([root]);\n            // Within the store, only arrays and objects can contain child entity\n            // references, so we can prune the traversal using this predicate:\n            workSet_1.forEach(function (obj) {\n                if (isReference(obj)) {\n                    found_1[obj.__ref] = true;\n                    // In rare cases, a { __ref } Reference object may have other fields.\n                    // This often indicates a mismerging of References with StoreObjects,\n                    // but garbage collection should not be fooled by a stray __ref\n                    // property in a StoreObject (ignoring all the other fields just\n                    // because the StoreObject looks like a Reference). To avoid this\n                    // premature termination of findChildRefIds recursion, we fall through\n                    // to the code below, which will handle any other properties of obj.\n                }\n                if (isNonNullObject(obj)) {\n                    Object.keys(obj).forEach(function (key) {\n                        var child = obj[key];\n                        // No need to add primitive values to the workSet, since they cannot\n                        // contain reference objects.\n                        if (isNonNullObject(child)) {\n                            workSet_1.add(child);\n                        }\n                    });\n                }\n            });\n        }\n        return this.refs[dataId];\n    };\n    EntityStore.prototype.makeCacheKey = function () {\n        return this.group.keyMaker.lookupArray(arguments);\n    };\n    return EntityStore;\n}());\nexport { EntityStore };\n// A single CacheGroup represents a set of one or more EntityStore objects,\n// typically the Root store in a CacheGroup by itself, and all active Layer\n// stores in a group together. A single EntityStore object belongs to only\n// one CacheGroup, store.group. The CacheGroup is responsible for tracking\n// dependencies, so store.group is helpful for generating unique keys for\n// cached results that need to be invalidated when/if those dependencies\n// change. If we used the EntityStore objects themselves as cache keys (that\n// is, store rather than store.group), the cache would become unnecessarily\n// fragmented by all the different Layer objects. Instead, the CacheGroup\n// approach allows all optimistic Layer objects in the same linked list to\n// belong to one CacheGroup, with the non-optimistic Root object belonging\n// to another CacheGroup, allowing resultCaching dependencies to be tracked\n// separately for optimistic and non-optimistic entity data.\nvar CacheGroup = /** @class */ (function () {\n    function CacheGroup(caching, parent) {\n        if (parent === void 0) { parent = null; }\n        this.caching = caching;\n        this.parent = parent;\n        this.d = null;\n        this.resetCaching();\n    }\n    CacheGroup.prototype.resetCaching = function () {\n        this.d = this.caching ? dep() : null;\n        this.keyMaker = new Trie(canUseWeakMap);\n    };\n    CacheGroup.prototype.depend = function (dataId, storeFieldName) {\n        if (this.d) {\n            this.d(makeDepKey(dataId, storeFieldName));\n            var fieldName = fieldNameFromStoreName(storeFieldName);\n            if (fieldName !== storeFieldName) {\n                // Fields with arguments that contribute extra identifying\n                // information to the fieldName (thus forming the storeFieldName)\n                // depend not only on the full storeFieldName but also on the\n                // short fieldName, so the field can be invalidated using either\n                // level of specificity.\n                this.d(makeDepKey(dataId, fieldName));\n            }\n            if (this.parent) {\n                this.parent.depend(dataId, storeFieldName);\n            }\n        }\n    };\n    CacheGroup.prototype.dirty = function (dataId, storeFieldName) {\n        if (this.d) {\n            this.d.dirty(makeDepKey(dataId, storeFieldName), \n            // When storeFieldName === \"__exists\", that means the entity identified\n            // by dataId has either disappeared from the cache or was newly added,\n            // so the result caching system would do well to \"forget everything it\n            // knows\" about that object. To achieve that kind of invalidation, we\n            // not only dirty the associated result cache entry, but also remove it\n            // completely from the dependency graph. For the optimism implementation\n            // details, see https://github.com/benjamn/optimism/pull/195.\n            storeFieldName === \"__exists\" ? \"forget\" : \"setDirty\");\n        }\n    };\n    return CacheGroup;\n}());\nfunction makeDepKey(dataId, storeFieldName) {\n    // Since field names cannot have '#' characters in them, this method\n    // of joining the field name and the ID should be unambiguous, and much\n    // cheaper than JSON.stringify([dataId, fieldName]).\n    return storeFieldName + \"#\" + dataId;\n}\nexport function maybeDependOnExistenceOfEntity(store, entityId) {\n    if (supportsResultCaching(store)) {\n        // We use this pseudo-field __exists elsewhere in the EntityStore code to\n        // represent changes in the existence of the entity object identified by\n        // entityId. This dependency gets reliably dirtied whenever an object with\n        // this ID is deleted (or newly created) within this group, so any result\n        // cache entries (for example, StoreReader#executeSelectionSet results) that\n        // depend on __exists for this entityId will get dirtied as well, leading to\n        // the eventual recomputation (instead of reuse) of those result objects the\n        // next time someone reads them from the cache.\n        store.group.depend(entityId, \"__exists\");\n    }\n}\n(function (EntityStore) {\n    // Refer to this class as EntityStore.Root outside this namespace.\n    var Root = /** @class */ (function (_super) {\n        __extends(Root, _super);\n        function Root(_a) {\n            var policies = _a.policies, _b = _a.resultCaching, resultCaching = _b === void 0 ? true : _b, seed = _a.seed;\n            var _this = _super.call(this, policies, new CacheGroup(resultCaching)) || this;\n            _this.stump = new Stump(_this);\n            _this.storageTrie = new Trie(canUseWeakMap);\n            if (seed)\n                _this.replace(seed);\n            return _this;\n        }\n        Root.prototype.addLayer = function (layerId, replay) {\n            // Adding an optimistic Layer on top of the Root actually adds the Layer\n            // on top of the Stump, so the Stump always comes between the Root and\n            // any Layer objects that we've added.\n            return this.stump.addLayer(layerId, replay);\n        };\n        Root.prototype.removeLayer = function () {\n            // Never remove the root layer.\n            return this;\n        };\n        Root.prototype.getStorage = function () {\n            return this.storageTrie.lookupArray(arguments);\n        };\n        return Root;\n    }(EntityStore));\n    EntityStore.Root = Root;\n})(EntityStore || (EntityStore = {}));\n// Not exported, since all Layer instances are created by the addLayer method\n// of the EntityStore.Root class.\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    function Layer(id, parent, replay, group) {\n        var _this = _super.call(this, parent.policies, group) || this;\n        _this.id = id;\n        _this.parent = parent;\n        _this.replay = replay;\n        _this.group = group;\n        replay(_this);\n        return _this;\n    }\n    Layer.prototype.addLayer = function (layerId, replay) {\n        return new Layer(layerId, this, replay, this.group);\n    };\n    Layer.prototype.removeLayer = function (layerId) {\n        var _this = this;\n        // Remove all instances of the given id, not just the first one.\n        var parent = this.parent.removeLayer(layerId);\n        if (layerId === this.id) {\n            if (this.group.caching) {\n                // Dirty every ID we're removing. Technically we might be able to avoid\n                // dirtying fields that have values in higher layers, but we don't have\n                // easy access to higher layers here, and we're about to recreate those\n                // layers anyway (see parent.addLayer below).\n                Object.keys(this.data).forEach(function (dataId) {\n                    var ownStoreObject = _this.data[dataId];\n                    var parentStoreObject = parent[\"lookup\"](dataId);\n                    if (!parentStoreObject) {\n                        // The StoreObject identified by dataId was defined in this layer\n                        // but will be undefined in the parent layer, so we can delete the\n                        // whole entity using this.delete(dataId). Since we're about to\n                        // throw this layer away, the only goal of this deletion is to dirty\n                        // the removed fields.\n                        _this.delete(dataId);\n                    }\n                    else if (!ownStoreObject) {\n                        // This layer had an entry for dataId but it was undefined, which\n                        // means the entity was deleted in this layer, and it's about to\n                        // become undeleted when we remove this layer, so we need to dirty\n                        // all fields that are about to be reexposed.\n                        _this.group.dirty(dataId, \"__exists\");\n                        Object.keys(parentStoreObject).forEach(function (storeFieldName) {\n                            _this.group.dirty(dataId, storeFieldName);\n                        });\n                    }\n                    else if (ownStoreObject !== parentStoreObject) {\n                        // If ownStoreObject is not exactly the same as parentStoreObject,\n                        // dirty any fields whose values will change as a result of this\n                        // removal.\n                        Object.keys(ownStoreObject).forEach(function (storeFieldName) {\n                            if (!equal(ownStoreObject[storeFieldName], parentStoreObject[storeFieldName])) {\n                                _this.group.dirty(dataId, storeFieldName);\n                            }\n                        });\n                    }\n                });\n            }\n            return parent;\n        }\n        // No changes are necessary if the parent chain remains identical.\n        if (parent === this.parent)\n            return this;\n        // Recreate this layer on top of the new parent.\n        return parent.addLayer(this.id, this.replay);\n    };\n    Layer.prototype.toObject = function () {\n        return __assign(__assign({}, this.parent.toObject()), this.data);\n    };\n    Layer.prototype.findChildRefIds = function (dataId) {\n        var fromParent = this.parent.findChildRefIds(dataId);\n        return hasOwn.call(this.data, dataId) ? __assign(__assign({}, fromParent), _super.prototype.findChildRefIds.call(this, dataId)) : fromParent;\n    };\n    Layer.prototype.getStorage = function () {\n        var p = this.parent;\n        while (p.parent)\n            p = p.parent;\n        return p.getStorage.apply(p, \n        // @ts-expect-error\n        arguments);\n    };\n    return Layer;\n}(EntityStore));\n// Represents a Layer permanently installed just above the Root, which allows\n// reading optimistically (and registering optimistic dependencies) even when\n// no optimistic layers are currently active. The stump.group CacheGroup object\n// is shared by any/all Layer objects added on top of the Stump.\nvar Stump = /** @class */ (function (_super) {\n    __extends(Stump, _super);\n    function Stump(root) {\n        return _super.call(this, \"EntityStore.Stump\", root, function () { }, new CacheGroup(root.group.caching, root.group)) || this;\n    }\n    Stump.prototype.removeLayer = function () {\n        // Never remove the Stump layer.\n        return this;\n    };\n    Stump.prototype.merge = function (older, newer) {\n        // We never want to write any data into the Stump, so we forward any merge\n        // calls to the Root instead. Another option here would be to throw an\n        // exception, but the toReference(object, true) function can sometimes\n        // trigger Stump writes (which used to be Root writes, before the Stump\n        // concept was introduced).\n        return this.parent.merge(older, newer);\n    };\n    return Stump;\n}(Layer));\nfunction storeObjectReconciler(existingObject, incomingObject, property) {\n    var existingValue = existingObject[property];\n    var incomingValue = incomingObject[property];\n    // Wherever there is a key collision, prefer the incoming value, unless\n    // it is deeply equal to the existing value. It's worth checking deep\n    // equality here (even though blindly returning incoming would be\n    // logically correct) because preserving the referential identity of\n    // existing data can prevent needless rereading and rerendering.\n    return equal(existingValue, incomingValue) ? existingValue : incomingValue;\n}\nexport function supportsResultCaching(store) {\n    // When result caching is disabled, store.depend will be null.\n    return !!(store instanceof EntityStore && store.group.caching);\n}\n//# sourceMappingURL=entityStore.js.map","import { __assign } from \"tslib\";\nimport { Trie } from \"@wry/trie\";\nimport { canUseWeakMap, canUseWeakSet, isNonNullObject as isObjectOrArray, } from \"../../utilities/index.js\";\nimport { isArray } from \"./helpers.js\";\nfunction shallowCopy(value) {\n    if (isObjectOrArray(value)) {\n        return isArray(value) ?\n            value.slice(0)\n            : __assign({ __proto__: Object.getPrototypeOf(value) }, value);\n    }\n    return value;\n}\n// When programmers talk about the \"canonical form\" of an object, they\n// usually have the following meaning in mind, which I've copied from\n// https://en.wiktionary.org/wiki/canonical_form:\n//\n// 1. A standard or normal presentation of a mathematical entity [or\n//    object]. A canonical form is an element of a set of representatives\n//    of equivalence classes of forms such that there is a function or\n//    procedure which projects every element of each equivalence class\n//    onto that one element, the canonical form of that equivalence\n//    class. The canonical form is expected to be simpler than the rest of\n//    the forms in some way.\n//\n// That's a long-winded way of saying any two objects that have the same\n// canonical form may be considered equivalent, even if they are !==,\n// which usually means the objects are structurally equivalent (deeply\n// equal), but don't necessarily use the same memory.\n//\n// Like a literary or musical canon, this ObjectCanon class represents a\n// collection of unique canonical items (JavaScript objects), with the\n// important property that canon.admit(a) === canon.admit(b) if a and b\n// are deeply equal to each other. In terms of the definition above, the\n// canon.admit method is the \"function or procedure which projects every\"\n// object \"onto that one element, the canonical form.\"\n//\n// In the worst case, the canonicalization process may involve looking at\n// every property in the provided object tree, so it takes the same order\n// of time as deep equality checking. Fortunately, already-canonicalized\n// objects are returned immediately from canon.admit, so the presence of\n// canonical subtrees tends to speed up canonicalization.\n//\n// Since consumers of canonical objects can check for deep equality in\n// constant time, canonicalizing cache results can massively improve the\n// performance of application code that skips re-rendering unchanged\n// results, such as \"pure\" UI components in a framework like React.\n//\n// Of course, since canonical objects may be shared widely between\n// unrelated consumers, it's important to think of them as immutable, even\n// though they are not actually frozen with Object.freeze in production,\n// due to the extra performance overhead that comes with frozen objects.\n//\n// Custom scalar objects whose internal class name is neither Array nor\n// Object can be included safely in the admitted tree, but they will not\n// be replaced with a canonical version (to put it another way, they are\n// assumed to be canonical already).\n//\n// If we ignore custom objects, no detection of cycles or repeated object\n// references is currently required by the StoreReader class, since\n// GraphQL result objects are JSON-serializable trees (and thus contain\n// neither cycles nor repeated subtrees), so we can avoid the complexity\n// of keeping track of objects we've already seen during the recursion of\n// the admit method.\n//\n// In the future, we may consider adding additional cases to the switch\n// statement to handle other common object types, such as \"[object Date]\"\n// objects, as needed.\nvar ObjectCanon = /** @class */ (function () {\n    function ObjectCanon() {\n        // Set of all canonical objects this ObjectCanon has admitted, allowing\n        // canon.admit to return previously-canonicalized objects immediately.\n        this.known = new (canUseWeakSet ? WeakSet : Set)();\n        // Efficient storage/lookup structure for canonical objects.\n        this.pool = new Trie(canUseWeakMap);\n        // Make the ObjectCanon assume this value has already been\n        // canonicalized.\n        this.passes = new WeakMap();\n        // Arrays that contain the same elements in a different order can share\n        // the same SortedKeysInfo object, to save memory.\n        this.keysByJSON = new Map();\n        // This has to come last because it depends on keysByJSON.\n        this.empty = this.admit({});\n    }\n    ObjectCanon.prototype.isKnown = function (value) {\n        return isObjectOrArray(value) && this.known.has(value);\n    };\n    ObjectCanon.prototype.pass = function (value) {\n        if (isObjectOrArray(value)) {\n            var copy = shallowCopy(value);\n            this.passes.set(copy, value);\n            return copy;\n        }\n        return value;\n    };\n    ObjectCanon.prototype.admit = function (value) {\n        var _this = this;\n        if (isObjectOrArray(value)) {\n            var original = this.passes.get(value);\n            if (original)\n                return original;\n            var proto = Object.getPrototypeOf(value);\n            switch (proto) {\n                case Array.prototype: {\n                    if (this.known.has(value))\n                        return value;\n                    var array = value.map(this.admit, this);\n                    // Arrays are looked up in the Trie using their recursively\n                    // canonicalized elements, and the known version of the array is\n                    // preserved as node.array.\n                    var node = this.pool.lookupArray(array);\n                    if (!node.array) {\n                        this.known.add((node.array = array));\n                        // Since canonical arrays may be shared widely between\n                        // unrelated consumers, it's important to regard them as\n                        // immutable, even if they are not frozen in production.\n                        if (globalThis.__DEV__ !== false) {\n                            Object.freeze(array);\n                        }\n                    }\n                    return node.array;\n                }\n                case null:\n                case Object.prototype: {\n                    if (this.known.has(value))\n                        return value;\n                    var proto_1 = Object.getPrototypeOf(value);\n                    var array_1 = [proto_1];\n                    var keys = this.sortedKeys(value);\n                    array_1.push(keys.json);\n                    var firstValueIndex_1 = array_1.length;\n                    keys.sorted.forEach(function (key) {\n                        array_1.push(_this.admit(value[key]));\n                    });\n                    // Objects are looked up in the Trie by their prototype (which\n                    // is *not* recursively canonicalized), followed by a JSON\n                    // representation of their (sorted) keys, followed by the\n                    // sequence of recursively canonicalized values corresponding to\n                    // those keys. To keep the final results unambiguous with other\n                    // sequences (such as arrays that just happen to contain [proto,\n                    // keys.json, value1, value2, ...]), the known version of the\n                    // object is stored as node.object.\n                    var node = this.pool.lookupArray(array_1);\n                    if (!node.object) {\n                        var obj_1 = (node.object = Object.create(proto_1));\n                        this.known.add(obj_1);\n                        keys.sorted.forEach(function (key, i) {\n                            obj_1[key] = array_1[firstValueIndex_1 + i];\n                        });\n                        // Since canonical objects may be shared widely between\n                        // unrelated consumers, it's important to regard them as\n                        // immutable, even if they are not frozen in production.\n                        if (globalThis.__DEV__ !== false) {\n                            Object.freeze(obj_1);\n                        }\n                    }\n                    return node.object;\n                }\n            }\n        }\n        return value;\n    };\n    // It's worthwhile to cache the sorting of arrays of strings, since the\n    // same initial unsorted arrays tend to be encountered many times.\n    // Fortunately, we can reuse the Trie machinery to look up the sorted\n    // arrays in linear time (which is faster than sorting large arrays).\n    ObjectCanon.prototype.sortedKeys = function (obj) {\n        var keys = Object.keys(obj);\n        var node = this.pool.lookupArray(keys);\n        if (!node.keys) {\n            keys.sort();\n            var json = JSON.stringify(keys);\n            if (!(node.keys = this.keysByJSON.get(json))) {\n                this.keysByJSON.set(json, (node.keys = { sorted: keys, json: json }));\n            }\n        }\n        return node.keys;\n    };\n    return ObjectCanon;\n}());\nexport { ObjectCanon };\n//# sourceMappingURL=object-canon.js.map","import { __assign } from \"tslib\";\nimport { invariant, newInvariantError } from \"../../utilities/globals/index.js\";\nimport { Kind } from \"graphql\";\nimport { wrap } from \"optimism\";\nimport { isField, resultKeyNameFromField, isReference, makeReference, shouldInclude, addTypenameToDocument, getDefaultValues, getMainDefinition, getQueryDefinition, getFragmentFromSelection, maybeDeepFreeze, mergeDeepArray, DeepMerger, isNonNullObject, canUseWeakMap, compact, canonicalStringify, cacheSizes, } from \"../../utilities/index.js\";\nimport { maybeDependOnExistenceOfEntity, supportsResultCaching, } from \"./entityStore.js\";\nimport { isArray, extractFragmentContext, getTypenameFromStoreObject, shouldCanonizeResults, } from \"./helpers.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport { ObjectCanon } from \"./object-canon.js\";\nfunction execSelectionSetKeyArgs(options) {\n    return [\n        options.selectionSet,\n        options.objectOrReference,\n        options.context,\n        // We split out this property so we can pass different values\n        // independently without modifying options.context itself.\n        options.context.canonizeResults,\n    ];\n}\nvar StoreReader = /** @class */ (function () {\n    function StoreReader(config) {\n        var _this = this;\n        this.knownResults = new (canUseWeakMap ? WeakMap : Map)();\n        this.config = compact(config, {\n            addTypename: config.addTypename !== false,\n            canonizeResults: shouldCanonizeResults(config),\n        });\n        this.canon = config.canon || new ObjectCanon();\n        // memoized functions in this class will be \"garbage-collected\"\n        // by recreating the whole `StoreReader` in\n        // `InMemoryCache.resetResultsCache`\n        // (triggered from `InMemoryCache.gc` with `resetResultCache: true`)\n        this.executeSelectionSet = wrap(function (options) {\n            var _a;\n            var canonizeResults = options.context.canonizeResults;\n            var peekArgs = execSelectionSetKeyArgs(options);\n            // Negate this boolean option so we can find out if we've already read\n            // this result using the other boolean value.\n            peekArgs[3] = !canonizeResults;\n            var other = (_a = _this.executeSelectionSet).peek.apply(_a, peekArgs);\n            if (other) {\n                if (canonizeResults) {\n                    return __assign(__assign({}, other), { \n                        // If we previously read this result without canonizing it, we can\n                        // reuse that result simply by canonizing it now.\n                        result: _this.canon.admit(other.result) });\n                }\n                // If we previously read this result with canonization enabled, we can\n                // return that canonized result as-is.\n                return other;\n            }\n            maybeDependOnExistenceOfEntity(options.context.store, options.enclosingRef.__ref);\n            // Finally, if we didn't find any useful previous results, run the real\n            // execSelectionSetImpl method with the given options.\n            return _this.execSelectionSetImpl(options);\n        }, {\n            max: this.config.resultCacheMaxSize ||\n                cacheSizes[\"inMemoryCache.executeSelectionSet\"] ||\n                50000 /* defaultCacheSizes[\"inMemoryCache.executeSelectionSet\"] */,\n            keyArgs: execSelectionSetKeyArgs,\n            // Note that the parameters of makeCacheKey are determined by the\n            // array returned by keyArgs.\n            makeCacheKey: function (selectionSet, parent, context, canonizeResults) {\n                if (supportsResultCaching(context.store)) {\n                    return context.store.makeCacheKey(selectionSet, isReference(parent) ? parent.__ref : parent, context.varString, canonizeResults);\n                }\n            },\n        });\n        this.executeSubSelectedArray = wrap(function (options) {\n            maybeDependOnExistenceOfEntity(options.context.store, options.enclosingRef.__ref);\n            return _this.execSubSelectedArrayImpl(options);\n        }, {\n            max: this.config.resultCacheMaxSize ||\n                cacheSizes[\"inMemoryCache.executeSubSelectedArray\"] ||\n                10000 /* defaultCacheSizes[\"inMemoryCache.executeSubSelectedArray\"] */,\n            makeCacheKey: function (_a) {\n                var field = _a.field, array = _a.array, context = _a.context;\n                if (supportsResultCaching(context.store)) {\n                    return context.store.makeCacheKey(field, array, context.varString);\n                }\n            },\n        });\n    }\n    StoreReader.prototype.resetCanon = function () {\n        this.canon = new ObjectCanon();\n    };\n    /**\n     * Given a store and a query, return as much of the result as possible and\n     * identify if any data was missing from the store.\n     */\n    StoreReader.prototype.diffQueryAgainstStore = function (_a) {\n        var store = _a.store, query = _a.query, _b = _a.rootId, rootId = _b === void 0 ? \"ROOT_QUERY\" : _b, variables = _a.variables, _c = _a.returnPartialData, returnPartialData = _c === void 0 ? true : _c, _d = _a.canonizeResults, canonizeResults = _d === void 0 ? this.config.canonizeResults : _d;\n        var policies = this.config.cache.policies;\n        variables = __assign(__assign({}, getDefaultValues(getQueryDefinition(query))), variables);\n        var rootRef = makeReference(rootId);\n        var execResult = this.executeSelectionSet({\n            selectionSet: getMainDefinition(query).selectionSet,\n            objectOrReference: rootRef,\n            enclosingRef: rootRef,\n            context: __assign({ store: store, query: query, policies: policies, variables: variables, varString: canonicalStringify(variables), canonizeResults: canonizeResults }, extractFragmentContext(query, this.config.fragments)),\n        });\n        var missing;\n        if (execResult.missing) {\n            // For backwards compatibility we still report an array of\n            // MissingFieldError objects, even though there will only ever be at most\n            // one of them, now that all missing field error messages are grouped\n            // together in the execResult.missing tree.\n            missing = [\n                new MissingFieldError(firstMissing(execResult.missing), execResult.missing, query, variables),\n            ];\n            if (!returnPartialData) {\n                throw missing[0];\n            }\n        }\n        return {\n            result: execResult.result,\n            complete: !missing,\n            missing: missing,\n        };\n    };\n    StoreReader.prototype.isFresh = function (result, parent, selectionSet, context) {\n        if (supportsResultCaching(context.store) &&\n            this.knownResults.get(result) === selectionSet) {\n            var latest = this.executeSelectionSet.peek(selectionSet, parent, context, \n            // If result is canonical, then it could only have been previously\n            // cached by the canonizing version of executeSelectionSet, so we can\n            // avoid checking both possibilities here.\n            this.canon.isKnown(result));\n            if (latest && result === latest.result) {\n                return true;\n            }\n        }\n        return false;\n    };\n    // Uncached version of executeSelectionSet.\n    StoreReader.prototype.execSelectionSetImpl = function (_a) {\n        var _this = this;\n        var selectionSet = _a.selectionSet, objectOrReference = _a.objectOrReference, enclosingRef = _a.enclosingRef, context = _a.context;\n        if (isReference(objectOrReference) &&\n            !context.policies.rootTypenamesById[objectOrReference.__ref] &&\n            !context.store.has(objectOrReference.__ref)) {\n            return {\n                result: this.canon.empty,\n                missing: \"Dangling reference to missing \".concat(objectOrReference.__ref, \" object\"),\n            };\n        }\n        var variables = context.variables, policies = context.policies, store = context.store;\n        var typename = store.getFieldValue(objectOrReference, \"__typename\");\n        var objectsToMerge = [];\n        var missing;\n        var missingMerger = new DeepMerger();\n        if (this.config.addTypename &&\n            typeof typename === \"string\" &&\n            !policies.rootIdsByTypename[typename]) {\n            // Ensure we always include a default value for the __typename\n            // field, if we have one, and this.config.addTypename is true. Note\n            // that this field can be overridden by other merged objects.\n            objectsToMerge.push({ __typename: typename });\n        }\n        function handleMissing(result, resultName) {\n            var _a;\n            if (result.missing) {\n                missing = missingMerger.merge(missing, (_a = {},\n                    _a[resultName] = result.missing,\n                    _a));\n            }\n            return result.result;\n        }\n        var workSet = new Set(selectionSet.selections);\n        workSet.forEach(function (selection) {\n            var _a, _b;\n            // Omit fields with directives @skip(if: <truthy value>) or\n            // @include(if: <falsy value>).\n            if (!shouldInclude(selection, variables))\n                return;\n            if (isField(selection)) {\n                var fieldValue = policies.readField({\n                    fieldName: selection.name.value,\n                    field: selection,\n                    variables: context.variables,\n                    from: objectOrReference,\n                }, context);\n                var resultName = resultKeyNameFromField(selection);\n                if (fieldValue === void 0) {\n                    if (!addTypenameToDocument.added(selection)) {\n                        missing = missingMerger.merge(missing, (_a = {},\n                            _a[resultName] = \"Can't find field '\".concat(selection.name.value, \"' on \").concat(isReference(objectOrReference) ?\n                                objectOrReference.__ref + \" object\"\n                                : \"object \" + JSON.stringify(objectOrReference, null, 2)),\n                            _a));\n                    }\n                }\n                else if (isArray(fieldValue)) {\n                    fieldValue = handleMissing(_this.executeSubSelectedArray({\n                        field: selection,\n                        array: fieldValue,\n                        enclosingRef: enclosingRef,\n                        context: context,\n                    }), resultName);\n                }\n                else if (!selection.selectionSet) {\n                    // If the field does not have a selection set, then we handle it\n                    // as a scalar value. To keep this.canon from canonicalizing\n                    // this value, we use this.canon.pass to wrap fieldValue in a\n                    // Pass object that this.canon.admit will later unwrap as-is.\n                    if (context.canonizeResults) {\n                        fieldValue = _this.canon.pass(fieldValue);\n                    }\n                }\n                else if (fieldValue != null) {\n                    // In this case, because we know the field has a selection set,\n                    // it must be trying to query a GraphQLObjectType, which is why\n                    // fieldValue must be != null.\n                    fieldValue = handleMissing(_this.executeSelectionSet({\n                        selectionSet: selection.selectionSet,\n                        objectOrReference: fieldValue,\n                        enclosingRef: isReference(fieldValue) ? fieldValue : enclosingRef,\n                        context: context,\n                    }), resultName);\n                }\n                if (fieldValue !== void 0) {\n                    objectsToMerge.push((_b = {}, _b[resultName] = fieldValue, _b));\n                }\n            }\n            else {\n                var fragment = getFragmentFromSelection(selection, context.lookupFragment);\n                if (!fragment && selection.kind === Kind.FRAGMENT_SPREAD) {\n                    throw newInvariantError(9, selection.name.value);\n                }\n                if (fragment && policies.fragmentMatches(fragment, typename)) {\n                    fragment.selectionSet.selections.forEach(workSet.add, workSet);\n                }\n            }\n        });\n        var result = mergeDeepArray(objectsToMerge);\n        var finalResult = { result: result, missing: missing };\n        var frozen = context.canonizeResults ?\n            this.canon.admit(finalResult)\n            // Since this.canon is normally responsible for freezing results (only in\n            // development), freeze them manually if canonization is disabled.\n            : maybeDeepFreeze(finalResult);\n        // Store this result with its selection set so that we can quickly\n        // recognize it again in the StoreReader#isFresh method.\n        if (frozen.result) {\n            this.knownResults.set(frozen.result, selectionSet);\n        }\n        return frozen;\n    };\n    // Uncached version of executeSubSelectedArray.\n    StoreReader.prototype.execSubSelectedArrayImpl = function (_a) {\n        var _this = this;\n        var field = _a.field, array = _a.array, enclosingRef = _a.enclosingRef, context = _a.context;\n        var missing;\n        var missingMerger = new DeepMerger();\n        function handleMissing(childResult, i) {\n            var _a;\n            if (childResult.missing) {\n                missing = missingMerger.merge(missing, (_a = {}, _a[i] = childResult.missing, _a));\n            }\n            return childResult.result;\n        }\n        if (field.selectionSet) {\n            array = array.filter(context.store.canRead);\n        }\n        array = array.map(function (item, i) {\n            // null value in array\n            if (item === null) {\n                return null;\n            }\n            // This is a nested array, recurse\n            if (isArray(item)) {\n                return handleMissing(_this.executeSubSelectedArray({\n                    field: field,\n                    array: item,\n                    enclosingRef: enclosingRef,\n                    context: context,\n                }), i);\n            }\n            // This is an object, run the selection set on it\n            if (field.selectionSet) {\n                return handleMissing(_this.executeSelectionSet({\n                    selectionSet: field.selectionSet,\n                    objectOrReference: item,\n                    enclosingRef: isReference(item) ? item : enclosingRef,\n                    context: context,\n                }), i);\n            }\n            if (globalThis.__DEV__ !== false) {\n                assertSelectionSetForIdValue(context.store, field, item);\n            }\n            return item;\n        });\n        return {\n            result: context.canonizeResults ? this.canon.admit(array) : array,\n            missing: missing,\n        };\n    };\n    return StoreReader;\n}());\nexport { StoreReader };\nfunction firstMissing(tree) {\n    try {\n        JSON.stringify(tree, function (_, value) {\n            if (typeof value === \"string\")\n                throw value;\n            return value;\n        });\n    }\n    catch (result) {\n        return result;\n    }\n}\nfunction assertSelectionSetForIdValue(store, field, fieldValue) {\n    if (!field.selectionSet) {\n        var workSet_1 = new Set([fieldValue]);\n        workSet_1.forEach(function (value) {\n            if (isNonNullObject(value)) {\n                invariant(\n                    !isReference(value),\n                    10,\n                    getTypenameFromStoreObject(store, value),\n                    field.name.value\n                );\n                Object.values(value).forEach(workSet_1.add, workSet_1);\n            }\n        });\n    }\n}\n//# sourceMappingURL=readFromStore.js.map","import { invariant } from \"../../utilities/globals/index.js\";\nimport { argumentsObjectFromField, DeepMerger, isNonEmptyArray, isNonNullObject, } from \"../../utilities/index.js\";\nimport { hasOwn, isArray } from \"./helpers.js\";\n// Mapping from JSON-encoded KeySpecifier strings to associated information.\nvar specifierInfoCache = Object.create(null);\nfunction lookupSpecifierInfo(spec) {\n    // It's safe to encode KeySpecifier arrays with JSON.stringify, since they're\n    // just arrays of strings or nested KeySpecifier arrays, and the order of the\n    // array elements is important (and suitably preserved by JSON.stringify).\n    var cacheKey = JSON.stringify(spec);\n    return (specifierInfoCache[cacheKey] ||\n        (specifierInfoCache[cacheKey] = Object.create(null)));\n}\nexport function keyFieldsFnFromSpecifier(specifier) {\n    var info = lookupSpecifierInfo(specifier);\n    return (info.keyFieldsFn || (info.keyFieldsFn = function (object, context) {\n            var extract = function (from, key) {\n                return context.readField(key, from);\n            };\n            var keyObject = (context.keyObject = collectSpecifierPaths(specifier, function (schemaKeyPath) {\n                var extracted = extractKeyPath(context.storeObject, schemaKeyPath, \n                // Using context.readField to extract paths from context.storeObject\n                // allows the extraction to see through Reference objects and respect\n                // custom read functions.\n                extract);\n                if (extracted === void 0 &&\n                    object !== context.storeObject &&\n                    hasOwn.call(object, schemaKeyPath[0])) {\n                    // If context.storeObject fails to provide a value for the requested\n                    // path, fall back to the raw result object, if it has a top-level key\n                    // matching the first key in the path (schemaKeyPath[0]). This allows\n                    // key fields included in the written data to be saved in the cache\n                    // even if they are not selected explicitly in context.selectionSet.\n                    // Not being mentioned by context.selectionSet is convenient here,\n                    // since it means these extra fields cannot be affected by field\n                    // aliasing, which is why we can use extractKey instead of\n                    // context.readField for this extraction.\n                    extracted = extractKeyPath(object, schemaKeyPath, extractKey);\n                }\n                invariant(extracted !== void 0, 4, schemaKeyPath.join(\".\"), object);\n                return extracted;\n            }));\n            return \"\".concat(context.typename, \":\").concat(JSON.stringify(keyObject));\n        }));\n}\n// The keyArgs extraction process is roughly analogous to keyFields extraction,\n// but there are no aliases involved, missing fields are tolerated (by merely\n// omitting them from the key), and drawing from field.directives or variables\n// is allowed (in addition to drawing from the field's arguments object).\n// Concretely, these differences mean passing a different key path extractor\n// function to collectSpecifierPaths, reusing the shared extractKeyPath helper\n// wherever possible.\nexport function keyArgsFnFromSpecifier(specifier) {\n    var info = lookupSpecifierInfo(specifier);\n    return (info.keyArgsFn ||\n        (info.keyArgsFn = function (args, _a) {\n            var field = _a.field, variables = _a.variables, fieldName = _a.fieldName;\n            var collected = collectSpecifierPaths(specifier, function (keyPath) {\n                var firstKey = keyPath[0];\n                var firstChar = firstKey.charAt(0);\n                if (firstChar === \"@\") {\n                    if (field && isNonEmptyArray(field.directives)) {\n                        var directiveName_1 = firstKey.slice(1);\n                        // If the directive appears multiple times, only the first\n                        // occurrence's arguments will be used. TODO Allow repetition?\n                        // TODO Cache this work somehow, a la aliasMap?\n                        var d = field.directives.find(function (d) { return d.name.value === directiveName_1; });\n                        // Fortunately argumentsObjectFromField works for DirectiveNode!\n                        var directiveArgs = d && argumentsObjectFromField(d, variables);\n                        // For directives without arguments (d defined, but directiveArgs ===\n                        // null), the presence or absence of the directive still counts as\n                        // part of the field key, so we return null in those cases. If no\n                        // directive with this name was found for this field (d undefined and\n                        // thus directiveArgs undefined), we return undefined, which causes\n                        // this value to be omitted from the key object returned by\n                        // collectSpecifierPaths.\n                        return (directiveArgs &&\n                            extractKeyPath(directiveArgs, \n                            // If keyPath.length === 1, this code calls extractKeyPath with an\n                            // empty path, which works because it uses directiveArgs as the\n                            // extracted value.\n                            keyPath.slice(1)));\n                    }\n                    // If the key started with @ but there was no corresponding directive,\n                    // we want to omit this value from the key object, not fall through to\n                    // treating @whatever as a normal argument name.\n                    return;\n                }\n                if (firstChar === \"$\") {\n                    var variableName = firstKey.slice(1);\n                    if (variables && hasOwn.call(variables, variableName)) {\n                        var varKeyPath = keyPath.slice(0);\n                        varKeyPath[0] = variableName;\n                        return extractKeyPath(variables, varKeyPath);\n                    }\n                    // If the key started with $ but there was no corresponding variable, we\n                    // want to omit this value from the key object, not fall through to\n                    // treating $whatever as a normal argument name.\n                    return;\n                }\n                if (args) {\n                    return extractKeyPath(args, keyPath);\n                }\n            });\n            var suffix = JSON.stringify(collected);\n            // If no arguments were passed to this field, and it didn't have any other\n            // field key contributions from directives or variables, hide the empty\n            // :{} suffix from the field key. However, a field passed no arguments can\n            // still end up with a non-empty :{...} suffix if its key configuration\n            // refers to directives or variables.\n            if (args || suffix !== \"{}\") {\n                fieldName += \":\" + suffix;\n            }\n            return fieldName;\n        }));\n}\nexport function collectSpecifierPaths(specifier, extractor) {\n    // For each path specified by specifier, invoke the extractor, and repeatedly\n    // merge the results together, with appropriate ancestor context.\n    var merger = new DeepMerger();\n    return getSpecifierPaths(specifier).reduce(function (collected, path) {\n        var _a;\n        var toMerge = extractor(path);\n        if (toMerge !== void 0) {\n            // This path is not expected to contain array indexes, so the toMerge\n            // reconstruction will not contain arrays. TODO Fix this?\n            for (var i = path.length - 1; i >= 0; --i) {\n                toMerge = (_a = {}, _a[path[i]] = toMerge, _a);\n            }\n            collected = merger.merge(collected, toMerge);\n        }\n        return collected;\n    }, Object.create(null));\n}\nexport function getSpecifierPaths(spec) {\n    var info = lookupSpecifierInfo(spec);\n    if (!info.paths) {\n        var paths_1 = (info.paths = []);\n        var currentPath_1 = [];\n        spec.forEach(function (s, i) {\n            if (isArray(s)) {\n                getSpecifierPaths(s).forEach(function (p) { return paths_1.push(currentPath_1.concat(p)); });\n                currentPath_1.length = 0;\n            }\n            else {\n                currentPath_1.push(s);\n                if (!isArray(spec[i + 1])) {\n                    paths_1.push(currentPath_1.slice(0));\n                    currentPath_1.length = 0;\n                }\n            }\n        });\n    }\n    return info.paths;\n}\nfunction extractKey(object, key) {\n    return object[key];\n}\nexport function extractKeyPath(object, path, extract) {\n    // For each key in path, extract the corresponding child property from obj,\n    // flattening arrays if encountered (uncommon for keyFields and keyArgs, but\n    // possible). The final result of path.reduce is normalized so unexpected leaf\n    // objects have their keys safely sorted. That final result is difficult to\n    // type as anything other than any. You're welcome to try to improve the\n    // return type, but keep in mind extractKeyPath is not a public function\n    // (exported only for testing), so the effort may not be worthwhile unless the\n    // limited set of actual callers (see above) pass arguments that TypeScript\n    // can statically type. If we know only that path is some array of strings\n    // (and not, say, a specific tuple of statically known strings), any (or\n    // possibly unknown) is the honest answer.\n    extract = extract || extractKey;\n    return normalize(path.reduce(function reducer(obj, key) {\n        return isArray(obj) ?\n            obj.map(function (child) { return reducer(child, key); })\n            : obj && extract(obj, key);\n    }, object));\n}\nfunction normalize(value) {\n    // Usually the extracted value will be a scalar value, since most primary\n    // key fields are scalar, but just in case we get an object or an array, we\n    // need to do some normalization of the order of (nested) keys.\n    if (isNonNullObject(value)) {\n        if (isArray(value)) {\n            return value.map(normalize);\n        }\n        return collectSpecifierPaths(Object.keys(value).sort(), function (path) {\n            return extractKeyPath(value, path);\n        });\n    }\n    return value;\n}\n//# sourceMappingURL=key-extractor.js.map","import { __assign, __rest } from \"tslib\";\nimport { invariant, newInvariantError } from \"../../utilities/globals/index.js\";\nimport { storeKeyNameFromField, argumentsObjectFromField, isReference, getStoreKeyName, isNonNullObject, stringifyForDisplay, } from \"../../utilities/index.js\";\nimport { hasOwn, fieldNameFromStoreName, storeValueIsStoreObject, selectionSetMatchesResult, TypeOrFieldNameRegExp, defaultDataIdFromObject, isArray, } from \"./helpers.js\";\nimport { cacheSlot } from \"./reactiveVars.js\";\nimport { keyArgsFnFromSpecifier, keyFieldsFnFromSpecifier, } from \"./key-extractor.js\";\nfunction argsFromFieldSpecifier(spec) {\n    return (spec.args !== void 0 ? spec.args\n        : spec.field ? argumentsObjectFromField(spec.field, spec.variables)\n            : null);\n}\nvar nullKeyFieldsFn = function () { return void 0; };\nvar simpleKeyArgsFn = function (_args, context) { return context.fieldName; };\n// These merge functions can be selected by specifying merge:true or\n// merge:false in a field policy.\nvar mergeTrueFn = function (existing, incoming, _a) {\n    var mergeObjects = _a.mergeObjects;\n    return mergeObjects(existing, incoming);\n};\nvar mergeFalseFn = function (_, incoming) { return incoming; };\nvar Policies = /** @class */ (function () {\n    function Policies(config) {\n        this.config = config;\n        this.typePolicies = Object.create(null);\n        this.toBeAdded = Object.create(null);\n        // Map from subtype names to sets of supertype names. Note that this\n        // representation inverts the structure of possibleTypes (whose keys are\n        // supertypes and whose values are arrays of subtypes) because it tends\n        // to be much more efficient to search upwards than downwards.\n        this.supertypeMap = new Map();\n        // Any fuzzy subtypes specified by possibleTypes will be converted to\n        // RegExp objects and recorded here. Every key of this map can also be\n        // found in supertypeMap. In many cases this Map will be empty, which\n        // means no fuzzy subtype checking will happen in fragmentMatches.\n        this.fuzzySubtypes = new Map();\n        this.rootIdsByTypename = Object.create(null);\n        this.rootTypenamesById = Object.create(null);\n        this.usingPossibleTypes = false;\n        this.config = __assign({ dataIdFromObject: defaultDataIdFromObject }, config);\n        this.cache = this.config.cache;\n        this.setRootTypename(\"Query\");\n        this.setRootTypename(\"Mutation\");\n        this.setRootTypename(\"Subscription\");\n        if (config.possibleTypes) {\n            this.addPossibleTypes(config.possibleTypes);\n        }\n        if (config.typePolicies) {\n            this.addTypePolicies(config.typePolicies);\n        }\n    }\n    Policies.prototype.identify = function (object, partialContext) {\n        var _a;\n        var policies = this;\n        var typename = (partialContext &&\n            (partialContext.typename || ((_a = partialContext.storeObject) === null || _a === void 0 ? void 0 : _a.__typename))) ||\n            object.__typename;\n        // It should be possible to write root Query fields with writeFragment,\n        // using { __typename: \"Query\", ... } as the data, but it does not make\n        // sense to allow the same identification behavior for the Mutation and\n        // Subscription types, since application code should never be writing\n        // directly to (or reading directly from) those root objects.\n        if (typename === this.rootTypenamesById.ROOT_QUERY) {\n            return [\"ROOT_QUERY\"];\n        }\n        // Default context.storeObject to object if not otherwise provided.\n        var storeObject = (partialContext && partialContext.storeObject) || object;\n        var context = __assign(__assign({}, partialContext), { typename: typename, storeObject: storeObject, readField: (partialContext && partialContext.readField) ||\n                function () {\n                    var options = normalizeReadFieldOptions(arguments, storeObject);\n                    return policies.readField(options, {\n                        store: policies.cache[\"data\"],\n                        variables: options.variables,\n                    });\n                } });\n        var id;\n        var policy = typename && this.getTypePolicy(typename);\n        var keyFn = (policy && policy.keyFn) || this.config.dataIdFromObject;\n        while (keyFn) {\n            var specifierOrId = keyFn(__assign(__assign({}, object), storeObject), context);\n            if (isArray(specifierOrId)) {\n                keyFn = keyFieldsFnFromSpecifier(specifierOrId);\n            }\n            else {\n                id = specifierOrId;\n                break;\n            }\n        }\n        id = id ? String(id) : void 0;\n        return context.keyObject ? [id, context.keyObject] : [id];\n    };\n    Policies.prototype.addTypePolicies = function (typePolicies) {\n        var _this = this;\n        Object.keys(typePolicies).forEach(function (typename) {\n            var _a = typePolicies[typename], queryType = _a.queryType, mutationType = _a.mutationType, subscriptionType = _a.subscriptionType, incoming = __rest(_a, [\"queryType\", \"mutationType\", \"subscriptionType\"]);\n            // Though {query,mutation,subscription}Type configurations are rare,\n            // it's important to call setRootTypename as early as possible,\n            // since these configurations should apply consistently for the\n            // entire lifetime of the cache. Also, since only one __typename can\n            // qualify as one of these root types, these three properties cannot\n            // be inherited, unlike the rest of the incoming properties. That\n            // restriction is convenient, because the purpose of this.toBeAdded\n            // is to delay the processing of type/field policies until the first\n            // time they're used, allowing policies to be added in any order as\n            // long as all relevant policies (including policies for supertypes)\n            // have been added by the time a given policy is used for the first\n            // time. In other words, since inheritance doesn't matter for these\n            // properties, there's also no need to delay their processing using\n            // the this.toBeAdded queue.\n            if (queryType)\n                _this.setRootTypename(\"Query\", typename);\n            if (mutationType)\n                _this.setRootTypename(\"Mutation\", typename);\n            if (subscriptionType)\n                _this.setRootTypename(\"Subscription\", typename);\n            if (hasOwn.call(_this.toBeAdded, typename)) {\n                _this.toBeAdded[typename].push(incoming);\n            }\n            else {\n                _this.toBeAdded[typename] = [incoming];\n            }\n        });\n    };\n    Policies.prototype.updateTypePolicy = function (typename, incoming) {\n        var _this = this;\n        var existing = this.getTypePolicy(typename);\n        var keyFields = incoming.keyFields, fields = incoming.fields;\n        function setMerge(existing, merge) {\n            existing.merge =\n                typeof merge === \"function\" ? merge\n                    // Pass merge:true as a shorthand for a merge implementation\n                    // that returns options.mergeObjects(existing, incoming).\n                    : merge === true ? mergeTrueFn\n                        // Pass merge:false to make incoming always replace existing\n                        // without any warnings about data clobbering.\n                        : merge === false ? mergeFalseFn\n                            : existing.merge;\n        }\n        // Type policies can define merge functions, as an alternative to\n        // using field policies to merge child objects.\n        setMerge(existing, incoming.merge);\n        existing.keyFn =\n            // Pass false to disable normalization for this typename.\n            keyFields === false ? nullKeyFieldsFn\n                // Pass an array of strings to use those fields to compute a\n                // composite ID for objects of this typename.\n                : isArray(keyFields) ? keyFieldsFnFromSpecifier(keyFields)\n                    // Pass a function to take full control over identification.\n                    : typeof keyFields === \"function\" ? keyFields\n                        // Leave existing.keyFn unchanged if above cases fail.\n                        : existing.keyFn;\n        if (fields) {\n            Object.keys(fields).forEach(function (fieldName) {\n                var existing = _this.getFieldPolicy(typename, fieldName, true);\n                var incoming = fields[fieldName];\n                if (typeof incoming === \"function\") {\n                    existing.read = incoming;\n                }\n                else {\n                    var keyArgs = incoming.keyArgs, read = incoming.read, merge = incoming.merge;\n                    existing.keyFn =\n                        // Pass false to disable argument-based differentiation of\n                        // field identities.\n                        keyArgs === false ? simpleKeyArgsFn\n                            // Pass an array of strings to use named arguments to\n                            // compute a composite identity for the field.\n                            : isArray(keyArgs) ? keyArgsFnFromSpecifier(keyArgs)\n                                // Pass a function to take full control over field identity.\n                                : typeof keyArgs === \"function\" ? keyArgs\n                                    // Leave existing.keyFn unchanged if above cases fail.\n                                    : existing.keyFn;\n                    if (typeof read === \"function\") {\n                        existing.read = read;\n                    }\n                    setMerge(existing, merge);\n                }\n                if (existing.read && existing.merge) {\n                    // If we have both a read and a merge function, assume\n                    // keyArgs:false, because read and merge together can take\n                    // responsibility for interpreting arguments in and out. This\n                    // default assumption can always be overridden by specifying\n                    // keyArgs explicitly in the FieldPolicy.\n                    existing.keyFn = existing.keyFn || simpleKeyArgsFn;\n                }\n            });\n        }\n    };\n    Policies.prototype.setRootTypename = function (which, typename) {\n        if (typename === void 0) { typename = which; }\n        var rootId = \"ROOT_\" + which.toUpperCase();\n        var old = this.rootTypenamesById[rootId];\n        if (typename !== old) {\n            invariant(!old || old === which, 5, which);\n            // First, delete any old __typename associated with this rootId from\n            // rootIdsByTypename.\n            if (old)\n                delete this.rootIdsByTypename[old];\n            // Now make this the only __typename that maps to this rootId.\n            this.rootIdsByTypename[typename] = rootId;\n            // Finally, update the __typename associated with this rootId.\n            this.rootTypenamesById[rootId] = typename;\n        }\n    };\n    Policies.prototype.addPossibleTypes = function (possibleTypes) {\n        var _this = this;\n        this.usingPossibleTypes = true;\n        Object.keys(possibleTypes).forEach(function (supertype) {\n            // Make sure all types have an entry in this.supertypeMap, even if\n            // their supertype set is empty, so we can return false immediately\n            // from policies.fragmentMatches for unknown supertypes.\n            _this.getSupertypeSet(supertype, true);\n            possibleTypes[supertype].forEach(function (subtype) {\n                _this.getSupertypeSet(subtype, true).add(supertype);\n                var match = subtype.match(TypeOrFieldNameRegExp);\n                if (!match || match[0] !== subtype) {\n                    // TODO Don't interpret just any invalid typename as a RegExp.\n                    _this.fuzzySubtypes.set(subtype, new RegExp(subtype));\n                }\n            });\n        });\n    };\n    Policies.prototype.getTypePolicy = function (typename) {\n        var _this = this;\n        if (!hasOwn.call(this.typePolicies, typename)) {\n            var policy_1 = (this.typePolicies[typename] = Object.create(null));\n            policy_1.fields = Object.create(null);\n            // When the TypePolicy for typename is first accessed, instead of\n            // starting with an empty policy object, inherit any properties or\n            // fields from the type policies of the supertypes of typename.\n            //\n            // Any properties or fields defined explicitly within the TypePolicy\n            // for typename will take precedence, and if there are multiple\n            // supertypes, the properties of policies whose types were added\n            // later via addPossibleTypes will take precedence over those of\n            // earlier supertypes. TODO Perhaps we should warn about these\n            // conflicts in development, and recommend defining the property\n            // explicitly in the subtype policy?\n            //\n            // Field policy inheritance is atomic/shallow: you can't inherit a\n            // field policy and then override just its read function, since read\n            // and merge functions often need to cooperate, so changing only one\n            // of them would be a recipe for inconsistency.\n            //\n            // Once the TypePolicy for typename has been accessed, its properties can\n            // still be updated directly using addTypePolicies, but future changes to\n            // inherited supertype policies will not be reflected in this subtype\n            // policy, because this code runs at most once per typename.\n            var supertypes_1 = this.supertypeMap.get(typename);\n            if (!supertypes_1 && this.fuzzySubtypes.size) {\n                // To make the inheritance logic work for unknown typename strings that\n                // may have fuzzy supertypes, we give this typename an empty supertype\n                // set and then populate it with any fuzzy supertypes that match.\n                supertypes_1 = this.getSupertypeSet(typename, true);\n                // This only works for typenames that are directly matched by a fuzzy\n                // supertype. What if there is an intermediate chain of supertypes?\n                // While possible, that situation can only be solved effectively by\n                // specifying the intermediate relationships via possibleTypes, manually\n                // and in a non-fuzzy way.\n                this.fuzzySubtypes.forEach(function (regExp, fuzzy) {\n                    if (regExp.test(typename)) {\n                        // The fuzzy parameter is just the original string version of regExp\n                        // (not a valid __typename string), but we can look up the\n                        // associated supertype(s) in this.supertypeMap.\n                        var fuzzySupertypes = _this.supertypeMap.get(fuzzy);\n                        if (fuzzySupertypes) {\n                            fuzzySupertypes.forEach(function (supertype) {\n                                return supertypes_1.add(supertype);\n                            });\n                        }\n                    }\n                });\n            }\n            if (supertypes_1 && supertypes_1.size) {\n                supertypes_1.forEach(function (supertype) {\n                    var _a = _this.getTypePolicy(supertype), fields = _a.fields, rest = __rest(_a, [\"fields\"]);\n                    Object.assign(policy_1, rest);\n                    Object.assign(policy_1.fields, fields);\n                });\n            }\n        }\n        var inbox = this.toBeAdded[typename];\n        if (inbox && inbox.length) {\n            // Merge the pending policies into this.typePolicies, in the order they\n            // were originally passed to addTypePolicy.\n            inbox.splice(0).forEach(function (policy) {\n                _this.updateTypePolicy(typename, policy);\n            });\n        }\n        return this.typePolicies[typename];\n    };\n    Policies.prototype.getFieldPolicy = function (typename, fieldName, createIfMissing) {\n        if (typename) {\n            var fieldPolicies = this.getTypePolicy(typename).fields;\n            return (fieldPolicies[fieldName] ||\n                (createIfMissing && (fieldPolicies[fieldName] = Object.create(null))));\n        }\n    };\n    Policies.prototype.getSupertypeSet = function (subtype, createIfMissing) {\n        var supertypeSet = this.supertypeMap.get(subtype);\n        if (!supertypeSet && createIfMissing) {\n            this.supertypeMap.set(subtype, (supertypeSet = new Set()));\n        }\n        return supertypeSet;\n    };\n    Policies.prototype.fragmentMatches = function (fragment, typename, result, variables) {\n        var _this = this;\n        if (!fragment.typeCondition)\n            return true;\n        // If the fragment has a type condition but the object we're matching\n        // against does not have a __typename, the fragment cannot match.\n        if (!typename)\n            return false;\n        var supertype = fragment.typeCondition.name.value;\n        // Common case: fragment type condition and __typename are the same.\n        if (typename === supertype)\n            return true;\n        if (this.usingPossibleTypes && this.supertypeMap.has(supertype)) {\n            var typenameSupertypeSet = this.getSupertypeSet(typename, true);\n            var workQueue_1 = [typenameSupertypeSet];\n            var maybeEnqueue_1 = function (subtype) {\n                var supertypeSet = _this.getSupertypeSet(subtype, false);\n                if (supertypeSet &&\n                    supertypeSet.size &&\n                    workQueue_1.indexOf(supertypeSet) < 0) {\n                    workQueue_1.push(supertypeSet);\n                }\n            };\n            // We need to check fuzzy subtypes only if we encountered fuzzy\n            // subtype strings in addPossibleTypes, and only while writing to\n            // the cache, since that's when selectionSetMatchesResult gives a\n            // strong signal of fragment matching. The StoreReader class calls\n            // policies.fragmentMatches without passing a result object, so\n            // needToCheckFuzzySubtypes is always false while reading.\n            var needToCheckFuzzySubtypes = !!(result && this.fuzzySubtypes.size);\n            var checkingFuzzySubtypes = false;\n            // It's important to keep evaluating workQueue.length each time through\n            // the loop, because the queue can grow while we're iterating over it.\n            for (var i = 0; i < workQueue_1.length; ++i) {\n                var supertypeSet = workQueue_1[i];\n                if (supertypeSet.has(supertype)) {\n                    if (!typenameSupertypeSet.has(supertype)) {\n                        if (checkingFuzzySubtypes) {\n                            globalThis.__DEV__ !== false && invariant.warn(6, typename, supertype);\n                        }\n                        // Record positive results for faster future lookup.\n                        // Unfortunately, we cannot safely cache negative results,\n                        // because new possibleTypes data could always be added to the\n                        // Policies class.\n                        typenameSupertypeSet.add(supertype);\n                    }\n                    return true;\n                }\n                supertypeSet.forEach(maybeEnqueue_1);\n                if (needToCheckFuzzySubtypes &&\n                    // Start checking fuzzy subtypes only after exhausting all\n                    // non-fuzzy subtypes (after the final iteration of the loop).\n                    i === workQueue_1.length - 1 &&\n                    // We could wait to compare fragment.selectionSet to result\n                    // after we verify the supertype, but this check is often less\n                    // expensive than that search, and we will have to do the\n                    // comparison anyway whenever we find a potential match.\n                    selectionSetMatchesResult(fragment.selectionSet, result, variables)) {\n                    // We don't always need to check fuzzy subtypes (if no result\n                    // was provided, or !this.fuzzySubtypes.size), but, when we do,\n                    // we only want to check them once.\n                    needToCheckFuzzySubtypes = false;\n                    checkingFuzzySubtypes = true;\n                    // If we find any fuzzy subtypes that match typename, extend the\n                    // workQueue to search through the supertypes of those fuzzy\n                    // subtypes. Otherwise the for-loop will terminate and we'll\n                    // return false below.\n                    this.fuzzySubtypes.forEach(function (regExp, fuzzyString) {\n                        var match = typename.match(regExp);\n                        if (match && match[0] === typename) {\n                            maybeEnqueue_1(fuzzyString);\n                        }\n                    });\n                }\n            }\n        }\n        return false;\n    };\n    Policies.prototype.hasKeyArgs = function (typename, fieldName) {\n        var policy = this.getFieldPolicy(typename, fieldName, false);\n        return !!(policy && policy.keyFn);\n    };\n    Policies.prototype.getStoreFieldName = function (fieldSpec) {\n        var typename = fieldSpec.typename, fieldName = fieldSpec.fieldName;\n        var policy = this.getFieldPolicy(typename, fieldName, false);\n        var storeFieldName;\n        var keyFn = policy && policy.keyFn;\n        if (keyFn && typename) {\n            var context = {\n                typename: typename,\n                fieldName: fieldName,\n                field: fieldSpec.field || null,\n                variables: fieldSpec.variables,\n            };\n            var args = argsFromFieldSpecifier(fieldSpec);\n            while (keyFn) {\n                var specifierOrString = keyFn(args, context);\n                if (isArray(specifierOrString)) {\n                    keyFn = keyArgsFnFromSpecifier(specifierOrString);\n                }\n                else {\n                    // If the custom keyFn returns a falsy value, fall back to\n                    // fieldName instead.\n                    storeFieldName = specifierOrString || fieldName;\n                    break;\n                }\n            }\n        }\n        if (storeFieldName === void 0) {\n            storeFieldName =\n                fieldSpec.field ?\n                    storeKeyNameFromField(fieldSpec.field, fieldSpec.variables)\n                    : getStoreKeyName(fieldName, argsFromFieldSpecifier(fieldSpec));\n        }\n        // Returning false from a keyArgs function is like configuring\n        // keyArgs: false, but more dynamic.\n        if (storeFieldName === false) {\n            return fieldName;\n        }\n        // Make sure custom field names start with the actual field.name.value\n        // of the field, so we can always figure out which properties of a\n        // StoreObject correspond to which original field names.\n        return fieldName === fieldNameFromStoreName(storeFieldName) ? storeFieldName\n            : fieldName + \":\" + storeFieldName;\n    };\n    Policies.prototype.readField = function (options, context) {\n        var objectOrReference = options.from;\n        if (!objectOrReference)\n            return;\n        var nameOrField = options.field || options.fieldName;\n        if (!nameOrField)\n            return;\n        if (options.typename === void 0) {\n            var typename = context.store.getFieldValue(objectOrReference, \"__typename\");\n            if (typename)\n                options.typename = typename;\n        }\n        var storeFieldName = this.getStoreFieldName(options);\n        var fieldName = fieldNameFromStoreName(storeFieldName);\n        var existing = context.store.getFieldValue(objectOrReference, storeFieldName);\n        var policy = this.getFieldPolicy(options.typename, fieldName, false);\n        var read = policy && policy.read;\n        if (read) {\n            var readOptions = makeFieldFunctionOptions(this, objectOrReference, options, context, context.store.getStorage(isReference(objectOrReference) ?\n                objectOrReference.__ref\n                : objectOrReference, storeFieldName));\n            // Call read(existing, readOptions) with cacheSlot holding this.cache.\n            return cacheSlot.withValue(this.cache, read, [\n                existing,\n                readOptions,\n            ]);\n        }\n        return existing;\n    };\n    Policies.prototype.getReadFunction = function (typename, fieldName) {\n        var policy = this.getFieldPolicy(typename, fieldName, false);\n        return policy && policy.read;\n    };\n    Policies.prototype.getMergeFunction = function (parentTypename, fieldName, childTypename) {\n        var policy = this.getFieldPolicy(parentTypename, fieldName, false);\n        var merge = policy && policy.merge;\n        if (!merge && childTypename) {\n            policy = this.getTypePolicy(childTypename);\n            merge = policy && policy.merge;\n        }\n        return merge;\n    };\n    Policies.prototype.runMergeFunction = function (existing, incoming, _a, context, storage) {\n        var field = _a.field, typename = _a.typename, merge = _a.merge;\n        if (merge === mergeTrueFn) {\n            // Instead of going to the trouble of creating a full\n            // FieldFunctionOptions object and calling mergeTrueFn, we can\n            // simply call mergeObjects, as mergeTrueFn would.\n            return makeMergeObjectsFunction(context.store)(existing, incoming);\n        }\n        if (merge === mergeFalseFn) {\n            // Likewise for mergeFalseFn, whose implementation is even simpler.\n            return incoming;\n        }\n        // If cache.writeQuery or cache.writeFragment was called with\n        // options.overwrite set to true, we still call merge functions, but\n        // the existing data is always undefined, so the merge function will\n        // not attempt to combine the incoming data with the existing data.\n        if (context.overwrite) {\n            existing = void 0;\n        }\n        return merge(existing, incoming, makeFieldFunctionOptions(this, \n        // Unlike options.readField for read functions, we do not fall\n        // back to the current object if no foreignObjOrRef is provided,\n        // because it's not clear what the current object should be for\n        // merge functions: the (possibly undefined) existing object, or\n        // the incoming object? If you think your merge function needs\n        // to read sibling fields in order to produce a new value for\n        // the current field, you might want to rethink your strategy,\n        // because that's a recipe for making merge behavior sensitive\n        // to the order in which fields are written into the cache.\n        // However, readField(name, ref) is useful for merge functions\n        // that need to deduplicate child objects and references.\n        void 0, {\n            typename: typename,\n            fieldName: field.name.value,\n            field: field,\n            variables: context.variables,\n        }, context, storage || Object.create(null)));\n    };\n    return Policies;\n}());\nexport { Policies };\nfunction makeFieldFunctionOptions(policies, objectOrReference, fieldSpec, context, storage) {\n    var storeFieldName = policies.getStoreFieldName(fieldSpec);\n    var fieldName = fieldNameFromStoreName(storeFieldName);\n    var variables = fieldSpec.variables || context.variables;\n    var _a = context.store, toReference = _a.toReference, canRead = _a.canRead;\n    return {\n        args: argsFromFieldSpecifier(fieldSpec),\n        field: fieldSpec.field || null,\n        fieldName: fieldName,\n        storeFieldName: storeFieldName,\n        variables: variables,\n        isReference: isReference,\n        toReference: toReference,\n        storage: storage,\n        cache: policies.cache,\n        canRead: canRead,\n        readField: function () {\n            return policies.readField(normalizeReadFieldOptions(arguments, objectOrReference, variables), context);\n        },\n        mergeObjects: makeMergeObjectsFunction(context.store),\n    };\n}\nexport function normalizeReadFieldOptions(readFieldArgs, objectOrReference, variables) {\n    var fieldNameOrOptions = readFieldArgs[0], from = readFieldArgs[1], argc = readFieldArgs.length;\n    var options;\n    if (typeof fieldNameOrOptions === \"string\") {\n        options = {\n            fieldName: fieldNameOrOptions,\n            // Default to objectOrReference only when no second argument was\n            // passed for the from parameter, not when undefined is explicitly\n            // passed as the second argument.\n            from: argc > 1 ? from : objectOrReference,\n        };\n    }\n    else {\n        options = __assign({}, fieldNameOrOptions);\n        // Default to objectOrReference only when fieldNameOrOptions.from is\n        // actually omitted, rather than just undefined.\n        if (!hasOwn.call(options, \"from\")) {\n            options.from = objectOrReference;\n        }\n    }\n    if (globalThis.__DEV__ !== false && options.from === void 0) {\n        globalThis.__DEV__ !== false && invariant.warn(7, stringifyForDisplay(Array.from(readFieldArgs)));\n    }\n    if (void 0 === options.variables) {\n        options.variables = variables;\n    }\n    return options;\n}\nfunction makeMergeObjectsFunction(store) {\n    return function mergeObjects(existing, incoming) {\n        if (isArray(existing) || isArray(incoming)) {\n            throw newInvariantError(8);\n        }\n        // These dynamic checks are necessary because the parameters of a\n        // custom merge function can easily have the any type, so the type\n        // system cannot always enforce the StoreObject | Reference parameter\n        // types of options.mergeObjects.\n        if (isNonNullObject(existing) && isNonNullObject(incoming)) {\n            var eType = store.getFieldValue(existing, \"__typename\");\n            var iType = store.getFieldValue(incoming, \"__typename\");\n            var typesDiffer = eType && iType && eType !== iType;\n            if (typesDiffer) {\n                return incoming;\n            }\n            if (isReference(existing) && storeValueIsStoreObject(incoming)) {\n                // Update the normalized EntityStore for the entity identified by\n                // existing.__ref, preferring/overwriting any fields contributed by the\n                // newer incoming StoreObject.\n                store.merge(existing.__ref, incoming);\n                return existing;\n            }\n            if (storeValueIsStoreObject(existing) && isReference(incoming)) {\n                // Update the normalized EntityStore for the entity identified by\n                // incoming.__ref, taking fields from the older existing object only if\n                // those fields are not already present in the newer StoreObject\n                // identified by incoming.__ref.\n                store.merge(existing, incoming.__ref);\n                return incoming;\n            }\n            if (storeValueIsStoreObject(existing) &&\n                storeValueIsStoreObject(incoming)) {\n                return __assign(__assign({}, existing), incoming);\n            }\n        }\n        return incoming;\n    };\n}\n//# sourceMappingURL=policies.js.map","import { __assign } from \"tslib\";\nimport { invariant, newInvariantError } from \"../../utilities/globals/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { Trie } from \"@wry/trie\";\nimport { Kind } from \"graphql\";\nimport { getFragmentFromSelection, getDefaultValues, getOperationDefinition, getTypenameFromResult, makeReference, isField, resultKeyNameFromField, isReference, shouldInclude, cloneDeep, addTypenameToDocument, isNonEmptyArray, argumentsObjectFromField, canonicalStringify, } from \"../../utilities/index.js\";\nimport { isArray, makeProcessedFieldsMerger, fieldNameFromStoreName, storeValueIsStoreObject, extractFragmentContext, } from \"./helpers.js\";\nimport { normalizeReadFieldOptions } from \"./policies.js\";\n// Since there are only four possible combinations of context.clientOnly and\n// context.deferred values, we should need at most four \"flavors\" of any given\n// WriteContext. To avoid creating multiple copies of the same context, we cache\n// the contexts in the context.flavors Map (shared by all flavors) according to\n// their clientOnly and deferred values (always in that order).\nfunction getContextFlavor(context, clientOnly, deferred) {\n    var key = \"\".concat(clientOnly).concat(deferred);\n    var flavored = context.flavors.get(key);\n    if (!flavored) {\n        context.flavors.set(key, (flavored =\n            context.clientOnly === clientOnly && context.deferred === deferred ?\n                context\n                : __assign(__assign({}, context), { clientOnly: clientOnly, deferred: deferred })));\n    }\n    return flavored;\n}\nvar StoreWriter = /** @class */ (function () {\n    function StoreWriter(cache, reader, fragments) {\n        this.cache = cache;\n        this.reader = reader;\n        this.fragments = fragments;\n    }\n    StoreWriter.prototype.writeToStore = function (store, _a) {\n        var _this = this;\n        var query = _a.query, result = _a.result, dataId = _a.dataId, variables = _a.variables, overwrite = _a.overwrite;\n        var operationDefinition = getOperationDefinition(query);\n        var merger = makeProcessedFieldsMerger();\n        variables = __assign(__assign({}, getDefaultValues(operationDefinition)), variables);\n        var context = __assign(__assign({ store: store, written: Object.create(null), merge: function (existing, incoming) {\n                return merger.merge(existing, incoming);\n            }, variables: variables, varString: canonicalStringify(variables) }, extractFragmentContext(query, this.fragments)), { overwrite: !!overwrite, incomingById: new Map(), clientOnly: false, deferred: false, flavors: new Map() });\n        var ref = this.processSelectionSet({\n            result: result || Object.create(null),\n            dataId: dataId,\n            selectionSet: operationDefinition.selectionSet,\n            mergeTree: { map: new Map() },\n            context: context,\n        });\n        if (!isReference(ref)) {\n            throw newInvariantError(11, result);\n        }\n        // So far, the store has not been modified, so now it's time to process\n        // context.incomingById and merge those incoming fields into context.store.\n        context.incomingById.forEach(function (_a, dataId) {\n            var storeObject = _a.storeObject, mergeTree = _a.mergeTree, fieldNodeSet = _a.fieldNodeSet;\n            var entityRef = makeReference(dataId);\n            if (mergeTree && mergeTree.map.size) {\n                var applied = _this.applyMerges(mergeTree, entityRef, storeObject, context);\n                if (isReference(applied)) {\n                    // Assume References returned by applyMerges have already been merged\n                    // into the store. See makeMergeObjectsFunction in policies.ts for an\n                    // example of how this can happen.\n                    return;\n                }\n                // Otherwise, applyMerges returned a StoreObject, whose fields we should\n                // merge into the store (see store.merge statement below).\n                storeObject = applied;\n            }\n            if (globalThis.__DEV__ !== false && !context.overwrite) {\n                var fieldsWithSelectionSets_1 = Object.create(null);\n                fieldNodeSet.forEach(function (field) {\n                    if (field.selectionSet) {\n                        fieldsWithSelectionSets_1[field.name.value] = true;\n                    }\n                });\n                var hasSelectionSet_1 = function (storeFieldName) {\n                    return fieldsWithSelectionSets_1[fieldNameFromStoreName(storeFieldName)] ===\n                        true;\n                };\n                var hasMergeFunction_1 = function (storeFieldName) {\n                    var childTree = mergeTree && mergeTree.map.get(storeFieldName);\n                    return Boolean(childTree && childTree.info && childTree.info.merge);\n                };\n                Object.keys(storeObject).forEach(function (storeFieldName) {\n                    // If a merge function was defined for this field, trust that it\n                    // did the right thing about (not) clobbering data. If the field\n                    // has no selection set, it's a scalar field, so it doesn't need\n                    // a merge function (even if it's an object, like JSON data).\n                    if (hasSelectionSet_1(storeFieldName) &&\n                        !hasMergeFunction_1(storeFieldName)) {\n                        warnAboutDataLoss(entityRef, storeObject, storeFieldName, context.store);\n                    }\n                });\n            }\n            store.merge(dataId, storeObject);\n        });\n        // Any IDs written explicitly to the cache will be retained as\n        // reachable root IDs for garbage collection purposes. Although this\n        // logic includes root IDs like ROOT_QUERY and ROOT_MUTATION, their\n        // retainment counts are effectively ignored because cache.gc() always\n        // includes them in its root ID set.\n        store.retain(ref.__ref);\n        return ref;\n    };\n    StoreWriter.prototype.processSelectionSet = function (_a) {\n        var _this = this;\n        var dataId = _a.dataId, result = _a.result, selectionSet = _a.selectionSet, context = _a.context, \n        // This object allows processSelectionSet to report useful information\n        // to its callers without explicitly returning that information.\n        mergeTree = _a.mergeTree;\n        var policies = this.cache.policies;\n        // This variable will be repeatedly updated using context.merge to\n        // accumulate all fields that need to be written into the store.\n        var incoming = Object.create(null);\n        // If typename was not passed in, infer it. Note that typename is\n        // always passed in for tricky-to-infer cases such as \"Query\" for\n        // ROOT_QUERY.\n        var typename = (dataId && policies.rootTypenamesById[dataId]) ||\n            getTypenameFromResult(result, selectionSet, context.fragmentMap) ||\n            (dataId && context.store.get(dataId, \"__typename\"));\n        if (\"string\" === typeof typename) {\n            incoming.__typename = typename;\n        }\n        // This readField function will be passed as context.readField in the\n        // KeyFieldsContext object created within policies.identify (called below).\n        // In addition to reading from the existing context.store (thanks to the\n        // policies.readField(options, context) line at the very bottom), this\n        // version of readField can read from Reference objects that are currently\n        // pending in context.incomingById, which is important whenever keyFields\n        // need to be extracted from a child object that processSelectionSet has\n        // turned into a Reference.\n        var readField = function () {\n            var options = normalizeReadFieldOptions(arguments, incoming, context.variables);\n            if (isReference(options.from)) {\n                var info = context.incomingById.get(options.from.__ref);\n                if (info) {\n                    var result_1 = policies.readField(__assign(__assign({}, options), { from: info.storeObject }), context);\n                    if (result_1 !== void 0) {\n                        return result_1;\n                    }\n                }\n            }\n            return policies.readField(options, context);\n        };\n        var fieldNodeSet = new Set();\n        this.flattenFields(selectionSet, result, \n        // This WriteContext will be the default context value for fields returned\n        // by the flattenFields method, but some fields may be assigned a modified\n        // context, depending on the presence of @client and other directives.\n        context, typename).forEach(function (context, field) {\n            var _a;\n            var resultFieldKey = resultKeyNameFromField(field);\n            var value = result[resultFieldKey];\n            fieldNodeSet.add(field);\n            if (value !== void 0) {\n                var storeFieldName = policies.getStoreFieldName({\n                    typename: typename,\n                    fieldName: field.name.value,\n                    field: field,\n                    variables: context.variables,\n                });\n                var childTree = getChildMergeTree(mergeTree, storeFieldName);\n                var incomingValue = _this.processFieldValue(value, field, \n                // Reset context.clientOnly and context.deferred to their default\n                // values before processing nested selection sets.\n                field.selectionSet ?\n                    getContextFlavor(context, false, false)\n                    : context, childTree);\n                // To determine if this field holds a child object with a merge function\n                // defined in its type policy (see PR #7070), we need to figure out the\n                // child object's __typename.\n                var childTypename = void 0;\n                // The field's value can be an object that has a __typename only if the\n                // field has a selection set. Otherwise incomingValue is scalar.\n                if (field.selectionSet &&\n                    (isReference(incomingValue) || storeValueIsStoreObject(incomingValue))) {\n                    childTypename = readField(\"__typename\", incomingValue);\n                }\n                var merge = policies.getMergeFunction(typename, field.name.value, childTypename);\n                if (merge) {\n                    childTree.info = {\n                        // TODO Check compatibility against any existing childTree.field?\n                        field: field,\n                        typename: typename,\n                        merge: merge,\n                    };\n                }\n                else {\n                    maybeRecycleChildMergeTree(mergeTree, storeFieldName);\n                }\n                incoming = context.merge(incoming, (_a = {},\n                    _a[storeFieldName] = incomingValue,\n                    _a));\n            }\n            else if (globalThis.__DEV__ !== false &&\n                !context.clientOnly &&\n                !context.deferred &&\n                !addTypenameToDocument.added(field) &&\n                // If the field has a read function, it may be a synthetic field or\n                // provide a default value, so its absence from the written data should\n                // not be cause for alarm.\n                !policies.getReadFunction(typename, field.name.value)) {\n                globalThis.__DEV__ !== false && invariant.error(12, resultKeyNameFromField(field), result);\n            }\n        });\n        // Identify the result object, even if dataId was already provided,\n        // since we always need keyObject below.\n        try {\n            var _b = policies.identify(result, {\n                typename: typename,\n                selectionSet: selectionSet,\n                fragmentMap: context.fragmentMap,\n                storeObject: incoming,\n                readField: readField,\n            }), id = _b[0], keyObject = _b[1];\n            // If dataId was not provided, fall back to the id just generated by\n            // policies.identify.\n            dataId = dataId || id;\n            // Write any key fields that were used during identification, even if\n            // they were not mentioned in the original query.\n            if (keyObject) {\n                // TODO Reverse the order of the arguments?\n                incoming = context.merge(incoming, keyObject);\n            }\n        }\n        catch (e) {\n            // If dataId was provided, tolerate failure of policies.identify.\n            if (!dataId)\n                throw e;\n        }\n        if (\"string\" === typeof dataId) {\n            var dataRef = makeReference(dataId);\n            // Avoid processing the same entity object using the same selection\n            // set more than once. We use an array instead of a Set since most\n            // entity IDs will be written using only one selection set, so the\n            // size of this array is likely to be very small, meaning indexOf is\n            // likely to be faster than Set.prototype.has.\n            var sets = context.written[dataId] || (context.written[dataId] = []);\n            if (sets.indexOf(selectionSet) >= 0)\n                return dataRef;\n            sets.push(selectionSet);\n            // If we're about to write a result object into the store, but we\n            // happen to know that the exact same (===) result object would be\n            // returned if we were to reread the result with the same inputs,\n            // then we can skip the rest of the processSelectionSet work for\n            // this object, and immediately return a Reference to it.\n            if (this.reader &&\n                this.reader.isFresh(result, dataRef, selectionSet, context)) {\n                return dataRef;\n            }\n            var previous_1 = context.incomingById.get(dataId);\n            if (previous_1) {\n                previous_1.storeObject = context.merge(previous_1.storeObject, incoming);\n                previous_1.mergeTree = mergeMergeTrees(previous_1.mergeTree, mergeTree);\n                fieldNodeSet.forEach(function (field) { return previous_1.fieldNodeSet.add(field); });\n            }\n            else {\n                context.incomingById.set(dataId, {\n                    storeObject: incoming,\n                    // Save a reference to mergeTree only if it is not empty, because\n                    // empty MergeTrees may be recycled by maybeRecycleChildMergeTree and\n                    // reused for entirely different parts of the result tree.\n                    mergeTree: mergeTreeIsEmpty(mergeTree) ? void 0 : mergeTree,\n                    fieldNodeSet: fieldNodeSet,\n                });\n            }\n            return dataRef;\n        }\n        return incoming;\n    };\n    StoreWriter.prototype.processFieldValue = function (value, field, context, mergeTree) {\n        var _this = this;\n        if (!field.selectionSet || value === null) {\n            // In development, we need to clone scalar values so that they can be\n            // safely frozen with maybeDeepFreeze in readFromStore.ts. In production,\n            // it's cheaper to store the scalar values directly in the cache.\n            return globalThis.__DEV__ !== false ? cloneDeep(value) : value;\n        }\n        if (isArray(value)) {\n            return value.map(function (item, i) {\n                var value = _this.processFieldValue(item, field, context, getChildMergeTree(mergeTree, i));\n                maybeRecycleChildMergeTree(mergeTree, i);\n                return value;\n            });\n        }\n        return this.processSelectionSet({\n            result: value,\n            selectionSet: field.selectionSet,\n            context: context,\n            mergeTree: mergeTree,\n        });\n    };\n    // Implements https://spec.graphql.org/draft/#sec-Field-Collection, but with\n    // some additions for tracking @client and @defer directives.\n    StoreWriter.prototype.flattenFields = function (selectionSet, result, context, typename) {\n        if (typename === void 0) { typename = getTypenameFromResult(result, selectionSet, context.fragmentMap); }\n        var fieldMap = new Map();\n        var policies = this.cache.policies;\n        var limitingTrie = new Trie(false); // No need for WeakMap, since limitingTrie does not escape.\n        (function flatten(selectionSet, inheritedContext) {\n            var visitedNode = limitingTrie.lookup(selectionSet, \n            // Because we take inheritedClientOnly and inheritedDeferred into\n            // consideration here (in addition to selectionSet), it's possible for\n            // the same selection set to be flattened more than once, if it appears\n            // in the query with different @client and/or @directive configurations.\n            inheritedContext.clientOnly, inheritedContext.deferred);\n            if (visitedNode.visited)\n                return;\n            visitedNode.visited = true;\n            selectionSet.selections.forEach(function (selection) {\n                if (!shouldInclude(selection, context.variables))\n                    return;\n                var clientOnly = inheritedContext.clientOnly, deferred = inheritedContext.deferred;\n                if (\n                // Since the presence of @client or @defer on this field can only\n                // cause clientOnly or deferred to become true, we can skip the\n                // forEach loop if both clientOnly and deferred are already true.\n                !(clientOnly && deferred) &&\n                    isNonEmptyArray(selection.directives)) {\n                    selection.directives.forEach(function (dir) {\n                        var name = dir.name.value;\n                        if (name === \"client\")\n                            clientOnly = true;\n                        if (name === \"defer\") {\n                            var args = argumentsObjectFromField(dir, context.variables);\n                            // The @defer directive takes an optional args.if boolean\n                            // argument, similar to @include(if: boolean). Note that\n                            // @defer(if: false) does not make context.deferred false, but\n                            // instead behaves as if there was no @defer directive.\n                            if (!args || args.if !== false) {\n                                deferred = true;\n                            }\n                            // TODO In the future, we may want to record args.label using\n                            // context.deferred, if a label is specified.\n                        }\n                    });\n                }\n                if (isField(selection)) {\n                    var existing = fieldMap.get(selection);\n                    if (existing) {\n                        // If this field has been visited along another recursive path\n                        // before, the final context should have clientOnly or deferred set\n                        // to true only if *all* paths have the directive (hence the &&).\n                        clientOnly = clientOnly && existing.clientOnly;\n                        deferred = deferred && existing.deferred;\n                    }\n                    fieldMap.set(selection, getContextFlavor(context, clientOnly, deferred));\n                }\n                else {\n                    var fragment = getFragmentFromSelection(selection, context.lookupFragment);\n                    if (!fragment && selection.kind === Kind.FRAGMENT_SPREAD) {\n                        throw newInvariantError(13, selection.name.value);\n                    }\n                    if (fragment &&\n                        policies.fragmentMatches(fragment, typename, result, context.variables)) {\n                        flatten(fragment.selectionSet, getContextFlavor(context, clientOnly, deferred));\n                    }\n                }\n            });\n        })(selectionSet, context);\n        return fieldMap;\n    };\n    StoreWriter.prototype.applyMerges = function (mergeTree, existing, incoming, context, getStorageArgs) {\n        var _a;\n        var _this = this;\n        if (mergeTree.map.size && !isReference(incoming)) {\n            var e_1 = \n            // Items in the same position in different arrays are not\n            // necessarily related to each other, so when incoming is an array\n            // we process its elements as if there was no existing data.\n            (!isArray(incoming) &&\n                // Likewise, existing must be either a Reference or a StoreObject\n                // in order for its fields to be safe to merge with the fields of\n                // the incoming object.\n                (isReference(existing) || storeValueIsStoreObject(existing))) ?\n                existing\n                : void 0;\n            // This narrowing is implied by mergeTree.map.size > 0 and\n            // !isReference(incoming), though TypeScript understandably cannot\n            // hope to infer this type.\n            var i_1 = incoming;\n            // The options.storage objects provided to read and merge functions\n            // are derived from the identity of the parent object plus a\n            // sequence of storeFieldName strings/numbers identifying the nested\n            // field name path of each field value to be merged.\n            if (e_1 && !getStorageArgs) {\n                getStorageArgs = [isReference(e_1) ? e_1.__ref : e_1];\n            }\n            // It's possible that applying merge functions to this subtree will\n            // not change the incoming data, so this variable tracks the fields\n            // that did change, so we can create a new incoming object when (and\n            // only when) at least one incoming field has changed. We use a Map\n            // to preserve the type of numeric keys.\n            var changedFields_1;\n            var getValue_1 = function (from, name) {\n                return (isArray(from) ?\n                    typeof name === \"number\" ?\n                        from[name]\n                        : void 0\n                    : context.store.getFieldValue(from, String(name)));\n            };\n            mergeTree.map.forEach(function (childTree, storeFieldName) {\n                var eVal = getValue_1(e_1, storeFieldName);\n                var iVal = getValue_1(i_1, storeFieldName);\n                // If we have no incoming data, leave any existing data untouched.\n                if (void 0 === iVal)\n                    return;\n                if (getStorageArgs) {\n                    getStorageArgs.push(storeFieldName);\n                }\n                var aVal = _this.applyMerges(childTree, eVal, iVal, context, getStorageArgs);\n                if (aVal !== iVal) {\n                    changedFields_1 = changedFields_1 || new Map();\n                    changedFields_1.set(storeFieldName, aVal);\n                }\n                if (getStorageArgs) {\n                    invariant(getStorageArgs.pop() === storeFieldName);\n                }\n            });\n            if (changedFields_1) {\n                // Shallow clone i so we can add changed fields to it.\n                incoming = (isArray(i_1) ? i_1.slice(0) : __assign({}, i_1));\n                changedFields_1.forEach(function (value, name) {\n                    incoming[name] = value;\n                });\n            }\n        }\n        if (mergeTree.info) {\n            return this.cache.policies.runMergeFunction(existing, incoming, mergeTree.info, context, getStorageArgs && (_a = context.store).getStorage.apply(_a, getStorageArgs));\n        }\n        return incoming;\n    };\n    return StoreWriter;\n}());\nexport { StoreWriter };\nvar emptyMergeTreePool = [];\nfunction getChildMergeTree(_a, name) {\n    var map = _a.map;\n    if (!map.has(name)) {\n        map.set(name, emptyMergeTreePool.pop() || { map: new Map() });\n    }\n    return map.get(name);\n}\nfunction mergeMergeTrees(left, right) {\n    if (left === right || !right || mergeTreeIsEmpty(right))\n        return left;\n    if (!left || mergeTreeIsEmpty(left))\n        return right;\n    var info = left.info && right.info ? __assign(__assign({}, left.info), right.info) : left.info || right.info;\n    var needToMergeMaps = left.map.size && right.map.size;\n    var map = needToMergeMaps ? new Map()\n        : left.map.size ? left.map\n            : right.map;\n    var merged = { info: info, map: map };\n    if (needToMergeMaps) {\n        var remainingRightKeys_1 = new Set(right.map.keys());\n        left.map.forEach(function (leftTree, key) {\n            merged.map.set(key, mergeMergeTrees(leftTree, right.map.get(key)));\n            remainingRightKeys_1.delete(key);\n        });\n        remainingRightKeys_1.forEach(function (key) {\n            merged.map.set(key, mergeMergeTrees(right.map.get(key), left.map.get(key)));\n        });\n    }\n    return merged;\n}\nfunction mergeTreeIsEmpty(tree) {\n    return !tree || !(tree.info || tree.map.size);\n}\nfunction maybeRecycleChildMergeTree(_a, name) {\n    var map = _a.map;\n    var childTree = map.get(name);\n    if (childTree && mergeTreeIsEmpty(childTree)) {\n        emptyMergeTreePool.push(childTree);\n        map.delete(name);\n    }\n}\nvar warnings = new Set();\n// Note that this function is unused in production, and thus should be\n// pruned by any well-configured minifier.\nfunction warnAboutDataLoss(existingRef, incomingObj, storeFieldName, store) {\n    var getChild = function (objOrRef) {\n        var child = store.getFieldValue(objOrRef, storeFieldName);\n        return typeof child === \"object\" && child;\n    };\n    var existing = getChild(existingRef);\n    if (!existing)\n        return;\n    var incoming = getChild(incomingObj);\n    if (!incoming)\n        return;\n    // It's always safe to replace a reference, since it refers to data\n    // safely stored elsewhere.\n    if (isReference(existing))\n        return;\n    // If the values are structurally equivalent, we do not need to worry\n    // about incoming replacing existing.\n    if (equal(existing, incoming))\n        return;\n    // If we're replacing every key of the existing object, then the\n    // existing data would be overwritten even if the objects were\n    // normalized, so warning would not be helpful here.\n    if (Object.keys(existing).every(function (key) { return store.getFieldValue(incoming, key) !== void 0; })) {\n        return;\n    }\n    var parentType = store.getFieldValue(existingRef, \"__typename\") ||\n        store.getFieldValue(incomingObj, \"__typename\");\n    var fieldName = fieldNameFromStoreName(storeFieldName);\n    var typeDotName = \"\".concat(parentType, \".\").concat(fieldName);\n    // Avoid warning more than once for the same type and field name.\n    if (warnings.has(typeDotName))\n        return;\n    warnings.add(typeDotName);\n    var childTypenames = [];\n    // Arrays do not have __typename fields, and always need a custom merge\n    // function, even if their elements are normalized entities.\n    if (!isArray(existing) && !isArray(incoming)) {\n        [existing, incoming].forEach(function (child) {\n            var typename = store.getFieldValue(child, \"__typename\");\n            if (typeof typename === \"string\" && !childTypenames.includes(typename)) {\n                childTypenames.push(typename);\n            }\n        });\n    }\n    globalThis.__DEV__ !== false && invariant.warn(14, fieldName, parentType, childTypenames.length ?\n        \"either ensure all objects of type \" +\n            childTypenames.join(\" and \") +\n            \" have an ID or a custom merge function, or \"\n        : \"\", typeDotName, existing, incoming);\n}\n//# sourceMappingURL=writeToStore.js.map","import { __assign, __extends } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\n// Make builtins like Map and Set safe to use with non-extensible objects.\nimport \"./fixPolyfills.js\";\nimport { wrap } from \"optimism\";\nimport { equal } from \"@wry/equality\";\nimport { ApolloCache } from \"../core/cache.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport { addTypenameToDocument, isReference, DocumentTransform, canonicalStringify, print, cacheSizes, } from \"../../utilities/index.js\";\nimport { StoreReader } from \"./readFromStore.js\";\nimport { StoreWriter } from \"./writeToStore.js\";\nimport { EntityStore, supportsResultCaching } from \"./entityStore.js\";\nimport { makeVar, forgetCache, recallCache } from \"./reactiveVars.js\";\nimport { Policies } from \"./policies.js\";\nimport { hasOwn, normalizeConfig, shouldCanonizeResults } from \"./helpers.js\";\nimport { getInMemoryCacheMemoryInternals } from \"../../utilities/caching/getMemoryInternals.js\";\nvar InMemoryCache = /** @class */ (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.watches = new Set();\n        _this.addTypenameTransform = new DocumentTransform(addTypenameToDocument);\n        // Override the default value, since InMemoryCache result objects are frozen\n        // in development and expected to remain logically immutable in production.\n        _this.assumeImmutableResults = true;\n        _this.makeVar = makeVar;\n        _this.txCount = 0;\n        _this.config = normalizeConfig(config);\n        _this.addTypename = !!_this.config.addTypename;\n        _this.policies = new Policies({\n            cache: _this,\n            dataIdFromObject: _this.config.dataIdFromObject,\n            possibleTypes: _this.config.possibleTypes,\n            typePolicies: _this.config.typePolicies,\n        });\n        _this.init();\n        return _this;\n    }\n    InMemoryCache.prototype.init = function () {\n        // Passing { resultCaching: false } in the InMemoryCache constructor options\n        // will completely disable dependency tracking, which will improve memory\n        // usage but worsen the performance of repeated reads.\n        var rootStore = (this.data = new EntityStore.Root({\n            policies: this.policies,\n            resultCaching: this.config.resultCaching,\n        }));\n        // When no optimistic writes are currently active, cache.optimisticData ===\n        // cache.data, so there are no additional layers on top of the actual data.\n        // When an optimistic update happens, this.optimisticData will become a\n        // linked list of EntityStore Layer objects that terminates with the\n        // original this.data cache object.\n        this.optimisticData = rootStore.stump;\n        this.resetResultCache();\n    };\n    InMemoryCache.prototype.resetResultCache = function (resetResultIdentities) {\n        var _this = this;\n        var previousReader = this.storeReader;\n        var fragments = this.config.fragments;\n        // The StoreWriter is mostly stateless and so doesn't really need to be\n        // reset, but it does need to have its writer.storeReader reference updated,\n        // so it's simpler to update this.storeWriter as well.\n        this.storeWriter = new StoreWriter(this, (this.storeReader = new StoreReader({\n            cache: this,\n            addTypename: this.addTypename,\n            resultCacheMaxSize: this.config.resultCacheMaxSize,\n            canonizeResults: shouldCanonizeResults(this.config),\n            canon: resetResultIdentities ? void 0 : (previousReader && previousReader.canon),\n            fragments: fragments,\n        })), fragments);\n        this.maybeBroadcastWatch = wrap(function (c, options) {\n            return _this.broadcastWatch(c, options);\n        }, {\n            max: this.config.resultCacheMaxSize ||\n                cacheSizes[\"inMemoryCache.maybeBroadcastWatch\"] ||\n                5000 /* defaultCacheSizes[\"inMemoryCache.maybeBroadcastWatch\"] */,\n            makeCacheKey: function (c) {\n                // Return a cache key (thus enabling result caching) only if we're\n                // currently using a data store that can track cache dependencies.\n                var store = c.optimistic ? _this.optimisticData : _this.data;\n                if (supportsResultCaching(store)) {\n                    var optimistic = c.optimistic, id = c.id, variables = c.variables;\n                    return store.makeCacheKey(c.query, \n                    // Different watches can have the same query, optimistic\n                    // status, rootId, and variables, but if their callbacks are\n                    // different, the (identical) result needs to be delivered to\n                    // each distinct callback. The easiest way to achieve that\n                    // separation is to include c.callback in the cache key for\n                    // maybeBroadcastWatch calls. See issue #5733.\n                    c.callback, canonicalStringify({ optimistic: optimistic, id: id, variables: variables }));\n                }\n            },\n        });\n        // Since we have thrown away all the cached functions that depend on the\n        // CacheGroup dependencies maintained by EntityStore, we should also reset\n        // all CacheGroup dependency information.\n        new Set([this.data.group, this.optimisticData.group]).forEach(function (group) {\n            return group.resetCaching();\n        });\n    };\n    InMemoryCache.prototype.restore = function (data) {\n        this.init();\n        // Since calling this.init() discards/replaces the entire StoreReader, along\n        // with the result caches it maintains, this.data.replace(data) won't have\n        // to bother deleting the old data.\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return (optimistic ? this.optimisticData : this.data).extract();\n    };\n    InMemoryCache.prototype.read = function (options) {\n        var \n        // Since read returns data or null, without any additional metadata\n        // about whether/where there might have been missing fields, the\n        // default behavior cannot be returnPartialData = true (like it is\n        // for the diff method), since defaulting to true would violate the\n        // integrity of the T in the return type. However, partial data may\n        // be useful in some cases, so returnPartialData:true may be\n        // specified explicitly.\n        _a = options.returnPartialData, \n        // Since read returns data or null, without any additional metadata\n        // about whether/where there might have been missing fields, the\n        // default behavior cannot be returnPartialData = true (like it is\n        // for the diff method), since defaulting to true would violate the\n        // integrity of the T in the return type. However, partial data may\n        // be useful in some cases, so returnPartialData:true may be\n        // specified explicitly.\n        returnPartialData = _a === void 0 ? false : _a;\n        try {\n            return (this.storeReader.diffQueryAgainstStore(__assign(__assign({}, options), { store: options.optimistic ? this.optimisticData : this.data, config: this.config, returnPartialData: returnPartialData })).result || null);\n        }\n        catch (e) {\n            if (e instanceof MissingFieldError) {\n                // Swallow MissingFieldError and return null, so callers do not need to\n                // worry about catching \"normal\" exceptions resulting from incomplete\n                // cache data. Unexpected errors will be re-thrown. If you need more\n                // information about which fields were missing, use cache.diff instead,\n                // and examine diffResult.missing.\n                return null;\n            }\n            throw e;\n        }\n    };\n    InMemoryCache.prototype.write = function (options) {\n        try {\n            ++this.txCount;\n            return this.storeWriter.writeToStore(this.data, options);\n        }\n        finally {\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.modify = function (options) {\n        if (hasOwn.call(options, \"id\") && !options.id) {\n            // To my knowledge, TypeScript does not currently provide a way to\n            // enforce that an optional property?:type must *not* be undefined\n            // when present. That ability would be useful here, because we want\n            // options.id to default to ROOT_QUERY only when no options.id was\n            // provided. If the caller attempts to pass options.id with a\n            // falsy/undefined value (perhaps because cache.identify failed), we\n            // should not assume the goal was to modify the ROOT_QUERY object.\n            // We could throw, but it seems natural to return false to indicate\n            // that nothing was modified.\n            return false;\n        }\n        var store = ((options.optimistic) // Defaults to false.\n        ) ?\n            this.optimisticData\n            : this.data;\n        try {\n            ++this.txCount;\n            return store.modify(options.id || \"ROOT_QUERY\", options.fields);\n        }\n        finally {\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.diff = function (options) {\n        return this.storeReader.diffQueryAgainstStore(__assign(__assign({}, options), { store: options.optimistic ? this.optimisticData : this.data, rootId: options.id || \"ROOT_QUERY\", config: this.config }));\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        if (!this.watches.size) {\n            // In case we previously called forgetCache(this) because\n            // this.watches became empty (see below), reattach this cache to any\n            // reactive variables on which it previously depended. It might seem\n            // paradoxical that we're able to recall something we supposedly\n            // forgot, but the point of calling forgetCache(this) is to silence\n            // useless broadcasts while this.watches is empty, and to allow the\n            // cache to be garbage collected. If, however, we manage to call\n            // recallCache(this) here, this cache object must not have been\n            // garbage collected yet, and should resume receiving updates from\n            // reactive variables, now that it has a watcher to notify.\n            recallCache(this);\n        }\n        this.watches.add(watch);\n        if (watch.immediate) {\n            this.maybeBroadcastWatch(watch);\n        }\n        return function () {\n            // Once we remove the last watch from this.watches, cache.broadcastWatches\n            // no longer does anything, so we preemptively tell the reactive variable\n            // system to exclude this cache from future broadcasts.\n            if (_this.watches.delete(watch) && !_this.watches.size) {\n                forgetCache(_this);\n            }\n            // Remove this watch from the LRU cache managed by the\n            // maybeBroadcastWatch OptimisticWrapperFunction, to prevent memory\n            // leaks involving the closure of watch.callback.\n            _this.maybeBroadcastWatch.forget(watch);\n        };\n    };\n    InMemoryCache.prototype.gc = function (options) {\n        var _a;\n        canonicalStringify.reset();\n        print.reset();\n        this.addTypenameTransform.resetCache();\n        (_a = this.config.fragments) === null || _a === void 0 ? void 0 : _a.resetCaches();\n        var ids = this.optimisticData.gc();\n        if (options && !this.txCount) {\n            if (options.resetResultCache) {\n                this.resetResultCache(options.resetResultIdentities);\n            }\n            else if (options.resetResultIdentities) {\n                this.storeReader.resetCanon();\n            }\n        }\n        return ids;\n    };\n    // Call this method to ensure the given root ID remains in the cache after\n    // garbage collection, along with its transitive child entities. Note that\n    // the cache automatically retains all directly written entities. By default,\n    // the retainment persists after optimistic updates are removed. Pass true\n    // for the optimistic argument if you would prefer for the retainment to be\n    // discarded when the top-most optimistic layer is removed. Returns the\n    // resulting (non-negative) retainment count.\n    InMemoryCache.prototype.retain = function (rootId, optimistic) {\n        return (optimistic ? this.optimisticData : this.data).retain(rootId);\n    };\n    // Call this method to undo the effect of the retain method, above. Once the\n    // retainment count falls to zero, the given ID will no longer be preserved\n    // during garbage collection, though it may still be preserved by other safe\n    // entities that refer to it. Returns the resulting (non-negative) retainment\n    // count, in case that's useful.\n    InMemoryCache.prototype.release = function (rootId, optimistic) {\n        return (optimistic ? this.optimisticData : this.data).release(rootId);\n    };\n    // Returns the canonical ID for a given StoreObject, obeying typePolicies\n    // and keyFields (and dataIdFromObject, if you still use that). At minimum,\n    // the object must contain a __typename and any primary key fields required\n    // to identify entities of that type. If you pass a query result object, be\n    // sure that none of the primary key fields have been renamed by aliasing.\n    // If you pass a Reference object, its __ref ID string will be returned.\n    InMemoryCache.prototype.identify = function (object) {\n        if (isReference(object))\n            return object.__ref;\n        try {\n            return this.policies.identify(object)[0];\n        }\n        catch (e) {\n            globalThis.__DEV__ !== false && invariant.warn(e);\n        }\n    };\n    InMemoryCache.prototype.evict = function (options) {\n        if (!options.id) {\n            if (hasOwn.call(options, \"id\")) {\n                // See comment in modify method about why we return false when\n                // options.id exists but is falsy/undefined.\n                return false;\n            }\n            options = __assign(__assign({}, options), { id: \"ROOT_QUERY\" });\n        }\n        try {\n            // It's unlikely that the eviction will end up invoking any other\n            // cache update operations while it's running, but {in,de}crementing\n            // this.txCount still seems like a good idea, for uniformity with\n            // the other update methods.\n            ++this.txCount;\n            // Pass this.data as a limit on the depth of the eviction, so evictions\n            // during optimistic updates (when this.data is temporarily set equal to\n            // this.optimisticData) do not escape their optimistic Layer.\n            return this.optimisticData.evict(options, this.data);\n        }\n        finally {\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.reset = function (options) {\n        var _this = this;\n        this.init();\n        canonicalStringify.reset();\n        if (options && options.discardWatches) {\n            // Similar to what happens in the unsubscribe function returned by\n            // cache.watch, applied to all current watches.\n            this.watches.forEach(function (watch) { return _this.maybeBroadcastWatch.forget(watch); });\n            this.watches.clear();\n            forgetCache(this);\n        }\n        else {\n            // Calling this.init() above unblocks all maybeBroadcastWatch caching, so\n            // this.broadcastWatches() triggers a broadcast to every current watcher\n            // (letting them know their data is now missing). This default behavior is\n            // convenient because it means the watches do not have to be manually\n            // reestablished after resetting the cache. To prevent this broadcast and\n            // cancel all watches, pass true for options.discardWatches.\n            this.broadcastWatches();\n        }\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n        var newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n        if (newOptimisticData !== this.optimisticData) {\n            this.optimisticData = newOptimisticData;\n            this.broadcastWatches();\n        }\n    };\n    InMemoryCache.prototype.batch = function (options) {\n        var _this = this;\n        var update = options.update, _a = options.optimistic, optimistic = _a === void 0 ? true : _a, removeOptimistic = options.removeOptimistic, onWatchUpdated = options.onWatchUpdated;\n        var updateResult;\n        var perform = function (layer) {\n            var _a = _this, data = _a.data, optimisticData = _a.optimisticData;\n            ++_this.txCount;\n            if (layer) {\n                _this.data = _this.optimisticData = layer;\n            }\n            try {\n                return (updateResult = update(_this));\n            }\n            finally {\n                --_this.txCount;\n                _this.data = data;\n                _this.optimisticData = optimisticData;\n            }\n        };\n        var alreadyDirty = new Set();\n        if (onWatchUpdated && !this.txCount) {\n            // If an options.onWatchUpdated callback is provided, we want to call it\n            // with only the Cache.WatchOptions objects affected by options.update,\n            // but there might be dirty watchers already waiting to be broadcast that\n            // have nothing to do with the update. To prevent including those watchers\n            // in the post-update broadcast, we perform this initial broadcast to\n            // collect the dirty watchers, so we can re-dirty them later, after the\n            // post-update broadcast, allowing them to receive their pending\n            // broadcasts the next time broadcastWatches is called, just as they would\n            // if we never called cache.batch.\n            this.broadcastWatches(__assign(__assign({}, options), { onWatchUpdated: function (watch) {\n                    alreadyDirty.add(watch);\n                    return false;\n                } }));\n        }\n        if (typeof optimistic === \"string\") {\n            // Note that there can be multiple layers with the same optimistic ID.\n            // When removeOptimistic(id) is called for that id, all matching layers\n            // will be removed, and the remaining layers will be reapplied.\n            this.optimisticData = this.optimisticData.addLayer(optimistic, perform);\n        }\n        else if (optimistic === false) {\n            // Ensure both this.data and this.optimisticData refer to the root\n            // (non-optimistic) layer of the cache during the update. Note that\n            // this.data could be a Layer if we are currently executing an optimistic\n            // update function, but otherwise will always be an EntityStore.Root\n            // instance.\n            perform(this.data);\n        }\n        else {\n            // Otherwise, leave this.data and this.optimisticData unchanged and run\n            // the update with broadcast batching.\n            perform();\n        }\n        if (typeof removeOptimistic === \"string\") {\n            this.optimisticData = this.optimisticData.removeLayer(removeOptimistic);\n        }\n        // Note: if this.txCount > 0, then alreadyDirty.size === 0, so this code\n        // takes the else branch and calls this.broadcastWatches(options), which\n        // does nothing when this.txCount > 0.\n        if (onWatchUpdated && alreadyDirty.size) {\n            this.broadcastWatches(__assign(__assign({}, options), { onWatchUpdated: function (watch, diff) {\n                    var result = onWatchUpdated.call(this, watch, diff);\n                    if (result !== false) {\n                        // Since onWatchUpdated did not return false, this diff is\n                        // about to be broadcast to watch.callback, so we don't need\n                        // to re-dirty it with the other alreadyDirty watches below.\n                        alreadyDirty.delete(watch);\n                    }\n                    return result;\n                } }));\n            // Silently re-dirty any watches that were already dirty before the update\n            // was performed, and were not broadcast just now.\n            if (alreadyDirty.size) {\n                alreadyDirty.forEach(function (watch) { return _this.maybeBroadcastWatch.dirty(watch); });\n            }\n        }\n        else {\n            // If alreadyDirty is empty or we don't have an onWatchUpdated\n            // function, we don't need to go to the trouble of wrapping\n            // options.onWatchUpdated.\n            this.broadcastWatches(options);\n        }\n        return updateResult;\n    };\n    InMemoryCache.prototype.performTransaction = function (update, optimisticId) {\n        return this.batch({\n            update: update,\n            optimistic: optimisticId || optimisticId !== null,\n        });\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        return this.addTypenameToDocument(this.addFragmentsToDocument(document));\n    };\n    InMemoryCache.prototype.broadcastWatches = function (options) {\n        var _this = this;\n        if (!this.txCount) {\n            this.watches.forEach(function (c) { return _this.maybeBroadcastWatch(c, options); });\n        }\n    };\n    InMemoryCache.prototype.addFragmentsToDocument = function (document) {\n        var fragments = this.config.fragments;\n        return fragments ? fragments.transform(document) : document;\n    };\n    InMemoryCache.prototype.addTypenameToDocument = function (document) {\n        if (this.addTypename) {\n            return this.addTypenameTransform.transformDocument(document);\n        }\n        return document;\n    };\n    // This method is wrapped by maybeBroadcastWatch, which is called by\n    // broadcastWatches, so that we compute and broadcast results only when\n    // the data that would be broadcast might have changed. It would be\n    // simpler to check for changes after recomputing a result but before\n    // broadcasting it, but this wrapping approach allows us to skip both\n    // the recomputation and the broadcast, in most cases.\n    InMemoryCache.prototype.broadcastWatch = function (c, options) {\n        var lastDiff = c.lastDiff;\n        // Both WatchOptions and DiffOptions extend ReadOptions, and DiffOptions\n        // currently requires no additional properties, so we can use c (a\n        // WatchOptions object) as DiffOptions, without having to allocate a new\n        // object, and without having to enumerate the relevant properties (query,\n        // variables, etc.) explicitly. There will be some additional properties\n        // (lastDiff, callback, etc.), but cache.diff ignores them.\n        var diff = this.diff(c);\n        if (options) {\n            if (c.optimistic && typeof options.optimistic === \"string\") {\n                diff.fromOptimisticTransaction = true;\n            }\n            if (options.onWatchUpdated &&\n                options.onWatchUpdated.call(this, c, diff, lastDiff) === false) {\n                // Returning false from the onWatchUpdated callback will prevent\n                // calling c.callback(diff) for this watcher.\n                return;\n            }\n        }\n        if (!lastDiff || !equal(lastDiff.result, diff.result)) {\n            c.callback((c.lastDiff = diff), lastDiff);\n        }\n    };\n    return InMemoryCache;\n}(ApolloCache));\nexport { InMemoryCache };\nif (globalThis.__DEV__ !== false) {\n    InMemoryCache.prototype.getMemoryInternals = getInMemoryCacheMemoryInternals;\n}\n//# sourceMappingURL=inMemoryCache.js.map","import { dep, Slot } from \"optimism\";\n// Contextual Slot that acquires its value when custom read functions are\n// called in Policies#readField.\nexport var cacheSlot = new Slot();\nvar cacheInfoMap = new WeakMap();\nfunction getCacheInfo(cache) {\n    var info = cacheInfoMap.get(cache);\n    if (!info) {\n        cacheInfoMap.set(cache, (info = {\n            vars: new Set(),\n            dep: dep(),\n        }));\n    }\n    return info;\n}\nexport function forgetCache(cache) {\n    getCacheInfo(cache).vars.forEach(function (rv) { return rv.forgetCache(cache); });\n}\n// Calling forgetCache(cache) serves to silence broadcasts and allows the\n// cache to be garbage collected. However, the varsByCache WeakMap\n// preserves the set of reactive variables that were previously associated\n// with this cache, which makes it possible to \"recall\" the cache at a\n// later time, by reattaching it to those variables. If the cache has been\n// garbage collected in the meantime, because it is no longer reachable,\n// you won't be able to call recallCache(cache), and the cache will\n// automatically disappear from the varsByCache WeakMap.\nexport function recallCache(cache) {\n    getCacheInfo(cache).vars.forEach(function (rv) { return rv.attachCache(cache); });\n}\nexport function makeVar(value) {\n    var caches = new Set();\n    var listeners = new Set();\n    var rv = function (newValue) {\n        if (arguments.length > 0) {\n            if (value !== newValue) {\n                value = newValue;\n                caches.forEach(function (cache) {\n                    // Invalidate any fields with custom read functions that\n                    // consumed this variable, so query results involving those\n                    // fields will be recomputed the next time we read them.\n                    getCacheInfo(cache).dep.dirty(rv);\n                    // Broadcast changes to any caches that have previously read\n                    // from this variable.\n                    broadcast(cache);\n                });\n                // Finally, notify any listeners added via rv.onNextChange.\n                var oldListeners = Array.from(listeners);\n                listeners.clear();\n                oldListeners.forEach(function (listener) { return listener(value); });\n            }\n        }\n        else {\n            // When reading from the variable, obtain the current cache from\n            // context via cacheSlot. This isn't entirely foolproof, but it's\n            // the same system that powers varDep.\n            var cache = cacheSlot.getValue();\n            if (cache) {\n                attach(cache);\n                getCacheInfo(cache).dep(rv);\n            }\n        }\n        return value;\n    };\n    rv.onNextChange = function (listener) {\n        listeners.add(listener);\n        return function () {\n            listeners.delete(listener);\n        };\n    };\n    var attach = (rv.attachCache = function (cache) {\n        caches.add(cache);\n        getCacheInfo(cache).vars.add(rv);\n        return rv;\n    });\n    rv.forgetCache = function (cache) { return caches.delete(cache); };\n    return rv;\n}\nfunction broadcast(cache) {\n    if (cache.broadcastWatches) {\n        cache.broadcastWatches();\n    }\n}\n//# sourceMappingURL=reactiveVars.js.map","import { ApolloLink } from \"./ApolloLink.js\";\nexport var execute = ApolloLink.execute;\n//# sourceMappingURL=execute.js.map","import { Observable } from \"./Observable.js\";\n// Like Observable.prototype.map, except that the mapping function can\n// optionally return a Promise (or be async).\nexport function asyncMap(observable, mapFn, catchFn) {\n    return new Observable(function (observer) {\n        var promiseQueue = {\n            // Normally we would initialize promiseQueue to Promise.resolve(), but\n            // in this case, for backwards compatibility, we need to be careful to\n            // invoke the first callback synchronously.\n            then: function (callback) {\n                return new Promise(function (resolve) { return resolve(callback()); });\n            },\n        };\n        function makeCallback(examiner, key) {\n            return function (arg) {\n                if (examiner) {\n                    var both = function () {\n                        // If the observer is closed, we don't want to continue calling the\n                        // mapping function - it's result will be swallowed anyways.\n                        return observer.closed ?\n                            /* will be swallowed */ 0\n                            : examiner(arg);\n                    };\n                    promiseQueue = promiseQueue.then(both, both).then(function (result) { return observer.next(result); }, function (error) { return observer.error(error); });\n                }\n                else {\n                    observer[key](arg);\n                }\n            };\n        }\n        var handler = {\n            next: makeCallback(mapFn, \"next\"),\n            error: makeCallback(catchFn, \"error\"),\n            complete: function () {\n                // no need to reassign `promiseQueue`, after `observer.complete`,\n                // the observer will be closed and short-circuit everything anyways\n                /*promiseQueue = */ promiseQueue.then(function () { return observer.complete(); });\n            },\n        };\n        var sub = observable.subscribe(handler);\n        return function () { return sub.unsubscribe(); };\n    });\n}\n//# sourceMappingURL=asyncMap.js.map","import { isNonEmptyArray } from \"./arrays.js\";\nimport { isExecutionPatchIncrementalResult } from \"./incrementalResult.js\";\nexport function graphQLResultHasError(result) {\n    var errors = getGraphQLErrorsFromResult(result);\n    return isNonEmptyArray(errors);\n}\nexport function getGraphQLErrorsFromResult(result) {\n    var graphQLErrors = isNonEmptyArray(result.errors) ? result.errors.slice(0) : [];\n    if (isExecutionPatchIncrementalResult(result) &&\n        isNonEmptyArray(result.incremental)) {\n        result.incremental.forEach(function (incrementalResult) {\n            if (incrementalResult.errors) {\n                graphQLErrors.push.apply(graphQLErrors, incrementalResult.errors);\n            }\n        });\n    }\n    return graphQLErrors;\n}\n//# sourceMappingURL=errorHandling.js.map","export function iterateObserversSafely(observers, method, argument) {\n    // In case observers is modified during iteration, we need to commit to the\n    // original elements, which also provides an opportunity to filter them down\n    // to just the observers with the given method.\n    var observersWithMethod = [];\n    observers.forEach(function (obs) { return obs[method] && observersWithMethod.push(obs); });\n    observersWithMethod.forEach(function (obs) { return obs[method](argument); });\n}\n//# sourceMappingURL=iteration.js.map","import { Observable } from \"./Observable.js\";\nimport { canUseSymbol } from \"../common/canUse.js\";\n// Generic implementations of Observable.prototype methods like map and\n// filter need to know how to create a new Observable from an Observable\n// subclass (like Concast or ObservableQuery). Those methods assume\n// (perhaps unwisely?) that they can call the subtype's constructor with a\n// Subscriber function, even though the subclass constructor might expect\n// different parameters. Defining this static Symbol.species property on\n// the subclass is a hint to generic Observable code to use the default\n// constructor instead of trying to do `new Subclass(observer => ...)`.\nexport function fixObservableSubclass(subclass) {\n    function set(key) {\n        // Object.defineProperty is necessary because the Symbol.species\n        // property is a getter by default in modern JS environments, so we\n        // can't assign to it with a normal assignment expression.\n        Object.defineProperty(subclass, key, { value: Observable });\n    }\n    if (canUseSymbol && Symbol.species) {\n        set(Symbol.species);\n    }\n    // The \"@@species\" string is used as a fake Symbol.species value in some\n    // polyfill systems (including the SymbolSpecies variable used by\n    // zen-observable), so we should set it as well, to be safe.\n    set(\"@@species\");\n    return subclass;\n}\n//# sourceMappingURL=subclassing.js.map","import { __extends } from \"tslib\";\nimport { Observable } from \"./Observable.js\";\nimport { iterateObserversSafely } from \"./iteration.js\";\nimport { fixObservableSubclass } from \"./subclassing.js\";\nfunction isPromiseLike(value) {\n    return value && typeof value.then === \"function\";\n}\n// A Concast<T> observable concatenates the given sources into a single\n// non-overlapping sequence of Ts, automatically unwrapping any promises,\n// and broadcasts the T elements of that sequence to any number of\n// subscribers, all without creating a bunch of intermediary Observable\n// wrapper objects.\n//\n// Even though any number of observers can subscribe to the Concast, each\n// source observable is guaranteed to receive at most one subscribe call,\n// and the results are multicast to all observers.\n//\n// In addition to broadcasting every next/error message to this.observers,\n// the Concast stores the most recent message using this.latest, so any\n// new observers can immediately receive the latest message, even if it\n// was originally delivered in the past. This behavior means we can assume\n// every active observer in this.observers has received the same most\n// recent message.\n//\n// With the exception of this.latest replay, a Concast is a \"hot\"\n// observable in the sense that it does not replay past results from the\n// beginning of time for each new observer.\n//\n// Could we have used some existing RxJS class instead? Concast<T> is\n// similar to a BehaviorSubject<T>, because it is multicast and redelivers\n// the latest next/error message to new subscribers. Unlike Subject<T>,\n// Concast<T> does not expose an Observer<T> interface (this.handlers is\n// intentionally private), since Concast<T> gets its inputs from the\n// concatenated sources. If we ever switch to RxJS, there may be some\n// value in reusing their code, but for now we use zen-observable, which\n// does not contain any Subject implementations.\nvar Concast = /** @class */ (function (_super) {\n    __extends(Concast, _super);\n    // Not only can the individual elements of the iterable be promises, but\n    // also the iterable itself can be wrapped in a promise.\n    function Concast(sources) {\n        var _this = _super.call(this, function (observer) {\n            _this.addObserver(observer);\n            return function () { return _this.removeObserver(observer); };\n        }) || this;\n        // Active observers receiving broadcast messages. Thanks to this.latest,\n        // we can assume all observers in this Set have received the same most\n        // recent message, though possibly at different times in the past.\n        _this.observers = new Set();\n        _this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        // Bound handler functions that can be reused for every internal\n        // subscription.\n        _this.handlers = {\n            next: function (result) {\n                if (_this.sub !== null) {\n                    _this.latest = [\"next\", result];\n                    _this.notify(\"next\", result);\n                    iterateObserversSafely(_this.observers, \"next\", result);\n                }\n            },\n            error: function (error) {\n                var sub = _this.sub;\n                if (sub !== null) {\n                    // Delay unsubscribing from the underlying subscription slightly,\n                    // so that immediately subscribing another observer can keep the\n                    // subscription active.\n                    if (sub)\n                        setTimeout(function () { return sub.unsubscribe(); });\n                    _this.sub = null;\n                    _this.latest = [\"error\", error];\n                    _this.reject(error);\n                    _this.notify(\"error\", error);\n                    iterateObserversSafely(_this.observers, \"error\", error);\n                }\n            },\n            complete: function () {\n                var _a = _this, sub = _a.sub, _b = _a.sources, sources = _b === void 0 ? [] : _b;\n                if (sub !== null) {\n                    // If complete is called before concast.start, this.sources may be\n                    // undefined, so we use a default value of [] for sources. That works\n                    // here because it falls into the if (!value) {...} block, which\n                    // appropriately terminates the Concast, even if this.sources might\n                    // eventually have been initialized to a non-empty array.\n                    var value = sources.shift();\n                    if (!value) {\n                        if (sub)\n                            setTimeout(function () { return sub.unsubscribe(); });\n                        _this.sub = null;\n                        if (_this.latest && _this.latest[0] === \"next\") {\n                            _this.resolve(_this.latest[1]);\n                        }\n                        else {\n                            _this.resolve();\n                        }\n                        _this.notify(\"complete\");\n                        // We do not store this.latest = [\"complete\"], because doing so\n                        // discards useful information about the previous next (or\n                        // error) message. Instead, if new observers subscribe after\n                        // this Concast has completed, they will receive the final\n                        // 'next' message (unless there was an error) immediately\n                        // followed by a 'complete' message (see addObserver).\n                        iterateObserversSafely(_this.observers, \"complete\");\n                    }\n                    else if (isPromiseLike(value)) {\n                        value.then(function (obs) { return (_this.sub = obs.subscribe(_this.handlers)); }, _this.handlers.error);\n                    }\n                    else {\n                        _this.sub = value.subscribe(_this.handlers);\n                    }\n                }\n            },\n        };\n        _this.nextResultListeners = new Set();\n        // A public way to abort observation and broadcast.\n        _this.cancel = function (reason) {\n            _this.reject(reason);\n            _this.sources = [];\n            _this.handlers.complete();\n        };\n        // Suppress rejection warnings for this.promise, since it's perfectly\n        // acceptable to pay no attention to this.promise if you're consuming\n        // the results through the normal observable API.\n        _this.promise.catch(function (_) { });\n        // If someone accidentally tries to create a Concast using a subscriber\n        // function, recover by creating an Observable from that subscriber and\n        // using it as the source.\n        if (typeof sources === \"function\") {\n            sources = [new Observable(sources)];\n        }\n        if (isPromiseLike(sources)) {\n            sources.then(function (iterable) { return _this.start(iterable); }, _this.handlers.error);\n        }\n        else {\n            _this.start(sources);\n        }\n        return _this;\n    }\n    Concast.prototype.start = function (sources) {\n        if (this.sub !== void 0)\n            return;\n        // In practice, sources is most often simply an Array of observables.\n        // TODO Consider using sources[Symbol.iterator]() to take advantage\n        // of the laziness of non-Array iterables.\n        this.sources = Array.from(sources);\n        // Calling this.handlers.complete() kicks off consumption of the first\n        // source observable. It's tempting to do this step lazily in\n        // addObserver, but this.promise can be accessed without calling\n        // addObserver, so consumption needs to begin eagerly.\n        this.handlers.complete();\n    };\n    Concast.prototype.deliverLastMessage = function (observer) {\n        if (this.latest) {\n            var nextOrError = this.latest[0];\n            var method = observer[nextOrError];\n            if (method) {\n                method.call(observer, this.latest[1]);\n            }\n            // If the subscription is already closed, and the last message was\n            // a 'next' message, simulate delivery of the final 'complete'\n            // message again.\n            if (this.sub === null && nextOrError === \"next\" && observer.complete) {\n                observer.complete();\n            }\n        }\n    };\n    Concast.prototype.addObserver = function (observer) {\n        if (!this.observers.has(observer)) {\n            // Immediately deliver the most recent message, so we can always\n            // be sure all observers have the latest information.\n            this.deliverLastMessage(observer);\n            this.observers.add(observer);\n        }\n    };\n    Concast.prototype.removeObserver = function (observer) {\n        if (this.observers.delete(observer) && this.observers.size < 1) {\n            // In case there are still any listeners in this.nextResultListeners, and\n            // no error or completion has been broadcast yet, make sure those\n            // observers have a chance to run and then remove themselves from\n            // this.observers.\n            this.handlers.complete();\n        }\n    };\n    Concast.prototype.notify = function (method, arg) {\n        var nextResultListeners = this.nextResultListeners;\n        if (nextResultListeners.size) {\n            // Replacing this.nextResultListeners first ensures it does not grow while\n            // we are iterating over it, potentially leading to infinite loops.\n            this.nextResultListeners = new Set();\n            nextResultListeners.forEach(function (listener) { return listener(method, arg); });\n        }\n    };\n    // We need a way to run callbacks just *before* the next result (or error or\n    // completion) is delivered by this Concast, so we can be sure any code that\n    // runs as a result of delivering that result/error observes the effects of\n    // running the callback(s). It was tempting to reuse the Observer type instead\n    // of introducing NextResultListener, but that messes with the sizing and\n    // maintenance of this.observers, and ends up being more code overall.\n    Concast.prototype.beforeNext = function (callback) {\n        var called = false;\n        this.nextResultListeners.add(function (method, arg) {\n            if (!called) {\n                called = true;\n                callback(method, arg);\n            }\n        });\n    };\n    return Concast;\n}(Observable));\nexport { Concast };\n// Necessary because the Concast constructor has a different signature\n// than the Observable constructor.\nfixObservableSubclass(Concast);\n//# sourceMappingURL=Concast.js.map","import { __rest } from \"tslib\";\nimport equal from \"@wry/equality\";\nimport { createFragmentMap, getFragmentDefinitions, getFragmentFromSelection, getMainDefinition, isField, resultKeyNameFromField, shouldInclude, } from \"../utilities/index.js\";\n// Returns true if aResult and bResult are deeply equal according to the fields\n// selected by the given query, ignoring any fields marked as @nonreactive.\nexport function equalByQuery(query, _a, _b, variables) {\n    var aData = _a.data, aRest = __rest(_a, [\"data\"]);\n    var bData = _b.data, bRest = __rest(_b, [\"data\"]);\n    return (equal(aRest, bRest) &&\n        equalBySelectionSet(getMainDefinition(query).selectionSet, aData, bData, {\n            fragmentMap: createFragmentMap(getFragmentDefinitions(query)),\n            variables: variables,\n        }));\n}\nfunction equalBySelectionSet(selectionSet, aResult, bResult, context) {\n    if (aResult === bResult) {\n        return true;\n    }\n    var seenSelections = new Set();\n    // Returning true from this Array.prototype.every callback function skips the\n    // current field/subtree. Returning false aborts the entire traversal\n    // immediately, causing equalBySelectionSet to return false.\n    return selectionSet.selections.every(function (selection) {\n        // Avoid re-processing the same selection at the same level of recursion, in\n        // case the same field gets included via multiple indirect fragment spreads.\n        if (seenSelections.has(selection))\n            return true;\n        seenSelections.add(selection);\n        // Ignore @skip(if: true) and @include(if: false) fields.\n        if (!shouldInclude(selection, context.variables))\n            return true;\n        // If the field or (named) fragment spread has a @nonreactive directive on\n        // it, we don't care if it's different, so we pretend it's the same.\n        if (selectionHasNonreactiveDirective(selection))\n            return true;\n        if (isField(selection)) {\n            var resultKey = resultKeyNameFromField(selection);\n            var aResultChild = aResult && aResult[resultKey];\n            var bResultChild = bResult && bResult[resultKey];\n            var childSelectionSet = selection.selectionSet;\n            if (!childSelectionSet) {\n                // These are scalar values, so we can compare them with deep equal\n                // without redoing the main recursive work.\n                return equal(aResultChild, bResultChild);\n            }\n            var aChildIsArray = Array.isArray(aResultChild);\n            var bChildIsArray = Array.isArray(bResultChild);\n            if (aChildIsArray !== bChildIsArray)\n                return false;\n            if (aChildIsArray && bChildIsArray) {\n                var length_1 = aResultChild.length;\n                if (bResultChild.length !== length_1) {\n                    return false;\n                }\n                for (var i = 0; i < length_1; ++i) {\n                    if (!equalBySelectionSet(childSelectionSet, aResultChild[i], bResultChild[i], context)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            return equalBySelectionSet(childSelectionSet, aResultChild, bResultChild, context);\n        }\n        else {\n            var fragment = getFragmentFromSelection(selection, context.fragmentMap);\n            if (fragment) {\n                // The fragment might === selection if it's an inline fragment, but\n                // could be !== if it's a named fragment ...spread.\n                if (selectionHasNonreactiveDirective(fragment))\n                    return true;\n                return equalBySelectionSet(fragment.selectionSet, \n                // Notice that we reuse the same aResult and bResult values here,\n                // since the fragment ...spread does not specify a field name, but\n                // consists of multiple fields (within the fragment's selection set)\n                // that should be applied to the current result value(s).\n                aResult, bResult, context);\n            }\n        }\n    });\n}\nfunction selectionHasNonreactiveDirective(selection) {\n    return (!!selection.directives && selection.directives.some(directiveIsNonreactive));\n}\nfunction directiveIsNonreactive(dir) {\n    return dir.name.value === \"nonreactive\";\n}\n//# sourceMappingURL=equalByQuery.js.map","import { __assign, __extends } from \"tslib\";\nimport { invariant } from \"../utilities/globals/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\nimport { cloneDeep, compact, getOperationDefinition, Observable, iterateObserversSafely, fixObservableSubclass, getQueryDefinition, } from \"../utilities/index.js\";\nimport { equalByQuery } from \"./equalByQuery.js\";\nvar assign = Object.assign, hasOwnProperty = Object.hasOwnProperty;\nvar ObservableQuery = /** @class */ (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var queryManager = _a.queryManager, queryInfo = _a.queryInfo, options = _a.options;\n        var _this = _super.call(this, function (observer) {\n            // Zen Observable has its own error function, so in order to log correctly\n            // we need to provide a custom error callback.\n            try {\n                var subObserver = observer._subscription._observer;\n                if (subObserver && !subObserver.error) {\n                    subObserver.error = defaultSubscriptionObserverErrorCallback;\n                }\n            }\n            catch (_a) { }\n            var first = !_this.observers.size;\n            _this.observers.add(observer);\n            // Deliver most recent error or result.\n            var last = _this.last;\n            if (last && last.error) {\n                observer.error && observer.error(last.error);\n            }\n            else if (last && last.result) {\n                observer.next && observer.next(last.result);\n            }\n            // Initiate observation of this query if it hasn't been reported to\n            // the QueryManager yet.\n            if (first) {\n                // Blindly catching here prevents unhandled promise rejections,\n                // and is safe because the ObservableQuery handles this error with\n                // this.observer.error, so we're not just swallowing the error by\n                // ignoring it here.\n                _this.reobserve().catch(function () { });\n            }\n            return function () {\n                if (_this.observers.delete(observer) && !_this.observers.size) {\n                    _this.tearDownQuery();\n                }\n            };\n        }) || this;\n        _this.observers = new Set();\n        _this.subscriptions = new Set();\n        // related classes\n        _this.queryInfo = queryInfo;\n        _this.queryManager = queryManager;\n        // active state\n        _this.waitForOwnResult = skipCacheDataFor(options.fetchPolicy);\n        _this.isTornDown = false;\n        var _b = queryManager.defaultOptions.watchQuery, _c = _b === void 0 ? {} : _b, _d = _c.fetchPolicy, defaultFetchPolicy = _d === void 0 ? \"cache-first\" : _d;\n        var _e = options.fetchPolicy, fetchPolicy = _e === void 0 ? defaultFetchPolicy : _e, \n        // Make sure we don't store \"standby\" as the initialFetchPolicy.\n        _f = options.initialFetchPolicy, \n        // Make sure we don't store \"standby\" as the initialFetchPolicy.\n        initialFetchPolicy = _f === void 0 ? fetchPolicy === \"standby\" ? defaultFetchPolicy : (fetchPolicy) : _f;\n        _this.options = __assign(__assign({}, options), { \n            // Remember the initial options.fetchPolicy so we can revert back to this\n            // policy when variables change. This information can also be specified\n            // (or overridden) by providing options.initialFetchPolicy explicitly.\n            initialFetchPolicy: initialFetchPolicy, \n            // This ensures this.options.fetchPolicy always has a string value, in\n            // case options.fetchPolicy was not provided.\n            fetchPolicy: fetchPolicy });\n        _this.queryId = queryInfo.queryId || queryManager.generateQueryId();\n        var opDef = getOperationDefinition(_this.query);\n        _this.queryName = opDef && opDef.name && opDef.name.value;\n        return _this;\n    }\n    Object.defineProperty(ObservableQuery.prototype, \"query\", {\n        // The `query` computed property will always reflect the document transformed\n        // by the last run query. `this.options.query` will always reflect the raw\n        // untransformed query to ensure document transforms with runtime conditionals\n        // are run on the original document.\n        get: function () {\n            return this.lastQuery || this.options.query;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ObservableQuery.prototype, \"variables\", {\n        // Computed shorthand for this.options.variables, preserved for\n        // backwards compatibility.\n        /**\n         * An object containing the variables that were provided for the query.\n         */\n        get: function () {\n            return this.options.variables;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ObservableQuery.prototype.result = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            // TODO: this code doesn’t actually make sense insofar as the observer\n            // will never exist in this.observers due how zen-observable wraps observables.\n            // https://github.com/zenparsing/zen-observable/blob/master/src/Observable.js#L169\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    // Stop the query within the QueryManager if we can before\n                    // this function returns.\n                    //\n                    // We do this in order to prevent observers piling up within\n                    // the QueryManager. Notice that we only fully unsubscribe\n                    // from the subscription in a setTimeout(..., 0)  call. This call can\n                    // actually be handled by the browser at a much later time. If queries\n                    // are fired in the meantime, observers that should have been removed\n                    // from the QueryManager will continue to fire, causing an unnecessary\n                    // performance hit.\n                    _this.observers.delete(observer);\n                    if (!_this.observers.size) {\n                        _this.queryManager.removeQuery(_this.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: reject,\n            };\n            var subscription = _this.subscribe(observer);\n        });\n    };\n    /** @internal */\n    ObservableQuery.prototype.resetDiff = function () {\n        this.queryInfo.resetDiff();\n    };\n    ObservableQuery.prototype.getCurrentResult = function (saveAsLastResult) {\n        if (saveAsLastResult === void 0) { saveAsLastResult = true; }\n        // Use the last result as long as the variables match this.variables.\n        var lastResult = this.getLastResult(true);\n        var networkStatus = this.queryInfo.networkStatus ||\n            (lastResult && lastResult.networkStatus) ||\n            NetworkStatus.ready;\n        var result = __assign(__assign({}, lastResult), { loading: isNetworkRequestInFlight(networkStatus), networkStatus: networkStatus });\n        var _a = this.options.fetchPolicy, fetchPolicy = _a === void 0 ? \"cache-first\" : _a;\n        if (\n        // These fetch policies should never deliver data from the cache, unless\n        // redelivering a previously delivered result.\n        skipCacheDataFor(fetchPolicy) ||\n            // If this.options.query has @client(always: true) fields, we cannot\n            // trust diff.result, since it was read from the cache without running\n            // local resolvers (and it's too late to run resolvers now, since we must\n            // return a result synchronously).\n            this.queryManager.getDocumentInfo(this.query).hasForcedResolvers) {\n            // Fall through.\n        }\n        else if (this.waitForOwnResult) {\n            // This would usually be a part of `QueryInfo.getDiff()`.\n            // which we skip in the waitForOwnResult case since we are not\n            // interested in the diff.\n            this.queryInfo[\"updateWatch\"]();\n        }\n        else {\n            var diff = this.queryInfo.getDiff();\n            if (diff.complete || this.options.returnPartialData) {\n                result.data = diff.result;\n            }\n            if (equal(result.data, {})) {\n                result.data = void 0;\n            }\n            if (diff.complete) {\n                // Similar to setting result.partial to false, but taking advantage of the\n                // falsiness of missing fields.\n                delete result.partial;\n                // If the diff is complete, and we're using a FetchPolicy that\n                // terminates after a complete cache read, we can assume the next result\n                // we receive will have NetworkStatus.ready and !loading.\n                if (diff.complete &&\n                    result.networkStatus === NetworkStatus.loading &&\n                    (fetchPolicy === \"cache-first\" || fetchPolicy === \"cache-only\")) {\n                    result.networkStatus = NetworkStatus.ready;\n                    result.loading = false;\n                }\n            }\n            else {\n                result.partial = true;\n            }\n            if (globalThis.__DEV__ !== false &&\n                !diff.complete &&\n                !this.options.partialRefetch &&\n                !result.loading &&\n                !result.data &&\n                !result.error) {\n                logMissingFieldErrors(diff.missing);\n            }\n        }\n        if (saveAsLastResult) {\n            this.updateLastResult(result);\n        }\n        return result;\n    };\n    // Compares newResult to the snapshot we took of this.lastResult when it was\n    // first received.\n    ObservableQuery.prototype.isDifferentFromLastResult = function (newResult, variables) {\n        if (!this.last) {\n            return true;\n        }\n        var resultIsDifferent = this.queryManager.getDocumentInfo(this.query).hasNonreactiveDirective ?\n            !equalByQuery(this.query, this.last.result, newResult, this.variables)\n            : !equal(this.last.result, newResult);\n        return (resultIsDifferent || (variables && !equal(this.last.variables, variables)));\n    };\n    ObservableQuery.prototype.getLast = function (key, variablesMustMatch) {\n        var last = this.last;\n        if (last &&\n            last[key] &&\n            (!variablesMustMatch || equal(last.variables, this.variables))) {\n            return last[key];\n        }\n    };\n    ObservableQuery.prototype.getLastResult = function (variablesMustMatch) {\n        return this.getLast(\"result\", variablesMustMatch);\n    };\n    ObservableQuery.prototype.getLastError = function (variablesMustMatch) {\n        return this.getLast(\"error\", variablesMustMatch);\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.last;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.resetQueryStoreErrors = function () {\n        this.queryManager.resetErrors(this.queryId);\n    };\n    /**\n     * Update the variables of this observable query, and fetch the new results.\n     * This method should be preferred over `setVariables` in most use cases.\n     *\n     * @param variables - The new set of variables. If there are missing variables,\n     * the previous values of those variables will be used.\n     */\n    ObservableQuery.prototype.refetch = function (variables) {\n        var _a;\n        var reobserveOptions = {\n            // Always disable polling for refetches.\n            pollInterval: 0,\n        };\n        // Unless the provided fetchPolicy always consults the network\n        // (no-cache, network-only, or cache-and-network), override it with\n        // network-only to force the refetch for this fetchQuery call.\n        var fetchPolicy = this.options.fetchPolicy;\n        if (fetchPolicy === \"cache-and-network\") {\n            reobserveOptions.fetchPolicy = fetchPolicy;\n        }\n        else if (fetchPolicy === \"no-cache\") {\n            reobserveOptions.fetchPolicy = \"no-cache\";\n        }\n        else {\n            reobserveOptions.fetchPolicy = \"network-only\";\n        }\n        if (globalThis.__DEV__ !== false && variables && hasOwnProperty.call(variables, \"variables\")) {\n            var queryDef = getQueryDefinition(this.query);\n            var vars = queryDef.variableDefinitions;\n            if (!vars || !vars.some(function (v) { return v.variable.name.value === \"variables\"; })) {\n                globalThis.__DEV__ !== false && invariant.warn(\n                    20,\n                    variables,\n                    ((_a = queryDef.name) === null || _a === void 0 ? void 0 : _a.value) || queryDef\n                );\n            }\n        }\n        if (variables && !equal(this.options.variables, variables)) {\n            // Update the existing options with new variables\n            reobserveOptions.variables = this.options.variables = __assign(__assign({}, this.options.variables), variables);\n        }\n        this.queryInfo.resetLastWrite();\n        return this.reobserve(reobserveOptions, NetworkStatus.refetch);\n    };\n    /**\n     * A function that helps you fetch the next set of results for a [paginated list field](https://www.apollographql.com/docs/react/pagination/core-api/).\n     */\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        var combinedOptions = __assign(__assign({}, (fetchMoreOptions.query ? fetchMoreOptions : (__assign(__assign(__assign(__assign({}, this.options), { query: this.options.query }), fetchMoreOptions), { variables: __assign(__assign({}, this.options.variables), fetchMoreOptions.variables) })))), { \n            // The fetchMore request goes immediately to the network and does\n            // not automatically write its result to the cache (hence no-cache\n            // instead of network-only), because we allow the caller of\n            // fetchMore to provide an updateQuery callback that determines how\n            // the data gets written to the cache.\n            fetchPolicy: \"no-cache\" });\n        combinedOptions.query = this.transformDocument(combinedOptions.query);\n        var qid = this.queryManager.generateQueryId();\n        // If a temporary query is passed to `fetchMore`, we don't want to store\n        // it as the last query result since it may be an optimized query for\n        // pagination. We will however run the transforms on the original document\n        // as well as the document passed in `fetchMoreOptions` to ensure the cache\n        // uses the most up-to-date document which may rely on runtime conditionals.\n        this.lastQuery =\n            fetchMoreOptions.query ?\n                this.transformDocument(this.options.query)\n                : combinedOptions.query;\n        // Simulate a loading result for the original query with\n        // result.networkStatus === NetworkStatus.fetchMore.\n        var queryInfo = this.queryInfo;\n        var originalNetworkStatus = queryInfo.networkStatus;\n        queryInfo.networkStatus = NetworkStatus.fetchMore;\n        if (combinedOptions.notifyOnNetworkStatusChange) {\n            this.observe();\n        }\n        var updatedQuerySet = new Set();\n        return this.queryManager\n            .fetchQuery(qid, combinedOptions, NetworkStatus.fetchMore)\n            .then(function (fetchMoreResult) {\n            _this.queryManager.removeQuery(qid);\n            if (queryInfo.networkStatus === NetworkStatus.fetchMore) {\n                queryInfo.networkStatus = originalNetworkStatus;\n            }\n            // Performing this cache update inside a cache.batch transaction ensures\n            // any affected cache.watch watchers are notified at most once about any\n            // updates. Most watchers will be using the QueryInfo class, which\n            // responds to notifications by calling reobserveCacheFirst to deliver\n            // fetchMore cache results back to this ObservableQuery.\n            _this.queryManager.cache.batch({\n                update: function (cache) {\n                    var updateQuery = fetchMoreOptions.updateQuery;\n                    if (updateQuery) {\n                        cache.updateQuery({\n                            query: _this.query,\n                            variables: _this.variables,\n                            returnPartialData: true,\n                            optimistic: false,\n                        }, function (previous) {\n                            return updateQuery(previous, {\n                                fetchMoreResult: fetchMoreResult.data,\n                                variables: combinedOptions.variables,\n                            });\n                        });\n                    }\n                    else {\n                        // If we're using a field policy instead of updateQuery, the only\n                        // thing we need to do is write the new data to the cache using\n                        // combinedOptions.variables (instead of this.variables, which is\n                        // what this.updateQuery uses, because it works by abusing the\n                        // original field value, keyed by the original variables).\n                        cache.writeQuery({\n                            query: combinedOptions.query,\n                            variables: combinedOptions.variables,\n                            data: fetchMoreResult.data,\n                        });\n                    }\n                },\n                onWatchUpdated: function (watch) {\n                    // Record the DocumentNode associated with any watched query whose\n                    // data were updated by the cache writes above.\n                    updatedQuerySet.add(watch.query);\n                },\n            });\n            return fetchMoreResult;\n        })\n            .finally(function () {\n            // In case the cache writes above did not generate a broadcast\n            // notification (which would have been intercepted by onWatchUpdated),\n            // likely because the written data were the same as what was already in\n            // the cache, we still want fetchMore to deliver its final loading:false\n            // result with the unchanged data.\n            if (!updatedQuerySet.has(_this.query)) {\n                reobserveCacheFirst(_this);\n            }\n        });\n    };\n    // XXX the subscription variables are separate from the query variables.\n    // if you want to update subscription variables, right now you have to do that separately,\n    // and you can only do it by stopping the subscription and then subscribing again with new variables.\n    /**\n     * A function that enables you to execute a [subscription](https://www.apollographql.com/docs/react/data/subscriptions/), usually to subscribe to specific fields that were included in the query.\n     *\n     * This function returns _another_ function that you can call to terminate the subscription.\n     */\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n            context: options.context,\n        })\n            .subscribe({\n            next: function (subscriptionData) {\n                var updateQuery = options.updateQuery;\n                if (updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return updateQuery(previous, {\n                            subscriptionData: subscriptionData,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                globalThis.__DEV__ !== false && invariant.error(21, err);\n            },\n        });\n        this.subscriptions.add(subscription);\n        return function () {\n            if (_this.subscriptions.delete(subscription)) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n    ObservableQuery.prototype.setOptions = function (newOptions) {\n        return this.reobserve(newOptions);\n    };\n    ObservableQuery.prototype.silentSetOptions = function (newOptions) {\n        var mergedOptions = compact(this.options, newOptions || {});\n        assign(this.options, mergedOptions);\n    };\n    /**\n     * Update the variables of this observable query, and fetch the new results\n     * if they've changed. Most users should prefer `refetch` instead of\n     * `setVariables` in order to to be properly notified of results even when\n     * they come from the cache.\n     *\n     * Note: the `next` callback will *not* fire if the variables have not changed\n     * or if the result is coming from cache.\n     *\n     * Note: the promise will return the old results immediately if the variables\n     * have not changed.\n     *\n     * Note: the promise will return null immediately if the query is not active\n     * (there are no subscribers).\n     *\n     * @param variables - The new set of variables. If there are missing variables,\n     * the previous values of those variables will be used.\n     */\n    ObservableQuery.prototype.setVariables = function (variables) {\n        if (equal(this.variables, variables)) {\n            // If we have no observers, then we don't actually want to make a network\n            // request. As soon as someone observes the query, the request will kick\n            // off. For now, we just store any changes. (See #1077)\n            return this.observers.size ? this.result() : Promise.resolve();\n        }\n        this.options.variables = variables;\n        // See comment above\n        if (!this.observers.size) {\n            return Promise.resolve();\n        }\n        return this.reobserve({\n            // Reset options.fetchPolicy to its original value.\n            fetchPolicy: this.options.initialFetchPolicy,\n            variables: variables,\n        }, NetworkStatus.setVariables);\n    };\n    /**\n     * A function that enables you to update the query's cached result without executing a followup GraphQL operation.\n     *\n     * See [using updateQuery and updateFragment](https://www.apollographql.com/docs/react/caching/cache-interaction/#using-updatequery-and-updatefragment) for additional information.\n     */\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var queryManager = this.queryManager;\n        var result = queryManager.cache.diff({\n            query: this.options.query,\n            variables: this.variables,\n            returnPartialData: true,\n            optimistic: false,\n        }).result;\n        var newResult = mapFn(result, {\n            variables: this.variables,\n        });\n        if (newResult) {\n            queryManager.cache.writeQuery({\n                query: this.options.query,\n                data: newResult,\n                variables: this.variables,\n            });\n            queryManager.broadcastQueries();\n        }\n    };\n    /**\n     * A function that instructs the query to begin re-executing at a specified interval (in milliseconds).\n     */\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        this.options.pollInterval = pollInterval;\n        this.updatePolling();\n    };\n    /**\n     * A function that instructs the query to stop polling after a previous call to `startPolling`.\n     */\n    ObservableQuery.prototype.stopPolling = function () {\n        this.options.pollInterval = 0;\n        this.updatePolling();\n    };\n    // Update options.fetchPolicy according to options.nextFetchPolicy.\n    ObservableQuery.prototype.applyNextFetchPolicy = function (reason, \n    // It's possible to use this method to apply options.nextFetchPolicy to\n    // options.fetchPolicy even if options !== this.options, though that happens\n    // most often when the options are temporary, used for only one request and\n    // then thrown away, so nextFetchPolicy may not end up mattering.\n    options) {\n        if (options.nextFetchPolicy) {\n            var _a = options.fetchPolicy, fetchPolicy = _a === void 0 ? \"cache-first\" : _a, _b = options.initialFetchPolicy, initialFetchPolicy = _b === void 0 ? fetchPolicy : _b;\n            if (fetchPolicy === \"standby\") {\n                // Do nothing, leaving options.fetchPolicy unchanged.\n            }\n            else if (typeof options.nextFetchPolicy === \"function\") {\n                // When someone chooses \"cache-and-network\" or \"network-only\" as their\n                // initial FetchPolicy, they often do not want future cache updates to\n                // trigger unconditional network requests, which is what repeatedly\n                // applying the \"cache-and-network\" or \"network-only\" policies would\n                // seem to imply. Instead, when the cache reports an update after the\n                // initial network request, it may be desirable for subsequent network\n                // requests to be triggered only if the cache result is incomplete. To\n                // that end, the options.nextFetchPolicy option provides an easy way to\n                // update options.fetchPolicy after the initial network request, without\n                // having to call observableQuery.setOptions.\n                options.fetchPolicy = options.nextFetchPolicy(fetchPolicy, {\n                    reason: reason,\n                    options: options,\n                    observable: this,\n                    initialFetchPolicy: initialFetchPolicy,\n                });\n            }\n            else if (reason === \"variables-changed\") {\n                options.fetchPolicy = initialFetchPolicy;\n            }\n            else {\n                options.fetchPolicy = options.nextFetchPolicy;\n            }\n        }\n        return options.fetchPolicy;\n    };\n    ObservableQuery.prototype.fetch = function (options, newNetworkStatus, query) {\n        // TODO Make sure we update the networkStatus (and infer fetchVariables)\n        // before actually committing to the fetch.\n        this.queryManager.setObservableQuery(this);\n        return this.queryManager[\"fetchConcastWithInfo\"](this.queryId, options, newNetworkStatus, query);\n    };\n    // Turns polling on or off based on this.options.pollInterval.\n    ObservableQuery.prototype.updatePolling = function () {\n        var _this = this;\n        // Avoid polling in SSR mode\n        if (this.queryManager.ssrMode) {\n            return;\n        }\n        var _a = this, pollingInfo = _a.pollingInfo, pollInterval = _a.options.pollInterval;\n        if (!pollInterval) {\n            if (pollingInfo) {\n                clearTimeout(pollingInfo.timeout);\n                delete this.pollingInfo;\n            }\n            return;\n        }\n        if (pollingInfo && pollingInfo.interval === pollInterval) {\n            return;\n        }\n        invariant(pollInterval, 22);\n        var info = pollingInfo || (this.pollingInfo = {});\n        info.interval = pollInterval;\n        var maybeFetch = function () {\n            var _a, _b;\n            if (_this.pollingInfo) {\n                if (!isNetworkRequestInFlight(_this.queryInfo.networkStatus) &&\n                    !((_b = (_a = _this.options).skipPollAttempt) === null || _b === void 0 ? void 0 : _b.call(_a))) {\n                    _this.reobserve({\n                        // Most fetchPolicy options don't make sense to use in a polling context, as\n                        // users wouldn't want to be polling the cache directly. However, network-only and\n                        // no-cache are both useful for when the user wants to control whether or not the\n                        // polled results are written to the cache.\n                        fetchPolicy: _this.options.initialFetchPolicy === \"no-cache\" ?\n                            \"no-cache\"\n                            : \"network-only\",\n                    }, NetworkStatus.poll).then(poll, poll);\n                }\n                else {\n                    poll();\n                }\n            }\n        };\n        var poll = function () {\n            var info = _this.pollingInfo;\n            if (info) {\n                clearTimeout(info.timeout);\n                info.timeout = setTimeout(maybeFetch, info.interval);\n            }\n        };\n        poll();\n    };\n    ObservableQuery.prototype.updateLastResult = function (newResult, variables) {\n        if (variables === void 0) { variables = this.variables; }\n        var error = this.getLastError();\n        // Preserve this.last.error unless the variables have changed.\n        if (error && this.last && !equal(variables, this.last.variables)) {\n            error = void 0;\n        }\n        return (this.last = __assign({ result: this.queryManager.assumeImmutableResults ?\n                newResult\n                : cloneDeep(newResult), variables: variables }, (error ? { error: error } : null)));\n    };\n    ObservableQuery.prototype.reobserveAsConcast = function (newOptions, newNetworkStatus) {\n        var _this = this;\n        this.isTornDown = false;\n        var useDisposableConcast = \n        // Refetching uses a disposable Concast to allow refetches using different\n        // options/variables, without permanently altering the options of the\n        // original ObservableQuery.\n        newNetworkStatus === NetworkStatus.refetch ||\n            // The fetchMore method does not actually call the reobserve method, but,\n            // if it did, it would definitely use a disposable Concast.\n            newNetworkStatus === NetworkStatus.fetchMore ||\n            // Polling uses a disposable Concast so the polling options (which force\n            // fetchPolicy to be \"network-only\" or \"no-cache\") won't override the original options.\n            newNetworkStatus === NetworkStatus.poll;\n        // Save the old variables, since Object.assign may modify them below.\n        var oldVariables = this.options.variables;\n        var oldFetchPolicy = this.options.fetchPolicy;\n        var mergedOptions = compact(this.options, newOptions || {});\n        var options = useDisposableConcast ?\n            // Disposable Concast fetches receive a shallow copy of this.options\n            // (merged with newOptions), leaving this.options unmodified.\n            mergedOptions\n            : assign(this.options, mergedOptions);\n        // Don't update options.query with the transformed query to avoid\n        // overwriting this.options.query when we aren't using a disposable concast.\n        // We want to ensure we can re-run the custom document transforms the next\n        // time a request is made against the original query.\n        var query = this.transformDocument(options.query);\n        this.lastQuery = query;\n        if (!useDisposableConcast) {\n            // We can skip calling updatePolling if we're not changing this.options.\n            this.updatePolling();\n            // Reset options.fetchPolicy to its original value when variables change,\n            // unless a new fetchPolicy was provided by newOptions.\n            if (newOptions &&\n                newOptions.variables &&\n                !equal(newOptions.variables, oldVariables) &&\n                // Don't mess with the fetchPolicy if it's currently \"standby\".\n                options.fetchPolicy !== \"standby\" &&\n                // If we're changing the fetchPolicy anyway, don't try to change it here\n                // using applyNextFetchPolicy. The explicit options.fetchPolicy wins.\n                options.fetchPolicy === oldFetchPolicy) {\n                this.applyNextFetchPolicy(\"variables-changed\", options);\n                if (newNetworkStatus === void 0) {\n                    newNetworkStatus = NetworkStatus.setVariables;\n                }\n            }\n        }\n        this.waitForOwnResult && (this.waitForOwnResult = skipCacheDataFor(options.fetchPolicy));\n        var finishWaitingForOwnResult = function () {\n            if (_this.concast === concast) {\n                _this.waitForOwnResult = false;\n            }\n        };\n        var variables = options.variables && __assign({}, options.variables);\n        var _a = this.fetch(options, newNetworkStatus, query), concast = _a.concast, fromLink = _a.fromLink;\n        var observer = {\n            next: function (result) {\n                if (equal(_this.variables, variables)) {\n                    finishWaitingForOwnResult();\n                    _this.reportResult(result, variables);\n                }\n            },\n            error: function (error) {\n                if (equal(_this.variables, variables)) {\n                    finishWaitingForOwnResult();\n                    _this.reportError(error, variables);\n                }\n            },\n        };\n        if (!useDisposableConcast && (fromLink || !this.concast)) {\n            // We use the {add,remove}Observer methods directly to avoid wrapping\n            // observer with an unnecessary SubscriptionObserver object.\n            if (this.concast && this.observer) {\n                this.concast.removeObserver(this.observer);\n            }\n            this.concast = concast;\n            this.observer = observer;\n        }\n        concast.addObserver(observer);\n        return concast;\n    };\n    ObservableQuery.prototype.reobserve = function (newOptions, newNetworkStatus) {\n        return this.reobserveAsConcast(newOptions, newNetworkStatus)\n            .promise;\n    };\n    ObservableQuery.prototype.resubscribeAfterError = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // If `lastError` is set in the current when the subscription is re-created,\n        // the subscription will immediately receive the error, which will\n        // cause it to terminate again. To avoid this, we first clear\n        // the last error/result from the `observableQuery` before re-starting\n        // the subscription, and restore the last value afterwards so that the\n        // subscription has a chance to stay open.\n        var last = this.last;\n        this.resetLastResults();\n        var subscription = this.subscribe.apply(this, args);\n        this.last = last;\n        return subscription;\n    };\n    // (Re)deliver the current result to this.observers without applying fetch\n    // policies or making network requests.\n    ObservableQuery.prototype.observe = function () {\n        this.reportResult(\n        // Passing false is important so that this.getCurrentResult doesn't\n        // save the fetchMore result as this.lastResult, causing it to be\n        // ignored due to the this.isDifferentFromLastResult check in\n        // this.reportResult.\n        this.getCurrentResult(false), this.variables);\n    };\n    ObservableQuery.prototype.reportResult = function (result, variables) {\n        var lastError = this.getLastError();\n        var isDifferent = this.isDifferentFromLastResult(result, variables);\n        // Update the last result even when isDifferentFromLastResult returns false,\n        // because the query may be using the @nonreactive directive, and we want to\n        // save the the latest version of any nonreactive subtrees (in case\n        // getCurrentResult is called), even though we skip broadcasting changes.\n        if (lastError || !result.partial || this.options.returnPartialData) {\n            this.updateLastResult(result, variables);\n        }\n        if (lastError || isDifferent) {\n            iterateObserversSafely(this.observers, \"next\", result);\n        }\n    };\n    ObservableQuery.prototype.reportError = function (error, variables) {\n        // Since we don't get the current result on errors, only the error, we\n        // must mirror the updates that occur in QueryStore.markQueryError here\n        var errorResult = __assign(__assign({}, this.getLastResult()), { error: error, errors: error.graphQLErrors, networkStatus: NetworkStatus.error, loading: false });\n        this.updateLastResult(errorResult, variables);\n        iterateObserversSafely(this.observers, \"error\", (this.last.error = error));\n    };\n    ObservableQuery.prototype.hasObservers = function () {\n        return this.observers.size > 0;\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        if (this.isTornDown)\n            return;\n        if (this.concast && this.observer) {\n            this.concast.removeObserver(this.observer);\n            delete this.concast;\n            delete this.observer;\n        }\n        this.stopPolling();\n        // stop all active GraphQL subscriptions\n        this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptions.clear();\n        this.queryManager.stopQuery(this.queryId);\n        this.observers.clear();\n        this.isTornDown = true;\n    };\n    ObservableQuery.prototype.transformDocument = function (document) {\n        return this.queryManager.transform(document);\n    };\n    return ObservableQuery;\n}(Observable));\nexport { ObservableQuery };\n// Necessary because the ObservableQuery constructor has a different\n// signature than the Observable constructor.\nfixObservableSubclass(ObservableQuery);\n// Reobserve with fetchPolicy effectively set to \"cache-first\", triggering\n// delivery of any new data from the cache, possibly falling back to the network\n// if any cache data are missing. This allows _complete_ cache results to be\n// delivered without also kicking off unnecessary network requests when\n// this.options.fetchPolicy is \"cache-and-network\" or \"network-only\". When\n// this.options.fetchPolicy is any other policy (\"cache-first\", \"cache-only\",\n// \"standby\", or \"no-cache\"), we call this.reobserve() as usual.\nexport function reobserveCacheFirst(obsQuery) {\n    var _a = obsQuery.options, fetchPolicy = _a.fetchPolicy, nextFetchPolicy = _a.nextFetchPolicy;\n    if (fetchPolicy === \"cache-and-network\" || fetchPolicy === \"network-only\") {\n        return obsQuery.reobserve({\n            fetchPolicy: \"cache-first\",\n            // Use a temporary nextFetchPolicy function that replaces itself with the\n            // previous nextFetchPolicy value and returns the original fetchPolicy.\n            nextFetchPolicy: function (currentFetchPolicy, context) {\n                // Replace this nextFetchPolicy function in the options object with the\n                // original this.options.nextFetchPolicy value.\n                this.nextFetchPolicy = nextFetchPolicy;\n                // If the original nextFetchPolicy value was a function, give it a\n                // chance to decide what happens here.\n                if (typeof this.nextFetchPolicy === \"function\") {\n                    return this.nextFetchPolicy(currentFetchPolicy, context);\n                }\n                // Otherwise go back to the original this.options.fetchPolicy.\n                return fetchPolicy;\n            },\n        });\n    }\n    return obsQuery.reobserve();\n}\nfunction defaultSubscriptionObserverErrorCallback(error) {\n    globalThis.__DEV__ !== false && invariant.error(23, error.message, error.stack);\n}\nexport function logMissingFieldErrors(missing) {\n    if (globalThis.__DEV__ !== false && missing) {\n        globalThis.__DEV__ !== false && invariant.debug(24, missing);\n    }\n}\nfunction skipCacheDataFor(fetchPolicy /* `undefined` would mean `\"cache-first\"` */) {\n    return (fetchPolicy === \"network-only\" ||\n        fetchPolicy === \"no-cache\" ||\n        fetchPolicy === \"standby\");\n}\n//# sourceMappingURL=ObservableQuery.js.map","import { __assign, __awaiter, __generator } from \"tslib\";\nimport { invariant } from \"../utilities/globals/index.js\";\nimport { visit, BREAK, isSelectionNode } from \"graphql\";\nimport { argumentsObjectFromField, buildQueryFromSelectionSet, createFragmentMap, getFragmentDefinitions, getMainDefinition, hasDirectives, isField, isInlineFragment, mergeDeep, mergeDeepArray, removeClientSetsFromDocument, resultKeyNameFromField, shouldInclude, } from \"../utilities/index.js\";\nimport { cacheSlot } from \"../cache/index.js\";\nvar LocalState = /** @class */ (function () {\n    function LocalState(_a) {\n        var cache = _a.cache, client = _a.client, resolvers = _a.resolvers, fragmentMatcher = _a.fragmentMatcher;\n        this.selectionsToResolveCache = new WeakMap();\n        this.cache = cache;\n        if (client) {\n            this.client = client;\n        }\n        if (resolvers) {\n            this.addResolvers(resolvers);\n        }\n        if (fragmentMatcher) {\n            this.setFragmentMatcher(fragmentMatcher);\n        }\n    }\n    LocalState.prototype.addResolvers = function (resolvers) {\n        var _this = this;\n        this.resolvers = this.resolvers || {};\n        if (Array.isArray(resolvers)) {\n            resolvers.forEach(function (resolverGroup) {\n                _this.resolvers = mergeDeep(_this.resolvers, resolverGroup);\n            });\n        }\n        else {\n            this.resolvers = mergeDeep(this.resolvers, resolvers);\n        }\n    };\n    LocalState.prototype.setResolvers = function (resolvers) {\n        this.resolvers = {};\n        this.addResolvers(resolvers);\n    };\n    LocalState.prototype.getResolvers = function () {\n        return this.resolvers || {};\n    };\n    // Run local client resolvers against the incoming query and remote data.\n    // Locally resolved field values are merged with the incoming remote data,\n    // and returned. Note that locally resolved fields will overwrite\n    // remote data using the same field name.\n    LocalState.prototype.runResolvers = function (_a) {\n        var document = _a.document, remoteResult = _a.remoteResult, context = _a.context, variables = _a.variables, _b = _a.onlyRunForcedResolvers, onlyRunForcedResolvers = _b === void 0 ? false : _b;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                if (document) {\n                    return [2 /*return*/, this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function (localResult) { return (__assign(__assign({}, remoteResult), { data: localResult.result })); })];\n                }\n                return [2 /*return*/, remoteResult];\n            });\n        });\n    };\n    LocalState.prototype.setFragmentMatcher = function (fragmentMatcher) {\n        this.fragmentMatcher = fragmentMatcher;\n    };\n    LocalState.prototype.getFragmentMatcher = function () {\n        return this.fragmentMatcher;\n    };\n    // Client queries contain everything in the incoming document (if a @client\n    // directive is found).\n    LocalState.prototype.clientQuery = function (document) {\n        if (hasDirectives([\"client\"], document)) {\n            if (this.resolvers) {\n                return document;\n            }\n        }\n        return null;\n    };\n    // Server queries are stripped of all @client based selection sets.\n    LocalState.prototype.serverQuery = function (document) {\n        return removeClientSetsFromDocument(document);\n    };\n    LocalState.prototype.prepareContext = function (context) {\n        var cache = this.cache;\n        return __assign(__assign({}, context), { cache: cache, \n            // Getting an entry's cache key is useful for local state resolvers.\n            getCacheKey: function (obj) {\n                return cache.identify(obj);\n            } });\n    };\n    // To support `@client @export(as: \"someVar\")` syntax, we'll first resolve\n    // @client @export fields locally, then pass the resolved values back to be\n    // used alongside the original operation variables.\n    LocalState.prototype.addExportedVariables = function (document, variables, context) {\n        if (variables === void 0) { variables = {}; }\n        if (context === void 0) { context = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (document) {\n                    return [2 /*return*/, this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function (data) { return (__assign(__assign({}, variables), data.exportedVariables)); })];\n                }\n                return [2 /*return*/, __assign({}, variables)];\n            });\n        });\n    };\n    LocalState.prototype.shouldForceResolvers = function (document) {\n        var forceResolvers = false;\n        visit(document, {\n            Directive: {\n                enter: function (node) {\n                    if (node.name.value === \"client\" && node.arguments) {\n                        forceResolvers = node.arguments.some(function (arg) {\n                            return arg.name.value === \"always\" &&\n                                arg.value.kind === \"BooleanValue\" &&\n                                arg.value.value === true;\n                        });\n                        if (forceResolvers) {\n                            return BREAK;\n                        }\n                    }\n                },\n            },\n        });\n        return forceResolvers;\n    };\n    // Query the cache and return matching data.\n    LocalState.prototype.buildRootValueFromCache = function (document, variables) {\n        return this.cache.diff({\n            query: buildQueryFromSelectionSet(document),\n            variables: variables,\n            returnPartialData: true,\n            optimistic: false,\n        }).result;\n    };\n    LocalState.prototype.resolveDocument = function (document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {\n        if (context === void 0) { context = {}; }\n        if (variables === void 0) { variables = {}; }\n        if (fragmentMatcher === void 0) { fragmentMatcher = function () { return true; }; }\n        if (onlyRunForcedResolvers === void 0) { onlyRunForcedResolvers = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var mainDefinition, fragments, fragmentMap, selectionsToResolve, definitionOperation, defaultOperationType, _a, cache, client, execContext, isClientFieldDescendant;\n            return __generator(this, function (_b) {\n                mainDefinition = getMainDefinition(document);\n                fragments = getFragmentDefinitions(document);\n                fragmentMap = createFragmentMap(fragments);\n                selectionsToResolve = this.collectSelectionsToResolve(mainDefinition, fragmentMap);\n                definitionOperation = mainDefinition.operation;\n                defaultOperationType = definitionOperation ?\n                    definitionOperation.charAt(0).toUpperCase() +\n                        definitionOperation.slice(1)\n                    : \"Query\";\n                _a = this, cache = _a.cache, client = _a.client;\n                execContext = {\n                    fragmentMap: fragmentMap,\n                    context: __assign(__assign({}, context), { cache: cache, client: client }),\n                    variables: variables,\n                    fragmentMatcher: fragmentMatcher,\n                    defaultOperationType: defaultOperationType,\n                    exportedVariables: {},\n                    selectionsToResolve: selectionsToResolve,\n                    onlyRunForcedResolvers: onlyRunForcedResolvers,\n                };\n                isClientFieldDescendant = false;\n                return [2 /*return*/, this.resolveSelectionSet(mainDefinition.selectionSet, isClientFieldDescendant, rootValue, execContext).then(function (result) { return ({\n                        result: result,\n                        exportedVariables: execContext.exportedVariables,\n                    }); })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSelectionSet = function (selectionSet, isClientFieldDescendant, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fragmentMap, context, variables, resultsToMerge, execute;\n            var _this = this;\n            return __generator(this, function (_a) {\n                fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;\n                resultsToMerge = [rootValue];\n                execute = function (selection) { return __awaiter(_this, void 0, void 0, function () {\n                    var fragment, typeCondition;\n                    return __generator(this, function (_a) {\n                        if (!isClientFieldDescendant &&\n                            !execContext.selectionsToResolve.has(selection)) {\n                            // Skip selections without @client directives\n                            // (still processing if one of the ancestors or one of the child fields has @client directive)\n                            return [2 /*return*/];\n                        }\n                        if (!shouldInclude(selection, variables)) {\n                            // Skip this entirely.\n                            return [2 /*return*/];\n                        }\n                        if (isField(selection)) {\n                            return [2 /*return*/, this.resolveField(selection, isClientFieldDescendant, rootValue, execContext).then(function (fieldResult) {\n                                    var _a;\n                                    if (typeof fieldResult !== \"undefined\") {\n                                        resultsToMerge.push((_a = {},\n                                            _a[resultKeyNameFromField(selection)] = fieldResult,\n                                            _a));\n                                    }\n                                })];\n                        }\n                        if (isInlineFragment(selection)) {\n                            fragment = selection;\n                        }\n                        else {\n                            // This is a named fragment.\n                            fragment = fragmentMap[selection.name.value];\n                            invariant(fragment, 18, selection.name.value);\n                        }\n                        if (fragment && fragment.typeCondition) {\n                            typeCondition = fragment.typeCondition.name.value;\n                            if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n                                return [2 /*return*/, this.resolveSelectionSet(fragment.selectionSet, isClientFieldDescendant, rootValue, execContext).then(function (fragmentResult) {\n                                        resultsToMerge.push(fragmentResult);\n                                    })];\n                            }\n                        }\n                        return [2 /*return*/];\n                    });\n                }); };\n                return [2 /*return*/, Promise.all(selectionSet.selections.map(execute)).then(function () {\n                        return mergeDeepArray(resultsToMerge);\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveField = function (field, isClientFieldDescendant, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (!rootValue) {\n                    return [2 /*return*/, null];\n                }\n                variables = execContext.variables;\n                fieldName = field.name.value;\n                aliasedFieldName = resultKeyNameFromField(field);\n                aliasUsed = fieldName !== aliasedFieldName;\n                defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n                resultPromise = Promise.resolve(defaultResult);\n                // Usually all local resolvers are run when passing through here, but\n                // if we've specifically identified that we only want to run forced\n                // resolvers (that is, resolvers for fields marked with\n                // `@client(always: true)`), then we'll skip running non-forced resolvers.\n                if (!execContext.onlyRunForcedResolvers ||\n                    this.shouldForceResolvers(field)) {\n                    resolverType = rootValue.__typename || execContext.defaultOperationType;\n                    resolverMap = this.resolvers && this.resolvers[resolverType];\n                    if (resolverMap) {\n                        resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n                        if (resolve) {\n                            resultPromise = Promise.resolve(\n                            // In case the resolve function accesses reactive variables,\n                            // set cacheSlot to the current cache instance.\n                            cacheSlot.withValue(this.cache, resolve, [\n                                rootValue,\n                                argumentsObjectFromField(field, variables),\n                                execContext.context,\n                                { field: field, fragmentMap: execContext.fragmentMap },\n                            ]));\n                        }\n                    }\n                }\n                return [2 /*return*/, resultPromise.then(function (result) {\n                        var _a, _b;\n                        if (result === void 0) { result = defaultResult; }\n                        // If an @export directive is associated with the current field, store\n                        // the `as` export variable name and current result for later use.\n                        if (field.directives) {\n                            field.directives.forEach(function (directive) {\n                                if (directive.name.value === \"export\" && directive.arguments) {\n                                    directive.arguments.forEach(function (arg) {\n                                        if (arg.name.value === \"as\" && arg.value.kind === \"StringValue\") {\n                                            execContext.exportedVariables[arg.value.value] = result;\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                        // Handle all scalar types here.\n                        if (!field.selectionSet) {\n                            return result;\n                        }\n                        // From here down, the field has a selection set, which means it's trying\n                        // to query a GraphQLObjectType.\n                        if (result == null) {\n                            // Basically any field in a GraphQL response can be null, or missing\n                            return result;\n                        }\n                        var isClientField = (_b = (_a = field.directives) === null || _a === void 0 ? void 0 : _a.some(function (d) { return d.name.value === \"client\"; })) !== null && _b !== void 0 ? _b : false;\n                        if (Array.isArray(result)) {\n                            return _this.resolveSubSelectedArray(field, isClientFieldDescendant || isClientField, result, execContext);\n                        }\n                        // Returned value is an object, and the query has a sub-selection. Recurse.\n                        if (field.selectionSet) {\n                            return _this.resolveSelectionSet(field.selectionSet, isClientFieldDescendant || isClientField, result, execContext);\n                        }\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSubSelectedArray = function (field, isClientFieldDescendant, result, execContext) {\n        var _this = this;\n        return Promise.all(result.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            // This is a nested array, recurse.\n            if (Array.isArray(item)) {\n                return _this.resolveSubSelectedArray(field, isClientFieldDescendant, item, execContext);\n            }\n            // This is an object, run the selection set on it.\n            if (field.selectionSet) {\n                return _this.resolveSelectionSet(field.selectionSet, isClientFieldDescendant, item, execContext);\n            }\n        }));\n    };\n    // Collect selection nodes on paths from document root down to all @client directives.\n    // This function takes into account transitive fragment spreads.\n    // Complexity equals to a single `visit` over the full document.\n    LocalState.prototype.collectSelectionsToResolve = function (mainDefinition, fragmentMap) {\n        var isSingleASTNode = function (node) { return !Array.isArray(node); };\n        var selectionsToResolveCache = this.selectionsToResolveCache;\n        function collectByDefinition(definitionNode) {\n            if (!selectionsToResolveCache.has(definitionNode)) {\n                var matches_1 = new Set();\n                selectionsToResolveCache.set(definitionNode, matches_1);\n                visit(definitionNode, {\n                    Directive: function (node, _, __, ___, ancestors) {\n                        if (node.name.value === \"client\") {\n                            ancestors.forEach(function (node) {\n                                if (isSingleASTNode(node) && isSelectionNode(node)) {\n                                    matches_1.add(node);\n                                }\n                            });\n                        }\n                    },\n                    FragmentSpread: function (spread, _, __, ___, ancestors) {\n                        var fragment = fragmentMap[spread.name.value];\n                        invariant(fragment, 19, spread.name.value);\n                        var fragmentSelections = collectByDefinition(fragment);\n                        if (fragmentSelections.size > 0) {\n                            // Fragment for this spread contains @client directive (either directly or transitively)\n                            // Collect selection nodes on paths from the root down to fields with the @client directive\n                            ancestors.forEach(function (node) {\n                                if (isSingleASTNode(node) && isSelectionNode(node)) {\n                                    matches_1.add(node);\n                                }\n                            });\n                            matches_1.add(spread);\n                            fragmentSelections.forEach(function (selection) {\n                                matches_1.add(selection);\n                            });\n                        }\n                    },\n                });\n            }\n            return selectionsToResolveCache.get(definitionNode);\n        }\n        return collectByDefinition(mainDefinition);\n    };\n    return LocalState;\n}());\nexport { LocalState };\n//# sourceMappingURL=LocalState.js.map","import { __assign } from \"tslib\";\nimport { equal } from \"@wry/equality\";\nimport { DeepMerger } from \"../utilities/index.js\";\nimport { mergeIncrementalData } from \"../utilities/index.js\";\nimport { reobserveCacheFirst } from \"./ObservableQuery.js\";\nimport { isNonEmptyArray, graphQLResultHasError, canUseWeakMap, } from \"../utilities/index.js\";\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\nvar destructiveMethodCounts = new (canUseWeakMap ? WeakMap : Map)();\nfunction wrapDestructiveCacheMethod(cache, methodName) {\n    var original = cache[methodName];\n    if (typeof original === \"function\") {\n        // @ts-expect-error this is just too generic to be typed correctly\n        cache[methodName] = function () {\n            destructiveMethodCounts.set(cache, \n            // The %1e15 allows the count to wrap around to 0 safely every\n            // quadrillion evictions, so there's no risk of overflow. To be\n            // clear, this is more of a pedantic principle than something\n            // that matters in any conceivable practical scenario.\n            (destructiveMethodCounts.get(cache) + 1) % 1e15);\n            // @ts-expect-error this is just too generic to be typed correctly\n            return original.apply(this, arguments);\n        };\n    }\n}\nfunction cancelNotifyTimeout(info) {\n    if (info[\"notifyTimeout\"]) {\n        clearTimeout(info[\"notifyTimeout\"]);\n        info[\"notifyTimeout\"] = void 0;\n    }\n}\n// A QueryInfo object represents a single query managed by the\n// QueryManager, which tracks all QueryInfo objects by queryId in its\n// this.queries Map. QueryInfo objects store the latest results and errors\n// for the given query, and are responsible for reporting those results to\n// the corresponding ObservableQuery, via the QueryInfo.notify method.\n// Results are reported asynchronously whenever setDiff marks the\n// QueryInfo object as dirty, though a call to the QueryManager's\n// broadcastQueries method may trigger the notification before it happens\n// automatically. This class used to be a simple interface type without\n// any field privacy or meaningful methods, which is why it still has so\n// many public fields. The effort to lock down and simplify the QueryInfo\n// interface is ongoing, and further improvements are welcome.\nvar QueryInfo = /** @class */ (function () {\n    function QueryInfo(queryManager, queryId) {\n        if (queryId === void 0) { queryId = queryManager.generateQueryId(); }\n        this.queryId = queryId;\n        this.listeners = new Set();\n        this.document = null;\n        this.lastRequestId = 1;\n        this.stopped = false;\n        this.dirty = false;\n        this.observableQuery = null;\n        var cache = (this.cache = queryManager.cache);\n        // Track how often cache.evict is called, since we want eviction to\n        // override the feud-stopping logic in the markResult method, by\n        // causing shouldWrite to return true. Wrapping the cache.evict method\n        // is a bit of a hack, but it saves us from having to make eviction\n        // counting an official part of the ApolloCache API.\n        if (!destructiveMethodCounts.has(cache)) {\n            destructiveMethodCounts.set(cache, 0);\n            wrapDestructiveCacheMethod(cache, \"evict\");\n            wrapDestructiveCacheMethod(cache, \"modify\");\n            wrapDestructiveCacheMethod(cache, \"reset\");\n        }\n    }\n    QueryInfo.prototype.init = function (query) {\n        var networkStatus = query.networkStatus || NetworkStatus.loading;\n        if (this.variables &&\n            this.networkStatus !== NetworkStatus.loading &&\n            !equal(this.variables, query.variables)) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        if (!equal(query.variables, this.variables)) {\n            this.lastDiff = void 0;\n        }\n        Object.assign(this, {\n            document: query.document,\n            variables: query.variables,\n            networkError: null,\n            graphQLErrors: this.graphQLErrors || [],\n            networkStatus: networkStatus,\n        });\n        if (query.observableQuery) {\n            this.setObservableQuery(query.observableQuery);\n        }\n        if (query.lastRequestId) {\n            this.lastRequestId = query.lastRequestId;\n        }\n        return this;\n    };\n    QueryInfo.prototype.reset = function () {\n        cancelNotifyTimeout(this);\n        this.dirty = false;\n    };\n    QueryInfo.prototype.resetDiff = function () {\n        this.lastDiff = void 0;\n    };\n    QueryInfo.prototype.getDiff = function () {\n        var options = this.getDiffOptions();\n        if (this.lastDiff && equal(options, this.lastDiff.options)) {\n            return this.lastDiff.diff;\n        }\n        this.updateWatch(this.variables);\n        var oq = this.observableQuery;\n        if (oq && oq.options.fetchPolicy === \"no-cache\") {\n            return { complete: false };\n        }\n        var diff = this.cache.diff(options);\n        this.updateLastDiff(diff, options);\n        return diff;\n    };\n    QueryInfo.prototype.updateLastDiff = function (diff, options) {\n        this.lastDiff =\n            diff ?\n                {\n                    diff: diff,\n                    options: options || this.getDiffOptions(),\n                }\n                : void 0;\n    };\n    QueryInfo.prototype.getDiffOptions = function (variables) {\n        var _a;\n        if (variables === void 0) { variables = this.variables; }\n        return {\n            query: this.document,\n            variables: variables,\n            returnPartialData: true,\n            optimistic: true,\n            canonizeResults: (_a = this.observableQuery) === null || _a === void 0 ? void 0 : _a.options.canonizeResults,\n        };\n    };\n    QueryInfo.prototype.setDiff = function (diff) {\n        var _this = this;\n        var oldDiff = this.lastDiff && this.lastDiff.diff;\n        this.updateLastDiff(diff);\n        if (!this.dirty && !equal(oldDiff && oldDiff.result, diff && diff.result)) {\n            this.dirty = true;\n            if (!this.notifyTimeout) {\n                this.notifyTimeout = setTimeout(function () { return _this.notify(); }, 0);\n            }\n        }\n    };\n    QueryInfo.prototype.setObservableQuery = function (oq) {\n        var _this = this;\n        if (oq === this.observableQuery)\n            return;\n        if (this.oqListener) {\n            this.listeners.delete(this.oqListener);\n        }\n        this.observableQuery = oq;\n        if (oq) {\n            oq[\"queryInfo\"] = this;\n            this.listeners.add((this.oqListener = function () {\n                var diff = _this.getDiff();\n                if (diff.fromOptimisticTransaction) {\n                    // If this diff came from an optimistic transaction, deliver the\n                    // current cache data to the ObservableQuery, but don't perform a\n                    // reobservation, since oq.reobserveCacheFirst might make a network\n                    // request, and we never want to trigger network requests in the\n                    // middle of optimistic updates.\n                    oq[\"observe\"]();\n                }\n                else {\n                    // Otherwise, make the ObservableQuery \"reobserve\" the latest data\n                    // using a temporary fetch policy of \"cache-first\", so complete cache\n                    // results have a chance to be delivered without triggering additional\n                    // network requests, even when options.fetchPolicy is \"network-only\"\n                    // or \"cache-and-network\". All other fetch policies are preserved by\n                    // this method, and are handled by calling oq.reobserve(). If this\n                    // reobservation is spurious, isDifferentFromLastResult still has a\n                    // chance to catch it before delivery to ObservableQuery subscribers.\n                    reobserveCacheFirst(oq);\n                }\n            }));\n        }\n        else {\n            delete this.oqListener;\n        }\n    };\n    QueryInfo.prototype.notify = function () {\n        var _this = this;\n        cancelNotifyTimeout(this);\n        if (this.shouldNotify()) {\n            this.listeners.forEach(function (listener) { return listener(_this); });\n        }\n        this.dirty = false;\n    };\n    QueryInfo.prototype.shouldNotify = function () {\n        if (!this.dirty || !this.listeners.size) {\n            return false;\n        }\n        if (isNetworkRequestInFlight(this.networkStatus) && this.observableQuery) {\n            var fetchPolicy = this.observableQuery.options.fetchPolicy;\n            if (fetchPolicy !== \"cache-only\" && fetchPolicy !== \"cache-and-network\") {\n                return false;\n            }\n        }\n        return true;\n    };\n    QueryInfo.prototype.stop = function () {\n        if (!this.stopped) {\n            this.stopped = true;\n            // Cancel the pending notify timeout\n            this.reset();\n            this.cancel();\n            // Revert back to the no-op version of cancel inherited from\n            // QueryInfo.prototype.\n            this.cancel = QueryInfo.prototype.cancel;\n            var oq = this.observableQuery;\n            if (oq)\n                oq.stopPolling();\n        }\n    };\n    // This method is a no-op by default, until/unless overridden by the\n    // updateWatch method.\n    QueryInfo.prototype.cancel = function () { };\n    QueryInfo.prototype.updateWatch = function (variables) {\n        var _this = this;\n        if (variables === void 0) { variables = this.variables; }\n        var oq = this.observableQuery;\n        if (oq && oq.options.fetchPolicy === \"no-cache\") {\n            return;\n        }\n        var watchOptions = __assign(__assign({}, this.getDiffOptions(variables)), { watcher: this, callback: function (diff) { return _this.setDiff(diff); } });\n        if (!this.lastWatch || !equal(watchOptions, this.lastWatch)) {\n            this.cancel();\n            this.cancel = this.cache.watch((this.lastWatch = watchOptions));\n        }\n    };\n    QueryInfo.prototype.resetLastWrite = function () {\n        this.lastWrite = void 0;\n    };\n    QueryInfo.prototype.shouldWrite = function (result, variables) {\n        var lastWrite = this.lastWrite;\n        return !(lastWrite &&\n            // If cache.evict has been called since the last time we wrote this\n            // data into the cache, there's a chance writing this result into\n            // the cache will repair what was evicted.\n            lastWrite.dmCount === destructiveMethodCounts.get(this.cache) &&\n            equal(variables, lastWrite.variables) &&\n            equal(result.data, lastWrite.result.data));\n    };\n    QueryInfo.prototype.markResult = function (result, document, options, cacheWriteBehavior) {\n        var _this = this;\n        var merger = new DeepMerger();\n        var graphQLErrors = isNonEmptyArray(result.errors) ? result.errors.slice(0) : [];\n        // Cancel the pending notify timeout (if it exists) to prevent extraneous network\n        // requests. To allow future notify timeouts, diff and dirty are reset as well.\n        this.reset();\n        if (\"incremental\" in result && isNonEmptyArray(result.incremental)) {\n            var mergedData = mergeIncrementalData(this.getDiff().result, result);\n            result.data = mergedData;\n            // Detect the first chunk of a deferred query and merge it with existing\n            // cache data. This ensures a `cache-first` fetch policy that returns\n            // partial cache data or a `cache-and-network` fetch policy that already\n            // has full data in the cache does not complain when trying to merge the\n            // initial deferred server data with existing cache data.\n        }\n        else if (\"hasNext\" in result && result.hasNext) {\n            var diff = this.getDiff();\n            result.data = merger.merge(diff.result, result.data);\n        }\n        this.graphQLErrors = graphQLErrors;\n        if (options.fetchPolicy === \"no-cache\") {\n            this.updateLastDiff({ result: result.data, complete: true }, this.getDiffOptions(options.variables));\n        }\n        else if (cacheWriteBehavior !== 0 /* CacheWriteBehavior.FORBID */) {\n            if (shouldWriteResult(result, options.errorPolicy)) {\n                // Using a transaction here so we have a chance to read the result\n                // back from the cache before the watch callback fires as a result\n                // of writeQuery, so we can store the new diff quietly and ignore\n                // it when we receive it redundantly from the watch callback.\n                this.cache.performTransaction(function (cache) {\n                    if (_this.shouldWrite(result, options.variables)) {\n                        cache.writeQuery({\n                            query: document,\n                            data: result.data,\n                            variables: options.variables,\n                            overwrite: cacheWriteBehavior === 1 /* CacheWriteBehavior.OVERWRITE */,\n                        });\n                        _this.lastWrite = {\n                            result: result,\n                            variables: options.variables,\n                            dmCount: destructiveMethodCounts.get(_this.cache),\n                        };\n                    }\n                    else {\n                        // If result is the same as the last result we received from\n                        // the network (and the variables match too), avoid writing\n                        // result into the cache again. The wisdom of skipping this\n                        // cache write is far from obvious, since any cache write\n                        // could be the one that puts the cache back into a desired\n                        // state, fixing corruption or missing data. However, if we\n                        // always write every network result into the cache, we enable\n                        // feuds between queries competing to update the same data in\n                        // incompatible ways, which can lead to an endless cycle of\n                        // cache broadcasts and useless network requests. As with any\n                        // feud, eventually one side must step back from the brink,\n                        // letting the other side(s) have the last word(s). There may\n                        // be other points where we could break this cycle, such as\n                        // silencing the broadcast for cache.writeQuery (not a good\n                        // idea, since it just delays the feud a bit) or somehow\n                        // avoiding the network request that just happened (also bad,\n                        // because the server could return useful new data). All\n                        // options considered, skipping this cache write seems to be\n                        // the least damaging place to break the cycle, because it\n                        // reflects the intuition that we recently wrote this exact\n                        // result into the cache, so the cache *should* already/still\n                        // contain this data. If some other query has clobbered that\n                        // data in the meantime, that's too bad, but there will be no\n                        // winners if every query blindly reverts to its own version\n                        // of the data. This approach also gives the network a chance\n                        // to return new data, which will be written into the cache as\n                        // usual, notifying only those queries that are directly\n                        // affected by the cache updates, as usual. In the future, an\n                        // even more sophisticated cache could perhaps prevent or\n                        // mitigate the clobbering somehow, but that would make this\n                        // particular cache write even less important, and thus\n                        // skipping it would be even safer than it is today.\n                        if (_this.lastDiff && _this.lastDiff.diff.complete) {\n                            // Reuse data from the last good (complete) diff that we\n                            // received, when possible.\n                            result.data = _this.lastDiff.diff.result;\n                            return;\n                        }\n                        // If the previous this.diff was incomplete, fall through to\n                        // re-reading the latest data with cache.diff, below.\n                    }\n                    var diffOptions = _this.getDiffOptions(options.variables);\n                    var diff = cache.diff(diffOptions);\n                    // In case the QueryManager stops this QueryInfo before its\n                    // results are delivered, it's important to avoid restarting the\n                    // cache watch when markResult is called. We also avoid updating\n                    // the watch if we are writing a result that doesn't match the current\n                    // variables to avoid race conditions from broadcasting the wrong\n                    // result.\n                    if (!_this.stopped && equal(_this.variables, options.variables)) {\n                        // Any time we're about to update this.diff, we need to make\n                        // sure we've started watching the cache.\n                        _this.updateWatch(options.variables);\n                    }\n                    // If we're allowed to write to the cache, and we can read a\n                    // complete result from the cache, update result.data to be the\n                    // result from the cache, rather than the raw network result.\n                    // Set without setDiff to avoid triggering a notify call, since\n                    // we have other ways of notifying for this result.\n                    _this.updateLastDiff(diff, diffOptions);\n                    if (diff.complete) {\n                        result.data = diff.result;\n                    }\n                });\n            }\n            else {\n                this.lastWrite = void 0;\n            }\n        }\n    };\n    QueryInfo.prototype.markReady = function () {\n        this.networkError = null;\n        return (this.networkStatus = NetworkStatus.ready);\n    };\n    QueryInfo.prototype.markError = function (error) {\n        this.networkStatus = NetworkStatus.error;\n        this.lastWrite = void 0;\n        this.reset();\n        if (error.graphQLErrors) {\n            this.graphQLErrors = error.graphQLErrors;\n        }\n        if (error.networkError) {\n            this.networkError = error.networkError;\n        }\n        return error;\n    };\n    return QueryInfo;\n}());\nexport { QueryInfo };\nexport function shouldWriteResult(result, errorPolicy) {\n    if (errorPolicy === void 0) { errorPolicy = \"none\"; }\n    var ignoreErrors = errorPolicy === \"ignore\" || errorPolicy === \"all\";\n    var writeWithErrors = !graphQLResultHasError(result);\n    if (!writeWithErrors && ignoreErrors && result.data) {\n        writeWithErrors = true;\n    }\n    return writeWithErrors;\n}\n//# sourceMappingURL=QueryInfo.js.map","import { __assign, __awaiter, __generator } from \"tslib\";\nimport { invariant, newInvariantError } from \"../utilities/globals/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { execute } from \"../link/core/index.js\";\nimport { hasDirectives, isExecutionPatchIncrementalResult, isExecutionPatchResult, removeDirectivesFromDocument, } from \"../utilities/index.js\";\nimport { canonicalStringify } from \"../cache/index.js\";\nimport { getDefaultValues, getOperationDefinition, getOperationName, hasClientExports, graphQLResultHasError, getGraphQLErrorsFromResult, Observable, asyncMap, isNonEmptyArray, Concast, makeUniqueId, isDocumentNode, isNonNullObject, DocumentTransform, } from \"../utilities/index.js\";\nimport { mergeIncrementalData } from \"../utilities/common/incrementalResult.js\";\nimport { ApolloError, isApolloError, graphQLResultHasProtocolErrors, } from \"../errors/index.js\";\nimport { ObservableQuery, logMissingFieldErrors } from \"./ObservableQuery.js\";\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\nimport { LocalState } from \"./LocalState.js\";\nimport { QueryInfo, shouldWriteResult, } from \"./QueryInfo.js\";\nimport { PROTOCOL_ERRORS_SYMBOL } from \"../errors/index.js\";\nimport { print } from \"../utilities/index.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar IGNORE = Object.create(null);\nimport { Trie } from \"@wry/trie\";\nimport { AutoCleanedWeakCache, cacheSizes } from \"../utilities/index.js\";\nvar QueryManager = /** @class */ (function () {\n    function QueryManager(_a) {\n        var cache = _a.cache, link = _a.link, defaultOptions = _a.defaultOptions, documentTransform = _a.documentTransform, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, onBroadcast = _a.onBroadcast, _c = _a.ssrMode, ssrMode = _c === void 0 ? false : _c, _d = _a.clientAwareness, clientAwareness = _d === void 0 ? {} : _d, localState = _a.localState, _e = _a.assumeImmutableResults, assumeImmutableResults = _e === void 0 ? !!cache.assumeImmutableResults : _e, defaultContext = _a.defaultContext;\n        var _this = this;\n        this.clientAwareness = {};\n        // All the queries that the QueryManager is currently managing (not\n        // including mutations and subscriptions).\n        this.queries = new Map();\n        // Maps from queryId strings to Promise rejection functions for\n        // currently active queries and fetches.\n        // Use protected instead of private field so\n        // @apollo/experimental-nextjs-app-support can access type info.\n        this.fetchCancelFns = new Map();\n        this.transformCache = new AutoCleanedWeakCache(cacheSizes[\"queryManager.getDocumentInfo\"] ||\n            2000 /* defaultCacheSizes[\"queryManager.getDocumentInfo\"] */);\n        this.queryIdCounter = 1;\n        this.requestIdCounter = 1;\n        this.mutationIdCounter = 1;\n        // Use protected instead of private field so\n        // @apollo/experimental-nextjs-app-support can access type info.\n        this.inFlightLinkObservables = new Trie(false);\n        var defaultDocumentTransform = new DocumentTransform(function (document) { return _this.cache.transformDocument(document); }, \n        // Allow the apollo cache to manage its own transform caches\n        { cache: false });\n        this.cache = cache;\n        this.link = link;\n        this.defaultOptions = defaultOptions || Object.create(null);\n        this.queryDeduplication = queryDeduplication;\n        this.clientAwareness = clientAwareness;\n        this.localState = localState || new LocalState({ cache: cache });\n        this.ssrMode = ssrMode;\n        this.assumeImmutableResults = assumeImmutableResults;\n        this.documentTransform =\n            documentTransform ?\n                defaultDocumentTransform\n                    .concat(documentTransform)\n                    // The custom document transform may add new fragment spreads or new\n                    // field selections, so we want to give the cache a chance to run\n                    // again. For example, the InMemoryCache adds __typename to field\n                    // selections and fragments from the fragment registry.\n                    .concat(defaultDocumentTransform)\n                : defaultDocumentTransform;\n        this.defaultContext = defaultContext || Object.create(null);\n        if ((this.onBroadcast = onBroadcast)) {\n            this.mutationStore = Object.create(null);\n        }\n    }\n    /**\n     * Call this method to terminate any active query processes, making it safe\n     * to dispose of this QueryManager instance.\n     */\n    QueryManager.prototype.stop = function () {\n        var _this = this;\n        this.queries.forEach(function (_info, queryId) {\n            _this.stopQueryNoBroadcast(queryId);\n        });\n        this.cancelPendingFetches(newInvariantError(25));\n    };\n    QueryManager.prototype.cancelPendingFetches = function (error) {\n        this.fetchCancelFns.forEach(function (cancel) { return cancel(error); });\n        this.fetchCancelFns.clear();\n    };\n    QueryManager.prototype.mutate = function (_a) {\n        var _b, _c;\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueries = _a.updateQueries, _d = _a.refetchQueries, refetchQueries = _d === void 0 ? [] : _d, _e = _a.awaitRefetchQueries, awaitRefetchQueries = _e === void 0 ? false : _e, updateWithProxyFn = _a.update, onQueryUpdated = _a.onQueryUpdated, _f = _a.fetchPolicy, fetchPolicy = _f === void 0 ? ((_b = this.defaultOptions.mutate) === null || _b === void 0 ? void 0 : _b.fetchPolicy) || \"network-only\" : _f, _g = _a.errorPolicy, errorPolicy = _g === void 0 ? ((_c = this.defaultOptions.mutate) === null || _c === void 0 ? void 0 : _c.errorPolicy) || \"none\" : _g, keepRootFields = _a.keepRootFields, context = _a.context;\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationId, hasClientExports, mutationStoreValue, isOptimistic, self;\n            return __generator(this, function (_h) {\n                switch (_h.label) {\n                    case 0:\n                        invariant(mutation, 26);\n                        invariant(fetchPolicy === \"network-only\" || fetchPolicy === \"no-cache\", 27);\n                        mutationId = this.generateMutationId();\n                        mutation = this.cache.transformForLink(this.transform(mutation));\n                        hasClientExports = this.getDocumentInfo(mutation).hasClientExports;\n                        variables = this.getVariables(mutation, variables);\n                        if (!hasClientExports) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.localState.addExportedVariables(mutation, variables, context)];\n                    case 1:\n                        variables = (_h.sent());\n                        _h.label = 2;\n                    case 2:\n                        mutationStoreValue = this.mutationStore &&\n                            (this.mutationStore[mutationId] = {\n                                mutation: mutation,\n                                variables: variables,\n                                loading: true,\n                                error: null,\n                            });\n                        isOptimistic = optimisticResponse &&\n                            this.markMutationOptimistic(optimisticResponse, {\n                                mutationId: mutationId,\n                                document: mutation,\n                                variables: variables,\n                                fetchPolicy: fetchPolicy,\n                                errorPolicy: errorPolicy,\n                                context: context,\n                                updateQueries: updateQueries,\n                                update: updateWithProxyFn,\n                                keepRootFields: keepRootFields,\n                            });\n                        this.broadcastQueries();\n                        self = this;\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\n                                return asyncMap(self.getObservableFromLink(mutation, __assign(__assign({}, context), { optimisticResponse: isOptimistic ? optimisticResponse : void 0 }), variables, false), function (result) {\n                                    if (graphQLResultHasError(result) && errorPolicy === \"none\") {\n                                        throw new ApolloError({\n                                            graphQLErrors: getGraphQLErrorsFromResult(result),\n                                        });\n                                    }\n                                    if (mutationStoreValue) {\n                                        mutationStoreValue.loading = false;\n                                        mutationStoreValue.error = null;\n                                    }\n                                    var storeResult = __assign({}, result);\n                                    if (typeof refetchQueries === \"function\") {\n                                        refetchQueries = refetchQueries(storeResult);\n                                    }\n                                    if (errorPolicy === \"ignore\" && graphQLResultHasError(storeResult)) {\n                                        delete storeResult.errors;\n                                    }\n                                    return self.markMutationResult({\n                                        mutationId: mutationId,\n                                        result: storeResult,\n                                        document: mutation,\n                                        variables: variables,\n                                        fetchPolicy: fetchPolicy,\n                                        errorPolicy: errorPolicy,\n                                        context: context,\n                                        update: updateWithProxyFn,\n                                        updateQueries: updateQueries,\n                                        awaitRefetchQueries: awaitRefetchQueries,\n                                        refetchQueries: refetchQueries,\n                                        removeOptimistic: isOptimistic ? mutationId : void 0,\n                                        onQueryUpdated: onQueryUpdated,\n                                        keepRootFields: keepRootFields,\n                                    });\n                                }).subscribe({\n                                    next: function (storeResult) {\n                                        self.broadcastQueries();\n                                        // Since mutations might receive multiple payloads from the\n                                        // ApolloLink chain (e.g. when used with @defer),\n                                        // we resolve with a SingleExecutionResult or after the final\n                                        // ExecutionPatchResult has arrived and we have assembled the\n                                        // multipart response into a single result.\n                                        if (!(\"hasNext\" in storeResult) || storeResult.hasNext === false) {\n                                            resolve(storeResult);\n                                        }\n                                    },\n                                    error: function (err) {\n                                        if (mutationStoreValue) {\n                                            mutationStoreValue.loading = false;\n                                            mutationStoreValue.error = err;\n                                        }\n                                        if (isOptimistic) {\n                                            self.cache.removeOptimistic(mutationId);\n                                        }\n                                        self.broadcastQueries();\n                                        reject(err instanceof ApolloError ? err : (new ApolloError({\n                                            networkError: err,\n                                        })));\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.markMutationResult = function (mutation, cache) {\n        var _this = this;\n        if (cache === void 0) { cache = this.cache; }\n        var result = mutation.result;\n        var cacheWrites = [];\n        var skipCache = mutation.fetchPolicy === \"no-cache\";\n        if (!skipCache && shouldWriteResult(result, mutation.errorPolicy)) {\n            if (!isExecutionPatchIncrementalResult(result)) {\n                cacheWrites.push({\n                    result: result.data,\n                    dataId: \"ROOT_MUTATION\",\n                    query: mutation.document,\n                    variables: mutation.variables,\n                });\n            }\n            if (isExecutionPatchIncrementalResult(result) &&\n                isNonEmptyArray(result.incremental)) {\n                var diff = cache.diff({\n                    id: \"ROOT_MUTATION\",\n                    // The cache complains if passed a mutation where it expects a\n                    // query, so we transform mutations and subscriptions to queries\n                    // (only once, thanks to this.transformCache).\n                    query: this.getDocumentInfo(mutation.document).asQuery,\n                    variables: mutation.variables,\n                    optimistic: false,\n                    returnPartialData: true,\n                });\n                var mergedData = void 0;\n                if (diff.result) {\n                    mergedData = mergeIncrementalData(diff.result, result);\n                }\n                if (typeof mergedData !== \"undefined\") {\n                    // cast the ExecutionPatchResult to FetchResult here since\n                    // ExecutionPatchResult never has `data` when returned from the server\n                    result.data = mergedData;\n                    cacheWrites.push({\n                        result: mergedData,\n                        dataId: \"ROOT_MUTATION\",\n                        query: mutation.document,\n                        variables: mutation.variables,\n                    });\n                }\n            }\n            var updateQueries_1 = mutation.updateQueries;\n            if (updateQueries_1) {\n                this.queries.forEach(function (_a, queryId) {\n                    var observableQuery = _a.observableQuery;\n                    var queryName = observableQuery && observableQuery.queryName;\n                    if (!queryName || !hasOwnProperty.call(updateQueries_1, queryName)) {\n                        return;\n                    }\n                    var updater = updateQueries_1[queryName];\n                    var _b = _this.queries.get(queryId), document = _b.document, variables = _b.variables;\n                    // Read the current query result from the store.\n                    var _c = cache.diff({\n                        query: document,\n                        variables: variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _c.result, complete = _c.complete;\n                    if (complete && currentQueryResult) {\n                        // Run our reducer using the current query result and the mutation result.\n                        var nextQueryResult = updater(currentQueryResult, {\n                            mutationResult: result,\n                            queryName: (document && getOperationName(document)) || void 0,\n                            queryVariables: variables,\n                        });\n                        // Write the modified result back into the store if we got a new result.\n                        if (nextQueryResult) {\n                            cacheWrites.push({\n                                result: nextQueryResult,\n                                dataId: \"ROOT_QUERY\",\n                                query: document,\n                                variables: variables,\n                            });\n                        }\n                    }\n                });\n            }\n        }\n        if (cacheWrites.length > 0 ||\n            (mutation.refetchQueries || \"\").length > 0 ||\n            mutation.update ||\n            mutation.onQueryUpdated ||\n            mutation.removeOptimistic) {\n            var results_1 = [];\n            this.refetchQueries({\n                updateCache: function (cache) {\n                    if (!skipCache) {\n                        cacheWrites.forEach(function (write) { return cache.write(write); });\n                    }\n                    // If the mutation has some writes associated with it then we need to\n                    // apply those writes to the store by running this reducer again with\n                    // a write action.\n                    var update = mutation.update;\n                    // Determine whether result is a SingleExecutionResult,\n                    // or the final ExecutionPatchResult.\n                    var isFinalResult = !isExecutionPatchResult(result) ||\n                        (isExecutionPatchIncrementalResult(result) && !result.hasNext);\n                    if (update) {\n                        if (!skipCache) {\n                            // Re-read the ROOT_MUTATION data we just wrote into the cache\n                            // (the first cache.write call in the cacheWrites.forEach loop\n                            // above), so field read functions have a chance to run for\n                            // fields within mutation result objects.\n                            var diff = cache.diff({\n                                id: \"ROOT_MUTATION\",\n                                // The cache complains if passed a mutation where it expects a\n                                // query, so we transform mutations and subscriptions to queries\n                                // (only once, thanks to this.transformCache).\n                                query: _this.getDocumentInfo(mutation.document).asQuery,\n                                variables: mutation.variables,\n                                optimistic: false,\n                                returnPartialData: true,\n                            });\n                            if (diff.complete) {\n                                result = __assign(__assign({}, result), { data: diff.result });\n                                if (\"incremental\" in result) {\n                                    delete result.incremental;\n                                }\n                                if (\"hasNext\" in result) {\n                                    delete result.hasNext;\n                                }\n                            }\n                        }\n                        // If we've received the whole response,\n                        // either a SingleExecutionResult or the final ExecutionPatchResult,\n                        // call the update function.\n                        if (isFinalResult) {\n                            update(cache, result, {\n                                context: mutation.context,\n                                variables: mutation.variables,\n                            });\n                        }\n                    }\n                    // TODO Do this with cache.evict({ id: 'ROOT_MUTATION' }) but make it\n                    // shallow to allow rolling back optimistic evictions.\n                    if (!skipCache && !mutation.keepRootFields && isFinalResult) {\n                        cache.modify({\n                            id: \"ROOT_MUTATION\",\n                            fields: function (value, _a) {\n                                var fieldName = _a.fieldName, DELETE = _a.DELETE;\n                                return fieldName === \"__typename\" ? value : DELETE;\n                            },\n                        });\n                    }\n                },\n                include: mutation.refetchQueries,\n                // Write the final mutation.result to the root layer of the cache.\n                optimistic: false,\n                // Remove the corresponding optimistic layer at the same time as we\n                // write the final non-optimistic result.\n                removeOptimistic: mutation.removeOptimistic,\n                // Let the caller of client.mutate optionally determine the refetching\n                // behavior for watched queries after the mutation.update function runs.\n                // If no onQueryUpdated function was provided for this mutation, pass\n                // null instead of undefined to disable the default refetching behavior.\n                onQueryUpdated: mutation.onQueryUpdated || null,\n            }).forEach(function (result) { return results_1.push(result); });\n            if (mutation.awaitRefetchQueries || mutation.onQueryUpdated) {\n                // Returning a promise here makes the mutation await that promise, so we\n                // include results in that promise's work if awaitRefetchQueries or an\n                // onQueryUpdated function was specified.\n                return Promise.all(results_1).then(function () { return result; });\n            }\n        }\n        return Promise.resolve(result);\n    };\n    QueryManager.prototype.markMutationOptimistic = function (optimisticResponse, mutation) {\n        var _this = this;\n        var data = typeof optimisticResponse === \"function\" ?\n            optimisticResponse(mutation.variables, { IGNORE: IGNORE })\n            : optimisticResponse;\n        if (data === IGNORE) {\n            return false;\n        }\n        this.cache.recordOptimisticTransaction(function (cache) {\n            try {\n                _this.markMutationResult(__assign(__assign({}, mutation), { result: { data: data } }), cache);\n            }\n            catch (error) {\n                globalThis.__DEV__ !== false && invariant.error(error);\n            }\n        }, mutation.mutationId);\n        return true;\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, networkStatus) {\n        return this.fetchConcastWithInfo(queryId, options, networkStatus).concast\n            .promise;\n    };\n    QueryManager.prototype.getQueryStore = function () {\n        var store = Object.create(null);\n        this.queries.forEach(function (info, queryId) {\n            store[queryId] = {\n                variables: info.variables,\n                networkStatus: info.networkStatus,\n                networkError: info.networkError,\n                graphQLErrors: info.graphQLErrors,\n            };\n        });\n        return store;\n    };\n    QueryManager.prototype.resetErrors = function (queryId) {\n        var queryInfo = this.queries.get(queryId);\n        if (queryInfo) {\n            queryInfo.networkError = undefined;\n            queryInfo.graphQLErrors = [];\n        }\n    };\n    QueryManager.prototype.transform = function (document) {\n        return this.documentTransform.transformDocument(document);\n    };\n    QueryManager.prototype.getDocumentInfo = function (document) {\n        var transformCache = this.transformCache;\n        if (!transformCache.has(document)) {\n            var cacheEntry = {\n                // TODO These three calls (hasClientExports, shouldForceResolvers, and\n                // usesNonreactiveDirective) are performing independent full traversals\n                // of the transformed document. We should consider merging these\n                // traversals into a single pass in the future, though the work is\n                // cached after the first time.\n                hasClientExports: hasClientExports(document),\n                hasForcedResolvers: this.localState.shouldForceResolvers(document),\n                hasNonreactiveDirective: hasDirectives([\"nonreactive\"], document),\n                clientQuery: this.localState.clientQuery(document),\n                serverQuery: removeDirectivesFromDocument([\n                    { name: \"client\", remove: true },\n                    { name: \"connection\" },\n                    { name: \"nonreactive\" },\n                ], document),\n                defaultVars: getDefaultValues(getOperationDefinition(document)),\n                // Transform any mutation or subscription operations to query operations\n                // so we can read/write them from/to the cache.\n                asQuery: __assign(__assign({}, document), { definitions: document.definitions.map(function (def) {\n                        if (def.kind === \"OperationDefinition\" &&\n                            def.operation !== \"query\") {\n                            return __assign(__assign({}, def), { operation: \"query\" });\n                        }\n                        return def;\n                    }) }),\n            };\n            transformCache.set(document, cacheEntry);\n        }\n        return transformCache.get(document);\n    };\n    QueryManager.prototype.getVariables = function (document, variables) {\n        return __assign(__assign({}, this.getDocumentInfo(document).defaultVars), variables);\n    };\n    QueryManager.prototype.watchQuery = function (options) {\n        var query = this.transform(options.query);\n        // assign variable default values if supplied\n        // NOTE: We don't modify options.query here with the transformed query to\n        // ensure observable.options.query is set to the raw untransformed query.\n        options = __assign(__assign({}, options), { variables: this.getVariables(query, options.variables) });\n        if (typeof options.notifyOnNetworkStatusChange === \"undefined\") {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var queryInfo = new QueryInfo(this);\n        var observable = new ObservableQuery({\n            queryManager: this,\n            queryInfo: queryInfo,\n            options: options,\n        });\n        observable[\"lastQuery\"] = query;\n        this.queries.set(observable.queryId, queryInfo);\n        // We give queryInfo the transformed query to ensure the first cache diff\n        // uses the transformed query instead of the raw query\n        queryInfo.init({\n            document: query,\n            observableQuery: observable,\n            variables: observable.variables,\n        });\n        return observable;\n    };\n    QueryManager.prototype.query = function (options, queryId) {\n        var _this = this;\n        if (queryId === void 0) { queryId = this.generateQueryId(); }\n        invariant(options.query, 28);\n        invariant(options.query.kind === \"Document\", 29);\n        invariant(!options.returnPartialData, 30);\n        invariant(!options.pollInterval, 31);\n        return this.fetchQuery(queryId, __assign(__assign({}, options), { query: this.transform(options.query) })).finally(function () { return _this.stopQuery(queryId); });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        return String(this.queryIdCounter++);\n    };\n    QueryManager.prototype.generateRequestId = function () {\n        return this.requestIdCounter++;\n    };\n    QueryManager.prototype.generateMutationId = function () {\n        return String(this.mutationIdCounter++);\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\n        var queryInfo = this.queries.get(queryId);\n        if (queryInfo)\n            queryInfo.stop();\n    };\n    QueryManager.prototype.clearStore = function (options) {\n        if (options === void 0) { options = {\n            discardWatches: true,\n        }; }\n        // Before we have sent the reset action to the store, we can no longer\n        // rely on the results returned by in-flight requests since these may\n        // depend on values that previously existed in the data portion of the\n        // store. So, we cancel the promises and observers that we have issued\n        // so far and not yet resolved (in the case of queries).\n        this.cancelPendingFetches(newInvariantError(32));\n        this.queries.forEach(function (queryInfo) {\n            if (queryInfo.observableQuery) {\n                // Set loading to true so listeners don't trigger unless they want\n                // results with partial data.\n                queryInfo.networkStatus = NetworkStatus.loading;\n            }\n            else {\n                queryInfo.stop();\n            }\n        });\n        if (this.mutationStore) {\n            this.mutationStore = Object.create(null);\n        }\n        // begin removing data from the store\n        return this.cache.reset(options);\n    };\n    QueryManager.prototype.getObservableQueries = function (include) {\n        var _this = this;\n        if (include === void 0) { include = \"active\"; }\n        var queries = new Map();\n        var queryNamesAndDocs = new Map();\n        var legacyQueryOptions = new Set();\n        if (Array.isArray(include)) {\n            include.forEach(function (desc) {\n                if (typeof desc === \"string\") {\n                    queryNamesAndDocs.set(desc, false);\n                }\n                else if (isDocumentNode(desc)) {\n                    queryNamesAndDocs.set(_this.transform(desc), false);\n                }\n                else if (isNonNullObject(desc) && desc.query) {\n                    legacyQueryOptions.add(desc);\n                }\n            });\n        }\n        this.queries.forEach(function (_a, queryId) {\n            var oq = _a.observableQuery, document = _a.document;\n            if (oq) {\n                if (include === \"all\") {\n                    queries.set(queryId, oq);\n                    return;\n                }\n                var queryName = oq.queryName, fetchPolicy = oq.options.fetchPolicy;\n                if (fetchPolicy === \"standby\" ||\n                    (include === \"active\" && !oq.hasObservers())) {\n                    return;\n                }\n                if (include === \"active\" ||\n                    (queryName && queryNamesAndDocs.has(queryName)) ||\n                    (document && queryNamesAndDocs.has(document))) {\n                    queries.set(queryId, oq);\n                    if (queryName)\n                        queryNamesAndDocs.set(queryName, true);\n                    if (document)\n                        queryNamesAndDocs.set(document, true);\n                }\n            }\n        });\n        if (legacyQueryOptions.size) {\n            legacyQueryOptions.forEach(function (options) {\n                // We will be issuing a fresh network request for this query, so we\n                // pre-allocate a new query ID here, using a special prefix to enable\n                // cleaning up these temporary queries later, after fetching.\n                var queryId = makeUniqueId(\"legacyOneTimeQuery\");\n                var queryInfo = _this.getQuery(queryId).init({\n                    document: options.query,\n                    variables: options.variables,\n                });\n                var oq = new ObservableQuery({\n                    queryManager: _this,\n                    queryInfo: queryInfo,\n                    options: __assign(__assign({}, options), { fetchPolicy: \"network-only\" }),\n                });\n                invariant(oq.queryId === queryId);\n                queryInfo.setObservableQuery(oq);\n                queries.set(queryId, oq);\n            });\n        }\n        if (globalThis.__DEV__ !== false && queryNamesAndDocs.size) {\n            queryNamesAndDocs.forEach(function (included, nameOrDoc) {\n                if (!included) {\n                    globalThis.__DEV__ !== false && invariant.warn(typeof nameOrDoc === \"string\" ? 33 : 34, nameOrDoc);\n                }\n            });\n        }\n        return queries;\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var _this = this;\n        if (includeStandby === void 0) { includeStandby = false; }\n        var observableQueryPromises = [];\n        this.getObservableQueries(includeStandby ? \"all\" : \"active\").forEach(function (observableQuery, queryId) {\n            var fetchPolicy = observableQuery.options.fetchPolicy;\n            observableQuery.resetLastResults();\n            if (includeStandby ||\n                (fetchPolicy !== \"standby\" && fetchPolicy !== \"cache-only\")) {\n                observableQueryPromises.push(observableQuery.refetch());\n            }\n            _this.getQuery(queryId).setDiff(null);\n        });\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.setObservableQuery = function (observableQuery) {\n        this.getQuery(observableQuery.queryId).setObservableQuery(observableQuery);\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (_a) {\n        var _this = this;\n        var query = _a.query, fetchPolicy = _a.fetchPolicy, _b = _a.errorPolicy, errorPolicy = _b === void 0 ? \"none\" : _b, variables = _a.variables, _c = _a.context, context = _c === void 0 ? {} : _c;\n        query = this.transform(query);\n        variables = this.getVariables(query, variables);\n        var makeObservable = function (variables) {\n            return _this.getObservableFromLink(query, context, variables).map(function (result) {\n                if (fetchPolicy !== \"no-cache\") {\n                    // the subscription interface should handle not sending us results we no longer subscribe to.\n                    // XXX I don't think we ever send in an object with errors, but we might in the future...\n                    if (shouldWriteResult(result, errorPolicy)) {\n                        _this.cache.write({\n                            query: query,\n                            result: result.data,\n                            dataId: \"ROOT_SUBSCRIPTION\",\n                            variables: variables,\n                        });\n                    }\n                    _this.broadcastQueries();\n                }\n                var hasErrors = graphQLResultHasError(result);\n                var hasProtocolErrors = graphQLResultHasProtocolErrors(result);\n                if (hasErrors || hasProtocolErrors) {\n                    var errors = {};\n                    if (hasErrors) {\n                        errors.graphQLErrors = result.errors;\n                    }\n                    if (hasProtocolErrors) {\n                        errors.protocolErrors = result.extensions[PROTOCOL_ERRORS_SYMBOL];\n                    }\n                    // `errorPolicy` is a mechanism for handling GraphQL errors, according\n                    // to our documentation, so we throw protocol errors regardless of the\n                    // set error policy.\n                    if (errorPolicy === \"none\" || hasProtocolErrors) {\n                        throw new ApolloError(errors);\n                    }\n                }\n                if (errorPolicy === \"ignore\") {\n                    delete result.errors;\n                }\n                return result;\n            });\n        };\n        if (this.getDocumentInfo(query).hasClientExports) {\n            var observablePromise_1 = this.localState\n                .addExportedVariables(query, variables, context)\n                .then(makeObservable);\n            return new Observable(function (observer) {\n                var sub = null;\n                observablePromise_1.then(function (observable) { return (sub = observable.subscribe(observer)); }, observer.error);\n                return function () { return sub && sub.unsubscribe(); };\n            });\n        }\n        return makeObservable(variables);\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        // teardown all links\n        // Both `QueryManager.fetchRequest` and `QueryManager.query` create separate promises\n        // that each add their reject functions to fetchCancelFns.\n        // A query created with `QueryManager.query()` could trigger a `QueryManager.fetchRequest`.\n        // The same queryId could have two rejection fns for two promises\n        this.fetchCancelFns.delete(queryId);\n        if (this.queries.has(queryId)) {\n            this.getQuery(queryId).stop();\n            this.queries.delete(queryId);\n        }\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        if (this.onBroadcast)\n            this.onBroadcast();\n        this.queries.forEach(function (info) { return info.notify(); });\n    };\n    QueryManager.prototype.getLocalState = function () {\n        return this.localState;\n    };\n    QueryManager.prototype.getObservableFromLink = function (query, context, variables, \n    // Prefer context.queryDeduplication if specified.\n    deduplication) {\n        var _this = this;\n        var _a;\n        if (deduplication === void 0) { deduplication = (_a = context === null || context === void 0 ? void 0 : context.queryDeduplication) !== null && _a !== void 0 ? _a : this.queryDeduplication; }\n        var observable;\n        var _b = this.getDocumentInfo(query), serverQuery = _b.serverQuery, clientQuery = _b.clientQuery;\n        if (serverQuery) {\n            var _c = this, inFlightLinkObservables_1 = _c.inFlightLinkObservables, link = _c.link;\n            var operation = {\n                query: serverQuery,\n                variables: variables,\n                operationName: getOperationName(serverQuery) || void 0,\n                context: this.prepareContext(__assign(__assign({}, context), { forceFetch: !deduplication })),\n            };\n            context = operation.context;\n            if (deduplication) {\n                var printedServerQuery_1 = print(serverQuery);\n                var varJson_1 = canonicalStringify(variables);\n                var entry = inFlightLinkObservables_1.lookup(printedServerQuery_1, varJson_1);\n                observable = entry.observable;\n                if (!observable) {\n                    var concast = new Concast([\n                        execute(link, operation),\n                    ]);\n                    observable = entry.observable = concast;\n                    concast.beforeNext(function () {\n                        inFlightLinkObservables_1.remove(printedServerQuery_1, varJson_1);\n                    });\n                }\n            }\n            else {\n                observable = new Concast([\n                    execute(link, operation),\n                ]);\n            }\n        }\n        else {\n            observable = new Concast([Observable.of({ data: {} })]);\n            context = this.prepareContext(context);\n        }\n        if (clientQuery) {\n            observable = asyncMap(observable, function (result) {\n                return _this.localState.runResolvers({\n                    document: clientQuery,\n                    remoteResult: result,\n                    context: context,\n                    variables: variables,\n                });\n            });\n        }\n        return observable;\n    };\n    QueryManager.prototype.getResultsFromLink = function (queryInfo, cacheWriteBehavior, options) {\n        var requestId = (queryInfo.lastRequestId = this.generateRequestId());\n        // Performing transformForLink here gives this.cache a chance to fill in\n        // missing fragment definitions (for example) before sending this document\n        // through the link chain.\n        var linkDocument = this.cache.transformForLink(options.query);\n        return asyncMap(this.getObservableFromLink(linkDocument, options.context, options.variables), function (result) {\n            var graphQLErrors = getGraphQLErrorsFromResult(result);\n            var hasErrors = graphQLErrors.length > 0;\n            // If we interrupted this request by calling getResultsFromLink again\n            // with the same QueryInfo object, we ignore the old results.\n            if (requestId >= queryInfo.lastRequestId) {\n                if (hasErrors && options.errorPolicy === \"none\") {\n                    // Throwing here effectively calls observer.error.\n                    throw queryInfo.markError(new ApolloError({\n                        graphQLErrors: graphQLErrors,\n                    }));\n                }\n                // Use linkDocument rather than queryInfo.document so the\n                // operation/fragments used to write the result are the same as the\n                // ones used to obtain it from the link.\n                queryInfo.markResult(result, linkDocument, options, cacheWriteBehavior);\n                queryInfo.markReady();\n            }\n            var aqr = {\n                data: result.data,\n                loading: false,\n                networkStatus: NetworkStatus.ready,\n            };\n            if (hasErrors && options.errorPolicy !== \"ignore\") {\n                aqr.errors = graphQLErrors;\n                aqr.networkStatus = NetworkStatus.error;\n            }\n            return aqr;\n        }, function (networkError) {\n            var error = isApolloError(networkError) ? networkError : (new ApolloError({ networkError: networkError }));\n            // Avoid storing errors from older interrupted queries.\n            if (requestId >= queryInfo.lastRequestId) {\n                queryInfo.markError(error);\n            }\n            throw error;\n        });\n    };\n    QueryManager.prototype.fetchConcastWithInfo = function (queryId, options, \n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus, query) {\n        var _this = this;\n        if (networkStatus === void 0) { networkStatus = NetworkStatus.loading; }\n        if (query === void 0) { query = options.query; }\n        var variables = this.getVariables(query, options.variables);\n        var queryInfo = this.getQuery(queryId);\n        var defaults = this.defaultOptions.watchQuery;\n        var _a = options.fetchPolicy, fetchPolicy = _a === void 0 ? (defaults && defaults.fetchPolicy) || \"cache-first\" : _a, _b = options.errorPolicy, errorPolicy = _b === void 0 ? (defaults && defaults.errorPolicy) || \"none\" : _b, _c = options.returnPartialData, returnPartialData = _c === void 0 ? false : _c, _d = options.notifyOnNetworkStatusChange, notifyOnNetworkStatusChange = _d === void 0 ? false : _d, _e = options.context, context = _e === void 0 ? {} : _e;\n        var normalized = Object.assign({}, options, {\n            query: query,\n            variables: variables,\n            fetchPolicy: fetchPolicy,\n            errorPolicy: errorPolicy,\n            returnPartialData: returnPartialData,\n            notifyOnNetworkStatusChange: notifyOnNetworkStatusChange,\n            context: context,\n        });\n        var fromVariables = function (variables) {\n            // Since normalized is always a fresh copy of options, it's safe to\n            // modify its properties here, rather than creating yet another new\n            // WatchQueryOptions object.\n            normalized.variables = variables;\n            var sourcesWithInfo = _this.fetchQueryByPolicy(queryInfo, normalized, networkStatus);\n            if (\n            // If we're in standby, postpone advancing options.fetchPolicy using\n            // applyNextFetchPolicy.\n            normalized.fetchPolicy !== \"standby\" &&\n                // The \"standby\" policy currently returns [] from fetchQueryByPolicy, so\n                // this is another way to detect when nothing was done/fetched.\n                sourcesWithInfo.sources.length > 0 &&\n                queryInfo.observableQuery) {\n                queryInfo.observableQuery[\"applyNextFetchPolicy\"](\"after-fetch\", options);\n            }\n            return sourcesWithInfo;\n        };\n        // This cancel function needs to be set before the concast is created,\n        // in case concast creation synchronously cancels the request.\n        var cleanupCancelFn = function () { return _this.fetchCancelFns.delete(queryId); };\n        this.fetchCancelFns.set(queryId, function (reason) {\n            cleanupCancelFn();\n            // This delay ensures the concast variable has been initialized.\n            setTimeout(function () { return concast.cancel(reason); });\n        });\n        var concast, containsDataFromLink;\n        // If the query has @export(as: ...) directives, then we need to\n        // process those directives asynchronously. When there are no\n        // @export directives (the common case), we deliberately avoid\n        // wrapping the result of this.fetchQueryByPolicy in a Promise,\n        // since the timing of result delivery is (unfortunately) important\n        // for backwards compatibility. TODO This code could be simpler if\n        // we deprecated and removed LocalState.\n        if (this.getDocumentInfo(normalized.query).hasClientExports) {\n            concast = new Concast(this.localState\n                .addExportedVariables(normalized.query, normalized.variables, normalized.context)\n                .then(fromVariables)\n                .then(function (sourcesWithInfo) { return sourcesWithInfo.sources; }));\n            // there is just no way we can synchronously get the *right* value here,\n            // so we will assume `true`, which is the behaviour before the bug fix in\n            // #10597. This means that bug is not fixed in that case, and is probably\n            // un-fixable with reasonable effort for the edge case of @export as\n            // directives.\n            containsDataFromLink = true;\n        }\n        else {\n            var sourcesWithInfo = fromVariables(normalized.variables);\n            containsDataFromLink = sourcesWithInfo.fromLink;\n            concast = new Concast(sourcesWithInfo.sources);\n        }\n        concast.promise.then(cleanupCancelFn, cleanupCancelFn);\n        return {\n            concast: concast,\n            fromLink: containsDataFromLink,\n        };\n    };\n    QueryManager.prototype.refetchQueries = function (_a) {\n        var _this = this;\n        var updateCache = _a.updateCache, include = _a.include, _b = _a.optimistic, optimistic = _b === void 0 ? false : _b, _c = _a.removeOptimistic, removeOptimistic = _c === void 0 ? optimistic ? makeUniqueId(\"refetchQueries\") : void 0 : _c, onQueryUpdated = _a.onQueryUpdated;\n        var includedQueriesById = new Map();\n        if (include) {\n            this.getObservableQueries(include).forEach(function (oq, queryId) {\n                includedQueriesById.set(queryId, {\n                    oq: oq,\n                    lastDiff: _this.getQuery(queryId).getDiff(),\n                });\n            });\n        }\n        var results = new Map();\n        if (updateCache) {\n            this.cache.batch({\n                update: updateCache,\n                // Since you can perform any combination of cache reads and/or writes in\n                // the cache.batch update function, its optimistic option can be either\n                // a boolean or a string, representing three distinct modes of\n                // operation:\n                //\n                // * false: read/write only the root layer\n                // * true: read/write the topmost layer\n                // * string: read/write a fresh optimistic layer with that ID string\n                //\n                // When typeof optimistic === \"string\", a new optimistic layer will be\n                // temporarily created within cache.batch with that string as its ID. If\n                // we then pass that same string as the removeOptimistic option, we can\n                // make cache.batch immediately remove the optimistic layer after\n                // running the updateCache function, triggering only one broadcast.\n                //\n                // However, the refetchQueries method accepts only true or false for its\n                // optimistic option (not string). We interpret true to mean a temporary\n                // optimistic layer should be created, to allow efficiently rolling back\n                // the effect of the updateCache function, which involves passing a\n                // string instead of true as the optimistic option to cache.batch, when\n                // refetchQueries receives optimistic: true.\n                //\n                // In other words, we are deliberately not supporting the use case of\n                // writing to an *existing* optimistic layer (using the refetchQueries\n                // updateCache function), since that would potentially interfere with\n                // other optimistic updates in progress. Instead, you can read/write\n                // only the root layer by passing optimistic: false to refetchQueries,\n                // or you can read/write a brand new optimistic layer that will be\n                // automatically removed by passing optimistic: true.\n                optimistic: (optimistic && removeOptimistic) || false,\n                // The removeOptimistic option can also be provided by itself, even if\n                // optimistic === false, to remove some previously-added optimistic\n                // layer safely and efficiently, like we do in markMutationResult.\n                //\n                // If an explicit removeOptimistic string is provided with optimistic:\n                // true, the removeOptimistic string will determine the ID of the\n                // temporary optimistic layer, in case that ever matters.\n                removeOptimistic: removeOptimistic,\n                onWatchUpdated: function (watch, diff, lastDiff) {\n                    var oq = watch.watcher instanceof QueryInfo && watch.watcher.observableQuery;\n                    if (oq) {\n                        if (onQueryUpdated) {\n                            // Since we're about to handle this query now, remove it from\n                            // includedQueriesById, in case it was added earlier because of\n                            // options.include.\n                            includedQueriesById.delete(oq.queryId);\n                            var result = onQueryUpdated(oq, diff, lastDiff);\n                            if (result === true) {\n                                // The onQueryUpdated function requested the default refetching\n                                // behavior by returning true.\n                                result = oq.refetch();\n                            }\n                            // Record the result in the results Map, as long as onQueryUpdated\n                            // did not return false to skip/ignore this result.\n                            if (result !== false) {\n                                results.set(oq, result);\n                            }\n                            // Allow the default cache broadcast to happen, except when\n                            // onQueryUpdated returns false.\n                            return result;\n                        }\n                        if (onQueryUpdated !== null) {\n                            // If we don't have an onQueryUpdated function, and onQueryUpdated\n                            // was not disabled by passing null, make sure this query is\n                            // \"included\" like any other options.include-specified query.\n                            includedQueriesById.set(oq.queryId, { oq: oq, lastDiff: lastDiff, diff: diff });\n                        }\n                    }\n                },\n            });\n        }\n        if (includedQueriesById.size) {\n            includedQueriesById.forEach(function (_a, queryId) {\n                var oq = _a.oq, lastDiff = _a.lastDiff, diff = _a.diff;\n                var result;\n                // If onQueryUpdated is provided, we want to use it for all included\n                // queries, even the QueryOptions ones.\n                if (onQueryUpdated) {\n                    if (!diff) {\n                        var info = oq[\"queryInfo\"];\n                        info.reset(); // Force info.getDiff() to read from cache.\n                        diff = info.getDiff();\n                    }\n                    result = onQueryUpdated(oq, diff, lastDiff);\n                }\n                // Otherwise, we fall back to refetching.\n                if (!onQueryUpdated || result === true) {\n                    result = oq.refetch();\n                }\n                if (result !== false) {\n                    results.set(oq, result);\n                }\n                if (queryId.indexOf(\"legacyOneTimeQuery\") >= 0) {\n                    _this.stopQueryNoBroadcast(queryId);\n                }\n            });\n        }\n        if (removeOptimistic) {\n            // In case no updateCache callback was provided (so cache.batch was not\n            // called above, and thus did not already remove the optimistic layer),\n            // remove it here. Since this is a no-op when the layer has already been\n            // removed, we do it even if we called cache.batch above, since it's\n            // possible this.cache is an instance of some ApolloCache subclass other\n            // than InMemoryCache, and does not fully support the removeOptimistic\n            // option for cache.batch.\n            this.cache.removeOptimistic(removeOptimistic);\n        }\n        return results;\n    };\n    QueryManager.prototype.fetchQueryByPolicy = function (queryInfo, _a, \n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus) {\n        var _this = this;\n        var query = _a.query, variables = _a.variables, fetchPolicy = _a.fetchPolicy, refetchWritePolicy = _a.refetchWritePolicy, errorPolicy = _a.errorPolicy, returnPartialData = _a.returnPartialData, context = _a.context, notifyOnNetworkStatusChange = _a.notifyOnNetworkStatusChange;\n        var oldNetworkStatus = queryInfo.networkStatus;\n        queryInfo.init({\n            document: query,\n            variables: variables,\n            networkStatus: networkStatus,\n        });\n        var readCache = function () { return queryInfo.getDiff(); };\n        var resultsFromCache = function (diff, networkStatus) {\n            if (networkStatus === void 0) { networkStatus = queryInfo.networkStatus || NetworkStatus.loading; }\n            var data = diff.result;\n            if (globalThis.__DEV__ !== false && !returnPartialData && !equal(data, {})) {\n                logMissingFieldErrors(diff.missing);\n            }\n            var fromData = function (data) {\n                return Observable.of(__assign({ data: data, loading: isNetworkRequestInFlight(networkStatus), networkStatus: networkStatus }, (diff.complete ? null : { partial: true })));\n            };\n            if (data && _this.getDocumentInfo(query).hasForcedResolvers) {\n                return _this.localState\n                    .runResolvers({\n                    document: query,\n                    remoteResult: { data: data },\n                    context: context,\n                    variables: variables,\n                    onlyRunForcedResolvers: true,\n                })\n                    .then(function (resolved) { return fromData(resolved.data || void 0); });\n            }\n            // Resolves https://github.com/apollographql/apollo-client/issues/10317.\n            // If errorPolicy is 'none' and notifyOnNetworkStatusChange is true,\n            // data was incorrectly returned from the cache on refetch:\n            // if diff.missing exists, we should not return cache data.\n            if (errorPolicy === \"none\" &&\n                networkStatus === NetworkStatus.refetch &&\n                Array.isArray(diff.missing)) {\n                return fromData(void 0);\n            }\n            return fromData(data);\n        };\n        var cacheWriteBehavior = fetchPolicy === \"no-cache\" ? 0 /* CacheWriteBehavior.FORBID */\n            // Watched queries must opt into overwriting existing data on refetch,\n            // by passing refetchWritePolicy: \"overwrite\" in their WatchQueryOptions.\n            : (networkStatus === NetworkStatus.refetch &&\n                refetchWritePolicy !== \"merge\") ?\n                1 /* CacheWriteBehavior.OVERWRITE */\n                : 2 /* CacheWriteBehavior.MERGE */;\n        var resultsFromLink = function () {\n            return _this.getResultsFromLink(queryInfo, cacheWriteBehavior, {\n                query: query,\n                variables: variables,\n                context: context,\n                fetchPolicy: fetchPolicy,\n                errorPolicy: errorPolicy,\n            });\n        };\n        var shouldNotify = notifyOnNetworkStatusChange &&\n            typeof oldNetworkStatus === \"number\" &&\n            oldNetworkStatus !== networkStatus &&\n            isNetworkRequestInFlight(networkStatus);\n        switch (fetchPolicy) {\n            default:\n            case \"cache-first\": {\n                var diff = readCache();\n                if (diff.complete) {\n                    return {\n                        fromLink: false,\n                        sources: [resultsFromCache(diff, queryInfo.markReady())],\n                    };\n                }\n                if (returnPartialData || shouldNotify) {\n                    return {\n                        fromLink: true,\n                        sources: [resultsFromCache(diff), resultsFromLink()],\n                    };\n                }\n                return { fromLink: true, sources: [resultsFromLink()] };\n            }\n            case \"cache-and-network\": {\n                var diff = readCache();\n                if (diff.complete || returnPartialData || shouldNotify) {\n                    return {\n                        fromLink: true,\n                        sources: [resultsFromCache(diff), resultsFromLink()],\n                    };\n                }\n                return { fromLink: true, sources: [resultsFromLink()] };\n            }\n            case \"cache-only\":\n                return {\n                    fromLink: false,\n                    sources: [resultsFromCache(readCache(), queryInfo.markReady())],\n                };\n            case \"network-only\":\n                if (shouldNotify) {\n                    return {\n                        fromLink: true,\n                        sources: [resultsFromCache(readCache()), resultsFromLink()],\n                    };\n                }\n                return { fromLink: true, sources: [resultsFromLink()] };\n            case \"no-cache\":\n                if (shouldNotify) {\n                    return {\n                        fromLink: true,\n                        // Note that queryInfo.getDiff() for no-cache queries does not call\n                        // cache.diff, but instead returns a { complete: false } stub result\n                        // when there is no queryInfo.diff already defined.\n                        sources: [resultsFromCache(queryInfo.getDiff()), resultsFromLink()],\n                    };\n                }\n                return { fromLink: true, sources: [resultsFromLink()] };\n            case \"standby\":\n                return { fromLink: false, sources: [] };\n        }\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        if (queryId && !this.queries.has(queryId)) {\n            this.queries.set(queryId, new QueryInfo(this, queryId));\n        }\n        return this.queries.get(queryId);\n    };\n    QueryManager.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var newContext = this.localState.prepareContext(context);\n        return __assign(__assign(__assign({}, this.defaultContext), newContext), { clientAwareness: this.clientAwareness });\n    };\n    return QueryManager;\n}());\nexport { QueryManager };\n//# sourceMappingURL=QueryManager.js.map","import { __assign } from \"tslib\";\nimport { invariant, newInvariantError } from \"../utilities/globals/index.js\";\nimport { ApolloLink, execute } from \"../link/core/index.js\";\nimport { version } from \"../version.js\";\nimport { HttpLink } from \"../link/http/index.js\";\nimport { QueryManager } from \"./QueryManager.js\";\nimport { LocalState } from \"./LocalState.js\";\nvar hasSuggestedDevtools = false;\n// Though mergeOptions now resides in @apollo/client/utilities, it was\n// previously declared and exported from this module, and then reexported from\n// @apollo/client/core. Since we need to preserve that API anyway, the easiest\n// solution is to reexport mergeOptions where it was previously declared (here).\nimport { mergeOptions } from \"../utilities/index.js\";\nimport { getApolloClientMemoryInternals } from \"../utilities/caching/getMemoryInternals.js\";\nexport { mergeOptions };\n/**\n * This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\n * and mutations) to a GraphQL spec-compliant server over an {@link ApolloLink} instance,\n * receive results from the server and cache the results in a store. It also delivers updates\n * to GraphQL queries through {@link Observable} instances.\n */\nvar ApolloClient = /** @class */ (function () {\n    /**\n     * Constructs an instance of {@link ApolloClient}.\n     *\n     * @example\n     * ```js\n     * import { ApolloClient, InMemoryCache } from '@apollo/client';\n     *\n     * const cache = new InMemoryCache();\n     *\n     * const client = new ApolloClient({\n     *   // Provide required constructor fields\n     *   cache: cache,\n     *   uri: 'http://localhost:4000/',\n     *\n     *   // Provide some optional constructor fields\n     *   name: 'react-web-client',\n     *   version: '1.3',\n     *   queryDeduplication: false,\n     *   defaultOptions: {\n     *     watchQuery: {\n     *       fetchPolicy: 'cache-and-network',\n     *     },\n     *   },\n     * });\n     * ```\n     */\n    function ApolloClient(options) {\n        var _this = this;\n        this.resetStoreCallbacks = [];\n        this.clearStoreCallbacks = [];\n        if (!options.cache) {\n            throw newInvariantError(15);\n        }\n        var uri = options.uri, credentials = options.credentials, headers = options.headers, cache = options.cache, documentTransform = options.documentTransform, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, \n        // Expose the client instance as window.__APOLLO_CLIENT__ and call\n        // onBroadcast in queryManager.broadcastQueries to enable browser\n        // devtools, but disable them by default in production.\n        _c = options.connectToDevTools, \n        // Expose the client instance as window.__APOLLO_CLIENT__ and call\n        // onBroadcast in queryManager.broadcastQueries to enable browser\n        // devtools, but disable them by default in production.\n        connectToDevTools = _c === void 0 ? typeof window === \"object\" &&\n            !window.__APOLLO_CLIENT__ &&\n            globalThis.__DEV__ !== false : _c, _d = options.queryDeduplication, queryDeduplication = _d === void 0 ? true : _d, defaultOptions = options.defaultOptions, defaultContext = options.defaultContext, _e = options.assumeImmutableResults, assumeImmutableResults = _e === void 0 ? cache.assumeImmutableResults : _e, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\n        var link = options.link;\n        if (!link) {\n            link =\n                uri ? new HttpLink({ uri: uri, credentials: credentials, headers: headers }) : ApolloLink.empty();\n        }\n        this.link = link;\n        this.cache = cache;\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.defaultOptions = defaultOptions || Object.create(null);\n        this.typeDefs = typeDefs;\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        this.version = version;\n        this.localState = new LocalState({\n            cache: cache,\n            client: this,\n            resolvers: resolvers,\n            fragmentMatcher: fragmentMatcher,\n        });\n        this.queryManager = new QueryManager({\n            cache: this.cache,\n            link: this.link,\n            defaultOptions: this.defaultOptions,\n            defaultContext: defaultContext,\n            documentTransform: documentTransform,\n            queryDeduplication: queryDeduplication,\n            ssrMode: ssrMode,\n            clientAwareness: {\n                name: clientAwarenessName,\n                version: clientAwarenessVersion,\n            },\n            localState: this.localState,\n            assumeImmutableResults: assumeImmutableResults,\n            onBroadcast: connectToDevTools ?\n                function () {\n                    if (_this.devToolsHookCb) {\n                        _this.devToolsHookCb({\n                            action: {},\n                            state: {\n                                queries: _this.queryManager.getQueryStore(),\n                                mutations: _this.queryManager.mutationStore || {},\n                            },\n                            dataWithOptimisticResults: _this.cache.extract(true),\n                        });\n                    }\n                }\n                : void 0,\n        });\n        if (connectToDevTools)\n            this.connectToDevTools();\n    }\n    ApolloClient.prototype.connectToDevTools = function () {\n        if (typeof window === \"object\") {\n            var windowWithDevTools = window;\n            var devtoolsSymbol = Symbol.for(\"apollo.devtools\");\n            (windowWithDevTools[devtoolsSymbol] =\n                windowWithDevTools[devtoolsSymbol] || []).push(this);\n            windowWithDevTools.__APOLLO_CLIENT__ = this;\n        }\n        /**\n         * Suggest installing the devtools for developers who don't have them\n         */\n        if (!hasSuggestedDevtools && globalThis.__DEV__ !== false) {\n            hasSuggestedDevtools = true;\n            setTimeout(function () {\n                if (typeof window !== \"undefined\" &&\n                    window.document &&\n                    window.top === window.self &&\n                    !window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__) {\n                    var nav = window.navigator;\n                    var ua = nav && nav.userAgent;\n                    var url = void 0;\n                    if (typeof ua === \"string\") {\n                        if (ua.indexOf(\"Chrome/\") > -1) {\n                            url =\n                                \"https://chrome.google.com/webstore/detail/\" +\n                                    \"apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm\";\n                        }\n                        else if (ua.indexOf(\"Firefox/\") > -1) {\n                            url =\n                                \"https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/\";\n                        }\n                    }\n                    if (url) {\n                        globalThis.__DEV__ !== false && invariant.log(\"Download the Apollo DevTools for a better development \" +\n                            \"experience: %s\", url);\n                    }\n                }\n            }, 10000);\n        }\n    };\n    Object.defineProperty(ApolloClient.prototype, \"documentTransform\", {\n        /**\n         * The `DocumentTransform` used to modify GraphQL documents before a request\n         * is made. If a custom `DocumentTransform` is not provided, this will be the\n         * default document transform.\n         */\n        get: function () {\n            return this.queryManager.documentTransform;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Call this method to terminate any active client processes, making it safe\n     * to dispose of this `ApolloClient` instance.\n     */\n    ApolloClient.prototype.stop = function () {\n        this.queryManager.stop();\n    };\n    /**\n     * This watches the cache store of the query according to the options specified and\n     * returns an {@link ObservableQuery}. We can subscribe to this {@link ObservableQuery} and\n     * receive updated results through a GraphQL observer when the cache store changes.\n     *\n     * Note that this method is not an implementation of GraphQL subscriptions. Rather,\n     * it uses Apollo's store in order to reactively deliver updates to your query results.\n     *\n     * For example, suppose you call watchQuery on a GraphQL query that fetches a person's\n     * first and last name and this person has a particular object identifier, provided by\n     * dataIdFromObject. Later, a different query fetches that same person's\n     * first and last name and the first name has now changed. Then, any observers associated\n     * with the results of the first query will be updated with a new result object.\n     *\n     * Note that if the cache does not change, the subscriber will *not* be notified.\n     *\n     * See [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\n     * a description of store reactivity.\n     */\n    ApolloClient.prototype.watchQuery = function (options) {\n        if (this.defaultOptions.watchQuery) {\n            options = mergeOptions(this.defaultOptions.watchQuery, options);\n        }\n        // XXX Overwriting options is probably not the best way to do this long term...\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === \"network-only\" ||\n                options.fetchPolicy === \"cache-and-network\")) {\n            options = __assign(__assign({}, options), { fetchPolicy: \"cache-first\" });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    /**\n     * This resolves a single query according to the options specified and\n     * returns a `Promise` which is either resolved with the resulting data\n     * or rejected with an error.\n     *\n     * @param options - An object of type {@link QueryOptions} that allows us to\n     * describe how this query should be treated e.g. whether it should hit the\n     * server at all or just resolve from the cache, etc.\n     */\n    ApolloClient.prototype.query = function (options) {\n        if (this.defaultOptions.query) {\n            options = mergeOptions(this.defaultOptions.query, options);\n        }\n        invariant(options.fetchPolicy !== \"cache-and-network\", 16);\n        if (this.disableNetworkFetches && options.fetchPolicy === \"network-only\") {\n            options = __assign(__assign({}, options), { fetchPolicy: \"cache-first\" });\n        }\n        return this.queryManager.query(options);\n    };\n    /**\n     * This resolves a single mutation according to the options specified and returns a\n     * Promise which is either resolved with the resulting data or rejected with an\n     * error. In some cases both `data` and `errors` might be undefined, for example\n     * when `errorPolicy` is set to `'ignore'`.\n     *\n     * It takes options as an object with the following keys and values:\n     */\n    ApolloClient.prototype.mutate = function (options) {\n        if (this.defaultOptions.mutate) {\n            options = mergeOptions(this.defaultOptions.mutate, options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    /**\n     * This subscribes to a graphql subscription according to the options specified and returns an\n     * {@link Observable} which either emits received data or an error.\n     */\n    ApolloClient.prototype.subscribe = function (options) {\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    /**\n     * Tries to read some data from the store in the shape of the provided\n     * GraphQL query without making a network request. This method will start at\n     * the root query. To start at a specific id returned by `dataIdFromObject`\n     * use `readFragment`.\n     *\n     * @param optimistic - Set to `true` to allow `readQuery` to return\n     * optimistic results. Is `false` by default.\n     */\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readQuery(options, optimistic);\n    };\n    /**\n     * Tries to read some data from the store in the shape of the provided\n     * GraphQL fragment without making a network request. This method will read a\n     * GraphQL fragment from any arbitrary id that is currently cached, unlike\n     * `readQuery` which will only read from the root query.\n     *\n     * You must pass in a GraphQL document with a single fragment or a document\n     * with multiple fragments that represent what you are reading. If you pass\n     * in a document with multiple fragments then you must also specify a\n     * `fragmentName`.\n     *\n     * @param optimistic - Set to `true` to allow `readFragment` to return\n     * optimistic results. Is `false` by default.\n     */\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readFragment(options, optimistic);\n    };\n    /**\n     * Writes some data in the shape of the provided GraphQL query directly to\n     * the store. This method will start at the root query. To start at a\n     * specific id returned by `dataIdFromObject` then use `writeFragment`.\n     */\n    ApolloClient.prototype.writeQuery = function (options) {\n        var ref = this.cache.writeQuery(options);\n        if (options.broadcast !== false) {\n            this.queryManager.broadcastQueries();\n        }\n        return ref;\n    };\n    /**\n     * Writes some data in the shape of the provided GraphQL fragment directly to\n     * the store. This method will write to a GraphQL fragment from any arbitrary\n     * id that is currently cached, unlike `writeQuery` which will only write\n     * from the root query.\n     *\n     * You must pass in a GraphQL document with a single fragment or a document\n     * with multiple fragments that represent what you are writing. If you pass\n     * in a document with multiple fragments then you must also specify a\n     * `fragmentName`.\n     */\n    ApolloClient.prototype.writeFragment = function (options) {\n        var ref = this.cache.writeFragment(options);\n        if (options.broadcast !== false) {\n            this.queryManager.broadcastQueries();\n        }\n        return ref;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    /**\n     * Resets your entire store by clearing out your cache and then re-executing\n     * all of your active queries. This makes it so that you may guarantee that\n     * there is no data left in your store from a time before you called this\n     * method.\n     *\n     * `resetStore()` is useful when your user just logged out. You’ve removed the\n     * user session, and you now want to make sure that any references to data you\n     * might have fetched while the user session was active is gone.\n     *\n     * It is important to remember that `resetStore()` *will* refetch any active\n     * queries. This means that any components that might be mounted will execute\n     * their queries again using your network interface. If you do not want to\n     * re-execute any queries then you should make sure to stop watching any\n     * active queries.\n     */\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            return _this.queryManager.clearStore({\n                discardWatches: false,\n            });\n        })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () { return _this.reFetchObservableQueries(); });\n    };\n    /**\n     * Remove all data from the store. Unlike `resetStore`, `clearStore` will\n     * not refetch any active queries.\n     */\n    ApolloClient.prototype.clearStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            return _this.queryManager.clearStore({\n                discardWatches: true,\n            });\n        })\n            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); });\n    };\n    /**\n     * Allows callbacks to be registered that are executed when the store is\n     * reset. `onResetStore` returns an unsubscribe function that can be used\n     * to remove registered callbacks.\n     */\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    /**\n     * Allows callbacks to be registered that are executed when the store is\n     * cleared. `onClearStore` returns an unsubscribe function that can be used\n     * to remove registered callbacks.\n     */\n    ApolloClient.prototype.onClearStore = function (cb) {\n        var _this = this;\n        this.clearStoreCallbacks.push(cb);\n        return function () {\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    /**\n     * Refetches all of your active queries.\n     *\n     * `reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n     *\n     * It is important to remember that `reFetchObservableQueries()` *will* refetch any active\n     * queries. This means that any components that might be mounted will execute\n     * their queries again using your network interface. If you do not want to\n     * re-execute any queries then you should make sure to stop watching any\n     * active queries.\n     * Takes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n     */\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager.reFetchObservableQueries(includeStandby);\n    };\n    /**\n     * Refetches specified active queries. Similar to \"reFetchObservableQueries()\" but with a specific list of queries.\n     *\n     * `refetchQueries()` is useful for use cases to imperatively refresh a selection of queries.\n     *\n     * It is important to remember that `refetchQueries()` *will* refetch specified active\n     * queries. This means that any components that might be mounted will execute\n     * their queries again using your network interface. If you do not want to\n     * re-execute any queries then you should make sure to stop watching any\n     * active queries.\n     */\n    ApolloClient.prototype.refetchQueries = function (options) {\n        var map = this.queryManager.refetchQueries(options);\n        var queries = [];\n        var results = [];\n        map.forEach(function (result, obsQuery) {\n            queries.push(obsQuery);\n            results.push(result);\n        });\n        var result = Promise.all(results);\n        // In case you need the raw results immediately, without awaiting\n        // Promise.all(results):\n        result.queries = queries;\n        result.results = results;\n        // If you decide to ignore the result Promise because you're using\n        // result.queries and result.results instead, you shouldn't have to worry\n        // about preventing uncaught rejections for the Promise.all result.\n        result.catch(function (error) {\n            globalThis.__DEV__ !== false && invariant.debug(17, error);\n        });\n        return result;\n    };\n    /**\n     * Get all currently active `ObservableQuery` objects, in a `Map` keyed by\n     * query ID strings.\n     *\n     * An \"active\" query is one that has observers and a `fetchPolicy` other than\n     * \"standby\" or \"cache-only\".\n     *\n     * You can include all `ObservableQuery` objects (including the inactive ones)\n     * by passing \"all\" instead of \"active\", or you can include just a subset of\n     * active queries by passing an array of query names or DocumentNode objects.\n     */\n    ApolloClient.prototype.getObservableQueries = function (include) {\n        if (include === void 0) { include = \"active\"; }\n        return this.queryManager.getObservableQueries(include);\n    };\n    /**\n     * Exposes the cache's complete state, in a serializable format for later restoration.\n     */\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.cache.extract(optimistic);\n    };\n    /**\n     * Replaces existing state in the cache (if any) with the values expressed by\n     * `serializedState`.\n     *\n     * Called when hydrating a cache (server side rendering, or offline storage),\n     * and also (potentially) during hot reloads.\n     */\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.cache.restore(serializedState);\n    };\n    /**\n     * Add additional local resolvers.\n     */\n    ApolloClient.prototype.addResolvers = function (resolvers) {\n        this.localState.addResolvers(resolvers);\n    };\n    /**\n     * Set (override existing) local resolvers.\n     */\n    ApolloClient.prototype.setResolvers = function (resolvers) {\n        this.localState.setResolvers(resolvers);\n    };\n    /**\n     * Get all registered local resolvers.\n     */\n    ApolloClient.prototype.getResolvers = function () {\n        return this.localState.getResolvers();\n    };\n    /**\n     * Set a custom local state fragment matcher.\n     */\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n        this.localState.setFragmentMatcher(fragmentMatcher);\n    };\n    /**\n     * Define a new ApolloLink (or link chain) that Apollo Client will use.\n     */\n    ApolloClient.prototype.setLink = function (newLink) {\n        this.link = this.queryManager.link = newLink;\n    };\n    Object.defineProperty(ApolloClient.prototype, \"defaultContext\", {\n        get: function () {\n            return this.queryManager.defaultContext;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ApolloClient;\n}());\nexport { ApolloClient };\nif (globalThis.__DEV__ !== false) {\n    ApolloClient.prototype.getMemoryInternals = getApolloClientMemoryInternals;\n}\n//# sourceMappingURL=ApolloClient.js.map","/**\n * The current status of a query’s execution in our system.\n */\nexport var NetworkStatus;\n(function (NetworkStatus) {\n    /**\n     * The query has never been run before and the query is now currently running. A query will still\n     * have this network status even if a partial data result was returned from the cache, but a\n     * query was dispatched anyway.\n     */\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    /**\n     * If `setVariables` was called and a query was fired because of that then the network status\n     * will be `setVariables` until the result of that query comes back.\n     */\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    /**\n     * Indicates that `fetchMore` was called on this query and that the query created is currently in\n     * flight.\n     */\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    /**\n     * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n     * and the refetch request is currently in flight.\n     */\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    /**\n     * Indicates that a polling query is currently in flight. So for example if you are polling a\n     * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n     * a poll request has been sent but not resolved.\n     */\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    /**\n     * No request is in flight for this query, and no errors happened. Everything is OK.\n     */\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    /**\n     * No request is in flight for this query, but one or more errors were detected.\n     */\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nexport function isNetworkRequestInFlight(networkStatus) {\n    return networkStatus ? networkStatus < 7 : false;\n}\n/**\n * Returns true if the network request is in ready or error state according to a given network\n * status.\n */\nexport function isNetworkRequestSettled(networkStatus) {\n    return networkStatus === 7 || networkStatus === 8;\n}\n//# sourceMappingURL=networkStatus.js.map","import { __extends, __spreadArray } from \"tslib\";\nimport \"../utilities/globals/index.js\";\nimport { isNonNullObject } from \"../utilities/index.js\";\n// This Symbol allows us to pass transport-specific errors from the link chain\n// into QueryManager/client internals without risking a naming collision within\n// extensions (which implementers can use as they see fit).\nexport var PROTOCOL_ERRORS_SYMBOL = Symbol();\nexport function graphQLResultHasProtocolErrors(result) {\n    if (result.extensions) {\n        return Array.isArray(result.extensions[PROTOCOL_ERRORS_SYMBOL]);\n    }\n    return false;\n}\nexport function isApolloError(err) {\n    return err.hasOwnProperty(\"graphQLErrors\");\n}\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nvar generateErrorMessage = function (err) {\n    var errors = __spreadArray(__spreadArray(__spreadArray([], err.graphQLErrors, true), err.clientErrors, true), err.protocolErrors, true);\n    if (err.networkError)\n        errors.push(err.networkError);\n    return (errors\n        // The rest of the code sometimes unsafely types non-Error objects as GraphQLErrors\n        .map(function (err) {\n        return (isNonNullObject(err) && err.message) || \"Error message not found.\";\n    })\n        .join(\"\\n\"));\n};\nvar ApolloError = /** @class */ (function (_super) {\n    __extends(ApolloError, _super);\n    // Constructs an instance of ApolloError given a GraphQLError\n    // or a network error. Note that one of these has to be a valid\n    // value or the constructed error will be meaningless.\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, protocolErrors = _a.protocolErrors, clientErrors = _a.clientErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.name = \"ApolloError\";\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.protocolErrors = protocolErrors || [];\n        _this.clientErrors = clientErrors || [];\n        _this.networkError = networkError || null;\n        _this.message = errorMessage || generateErrorMessage(_this);\n        _this.extraInfo = extraInfo;\n        // We're not using `Object.setPrototypeOf` here as it isn't fully\n        // supported on Android (see issue #3236).\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\nexport { ApolloError };\n//# sourceMappingURL=index.js.map","import { newInvariantError, invariant } from \"../../utilities/globals/index.js\";\nimport { Observable } from \"../../utilities/index.js\";\nimport { validateOperation, createOperation, transformOperation, } from \"../utils/index.js\";\nfunction passthrough(op, forward) {\n    return (forward ? forward(op) : Observable.of());\n}\nfunction toLink(handler) {\n    return typeof handler === \"function\" ? new ApolloLink(handler) : handler;\n}\nfunction isTerminating(link) {\n    return link.request.length <= 1;\n}\nvar ApolloLink = /** @class */ (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.empty = function () {\n        return new ApolloLink(function () { return Observable.of(); });\n    };\n    ApolloLink.from = function (links) {\n        if (links.length === 0)\n            return ApolloLink.empty();\n        return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n    };\n    ApolloLink.split = function (test, left, right) {\n        var leftLink = toLink(left);\n        var rightLink = toLink(right || new ApolloLink(passthrough));\n        var ret;\n        if (isTerminating(leftLink) && isTerminating(rightLink)) {\n            ret = new ApolloLink(function (operation) {\n                return test(operation) ?\n                    leftLink.request(operation) || Observable.of()\n                    : rightLink.request(operation) || Observable.of();\n            });\n        }\n        else {\n            ret = new ApolloLink(function (operation, forward) {\n                return test(operation) ?\n                    leftLink.request(operation, forward) || Observable.of()\n                    : rightLink.request(operation, forward) || Observable.of();\n            });\n        }\n        return Object.assign(ret, { left: leftLink, right: rightLink });\n    };\n    ApolloLink.execute = function (link, operation) {\n        return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\n    };\n    ApolloLink.concat = function (first, second) {\n        var firstLink = toLink(first);\n        if (isTerminating(firstLink)) {\n            globalThis.__DEV__ !== false && invariant.warn(35, firstLink);\n            return firstLink;\n        }\n        var nextLink = toLink(second);\n        var ret;\n        if (isTerminating(nextLink)) {\n            ret = new ApolloLink(function (operation) {\n                return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\n            });\n        }\n        else {\n            ret = new ApolloLink(function (operation, forward) {\n                return (firstLink.request(operation, function (op) {\n                    return nextLink.request(op, forward) || Observable.of();\n                }) || Observable.of());\n            });\n        }\n        return Object.assign(ret, { left: firstLink, right: nextLink });\n    };\n    ApolloLink.prototype.split = function (test, left, right) {\n        return this.concat(ApolloLink.split(test, left, right || new ApolloLink(passthrough)));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return ApolloLink.concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw newInvariantError(36);\n    };\n    ApolloLink.prototype.onError = function (error, observer) {\n        if (observer && observer.error) {\n            observer.error(error);\n            // Returning false indicates that observer.error does not need to be\n            // called again, since it was already called (on the previous line).\n            // Calling observer.error again would not cause any real problems,\n            // since only the first call matters, but custom onError functions\n            // might have other reasons for wanting to prevent the default\n            // behavior by returning false.\n            return false;\n        }\n        // Throw errors will be passed to observer.error.\n        throw error;\n    };\n    ApolloLink.prototype.setOnError = function (fn) {\n        this.onError = fn;\n        return this;\n    };\n    return ApolloLink;\n}());\nexport { ApolloLink };\n//# sourceMappingURL=ApolloLink.js.map","import { __assign } from \"tslib\";\nexport function createOperation(starting, operation) {\n    var context = __assign({}, starting);\n    var setContext = function (next) {\n        if (typeof next === \"function\") {\n            context = __assign(__assign({}, context), next(context));\n        }\n        else {\n            context = __assign(__assign({}, context), next);\n        }\n    };\n    var getContext = function () { return (__assign({}, context)); };\n    Object.defineProperty(operation, \"setContext\", {\n        enumerable: false,\n        value: setContext,\n    });\n    Object.defineProperty(operation, \"getContext\", {\n        enumerable: false,\n        value: getContext,\n    });\n    return operation;\n}\n//# sourceMappingURL=createOperation.js.map","import { getOperationName } from \"../../utilities/index.js\";\nexport function transformOperation(operation) {\n    var transformedOperation = {\n        variables: operation.variables || {},\n        extensions: operation.extensions || {},\n        operationName: operation.operationName,\n        query: operation.query,\n    };\n    // Best guess at an operation name\n    if (!transformedOperation.operationName) {\n        transformedOperation.operationName =\n            typeof transformedOperation.query !== \"string\" ?\n                getOperationName(transformedOperation.query) || undefined\n                : \"\";\n    }\n    return transformedOperation;\n}\n//# sourceMappingURL=transformOperation.js.map","import { newInvariantError } from \"../../utilities/globals/index.js\";\nexport function validateOperation(operation) {\n    var OPERATION_FIELDS = [\n        \"query\",\n        \"operationName\",\n        \"variables\",\n        \"extensions\",\n        \"context\",\n    ];\n    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\n            throw newInvariantError(43, key);\n        }\n    }\n    return operation;\n}\n//# sourceMappingURL=validateOperation.js.map","import { newInvariantError } from \"../../utilities/globals/index.js\";\nexport var serializeFetchParameter = function (p, label) {\n    var serialized;\n    try {\n        serialized = JSON.stringify(p);\n    }\n    catch (e) {\n        var parseError = newInvariantError(39, label, e.message);\n        parseError.parseError = e;\n        throw parseError;\n    }\n    return serialized;\n};\n//# sourceMappingURL=serializeFetchParameter.js.map","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/nodeStream.ts\n */\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\nexport default function nodeStreamIterator(stream) {\n    var cleanup = null;\n    var error = null;\n    var done = false;\n    var data = [];\n    var waiting = [];\n    function onData(chunk) {\n        if (error)\n            return;\n        if (waiting.length) {\n            var shiftedArr = waiting.shift();\n            if (Array.isArray(shiftedArr) && shiftedArr[0]) {\n                return shiftedArr[0]({ value: chunk, done: false });\n            }\n        }\n        data.push(chunk);\n    }\n    function onError(err) {\n        error = err;\n        var all = waiting.slice();\n        all.forEach(function (pair) {\n            pair[1](err);\n        });\n        !cleanup || cleanup();\n    }\n    function onEnd() {\n        done = true;\n        var all = waiting.slice();\n        all.forEach(function (pair) {\n            pair[0]({ value: undefined, done: true });\n        });\n        !cleanup || cleanup();\n    }\n    cleanup = function () {\n        cleanup = null;\n        stream.removeListener(\"data\", onData);\n        stream.removeListener(\"error\", onError);\n        stream.removeListener(\"end\", onEnd);\n        stream.removeListener(\"finish\", onEnd);\n        stream.removeListener(\"close\", onEnd);\n    };\n    stream.on(\"data\", onData);\n    stream.on(\"error\", onError);\n    stream.on(\"end\", onEnd);\n    stream.on(\"finish\", onEnd);\n    stream.on(\"close\", onEnd);\n    function getNext() {\n        return new Promise(function (resolve, reject) {\n            if (error)\n                return reject(error);\n            if (data.length)\n                return resolve({ value: data.shift(), done: false });\n            if (done)\n                return resolve({ value: undefined, done: true });\n            waiting.push([resolve, reject]);\n        });\n    }\n    var iterator = {\n        next: function () {\n            return getNext();\n        },\n    };\n    if (canUseAsyncIteratorSymbol) {\n        iterator[Symbol.asyncIterator] = function () {\n            return this;\n        };\n    }\n    return iterator;\n}\n//# sourceMappingURL=nodeStream.js.map","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/reader.ts\n */\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\nexport default function readerIterator(reader) {\n    var iterator = {\n        next: function () {\n            return reader.read();\n        },\n    };\n    if (canUseAsyncIteratorSymbol) {\n        iterator[Symbol.asyncIterator] = function () {\n            return this;\n        };\n    }\n    return iterator;\n}\n//# sourceMappingURL=reader.js.map","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/index.ts\n */\nimport { canUseAsyncIteratorSymbol } from \"../../utilities/index.js\";\nimport asyncIterator from \"./iterators/async.js\";\nimport nodeStreamIterator from \"./iterators/nodeStream.js\";\nimport promiseIterator from \"./iterators/promise.js\";\nimport readerIterator from \"./iterators/reader.js\";\nfunction isNodeResponse(value) {\n    return !!value.body;\n}\nfunction isReadableStream(value) {\n    return !!value.getReader;\n}\nfunction isAsyncIterableIterator(value) {\n    return !!(canUseAsyncIteratorSymbol &&\n        value[Symbol.asyncIterator]);\n}\nfunction isStreamableBlob(value) {\n    return !!value.stream;\n}\nfunction isBlob(value) {\n    return !!value.arrayBuffer;\n}\nfunction isNodeReadableStream(value) {\n    return !!value.pipe;\n}\nexport function responseIterator(response) {\n    var body = response;\n    if (isNodeResponse(response))\n        body = response.body;\n    if (isAsyncIterableIterator(body))\n        return asyncIterator(body);\n    if (isReadableStream(body))\n        return readerIterator(body.getReader());\n    // this errors without casting to ReadableStream<T>\n    // because Blob.stream() returns a NodeJS ReadableStream\n    if (isStreamableBlob(body)) {\n        return readerIterator(body.stream().getReader());\n    }\n    if (isBlob(body))\n        return promiseIterator(body.arrayBuffer());\n    if (isNodeReadableStream(body))\n        return nodeStreamIterator(body);\n    throw new Error(\"Unknown body type for responseIterator. Please pass a streamable response.\");\n}\n//# sourceMappingURL=responseIterator.js.map","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/async.ts\n */\nexport default function asyncIterator(source) {\n    var _a;\n    var iterator = source[Symbol.asyncIterator]();\n    return _a = {\n            next: function () {\n                return iterator.next();\n            }\n        },\n        _a[Symbol.asyncIterator] = function () {\n            return this;\n        },\n        _a;\n}\n//# sourceMappingURL=async.js.map","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/promise.ts\n */\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\nexport default function promiseIterator(promise) {\n    var resolved = false;\n    var iterator = {\n        next: function () {\n            if (resolved)\n                return Promise.resolve({\n                    value: undefined,\n                    done: true,\n                });\n            resolved = true;\n            return new Promise(function (resolve, reject) {\n                promise\n                    .then(function (value) {\n                    resolve({ value: value, done: false });\n                })\n                    .catch(reject);\n            });\n        },\n    };\n    if (canUseAsyncIteratorSymbol) {\n        iterator[Symbol.asyncIterator] = function () {\n            return this;\n        };\n    }\n    return iterator;\n}\n//# sourceMappingURL=promise.js.map","export var throwServerError = function (response, result, message) {\n    var error = new Error(message);\n    error.name = \"ServerError\";\n    error.response = response;\n    error.statusCode = response.status;\n    error.result = result;\n    throw error;\n};\n//# sourceMappingURL=throwServerError.js.map","import { __assign, __awaiter, __generator } from \"tslib\";\nimport { responseIterator } from \"./responseIterator.js\";\nimport { throwServerError } from \"../utils/index.js\";\nimport { PROTOCOL_ERRORS_SYMBOL } from \"../../errors/index.js\";\nimport { isApolloPayloadResult } from \"../../utilities/common/incrementalResult.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function readMultipartBody(response, nextValue) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n        var decoder, contentType, delimiter, boundaryVal, boundary, buffer, iterator, running, _b, value, done, chunk, searchFrom, bi, message, i, headers, contentType_1, body, result, next;\n        var _c, _d;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    if (TextDecoder === undefined) {\n                        throw new Error(\"TextDecoder must be defined in the environment: please import a polyfill.\");\n                    }\n                    decoder = new TextDecoder(\"utf-8\");\n                    contentType = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.get(\"content-type\");\n                    delimiter = \"boundary=\";\n                    boundaryVal = (contentType === null || contentType === void 0 ? void 0 : contentType.includes(delimiter)) ?\n                        contentType === null || contentType === void 0 ? void 0 : contentType.substring((contentType === null || contentType === void 0 ? void 0 : contentType.indexOf(delimiter)) + delimiter.length).replace(/['\"]/g, \"\").replace(/\\;(.*)/gm, \"\").trim()\n                        : \"-\";\n                    boundary = \"\\r\\n--\".concat(boundaryVal);\n                    buffer = \"\";\n                    iterator = responseIterator(response);\n                    running = true;\n                    _e.label = 1;\n                case 1:\n                    if (!running) return [3 /*break*/, 3];\n                    return [4 /*yield*/, iterator.next()];\n                case 2:\n                    _b = _e.sent(), value = _b.value, done = _b.done;\n                    chunk = typeof value === \"string\" ? value : decoder.decode(value);\n                    searchFrom = buffer.length - boundary.length + 1;\n                    running = !done;\n                    buffer += chunk;\n                    bi = buffer.indexOf(boundary, searchFrom);\n                    while (bi > -1) {\n                        message = void 0;\n                        _c = [\n                            buffer.slice(0, bi),\n                            buffer.slice(bi + boundary.length),\n                        ], message = _c[0], buffer = _c[1];\n                        i = message.indexOf(\"\\r\\n\\r\\n\");\n                        headers = parseHeaders(message.slice(0, i));\n                        contentType_1 = headers[\"content-type\"];\n                        if (contentType_1 &&\n                            contentType_1.toLowerCase().indexOf(\"application/json\") === -1) {\n                            throw new Error(\"Unsupported patch content type: application/json is required.\");\n                        }\n                        body = message.slice(i);\n                        if (body) {\n                            result = parseJsonBody(response, body);\n                            if (Object.keys(result).length > 1 ||\n                                \"data\" in result ||\n                                \"incremental\" in result ||\n                                \"errors\" in result ||\n                                \"payload\" in result) {\n                                if (isApolloPayloadResult(result)) {\n                                    next = {};\n                                    if (\"payload\" in result) {\n                                        next = __assign({}, result.payload);\n                                    }\n                                    if (\"errors\" in result) {\n                                        next = __assign(__assign({}, next), { extensions: __assign(__assign({}, (\"extensions\" in next ? next.extensions : null)), (_d = {}, _d[PROTOCOL_ERRORS_SYMBOL] = result.errors, _d)) });\n                                    }\n                                    nextValue(next);\n                                }\n                                else {\n                                    // for the last chunk with only `hasNext: false`\n                                    // we don't need to call observer.next as there is no data/errors\n                                    nextValue(result);\n                                }\n                            }\n                            else if (\n                            // If the chunk contains only a \"hasNext: false\", we can call\n                            // observer.complete() immediately.\n                            Object.keys(result).length === 1 &&\n                                \"hasNext\" in result &&\n                                !result.hasNext) {\n                                return [2 /*return*/];\n                            }\n                        }\n                        bi = buffer.indexOf(boundary);\n                    }\n                    return [3 /*break*/, 1];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function parseHeaders(headerText) {\n    var headersInit = {};\n    headerText.split(\"\\n\").forEach(function (line) {\n        var i = line.indexOf(\":\");\n        if (i > -1) {\n            // normalize headers to lowercase\n            var name_1 = line.slice(0, i).trim().toLowerCase();\n            var value = line.slice(i + 1).trim();\n            headersInit[name_1] = value;\n        }\n    });\n    return headersInit;\n}\nexport function parseJsonBody(response, bodyText) {\n    if (response.status >= 300) {\n        // Network error\n        var getResult = function () {\n            try {\n                return JSON.parse(bodyText);\n            }\n            catch (err) {\n                return bodyText;\n            }\n        };\n        throwServerError(response, getResult(), \"Response not successful: Received status code \".concat(response.status));\n    }\n    try {\n        return JSON.parse(bodyText);\n    }\n    catch (err) {\n        var parseError = err;\n        parseError.name = \"ServerParseError\";\n        parseError.response = response;\n        parseError.statusCode = response.status;\n        parseError.bodyText = bodyText;\n        throw parseError;\n    }\n}\nexport function handleError(err, observer) {\n    // if it is a network error, BUT there is graphql result info fire\n    // the next observer before calling error this gives apollo-client\n    // (and react-apollo) the `graphqlErrors` and `networkErrors` to\n    // pass to UI this should only happen if we *also* have data as\n    // part of the response key per the spec\n    if (err.result && err.result.errors && err.result.data) {\n        // if we don't call next, the UI can only show networkError\n        // because AC didn't get any graphqlErrors this is graphql\n        // execution result info (i.e errors and possibly data) this is\n        // because there is no formal spec how errors should translate to\n        // http status codes. So an auth error (401) could have both data\n        // from a public field, errors from a private field, and a status\n        // of 401\n        // {\n        //  user { // this will have errors\n        //    firstName\n        //  }\n        //  products { // this is public so will have data\n        //    cost\n        //  }\n        // }\n        //\n        // the result of above *could* look like this:\n        // {\n        //   data: { products: [{ cost: \"$10\" }] },\n        //   errors: [{\n        //      message: 'your session has timed out',\n        //      path: []\n        //   }]\n        // }\n        // status code of above would be a 401\n        // in the UI you want to show data where you can, errors as data where you can\n        // and use correct http status codes\n        observer.next(err.result);\n    }\n    observer.error(err);\n}\nexport function parseAndCheckHttpResponse(operations) {\n    return function (response) {\n        return response\n            .text()\n            .then(function (bodyText) { return parseJsonBody(response, bodyText); })\n            .then(function (result) {\n            if (!Array.isArray(result) &&\n                !hasOwnProperty.call(result, \"data\") &&\n                !hasOwnProperty.call(result, \"errors\")) {\n                // Data error\n                throwServerError(response, result, \"Server response was missing for query '\".concat(Array.isArray(operations) ?\n                    operations.map(function (op) { return op.operationName; })\n                    : operations.operationName, \"'.\"));\n            }\n            return result;\n        });\n    };\n}\n//# sourceMappingURL=parseAndCheckHttpResponse.js.map","import { newInvariantError } from \"../../utilities/globals/index.js\";\nexport var checkFetcher = function (fetcher) {\n    if (!fetcher && typeof fetch === \"undefined\") {\n        throw newInvariantError(37);\n    }\n};\n//# sourceMappingURL=checkFetcher.js.map","import { __assign, __spreadArray } from \"tslib\";\nimport { print } from \"../../utilities/index.js\";\nvar defaultHttpOptions = {\n    includeQuery: true,\n    includeExtensions: false,\n    preserveHeaderCase: false,\n};\nvar defaultHeaders = {\n    // headers are case insensitive (https://stackoverflow.com/a/5259004)\n    accept: \"*/*\",\n    // The content-type header describes the type of the body of the request, and\n    // so it typically only is sent with requests that actually have bodies. One\n    // could imagine that Apollo Client would remove this header when constructing\n    // a GET request (which has no body), but we historically have not done that.\n    // This means that browsers will preflight all Apollo Client requests (even\n    // GET requests). Apollo Server's CSRF prevention feature (introduced in\n    // AS3.7) takes advantage of this fact and does not block requests with this\n    // header. If you want to drop this header from GET requests, then you should\n    // probably replace it with a `apollo-require-preflight` header, or servers\n    // with CSRF prevention enabled might block your GET request. See\n    // https://www.apollographql.com/docs/apollo-server/security/cors/#preventing-cross-site-request-forgery-csrf\n    // for more details.\n    \"content-type\": \"application/json\",\n};\nvar defaultOptions = {\n    method: \"POST\",\n};\nexport var fallbackHttpConfig = {\n    http: defaultHttpOptions,\n    headers: defaultHeaders,\n    options: defaultOptions,\n};\nexport var defaultPrinter = function (ast, printer) { return printer(ast); };\nexport function selectHttpOptionsAndBody(operation, fallbackConfig) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    configs.unshift(fallbackConfig);\n    return selectHttpOptionsAndBodyInternal.apply(void 0, __spreadArray([operation,\n        defaultPrinter], configs, false));\n}\nexport function selectHttpOptionsAndBodyInternal(operation, printer) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    var options = {};\n    var http = {};\n    configs.forEach(function (config) {\n        options = __assign(__assign(__assign({}, options), config.options), { headers: __assign(__assign({}, options.headers), config.headers) });\n        if (config.credentials) {\n            options.credentials = config.credentials;\n        }\n        http = __assign(__assign({}, http), config.http);\n    });\n    if (options.headers) {\n        options.headers = removeDuplicateHeaders(options.headers, http.preserveHeaderCase);\n    }\n    //The body depends on the http options\n    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;\n    var body = { operationName: operationName, variables: variables };\n    if (http.includeExtensions)\n        body.extensions = extensions;\n    // not sending the query (i.e persisted queries)\n    if (http.includeQuery)\n        body.query = printer(query, print);\n    return {\n        options: options,\n        body: body,\n    };\n}\n// Remove potential duplicate header names, preserving last (by insertion order).\n// This is done to prevent unintentionally duplicating a header instead of\n// overwriting it (See #8447 and #8449).\nfunction removeDuplicateHeaders(headers, preserveHeaderCase) {\n    // If we're not preserving the case, just remove duplicates w/ normalization.\n    if (!preserveHeaderCase) {\n        var normalizedHeaders_1 = Object.create(null);\n        Object.keys(Object(headers)).forEach(function (name) {\n            normalizedHeaders_1[name.toLowerCase()] = headers[name];\n        });\n        return normalizedHeaders_1;\n    }\n    // If we are preserving the case, remove duplicates w/ normalization,\n    // preserving the original name.\n    // This allows for non-http-spec-compliant servers that expect intentionally\n    // capitalized header names (See #6741).\n    var headerData = Object.create(null);\n    Object.keys(Object(headers)).forEach(function (name) {\n        headerData[name.toLowerCase()] = {\n            originalName: name,\n            value: headers[name],\n        };\n    });\n    var normalizedHeaders = Object.create(null);\n    Object.keys(headerData).forEach(function (name) {\n        normalizedHeaders[headerData[name].originalName] = headerData[name].value;\n    });\n    return normalizedHeaders;\n}\n//# sourceMappingURL=selectHttpOptionsAndBody.js.map","import { Observable } from \"../../utilities/index.js\";\nexport function fromError(errorValue) {\n    return new Observable(function (observer) {\n        observer.error(errorValue);\n    });\n}\n//# sourceMappingURL=fromError.js.map","import { __assign, __rest } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport { ApolloLink } from \"../core/index.js\";\nimport { Observable, hasDirectives } from \"../../utilities/index.js\";\nimport { serializeFetchParameter } from \"./serializeFetchParameter.js\";\nimport { selectURI } from \"./selectURI.js\";\nimport { handleError, readMultipartBody, parseAndCheckHttpResponse, } from \"./parseAndCheckHttpResponse.js\";\nimport { checkFetcher } from \"./checkFetcher.js\";\nimport { selectHttpOptionsAndBodyInternal, defaultPrinter, fallbackHttpConfig, } from \"./selectHttpOptionsAndBody.js\";\nimport { rewriteURIForGET } from \"./rewriteURIForGET.js\";\nimport { fromError, filterOperationVariables } from \"../utils/index.js\";\nimport { maybe, getMainDefinition, removeClientSetsFromDocument, } from \"../../utilities/index.js\";\nvar backupFetch = maybe(function () { return fetch; });\nexport var createHttpLink = function (linkOptions) {\n    if (linkOptions === void 0) { linkOptions = {}; }\n    var _a = linkOptions.uri, uri = _a === void 0 ? \"/graphql\" : _a, \n    // use default global fetch if nothing passed in\n    preferredFetch = linkOptions.fetch, _b = linkOptions.print, print = _b === void 0 ? defaultPrinter : _b, includeExtensions = linkOptions.includeExtensions, preserveHeaderCase = linkOptions.preserveHeaderCase, useGETForQueries = linkOptions.useGETForQueries, _c = linkOptions.includeUnusedVariables, includeUnusedVariables = _c === void 0 ? false : _c, requestOptions = __rest(linkOptions, [\"uri\", \"fetch\", \"print\", \"includeExtensions\", \"preserveHeaderCase\", \"useGETForQueries\", \"includeUnusedVariables\"]);\n    if (globalThis.__DEV__ !== false) {\n        // Make sure at least one of preferredFetch, window.fetch, or backupFetch is\n        // defined, so requests won't fail at runtime.\n        checkFetcher(preferredFetch || backupFetch);\n    }\n    var linkConfig = {\n        http: { includeExtensions: includeExtensions, preserveHeaderCase: preserveHeaderCase },\n        options: requestOptions.fetchOptions,\n        credentials: requestOptions.credentials,\n        headers: requestOptions.headers,\n    };\n    return new ApolloLink(function (operation) {\n        var chosenURI = selectURI(operation, uri);\n        var context = operation.getContext();\n        // `apollographql-client-*` headers are automatically set if a\n        // `clientAwareness` object is found in the context. These headers are\n        // set first, followed by the rest of the headers pulled from\n        // `context.headers`. If desired, `apollographql-client-*` headers set by\n        // the `clientAwareness` object can be overridden by\n        // `apollographql-client-*` headers set in `context.headers`.\n        var clientAwarenessHeaders = {};\n        if (context.clientAwareness) {\n            var _a = context.clientAwareness, name_1 = _a.name, version = _a.version;\n            if (name_1) {\n                clientAwarenessHeaders[\"apollographql-client-name\"] = name_1;\n            }\n            if (version) {\n                clientAwarenessHeaders[\"apollographql-client-version\"] = version;\n            }\n        }\n        var contextHeaders = __assign(__assign({}, clientAwarenessHeaders), context.headers);\n        var contextConfig = {\n            http: context.http,\n            options: context.fetchOptions,\n            credentials: context.credentials,\n            headers: contextHeaders,\n        };\n        if (hasDirectives([\"client\"], operation.query)) {\n            var transformedQuery = removeClientSetsFromDocument(operation.query);\n            if (!transformedQuery) {\n                return fromError(new Error(\"HttpLink: Trying to send a client-only query to the server. To send to the server, ensure a non-client field is added to the query or set the `transformOptions.removeClientFields` option to `true`.\"));\n            }\n            operation.query = transformedQuery;\n        }\n        //uses fallback, link, and then context to build options\n        var _b = selectHttpOptionsAndBodyInternal(operation, print, fallbackHttpConfig, linkConfig, contextConfig), options = _b.options, body = _b.body;\n        if (body.variables && !includeUnusedVariables) {\n            body.variables = filterOperationVariables(body.variables, operation.query);\n        }\n        var controller;\n        if (!options.signal && typeof AbortController !== \"undefined\") {\n            controller = new AbortController();\n            options.signal = controller.signal;\n        }\n        // If requested, set method to GET if there are no mutations.\n        var definitionIsMutation = function (d) {\n            return d.kind === \"OperationDefinition\" && d.operation === \"mutation\";\n        };\n        var definitionIsSubscription = function (d) {\n            return d.kind === \"OperationDefinition\" && d.operation === \"subscription\";\n        };\n        var isSubscription = definitionIsSubscription(getMainDefinition(operation.query));\n        // does not match custom directives beginning with @defer\n        var hasDefer = hasDirectives([\"defer\"], operation.query);\n        if (useGETForQueries &&\n            !operation.query.definitions.some(definitionIsMutation)) {\n            options.method = \"GET\";\n        }\n        if (hasDefer || isSubscription) {\n            options.headers = options.headers || {};\n            var acceptHeader = \"multipart/mixed;\";\n            // Omit defer-specific headers if the user attempts to defer a selection\n            // set on a subscription and log a warning.\n            if (isSubscription && hasDefer) {\n                globalThis.__DEV__ !== false && invariant.warn(38);\n            }\n            if (isSubscription) {\n                acceptHeader +=\n                    \"boundary=graphql;subscriptionSpec=1.0,application/json\";\n            }\n            else if (hasDefer) {\n                acceptHeader += \"deferSpec=20220824,application/json\";\n            }\n            options.headers.accept = acceptHeader;\n        }\n        if (options.method === \"GET\") {\n            var _c = rewriteURIForGET(chosenURI, body), newURI = _c.newURI, parseError = _c.parseError;\n            if (parseError) {\n                return fromError(parseError);\n            }\n            chosenURI = newURI;\n        }\n        else {\n            try {\n                options.body = serializeFetchParameter(body, \"Payload\");\n            }\n            catch (parseError) {\n                return fromError(parseError);\n            }\n        }\n        return new Observable(function (observer) {\n            // Prefer linkOptions.fetch (preferredFetch) if provided, and otherwise\n            // fall back to the *current* global window.fetch function (see issue\n            // #7832), or (if all else fails) the backupFetch function we saved when\n            // this module was first evaluated. This last option protects against the\n            // removal of window.fetch, which is unlikely but not impossible.\n            var currentFetch = preferredFetch || maybe(function () { return fetch; }) || backupFetch;\n            var observerNext = observer.next.bind(observer);\n            currentFetch(chosenURI, options)\n                .then(function (response) {\n                var _a;\n                operation.setContext({ response: response });\n                var ctype = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.get(\"content-type\");\n                if (ctype !== null && /^multipart\\/mixed/i.test(ctype)) {\n                    return readMultipartBody(response, observerNext);\n                }\n                else {\n                    return parseAndCheckHttpResponse(operation)(response).then(observerNext);\n                }\n            })\n                .then(function () {\n                controller = undefined;\n                observer.complete();\n            })\n                .catch(function (err) {\n                controller = undefined;\n                handleError(err, observer);\n            });\n            return function () {\n                // XXX support canceling this request\n                // https://developers.google.com/web/updates/2017/09/abortable-fetch\n                if (controller)\n                    controller.abort();\n            };\n        });\n    });\n};\n//# sourceMappingURL=createHttpLink.js.map","export var selectURI = function (operation, fallbackURI) {\n    var context = operation.getContext();\n    var contextURI = context.uri;\n    if (contextURI) {\n        return contextURI;\n    }\n    else if (typeof fallbackURI === \"function\") {\n        return fallbackURI(operation);\n    }\n    else {\n        return fallbackURI || \"/graphql\";\n    }\n};\n//# sourceMappingURL=selectURI.js.map","import { __assign } from \"tslib\";\nimport { visit } from \"graphql\";\nexport function filterOperationVariables(variables, query) {\n    var result = __assign({}, variables);\n    var unusedNames = new Set(Object.keys(variables));\n    visit(query, {\n        Variable: function (node, _key, parent) {\n            // A variable type definition at the top level of a query is not\n            // enough to silence server-side errors about the variable being\n            // unused, so variable definitions do not count as usage.\n            // https://spec.graphql.org/draft/#sec-All-Variables-Used\n            if (parent &&\n                parent.kind !== \"VariableDefinition\") {\n                unusedNames.delete(node.name.value);\n            }\n        },\n    });\n    unusedNames.forEach(function (name) {\n        delete result[name];\n    });\n    return result;\n}\n//# sourceMappingURL=filterOperationVariables.js.map","import { serializeFetchParameter } from \"./serializeFetchParameter.js\";\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nexport function rewriteURIForGET(chosenURI, body) {\n    // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n    // the extra level of JSON serialization!\n    var queryParams = [];\n    var addQueryParam = function (key, value) {\n        queryParams.push(\"\".concat(key, \"=\").concat(encodeURIComponent(value)));\n    };\n    if (\"query\" in body) {\n        addQueryParam(\"query\", body.query);\n    }\n    if (body.operationName) {\n        addQueryParam(\"operationName\", body.operationName);\n    }\n    if (body.variables) {\n        var serializedVariables = void 0;\n        try {\n            serializedVariables = serializeFetchParameter(body.variables, \"Variables map\");\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam(\"variables\", serializedVariables);\n    }\n    if (body.extensions) {\n        var serializedExtensions = void 0;\n        try {\n            serializedExtensions = serializeFetchParameter(body.extensions, \"Extensions map\");\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam(\"extensions\", serializedExtensions);\n    }\n    // Reconstruct the URI with added query params.\n    // XXX This assumes that the URI is well-formed and that it doesn't\n    //     already contain any of these query params. We could instead use the\n    //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n    //     don't support URLSearchParams. Note that some browsers (and\n    //     versions of whatwg-url) support URL but not URLSearchParams!\n    var fragment = \"\", preFragment = chosenURI;\n    var fragmentStart = chosenURI.indexOf(\"#\");\n    if (fragmentStart !== -1) {\n        fragment = chosenURI.substr(fragmentStart);\n        preFragment = chosenURI.substr(0, fragmentStart);\n    }\n    var queryParamsPrefix = preFragment.indexOf(\"?\") === -1 ? \"?\" : \"&\";\n    var newURI = preFragment + queryParamsPrefix + queryParams.join(\"&\") + fragment;\n    return { newURI: newURI };\n}\n//# sourceMappingURL=rewriteURIForGET.js.map","import { __extends } from \"tslib\";\nimport { ApolloLink } from \"../core/index.js\";\nimport { createHttpLink } from \"./createHttpLink.js\";\nvar HttpLink = /** @class */ (function (_super) {\n    __extends(HttpLink, _super);\n    function HttpLink(options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, createHttpLink(options).request) || this;\n        _this.options = options;\n        return _this;\n    }\n    return HttpLink;\n}(ApolloLink));\nexport { HttpLink };\n//# sourceMappingURL=HttpLink.js.map","// This file is adapted from the graphql-ws npm package:\n// https://github.com/enisdenjo/graphql-ws\n//\n// Most of the file comes from that package's README; some other parts (such as\n// isLikeCloseEvent) come from its source.\n//\n// Here's the license of the original code:\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2020-2021 Denis Badurina\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { __assign, __extends } from \"tslib\";\nimport { print } from \"../../utilities/index.js\";\nimport { ApolloLink } from \"../core/index.js\";\nimport { isNonNullObject, Observable } from \"../../utilities/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\n// https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close_event\nfunction isLikeCloseEvent(val) {\n    return isNonNullObject(val) && \"code\" in val && \"reason\" in val;\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/error_event\nfunction isLikeErrorEvent(err) {\n    var _a;\n    return isNonNullObject(err) && ((_a = err.target) === null || _a === void 0 ? void 0 : _a.readyState) === WebSocket.CLOSED;\n}\nvar GraphQLWsLink = /** @class */ (function (_super) {\n    __extends(GraphQLWsLink, _super);\n    function GraphQLWsLink(client) {\n        var _this = _super.call(this) || this;\n        _this.client = client;\n        return _this;\n    }\n    GraphQLWsLink.prototype.request = function (operation) {\n        var _this = this;\n        return new Observable(function (observer) {\n            return _this.client.subscribe(__assign(__assign({}, operation), { query: print(operation.query) }), {\n                next: observer.next.bind(observer),\n                complete: observer.complete.bind(observer),\n                error: function (err) {\n                    if (err instanceof Error) {\n                        return observer.error(err);\n                    }\n                    var likeClose = isLikeCloseEvent(err);\n                    if (likeClose || isLikeErrorEvent(err)) {\n                        return observer.error(\n                        // reason will be available on clean closes\n                        new Error(\"Socket closed\".concat(likeClose ? \" with event \".concat(err.code) : \"\").concat(likeClose ? \" \".concat(err.reason) : \"\")));\n                    }\n                    return observer.error(new ApolloError({\n                        graphQLErrors: Array.isArray(err) ? err : [err],\n                    }));\n                },\n            });\n        });\n    };\n    return GraphQLWsLink;\n}(ApolloLink));\nexport { GraphQLWsLink };\n//# sourceMappingURL=index.js.map","import { WeakCache, StrongCache } from \"@wry/caches\";\nvar scheduledCleanup = new WeakSet();\nfunction schedule(cache) {\n    if (!scheduledCleanup.has(cache)) {\n        scheduledCleanup.add(cache);\n        setTimeout(function () {\n            cache.clean();\n            scheduledCleanup.delete(cache);\n        }, 100);\n    }\n}\n/**\n * @internal\n * A version of WeakCache that will auto-schedule a cleanup of the cache when\n * a new item is added.\n * Throttled to once per 100ms.\n *\n * @privateRemarks\n * Should be used throughout the rest of the codebase instead of WeakCache,\n * with the notable exception of usage in `wrap` from `optimism` - that one\n * already handles cleanup and should remain a `WeakCache`.\n */\nexport var AutoCleanedWeakCache = function (max, dispose) {\n    /*\n    Some builds of `WeakCache` are function prototypes, some are classes.\n    This library still builds with an ES5 target, so we can't extend the\n    real classes.\n    Instead, we have to use this workaround until we switch to a newer build\n    target.\n    */\n    var cache = new WeakCache(max, dispose);\n    cache.set = function (key, value) {\n        schedule(this);\n        return WeakCache.prototype.set.call(this, key, value);\n    };\n    return cache;\n};\n/**\n * @internal\n * A version of StrongCache that will auto-schedule a cleanup of the cache when\n * a new item is added.\n * Throttled to once per 100ms.\n *\n * @privateRemarks\n * Should be used throughout the rest of the codebase instead of StrongCache,\n * with the notable exception of usage in `wrap` from `optimism` - that one\n * already handles cleanup and should remain a `StrongCache`.\n */\nexport var AutoCleanedStrongCache = function (max, dispose) {\n    /*\n    Some builds of `StrongCache` are function prototypes, some are classes.\n    This library still builds with an ES5 target, so we can't extend the\n    real classes.\n    Instead, we have to use this workaround until we switch to a newer build\n    target.\n    */\n    var cache = new StrongCache(max, dispose);\n    cache.set = function (key, value) {\n        schedule(this);\n        return StrongCache.prototype.set.call(this, key, value);\n    };\n    return cache;\n};\n//# sourceMappingURL=caches.js.map","import { __assign, __spreadArray } from \"tslib\";\nimport { cacheSizes } from \"./sizes.js\";\nvar globalCaches = {};\nexport function registerGlobalCache(name, getSize) {\n    globalCaches[name] = getSize;\n}\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getApolloClientMemoryInternals = globalThis.__DEV__ !== false ?\n    _getApolloClientMemoryInternals\n    : undefined;\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getInMemoryCacheMemoryInternals = globalThis.__DEV__ !== false ?\n    _getInMemoryCacheMemoryInternals\n    : undefined;\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getApolloCacheMemoryInternals = globalThis.__DEV__ !== false ?\n    _getApolloCacheMemoryInternals\n    : undefined;\nfunction getCurrentCacheSizes() {\n    // `defaultCacheSizes` is a `const enum` that will be inlined during build, so we have to reconstruct it's shape here\n    var defaults = {\n        parser: 1000 /* defaultCacheSizes[\"parser\"] */,\n        canonicalStringify: 1000 /* defaultCacheSizes[\"canonicalStringify\"] */,\n        print: 2000 /* defaultCacheSizes[\"print\"] */,\n        \"documentTransform.cache\": 2000 /* defaultCacheSizes[\"documentTransform.cache\"] */,\n        \"queryManager.getDocumentInfo\": 2000 /* defaultCacheSizes[\"queryManager.getDocumentInfo\"] */,\n        \"PersistedQueryLink.persistedQueryHashes\": 2000 /* defaultCacheSizes[\"PersistedQueryLink.persistedQueryHashes\"] */,\n        \"fragmentRegistry.transform\": 2000 /* defaultCacheSizes[\"fragmentRegistry.transform\"] */,\n        \"fragmentRegistry.lookup\": 1000 /* defaultCacheSizes[\"fragmentRegistry.lookup\"] */,\n        \"fragmentRegistry.findFragmentSpreads\": 4000 /* defaultCacheSizes[\"fragmentRegistry.findFragmentSpreads\"] */,\n        \"cache.fragmentQueryDocuments\": 1000 /* defaultCacheSizes[\"cache.fragmentQueryDocuments\"] */,\n        \"removeTypenameFromVariables.getVariableDefinitions\": 2000 /* defaultCacheSizes[\"removeTypenameFromVariables.getVariableDefinitions\"] */,\n        \"inMemoryCache.maybeBroadcastWatch\": 5000 /* defaultCacheSizes[\"inMemoryCache.maybeBroadcastWatch\"] */,\n        \"inMemoryCache.executeSelectionSet\": 50000 /* defaultCacheSizes[\"inMemoryCache.executeSelectionSet\"] */,\n        \"inMemoryCache.executeSubSelectedArray\": 10000 /* defaultCacheSizes[\"inMemoryCache.executeSubSelectedArray\"] */,\n    };\n    return Object.fromEntries(Object.entries(defaults).map(function (_a) {\n        var k = _a[0], v = _a[1];\n        return [\n            k,\n            cacheSizes[k] || v,\n        ];\n    }));\n}\nfunction _getApolloClientMemoryInternals() {\n    var _a, _b, _c, _d, _e;\n    if (!(globalThis.__DEV__ !== false))\n        throw new Error(\"only supported in development mode\");\n    return {\n        limits: getCurrentCacheSizes(),\n        sizes: __assign({ print: (_a = globalCaches.print) === null || _a === void 0 ? void 0 : _a.call(globalCaches), parser: (_b = globalCaches.parser) === null || _b === void 0 ? void 0 : _b.call(globalCaches), canonicalStringify: (_c = globalCaches.canonicalStringify) === null || _c === void 0 ? void 0 : _c.call(globalCaches), links: linkInfo(this.link), queryManager: {\n                getDocumentInfo: this[\"queryManager\"][\"transformCache\"].size,\n                documentTransforms: transformInfo(this[\"queryManager\"].documentTransform),\n            } }, (_e = (_d = this.cache).getMemoryInternals) === null || _e === void 0 ? void 0 : _e.call(_d)),\n    };\n}\nfunction _getApolloCacheMemoryInternals() {\n    return {\n        cache: {\n            fragmentQueryDocuments: getWrapperInformation(this[\"getFragmentDoc\"]),\n        },\n    };\n}\nfunction _getInMemoryCacheMemoryInternals() {\n    var fragments = this.config.fragments;\n    return __assign(__assign({}, _getApolloCacheMemoryInternals.apply(this)), { addTypenameDocumentTransform: transformInfo(this[\"addTypenameTransform\"]), inMemoryCache: {\n            executeSelectionSet: getWrapperInformation(this[\"storeReader\"][\"executeSelectionSet\"]),\n            executeSubSelectedArray: getWrapperInformation(this[\"storeReader\"][\"executeSubSelectedArray\"]),\n            maybeBroadcastWatch: getWrapperInformation(this[\"maybeBroadcastWatch\"]),\n        }, fragmentRegistry: {\n            findFragmentSpreads: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.findFragmentSpreads),\n            lookup: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.lookup),\n            transform: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.transform),\n        } });\n}\nfunction isWrapper(f) {\n    return !!f && \"dirtyKey\" in f;\n}\nfunction getWrapperInformation(f) {\n    return isWrapper(f) ? f.size : undefined;\n}\nfunction isDefined(value) {\n    return value != null;\n}\nfunction transformInfo(transform) {\n    return recurseTransformInfo(transform).map(function (cache) { return ({ cache: cache }); });\n}\nfunction recurseTransformInfo(transform) {\n    return transform ?\n        __spreadArray(__spreadArray([\n            getWrapperInformation(transform === null || transform === void 0 ? void 0 : transform[\"performWork\"])\n        ], recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"left\"]), true), recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"right\"]), true).filter(isDefined)\n        : [];\n}\nfunction linkInfo(link) {\n    var _a;\n    return link ?\n        __spreadArray(__spreadArray([\n            (_a = link === null || link === void 0 ? void 0 : link.getMemoryInternals) === null || _a === void 0 ? void 0 : _a.call(link)\n        ], linkInfo(link === null || link === void 0 ? void 0 : link.left), true), linkInfo(link === null || link === void 0 ? void 0 : link.right), true).filter(isDefined)\n        : [];\n}\n//# sourceMappingURL=getMemoryInternals.js.map","import { __assign } from \"tslib\";\nimport { global } from \"../globals/index.js\";\nvar cacheSizeSymbol = Symbol.for(\"apollo.cacheSize\");\n/**\n *\n * The global cache size configuration for Apollo Client.\n *\n * @remarks\n *\n * You can directly modify this object, but any modification will\n * only have an effect on caches that are created after the modification.\n *\n * So for global caches, such as `parser`, `canonicalStringify` and `print`,\n * you might need to call `.reset` on them, which will essentially re-create them.\n *\n * Alternatively, you can set `globalThis[Symbol.for(\"apollo.cacheSize\")]` before\n * you load the Apollo Client package:\n *\n * @example\n * ```ts\n * globalThis[Symbol.for(\"apollo.cacheSize\")] = {\n *   parser: 100\n * } satisfies Partial<CacheSizes> // the `satisfies` is optional if using TypeScript\n * ```\n */\nexport var cacheSizes = __assign({}, global[cacheSizeSymbol]);\n//# sourceMappingURL=sizes.js.map","// A version of Array.isArray that works better with readonly arrays.\nexport var isArray = Array.isArray;\nexport function isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\n//# sourceMappingURL=arrays.js.map","import { AutoCleanedStrongCache, cacheSizes, } from \"../../utilities/caching/index.js\";\nimport { registerGlobalCache } from \"../caching/getMemoryInternals.js\";\n/**\n * Like JSON.stringify, but with object keys always sorted in the same order.\n *\n * To achieve performant sorting, this function uses a Map from JSON-serialized\n * arrays of keys (in any order) to sorted arrays of the same keys, with a\n * single sorted array reference shared by all permutations of the keys.\n *\n * As a drawback, this function will add a little bit more memory for every\n * object encountered that has different (more, less, a different order of) keys\n * than in the past.\n *\n * In a typical application, this extra memory usage should not play a\n * significant role, as `canonicalStringify` will be called for only a limited\n * number of object shapes, and the cache will not grow beyond a certain point.\n * But in some edge cases, this could be a problem, so we provide\n * canonicalStringify.reset() as a way of clearing the cache.\n * */\nexport var canonicalStringify = Object.assign(function canonicalStringify(value) {\n    return JSON.stringify(value, stableObjectReplacer);\n}, {\n    reset: function () {\n        // Clearing the sortingMap will reclaim all cached memory, without\n        // affecting the logical results of canonicalStringify, but potentially\n        // sacrificing performance until the cache is refilled.\n        sortingMap = new AutoCleanedStrongCache(cacheSizes.canonicalStringify || 1000 /* defaultCacheSizes.canonicalStringify */);\n    },\n});\nif (globalThis.__DEV__ !== false) {\n    registerGlobalCache(\"canonicalStringify\", function () { return sortingMap.size; });\n}\n// Values are JSON-serialized arrays of object keys (in any order), and values\n// are sorted arrays of the same keys.\nvar sortingMap;\ncanonicalStringify.reset();\n// The JSON.stringify function takes an optional second argument called a\n// replacer function. This function is called for each key-value pair in the\n// object being stringified, and its return value is used instead of the\n// original value. If the replacer function returns a new value, that value is\n// stringified as JSON instead of the original value of the property.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#the_replacer_parameter\nfunction stableObjectReplacer(key, value) {\n    if (value && typeof value === \"object\") {\n        var proto = Object.getPrototypeOf(value);\n        // We don't want to mess with objects that are not \"plain\" objects, which\n        // means their prototype is either Object.prototype or null. This check also\n        // prevents needlessly rearranging the indices of arrays.\n        if (proto === Object.prototype || proto === null) {\n            var keys = Object.keys(value);\n            // If keys is already sorted, let JSON.stringify serialize the original\n            // value instead of creating a new object with keys in the same order.\n            if (keys.every(everyKeyInOrder))\n                return value;\n            var unsortedKey = JSON.stringify(keys);\n            var sortedKeys = sortingMap.get(unsortedKey);\n            if (!sortedKeys) {\n                keys.sort();\n                var sortedKey = JSON.stringify(keys);\n                // Checking for sortedKey in the sortingMap allows us to share the same\n                // sorted array reference for all permutations of the same set of keys.\n                sortedKeys = sortingMap.get(sortedKey) || keys;\n                sortingMap.set(unsortedKey, sortedKeys);\n                sortingMap.set(sortedKey, sortedKeys);\n            }\n            var sortedObject_1 = Object.create(proto);\n            // Reassigning the keys in sorted order will cause JSON.stringify to\n            // serialize them in sorted order.\n            sortedKeys.forEach(function (key) {\n                sortedObject_1[key] = value[key];\n            });\n            return sortedObject_1;\n        }\n    }\n    return value;\n}\n// Since everything that happens in stableObjectReplacer benefits from being as\n// efficient as possible, we use a static function as the callback for\n// keys.every in order to test if the provided keys are already sorted without\n// allocating extra memory for a callback.\nfunction everyKeyInOrder(key, i, keys) {\n    return i === 0 || keys[i - 1] <= key;\n}\n//# sourceMappingURL=canonicalStringify.js.map","var toString = Object.prototype.toString;\n/**\n * Deeply clones a value to create a new instance.\n */\nexport function cloneDeep(value) {\n    return cloneDeepHelper(value);\n}\nfunction cloneDeepHelper(val, seen) {\n    switch (toString.call(val)) {\n        case \"[object Array]\": {\n            seen = seen || new Map();\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_1 = val.slice(0);\n            seen.set(val, copy_1);\n            copy_1.forEach(function (child, i) {\n                copy_1[i] = cloneDeepHelper(child, seen);\n            });\n            return copy_1;\n        }\n        case \"[object Object]\": {\n            seen = seen || new Map();\n            if (seen.has(val))\n                return seen.get(val);\n            // High fidelity polyfills of Object.create and Object.getPrototypeOf are\n            // possible in all JS environments, so we will assume they exist/work.\n            var copy_2 = Object.create(Object.getPrototypeOf(val));\n            seen.set(val, copy_2);\n            Object.keys(val).forEach(function (key) {\n                copy_2[key] = cloneDeepHelper(val[key], seen);\n            });\n            return copy_2;\n        }\n        default:\n            return val;\n    }\n}\n//# sourceMappingURL=cloneDeep.js.map","/**\n * Merges the provided objects shallowly and removes\n * all properties with an `undefined` value\n */\nexport function compact() {\n    var objects = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        objects[_i] = arguments[_i];\n    }\n    var result = Object.create(null);\n    objects.forEach(function (obj) {\n        if (!obj)\n            return;\n        Object.keys(obj).forEach(function (key) {\n            var value = obj[key];\n            if (value !== void 0) {\n                result[key] = value;\n            }\n        });\n    });\n    return result;\n}\n//# sourceMappingURL=compact.js.map","import { isNonNullObject } from \"./objects.js\";\nimport { isNonEmptyArray } from \"./arrays.js\";\nimport { DeepMerger } from \"./mergeDeep.js\";\nexport function isExecutionPatchIncrementalResult(value) {\n    return \"incremental\" in value;\n}\nexport function isExecutionPatchInitialResult(value) {\n    return \"hasNext\" in value && \"data\" in value;\n}\nexport function isExecutionPatchResult(value) {\n    return (isExecutionPatchIncrementalResult(value) ||\n        isExecutionPatchInitialResult(value));\n}\n// This function detects an Apollo payload result before it is transformed\n// into a FetchResult via HttpLink; it cannot detect an ApolloPayloadResult\n// once it leaves the link chain.\nexport function isApolloPayloadResult(value) {\n    return isNonNullObject(value) && \"payload\" in value;\n}\nexport function mergeIncrementalData(prevResult, result) {\n    var mergedData = prevResult;\n    var merger = new DeepMerger();\n    if (isExecutionPatchIncrementalResult(result) &&\n        isNonEmptyArray(result.incremental)) {\n        result.incremental.forEach(function (_a) {\n            var data = _a.data, path = _a.path;\n            for (var i = path.length - 1; i >= 0; --i) {\n                var key = path[i];\n                var isNumericKey = !isNaN(+key);\n                var parent_1 = isNumericKey ? [] : {};\n                parent_1[key] = data;\n                data = parent_1;\n            }\n            mergedData = merger.merge(mergedData, data);\n        });\n    }\n    return mergedData;\n}\n//# sourceMappingURL=incrementalResult.js.map","var prefixCounts = new Map();\n// These IDs won't be globally unique, but they will be unique within this\n// process, thanks to the counter, and unguessable thanks to the random suffix.\nexport function makeUniqueId(prefix) {\n    var count = prefixCounts.get(prefix) || 1;\n    prefixCounts.set(prefix, count + 1);\n    return \"\".concat(prefix, \":\").concat(count, \":\").concat(Math.random().toString(36).slice(2));\n}\n//# sourceMappingURL=makeUniqueId.js.map","import { isNonNullObject } from \"./objects.js\";\nfunction deepFreeze(value) {\n    var workSet = new Set([value]);\n    workSet.forEach(function (obj) {\n        if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n            Object.getOwnPropertyNames(obj).forEach(function (name) {\n                if (isNonNullObject(obj[name]))\n                    workSet.add(obj[name]);\n            });\n        }\n    });\n    return value;\n}\nfunction shallowFreeze(obj) {\n    if (globalThis.__DEV__ !== false && !Object.isFrozen(obj)) {\n        try {\n            Object.freeze(obj);\n        }\n        catch (e) {\n            // Some types like Uint8Array and Node.js's Buffer cannot be frozen, but\n            // they all throw a TypeError when you try, so we re-throw any exceptions\n            // that are not TypeErrors, since that would be unexpected.\n            if (e instanceof TypeError)\n                return null;\n            throw e;\n        }\n    }\n    return obj;\n}\nexport function maybeDeepFreeze(obj) {\n    if (globalThis.__DEV__ !== false) {\n        deepFreeze(obj);\n    }\n    return obj;\n}\n//# sourceMappingURL=maybeDeepFreeze.js.map","import { __assign, __spreadArray } from \"tslib\";\nimport { isNonNullObject } from \"./objects.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function mergeDeep() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    return mergeDeepArray(sources);\n}\n// In almost any situation where you could succeed in getting the\n// TypeScript compiler to infer a tuple type for the sources array, you\n// could just use mergeDeep instead of mergeDeepArray, so instead of\n// trying to convert T[] to an intersection type we just infer the array\n// element type, which works perfectly when the sources array has a\n// consistent element type.\nexport function mergeDeepArray(sources) {\n    var target = sources[0] || {};\n    var count = sources.length;\n    if (count > 1) {\n        var merger = new DeepMerger();\n        for (var i = 1; i < count; ++i) {\n            target = merger.merge(target, sources[i]);\n        }\n    }\n    return target;\n}\nvar defaultReconciler = function (target, source, property) {\n    return this.merge(target[property], source[property]);\n};\nvar DeepMerger = /** @class */ (function () {\n    function DeepMerger(reconciler) {\n        if (reconciler === void 0) { reconciler = defaultReconciler; }\n        this.reconciler = reconciler;\n        this.isObject = isNonNullObject;\n        this.pastCopies = new Set();\n    }\n    DeepMerger.prototype.merge = function (target, source) {\n        var _this = this;\n        var context = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            context[_i - 2] = arguments[_i];\n        }\n        if (isNonNullObject(source) && isNonNullObject(target)) {\n            Object.keys(source).forEach(function (sourceKey) {\n                if (hasOwnProperty.call(target, sourceKey)) {\n                    var targetValue = target[sourceKey];\n                    if (source[sourceKey] !== targetValue) {\n                        var result = _this.reconciler.apply(_this, __spreadArray([target,\n                            source,\n                            sourceKey], context, false));\n                        // A well-implemented reconciler may return targetValue to indicate\n                        // the merge changed nothing about the structure of the target.\n                        if (result !== targetValue) {\n                            target = _this.shallowCopyForMerge(target);\n                            target[sourceKey] = result;\n                        }\n                    }\n                }\n                else {\n                    // If there is no collision, the target can safely share memory with\n                    // the source, and the recursion can terminate here.\n                    target = _this.shallowCopyForMerge(target);\n                    target[sourceKey] = source[sourceKey];\n                }\n            });\n            return target;\n        }\n        // If source (or target) is not an object, let source replace target.\n        return source;\n    };\n    DeepMerger.prototype.shallowCopyForMerge = function (value) {\n        if (isNonNullObject(value)) {\n            if (!this.pastCopies.has(value)) {\n                if (Array.isArray(value)) {\n                    value = value.slice(0);\n                }\n                else {\n                    value = __assign({ __proto__: Object.getPrototypeOf(value) }, value);\n                }\n                this.pastCopies.add(value);\n            }\n        }\n        return value;\n    };\n    return DeepMerger;\n}());\nexport { DeepMerger };\n//# sourceMappingURL=mergeDeep.js.map","import { __assign } from \"tslib\";\nimport { compact } from \"./compact.js\";\nexport function mergeOptions(defaults, options) {\n    return compact(defaults, options, options.variables && {\n        variables: compact(__assign(__assign({}, (defaults && defaults.variables)), options.variables)),\n    });\n}\n//# sourceMappingURL=mergeOptions.js.map","export function isNonNullObject(obj) {\n    return obj !== null && typeof obj === \"object\";\n}\nexport function isPlainObject(obj) {\n    return (obj !== null &&\n        typeof obj === \"object\" &&\n        (Object.getPrototypeOf(obj) === Object.prototype ||\n            Object.getPrototypeOf(obj) === null));\n}\n//# sourceMappingURL=objects.js.map","import { makeUniqueId } from \"./makeUniqueId.js\";\nexport function stringifyForDisplay(value, space) {\n    if (space === void 0) { space = 0; }\n    var undefId = makeUniqueId(\"stringifyForDisplay\");\n    return JSON.stringify(value, function (key, value) {\n        return value === void 0 ? undefId : value;\n    }, space)\n        .split(JSON.stringify(undefId))\n        .join(\"<undefined>\");\n}\n//# sourceMappingURL=stringifyForDisplay.js.map","export function maybe(thunk) {\n    try {\n        return thunk();\n    }\n    catch (_a) { }\n}\n//# sourceMappingURL=maybe.js.map","import { maybe } from \"./maybe.js\";\nexport default (maybe(function () { return globalThis; }) ||\n    maybe(function () { return window; }) ||\n    maybe(function () { return self; }) ||\n    maybe(function () { return global; }) || // We don't expect the Function constructor ever to be invoked at runtime, as\n// long as at least one of globalThis, window, self, or global is defined, so\n// we are under no obligation to make it easy for static analysis tools to\n// detect syntactic usage of the Function constructor. If you think you can\n// improve your static analysis to detect this obfuscation, think again. This\n// is an arms race you cannot win, at least not in JavaScript.\nmaybe(function () {\n    return maybe.constructor(\"return this\")();\n}));\n//# sourceMappingURL=global.js.map","import { invariant as originalInvariant, InvariantError } from \"ts-invariant\";\nimport { version } from \"../../version.js\";\nimport global from \"./global.js\";\nimport { stringifyForDisplay } from \"../common/stringifyForDisplay.js\";\nfunction wrap(fn) {\n    return function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (typeof message === \"number\") {\n            var arg0 = message;\n            message = getHandledErrorMsg(arg0);\n            if (!message) {\n                message = getFallbackErrorMsg(arg0, args);\n                args = [];\n            }\n        }\n        fn.apply(void 0, [message].concat(args));\n    };\n}\nvar invariant = Object.assign(function invariant(condition, message) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    if (!condition) {\n        originalInvariant(condition, getHandledErrorMsg(message, args) || getFallbackErrorMsg(message, args));\n    }\n}, {\n    debug: wrap(originalInvariant.debug),\n    log: wrap(originalInvariant.log),\n    warn: wrap(originalInvariant.warn),\n    error: wrap(originalInvariant.error),\n});\n/**\n * Returns an InvariantError.\n *\n * `message` can only be a string, a concatenation of strings, or a ternary statement\n * that results in a string. This will be enforced on build, where the message will\n * be replaced with a message number.\n * String substitutions with %s are supported and will also return\n * pretty-stringified objects.\n * Excess `optionalParams` will be swallowed.\n */\nfunction newInvariantError(message) {\n    var optionalParams = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        optionalParams[_i - 1] = arguments[_i];\n    }\n    return new InvariantError(getHandledErrorMsg(message, optionalParams) ||\n        getFallbackErrorMsg(message, optionalParams));\n}\nvar ApolloErrorMessageHandler = Symbol.for(\"ApolloErrorMessageHandler_\" + version);\nfunction stringify(arg) {\n    return typeof arg == \"string\" ? arg : (stringifyForDisplay(arg, 2).slice(0, 1000));\n}\nfunction getHandledErrorMsg(message, messageArgs) {\n    if (messageArgs === void 0) { messageArgs = []; }\n    if (!message)\n        return;\n    return (global[ApolloErrorMessageHandler] &&\n        global[ApolloErrorMessageHandler](message, messageArgs.map(stringify)));\n}\nfunction getFallbackErrorMsg(message, messageArgs) {\n    if (messageArgs === void 0) { messageArgs = []; }\n    if (!message)\n        return;\n    return \"An error occurred! For more details, see the full error text at https://go.apollo.dev/c/err#\".concat(encodeURIComponent(JSON.stringify({\n        version: version,\n        message: message,\n        args: messageArgs.map(stringify),\n    })));\n}\nexport { invariant, InvariantError, newInvariantError, ApolloErrorMessageHandler, };\n//# sourceMappingURL=invariantWrappers.js.map","import { invariant, newInvariantError, InvariantError, } from \"./invariantWrappers.js\";\nexport { maybe } from \"./maybe.js\";\nexport { default as global } from \"./global.js\";\nexport { invariant, newInvariantError, InvariantError };\n/**\n * @deprecated we do not use this internally anymore,\n * it is just exported for backwards compatibility\n */\n// this file is extempt from automatic `__DEV__` replacement\n// so we have to write it out here\n// @ts-ignore\nexport var DEV = globalThis.__DEV__ !== false;\nexport { DEV as __DEV__ };\n//# sourceMappingURL=index.js.map","import { Trie } from \"@wry/trie\";\nimport { canUseWeakMap, canUseWeakSet } from \"../common/canUse.js\";\nimport { checkDocument } from \"./getFromAST.js\";\nimport { invariant } from \"../globals/index.js\";\nimport { WeakCache } from \"@wry/caches\";\nimport { wrap } from \"optimism\";\nimport { cacheSizes } from \"../caching/index.js\";\nfunction identity(document) {\n    return document;\n}\nvar DocumentTransform = /** @class */ (function () {\n    function DocumentTransform(transform, options) {\n        if (options === void 0) { options = Object.create(null); }\n        this.resultCache = canUseWeakSet ? new WeakSet() : new Set();\n        this.transform = transform;\n        if (options.getCacheKey) {\n            // Override default `getCacheKey` function, which returns [document].\n            this.getCacheKey = options.getCacheKey;\n        }\n        this.cached = options.cache !== false;\n        this.resetCache();\n    }\n    // This default implementation of getCacheKey can be overridden by providing\n    // options.getCacheKey to the DocumentTransform constructor. In general, a\n    // getCacheKey function may either return an array of keys (often including\n    // the document) to be used as a cache key, or undefined to indicate the\n    // transform for this document should not be cached.\n    DocumentTransform.prototype.getCacheKey = function (document) {\n        return [document];\n    };\n    DocumentTransform.identity = function () {\n        // No need to cache this transform since it just returns the document\n        // unchanged. This should save a bit of memory that would otherwise be\n        // needed to populate the `documentCache` of this transform.\n        return new DocumentTransform(identity, { cache: false });\n    };\n    DocumentTransform.split = function (predicate, left, right) {\n        if (right === void 0) { right = DocumentTransform.identity(); }\n        return Object.assign(new DocumentTransform(function (document) {\n            var documentTransform = predicate(document) ? left : right;\n            return documentTransform.transformDocument(document);\n        }, \n        // Reasonably assume both `left` and `right` transforms handle their own caching\n        { cache: false }), { left: left, right: right });\n    };\n    /**\n     * Resets the internal cache of this transform, if it has one.\n     */\n    DocumentTransform.prototype.resetCache = function () {\n        var _this = this;\n        if (this.cached) {\n            var stableCacheKeys_1 = new Trie(canUseWeakMap);\n            this.performWork = wrap(DocumentTransform.prototype.performWork.bind(this), {\n                makeCacheKey: function (document) {\n                    var cacheKeys = _this.getCacheKey(document);\n                    if (cacheKeys) {\n                        invariant(Array.isArray(cacheKeys), 66);\n                        return stableCacheKeys_1.lookupArray(cacheKeys);\n                    }\n                },\n                max: cacheSizes[\"documentTransform.cache\"],\n                cache: (WeakCache),\n            });\n        }\n    };\n    DocumentTransform.prototype.performWork = function (document) {\n        checkDocument(document);\n        return this.transform(document);\n    };\n    DocumentTransform.prototype.transformDocument = function (document) {\n        // If a user passes an already transformed result back to this function,\n        // immediately return it.\n        if (this.resultCache.has(document)) {\n            return document;\n        }\n        var transformedDocument = this.performWork(document);\n        this.resultCache.add(transformedDocument);\n        return transformedDocument;\n    };\n    DocumentTransform.prototype.concat = function (otherTransform) {\n        var _this = this;\n        return Object.assign(new DocumentTransform(function (document) {\n            return otherTransform.transformDocument(_this.transformDocument(document));\n        }, \n        // Reasonably assume both transforms handle their own caching\n        { cache: false }), {\n            left: this,\n            right: otherTransform,\n        });\n    };\n    return DocumentTransform;\n}());\nexport { DocumentTransform };\n//# sourceMappingURL=DocumentTransform.js.map","import { invariant } from \"../globals/index.js\";\nimport { visit, BREAK } from \"graphql\";\nexport function shouldInclude(_a, variables) {\n    var directives = _a.directives;\n    if (!directives || !directives.length) {\n        return true;\n    }\n    return getInclusionDirectives(directives).every(function (_a) {\n        var directive = _a.directive, ifArgument = _a.ifArgument;\n        var evaledValue = false;\n        if (ifArgument.value.kind === \"Variable\") {\n            evaledValue =\n                variables && variables[ifArgument.value.name.value];\n            invariant(evaledValue !== void 0, 67, directive.name.value);\n        }\n        else {\n            evaledValue = ifArgument.value.value;\n        }\n        return directive.name.value === \"skip\" ? !evaledValue : evaledValue;\n    });\n}\nexport function getDirectiveNames(root) {\n    var names = [];\n    visit(root, {\n        Directive: function (node) {\n            names.push(node.name.value);\n        },\n    });\n    return names;\n}\nexport var hasAnyDirectives = function (names, root) {\n    return hasDirectives(names, root, false);\n};\nexport var hasAllDirectives = function (names, root) {\n    return hasDirectives(names, root, true);\n};\nexport function hasDirectives(names, root, all) {\n    var nameSet = new Set(names);\n    var uniqueCount = nameSet.size;\n    visit(root, {\n        Directive: function (node) {\n            if (nameSet.delete(node.name.value) && (!all || !nameSet.size)) {\n                return BREAK;\n            }\n        },\n    });\n    // If we found all the names, nameSet will be empty. If we only care about\n    // finding some of them, the < condition is sufficient.\n    return all ? !nameSet.size : nameSet.size < uniqueCount;\n}\nexport function hasClientExports(document) {\n    return document && hasDirectives([\"client\", \"export\"], document, true);\n}\nfunction isInclusionDirective(_a) {\n    var value = _a.name.value;\n    return value === \"skip\" || value === \"include\";\n}\nexport function getInclusionDirectives(directives) {\n    var result = [];\n    if (directives && directives.length) {\n        directives.forEach(function (directive) {\n            if (!isInclusionDirective(directive))\n                return;\n            var directiveArguments = directive.arguments;\n            var directiveName = directive.name.value;\n            invariant(directiveArguments && directiveArguments.length === 1, 68, directiveName);\n            var ifArgument = directiveArguments[0];\n            invariant(ifArgument.name && ifArgument.name.value === \"if\", 69, directiveName);\n            var ifValue = ifArgument.value;\n            // means it has to be a variable value if this is a valid @skip or @include directive\n            invariant(ifValue &&\n                (ifValue.kind === \"Variable\" || ifValue.kind === \"BooleanValue\"), 70, directiveName);\n            result.push({ directive: directive, ifArgument: ifArgument });\n        });\n    }\n    return result;\n}\n//# sourceMappingURL=directives.js.map","import { __assign, __spreadArray } from \"tslib\";\nimport { invariant, newInvariantError } from \"../globals/index.js\";\n/**\n * Returns a query document which adds a single query operation that only\n * spreads the target fragment inside of it.\n *\n * So for example a document of:\n *\n * ```graphql\n * fragment foo on Foo { a b c }\n * ```\n *\n * Turns into:\n *\n * ```graphql\n * { ...foo }\n *\n * fragment foo on Foo { a b c }\n * ```\n *\n * The target fragment will either be the only fragment in the document, or a\n * fragment specified by the provided `fragmentName`. If there is more than one\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\n */\nexport function getFragmentQueryDocument(document, fragmentName) {\n    var actualFragmentName = fragmentName;\n    // Build an array of all our fragment definitions that will be used for\n    // validations. We also do some validations on the other definitions in the\n    // document while building this list.\n    var fragments = [];\n    document.definitions.forEach(function (definition) {\n        // Throw an error if we encounter an operation definition because we will\n        // define our own operation definition later on.\n        if (definition.kind === \"OperationDefinition\") {\n            throw newInvariantError(\n                71,\n                definition.operation,\n                definition.name ? \" named '\".concat(definition.name.value, \"'\") : \"\"\n            );\n        }\n        // Add our definition to the fragments array if it is a fragment\n        // definition.\n        if (definition.kind === \"FragmentDefinition\") {\n            fragments.push(definition);\n        }\n    });\n    // If the user did not give us a fragment name then let us try to get a\n    // name from a single fragment in the definition.\n    if (typeof actualFragmentName === \"undefined\") {\n        invariant(fragments.length === 1, 72, fragments.length);\n        actualFragmentName = fragments[0].name.value;\n    }\n    // Generate a query document with an operation that simply spreads the\n    // fragment inside of it.\n    var query = __assign(__assign({}, document), { definitions: __spreadArray([\n            {\n                kind: \"OperationDefinition\",\n                // OperationTypeNode is an enum\n                operation: \"query\",\n                selectionSet: {\n                    kind: \"SelectionSet\",\n                    selections: [\n                        {\n                            kind: \"FragmentSpread\",\n                            name: {\n                                kind: \"Name\",\n                                value: actualFragmentName,\n                            },\n                        },\n                    ],\n                },\n            }\n        ], document.definitions, true) });\n    return query;\n}\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(fragments) {\n    if (fragments === void 0) { fragments = []; }\n    var symTable = {};\n    fragments.forEach(function (fragment) {\n        symTable[fragment.name.value] = fragment;\n    });\n    return symTable;\n}\nexport function getFragmentFromSelection(selection, fragmentMap) {\n    switch (selection.kind) {\n        case \"InlineFragment\":\n            return selection;\n        case \"FragmentSpread\": {\n            var fragmentName = selection.name.value;\n            if (typeof fragmentMap === \"function\") {\n                return fragmentMap(fragmentName);\n            }\n            var fragment = fragmentMap && fragmentMap[fragmentName];\n            invariant(fragment, 73, fragmentName);\n            return fragment || null;\n        }\n        default:\n            return null;\n    }\n}\n//# sourceMappingURL=fragments.js.map","import { invariant, newInvariantError } from \"../globals/index.js\";\nimport { valueToObjectRepresentation } from \"./storeUtils.js\";\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc) {\n    invariant(doc && doc.kind === \"Document\", 74);\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== \"FragmentDefinition\"; })\n        .map(function (definition) {\n        if (definition.kind !== \"OperationDefinition\") {\n            throw newInvariantError(75, definition.kind);\n        }\n        return definition;\n    });\n    invariant(operations.length <= 1, 76, operations.length);\n    return doc;\n}\nexport function getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) {\n        return definition.kind === \"OperationDefinition\";\n    })[0];\n}\nexport function getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === \"OperationDefinition\" && !!definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) {\n        return definition.kind === \"FragmentDefinition\";\n    });\n}\nexport function getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    invariant(queryDef && queryDef.operation === \"query\", 77);\n    return queryDef;\n}\nexport function getFragmentDefinition(doc) {\n    invariant(doc.kind === \"Document\", 78);\n    invariant(doc.definitions.length <= 1, 79);\n    var fragmentDef = doc.definitions[0];\n    invariant(fragmentDef.kind === \"FragmentDefinition\", 80);\n    return fragmentDef;\n}\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === \"OperationDefinition\") {\n            var operation = definition.operation;\n            if (operation === \"query\" ||\n                operation === \"mutation\" ||\n                operation === \"subscription\") {\n                return definition;\n            }\n        }\n        if (definition.kind === \"FragmentDefinition\" && !fragmentDefinition) {\n            // we do this because we want to allow multiple fragment definitions\n            // to precede an operation definition.\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw newInvariantError(81);\n}\nexport function getDefaultValues(definition) {\n    var defaultValues = Object.create(null);\n    var defs = definition && definition.variableDefinitions;\n    if (defs && defs.length) {\n        defs.forEach(function (def) {\n            if (def.defaultValue) {\n                valueToObjectRepresentation(defaultValues, def.variable.name, def.defaultValue);\n            }\n        });\n    }\n    return defaultValues;\n}\n//# sourceMappingURL=getFromAST.js.map","import { print as origPrint } from \"graphql\";\nimport { AutoCleanedWeakCache, cacheSizes, } from \"../caching/index.js\";\nimport { registerGlobalCache } from \"../caching/getMemoryInternals.js\";\nvar printCache;\nexport var print = Object.assign(function (ast) {\n    var result = printCache.get(ast);\n    if (!result) {\n        result = origPrint(ast);\n        printCache.set(ast, result);\n    }\n    return result;\n}, {\n    reset: function () {\n        printCache = new AutoCleanedWeakCache(cacheSizes.print || 2000 /* defaultCacheSizes.print */);\n    },\n});\nprint.reset();\nif (globalThis.__DEV__ !== false) {\n    registerGlobalCache(\"print\", function () { return (printCache ? printCache.size : 0); });\n}\n//# sourceMappingURL=print.js.map","import { newInvariantError } from \"../globals/index.js\";\nimport { isNonNullObject } from \"../common/objects.js\";\nimport { getFragmentFromSelection } from \"./fragments.js\";\nimport { canonicalStringify } from \"../common/canonicalStringify.js\";\nexport function makeReference(id) {\n    return { __ref: String(id) };\n}\nexport function isReference(obj) {\n    return Boolean(obj && typeof obj === \"object\" && typeof obj.__ref === \"string\");\n}\nexport function isDocumentNode(value) {\n    return (isNonNullObject(value) &&\n        value.kind === \"Document\" &&\n        Array.isArray(value.definitions));\n}\nfunction isStringValue(value) {\n    return value.kind === \"StringValue\";\n}\nfunction isBooleanValue(value) {\n    return value.kind === \"BooleanValue\";\n}\nfunction isIntValue(value) {\n    return value.kind === \"IntValue\";\n}\nfunction isFloatValue(value) {\n    return value.kind === \"FloatValue\";\n}\nfunction isVariable(value) {\n    return value.kind === \"Variable\";\n}\nfunction isObjectValue(value) {\n    return value.kind === \"ObjectValue\";\n}\nfunction isListValue(value) {\n    return value.kind === \"ListValue\";\n}\nfunction isEnumValue(value) {\n    return value.kind === \"EnumValue\";\n}\nfunction isNullValue(value) {\n    return value.kind === \"NullValue\";\n}\nexport function valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw newInvariantError(82, name.value, value.kind);\n    }\n}\nexport function storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    \"connection\",\n    \"include\",\n    \"skip\",\n    \"client\",\n    \"rest\",\n    \"export\",\n    \"nonreactive\",\n];\n// Default stable JSON.stringify implementation used by getStoreKeyName. Can be\n// updated/replaced with something better by calling\n// getStoreKeyName.setStringify(newStringifyFunction).\nvar storeKeyNameStringify = canonicalStringify;\nexport var getStoreKeyName = Object.assign(function (fieldName, args, directives) {\n    if (args &&\n        directives &&\n        directives[\"connection\"] &&\n        directives[\"connection\"][\"key\"]) {\n        if (directives[\"connection\"][\"filter\"] &&\n            directives[\"connection\"][\"filter\"].length > 0) {\n            var filterKeys = directives[\"connection\"][\"filter\"] ?\n                directives[\"connection\"][\"filter\"]\n                : [];\n            filterKeys.sort();\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = args[key];\n            });\n            return \"\".concat(directives[\"connection\"][\"key\"], \"(\").concat(storeKeyNameStringify(filteredArgs_1), \")\");\n        }\n        else {\n            return directives[\"connection\"][\"key\"];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        // We can't use `JSON.stringify` here since it's non-deterministic,\n        // and can lead to different store key names being created even though\n        // the `args` object used during creation has the same properties/values.\n        var stringifiedArgs = storeKeyNameStringify(args);\n        completeFieldName += \"(\".concat(stringifiedArgs, \")\");\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\".concat(key, \"(\").concat(storeKeyNameStringify(directives[key]), \")\");\n            }\n            else {\n                completeFieldName += \"@\".concat(key);\n            }\n        });\n    }\n    return completeFieldName;\n}, {\n    setStringify: function (s) {\n        var previous = storeKeyNameStringify;\n        storeKeyNameStringify = s;\n        return previous;\n    },\n});\nexport function argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nexport function resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nexport function getTypenameFromResult(result, selectionSet, fragmentMap) {\n    var fragments;\n    for (var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++) {\n        var selection = _a[_i];\n        if (isField(selection)) {\n            if (selection.name.value === \"__typename\") {\n                return result[resultKeyNameFromField(selection)];\n            }\n        }\n        else if (fragments) {\n            fragments.push(selection);\n        }\n        else {\n            fragments = [selection];\n        }\n    }\n    if (typeof result.__typename === \"string\") {\n        return result.__typename;\n    }\n    if (fragments) {\n        for (var _b = 0, fragments_1 = fragments; _b < fragments_1.length; _b++) {\n            var selection = fragments_1[_b];\n            var typename = getTypenameFromResult(result, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);\n            if (typeof typename === \"string\") {\n                return typename;\n            }\n        }\n    }\n}\nexport function isField(selection) {\n    return selection.kind === \"Field\";\n}\nexport function isInlineFragment(selection) {\n    return selection.kind === \"InlineFragment\";\n}\n//# sourceMappingURL=storeUtils.js.map","import { __assign, __spreadArray } from \"tslib\";\nimport { invariant } from \"../globals/index.js\";\nimport { visit, Kind } from \"graphql\";\nimport { checkDocument, getOperationDefinition, getFragmentDefinition, getFragmentDefinitions, getMainDefinition, } from \"./getFromAST.js\";\nimport { isField } from \"./storeUtils.js\";\nimport { createFragmentMap } from \"./fragments.js\";\nimport { isArray, isNonEmptyArray } from \"../common/arrays.js\";\nvar TYPENAME_FIELD = {\n    kind: Kind.FIELD,\n    name: {\n        kind: Kind.NAME,\n        value: \"__typename\",\n    },\n};\nfunction isEmpty(op, fragmentMap) {\n    return (!op ||\n        op.selectionSet.selections.every(function (selection) {\n            return selection.kind === Kind.FRAGMENT_SPREAD &&\n                isEmpty(fragmentMap[selection.name.value], fragmentMap);\n        }));\n}\nfunction nullIfDocIsEmpty(doc) {\n    return (isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc)))) ?\n        null\n        : doc;\n}\nfunction getDirectiveMatcher(configs) {\n    var names = new Map();\n    var tests = new Map();\n    configs.forEach(function (directive) {\n        if (directive) {\n            if (directive.name) {\n                names.set(directive.name, directive);\n            }\n            else if (directive.test) {\n                tests.set(directive.test, directive);\n            }\n        }\n    });\n    return function (directive) {\n        var config = names.get(directive.name.value);\n        if (!config && tests.size) {\n            tests.forEach(function (testConfig, test) {\n                if (test(directive)) {\n                    config = testConfig;\n                }\n            });\n        }\n        return config;\n    };\n}\nfunction makeInUseGetterFunction(defaultKey) {\n    var map = new Map();\n    return function inUseGetterFunction(key) {\n        if (key === void 0) { key = defaultKey; }\n        var inUse = map.get(key);\n        if (!inUse) {\n            map.set(key, (inUse = {\n                // Variable and fragment spread names used directly within this\n                // operation or fragment definition, as identified by key. These sets\n                // will be populated during the first traversal of the document in\n                // removeDirectivesFromDocument below.\n                variables: new Set(),\n                fragmentSpreads: new Set(),\n            }));\n        }\n        return inUse;\n    };\n}\nexport function removeDirectivesFromDocument(directives, doc) {\n    checkDocument(doc);\n    // Passing empty strings to makeInUseGetterFunction means we handle anonymous\n    // operations as if their names were \"\". Anonymous fragment definitions are\n    // not supposed to be possible, but the same default naming strategy seems\n    // appropriate for that case as well.\n    var getInUseByOperationName = makeInUseGetterFunction(\"\");\n    var getInUseByFragmentName = makeInUseGetterFunction(\"\");\n    var getInUse = function (ancestors) {\n        for (var p = 0, ancestor = void 0; p < ancestors.length && (ancestor = ancestors[p]); ++p) {\n            if (isArray(ancestor))\n                continue;\n            if (ancestor.kind === Kind.OPERATION_DEFINITION) {\n                // If an operation is anonymous, we use the empty string as its key.\n                return getInUseByOperationName(ancestor.name && ancestor.name.value);\n            }\n            if (ancestor.kind === Kind.FRAGMENT_DEFINITION) {\n                return getInUseByFragmentName(ancestor.name.value);\n            }\n        }\n        globalThis.__DEV__ !== false && invariant.error(83);\n        return null;\n    };\n    var operationCount = 0;\n    for (var i = doc.definitions.length - 1; i >= 0; --i) {\n        if (doc.definitions[i].kind === Kind.OPERATION_DEFINITION) {\n            ++operationCount;\n        }\n    }\n    var directiveMatcher = getDirectiveMatcher(directives);\n    var shouldRemoveField = function (nodeDirectives) {\n        return isNonEmptyArray(nodeDirectives) &&\n            nodeDirectives\n                .map(directiveMatcher)\n                .some(function (config) { return config && config.remove; });\n    };\n    var originalFragmentDefsByPath = new Map();\n    // Any time the first traversal of the document below makes a change like\n    // removing a fragment (by returning null), this variable should be set to\n    // true. Once it becomes true, it should never be set to false again. If this\n    // variable remains false throughout the traversal, then we can return the\n    // original doc immediately without any modifications.\n    var firstVisitMadeChanges = false;\n    var fieldOrInlineFragmentVisitor = {\n        enter: function (node) {\n            if (shouldRemoveField(node.directives)) {\n                firstVisitMadeChanges = true;\n                return null;\n            }\n        },\n    };\n    var docWithoutDirectiveSubtrees = visit(doc, {\n        // These two AST node types share the same implementation, defined above.\n        Field: fieldOrInlineFragmentVisitor,\n        InlineFragment: fieldOrInlineFragmentVisitor,\n        VariableDefinition: {\n            enter: function () {\n                // VariableDefinition nodes do not count as variables in use, though\n                // they do contain Variable nodes that might be visited below. To avoid\n                // counting variable declarations as usages, we skip visiting the\n                // contents of this VariableDefinition node by returning false.\n                return false;\n            },\n        },\n        Variable: {\n            enter: function (node, _key, _parent, _path, ancestors) {\n                var inUse = getInUse(ancestors);\n                if (inUse) {\n                    inUse.variables.add(node.name.value);\n                }\n            },\n        },\n        FragmentSpread: {\n            enter: function (node, _key, _parent, _path, ancestors) {\n                if (shouldRemoveField(node.directives)) {\n                    firstVisitMadeChanges = true;\n                    return null;\n                }\n                var inUse = getInUse(ancestors);\n                if (inUse) {\n                    inUse.fragmentSpreads.add(node.name.value);\n                }\n                // We might like to remove this FragmentSpread by returning null here if\n                // the corresponding FragmentDefinition node is also going to be removed\n                // by the logic below, but we can't control the relative order of those\n                // events, so we have to postpone the removal of dangling FragmentSpread\n                // nodes until after the current visit of the document has finished.\n            },\n        },\n        FragmentDefinition: {\n            enter: function (node, _key, _parent, path) {\n                originalFragmentDefsByPath.set(JSON.stringify(path), node);\n            },\n            leave: function (node, _key, _parent, path) {\n                var originalNode = originalFragmentDefsByPath.get(JSON.stringify(path));\n                if (node === originalNode) {\n                    // If the FragmentNode received by this leave function is identical to\n                    // the one received by the corresponding enter function (above), then\n                    // the visitor must not have made any changes within this\n                    // FragmentDefinition node. This fragment definition may still be\n                    // removed if there are no ...spread references to it, but it won't be\n                    // removed just because it has only a __typename field.\n                    return node;\n                }\n                if (\n                // This logic applies only if the document contains one or more\n                // operations, since removing all fragments from a document containing\n                // only fragments makes the document useless.\n                operationCount > 0 &&\n                    node.selectionSet.selections.every(function (selection) {\n                        return selection.kind === Kind.FIELD &&\n                            selection.name.value === \"__typename\";\n                    })) {\n                    // This is a somewhat opinionated choice: if a FragmentDefinition ends\n                    // up having no fields other than __typename, we remove the whole\n                    // fragment definition, and later prune ...spread references to it.\n                    getInUseByFragmentName(node.name.value).removed = true;\n                    firstVisitMadeChanges = true;\n                    return null;\n                }\n            },\n        },\n        Directive: {\n            leave: function (node) {\n                // If a matching directive is found, remove the directive itself. Note\n                // that this does not remove the target (field, argument, etc) of the\n                // directive, but only the directive itself.\n                if (directiveMatcher(node)) {\n                    firstVisitMadeChanges = true;\n                    return null;\n                }\n            },\n        },\n    });\n    if (!firstVisitMadeChanges) {\n        // If our first pass did not change anything about the document, then there\n        // is no cleanup we need to do, and we can return the original doc.\n        return doc;\n    }\n    // Utility for making sure inUse.transitiveVars is recursively populated.\n    // Because this logic assumes inUse.fragmentSpreads has been completely\n    // populated and inUse.removed has been set if appropriate,\n    // populateTransitiveVars must be called after that information has been\n    // collected by the first traversal of the document.\n    var populateTransitiveVars = function (inUse) {\n        if (!inUse.transitiveVars) {\n            inUse.transitiveVars = new Set(inUse.variables);\n            if (!inUse.removed) {\n                inUse.fragmentSpreads.forEach(function (childFragmentName) {\n                    populateTransitiveVars(getInUseByFragmentName(childFragmentName)).transitiveVars.forEach(function (varName) {\n                        inUse.transitiveVars.add(varName);\n                    });\n                });\n            }\n        }\n        return inUse;\n    };\n    // Since we've been keeping track of fragment spreads used by particular\n    // operations and fragment definitions, we now need to compute the set of all\n    // spreads used (transitively) by any operations in the document.\n    var allFragmentNamesUsed = new Set();\n    docWithoutDirectiveSubtrees.definitions.forEach(function (def) {\n        if (def.kind === Kind.OPERATION_DEFINITION) {\n            populateTransitiveVars(getInUseByOperationName(def.name && def.name.value)).fragmentSpreads.forEach(function (childFragmentName) {\n                allFragmentNamesUsed.add(childFragmentName);\n            });\n        }\n        else if (def.kind === Kind.FRAGMENT_DEFINITION &&\n            // If there are no operations in the document, then all fragment\n            // definitions count as usages of their own fragment names. This heuristic\n            // prevents accidentally removing all fragment definitions from the\n            // document just because it contains no operations that use the fragments.\n            operationCount === 0 &&\n            !getInUseByFragmentName(def.name.value).removed) {\n            allFragmentNamesUsed.add(def.name.value);\n        }\n    });\n    // Now that we have added all fragment spreads used by operations to the\n    // allFragmentNamesUsed set, we can complete the set by transitively adding\n    // all fragment spreads used by those fragments, and so on.\n    allFragmentNamesUsed.forEach(function (fragmentName) {\n        // Once all the childFragmentName strings added here have been seen already,\n        // the top-level allFragmentNamesUsed.forEach loop will terminate.\n        populateTransitiveVars(getInUseByFragmentName(fragmentName)).fragmentSpreads.forEach(function (childFragmentName) {\n            allFragmentNamesUsed.add(childFragmentName);\n        });\n    });\n    var fragmentWillBeRemoved = function (fragmentName) {\n        return !!(\n        // A fragment definition will be removed if there are no spreads that refer\n        // to it, or the fragment was explicitly removed because it had no fields\n        // other than __typename.\n        (!allFragmentNamesUsed.has(fragmentName) ||\n            getInUseByFragmentName(fragmentName).removed));\n    };\n    var enterVisitor = {\n        enter: function (node) {\n            if (fragmentWillBeRemoved(node.name.value)) {\n                return null;\n            }\n        },\n    };\n    return nullIfDocIsEmpty(visit(docWithoutDirectiveSubtrees, {\n        // If the fragment is going to be removed, then leaving any dangling\n        // FragmentSpread nodes with the same name would be a mistake.\n        FragmentSpread: enterVisitor,\n        // This is where the fragment definition is actually removed.\n        FragmentDefinition: enterVisitor,\n        OperationDefinition: {\n            leave: function (node) {\n                // Upon leaving each operation in the depth-first AST traversal, prune\n                // any variables that are declared by the operation but unused within.\n                if (node.variableDefinitions) {\n                    var usedVariableNames_1 = populateTransitiveVars(\n                    // If an operation is anonymous, we use the empty string as its key.\n                    getInUseByOperationName(node.name && node.name.value)).transitiveVars;\n                    // According to the GraphQL spec, all variables declared by an\n                    // operation must either be used by that operation or used by some\n                    // fragment included transitively into that operation:\n                    // https://spec.graphql.org/draft/#sec-All-Variables-Used\n                    //\n                    // To stay on the right side of this validation rule, if/when we\n                    // remove the last $var references from an operation or its fragments,\n                    // we must also remove the corresponding $var declaration from the\n                    // enclosing operation. This pruning applies only to operations and\n                    // not fragment definitions, at the moment. Fragments may be able to\n                    // declare variables eventually, but today they can only consume them.\n                    if (usedVariableNames_1.size < node.variableDefinitions.length) {\n                        return __assign(__assign({}, node), { variableDefinitions: node.variableDefinitions.filter(function (varDef) {\n                                return usedVariableNames_1.has(varDef.variable.name.value);\n                            }) });\n                    }\n                }\n            },\n        },\n    }));\n}\nexport var addTypenameToDocument = Object.assign(function (doc) {\n    return visit(doc, {\n        SelectionSet: {\n            enter: function (node, _key, parent) {\n                // Don't add __typename to OperationDefinitions.\n                if (parent &&\n                    parent.kind ===\n                        Kind.OPERATION_DEFINITION) {\n                    return;\n                }\n                // No changes if no selections.\n                var selections = node.selections;\n                if (!selections) {\n                    return;\n                }\n                // If selections already have a __typename, or are part of an\n                // introspection query, do nothing.\n                var skip = selections.some(function (selection) {\n                    return (isField(selection) &&\n                        (selection.name.value === \"__typename\" ||\n                            selection.name.value.lastIndexOf(\"__\", 0) === 0));\n                });\n                if (skip) {\n                    return;\n                }\n                // If this SelectionSet is @export-ed as an input variable, it should\n                // not have a __typename field (see issue #4691).\n                var field = parent;\n                if (isField(field) &&\n                    field.directives &&\n                    field.directives.some(function (d) { return d.name.value === \"export\"; })) {\n                    return;\n                }\n                // Create and return a new SelectionSet with a __typename Field.\n                return __assign(__assign({}, node), { selections: __spreadArray(__spreadArray([], selections, true), [TYPENAME_FIELD], false) });\n            },\n        },\n    });\n}, {\n    added: function (field) {\n        return field === TYPENAME_FIELD;\n    },\n});\nvar connectionRemoveConfig = {\n    test: function (directive) {\n        var willRemove = directive.name.value === \"connection\";\n        if (willRemove) {\n            if (!directive.arguments ||\n                !directive.arguments.some(function (arg) { return arg.name.value === \"key\"; })) {\n                globalThis.__DEV__ !== false && invariant.warn(84);\n            }\n        }\n        return willRemove;\n    },\n};\nexport function removeConnectionDirectiveFromDocument(doc) {\n    return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    return (!!selectionSet &&\n        selectionSet.selections &&\n        selectionSet.selections.some(function (selection) {\n            return hasDirectivesInSelection(directives, selection, nestedCheck);\n        }));\n}\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    if (!isField(selection)) {\n        return true;\n    }\n    if (!selection.directives) {\n        return false;\n    }\n    return (selection.directives.some(getDirectiveMatcher(directives)) ||\n        (nestedCheck &&\n            hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck)));\n}\nfunction getArgumentMatcher(config) {\n    return function argumentMatcher(argument) {\n        return config.some(function (aConfig) {\n            return argument.value &&\n                argument.value.kind === Kind.VARIABLE &&\n                argument.value.name &&\n                (aConfig.name === argument.value.name.value ||\n                    (aConfig.test && aConfig.test(argument)));\n        });\n    };\n}\nexport function removeArgumentsFromDocument(config, doc) {\n    var argMatcher = getArgumentMatcher(config);\n    return nullIfDocIsEmpty(visit(doc, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { \n                    // Remove matching top level variables definitions.\n                    variableDefinitions: node.variableDefinitions ?\n                        node.variableDefinitions.filter(function (varDef) {\n                            return !config.some(function (arg) { return arg.name === varDef.variable.name.value; });\n                        })\n                        : [] });\n            },\n        },\n        Field: {\n            enter: function (node) {\n                // If `remove` is set to true for an argument, and an argument match\n                // is found for a field, remove the field as well.\n                var shouldRemoveField = config.some(function (argConfig) { return argConfig.remove; });\n                if (shouldRemoveField) {\n                    var argMatchCount_1 = 0;\n                    if (node.arguments) {\n                        node.arguments.forEach(function (arg) {\n                            if (argMatcher(arg)) {\n                                argMatchCount_1 += 1;\n                            }\n                        });\n                    }\n                    if (argMatchCount_1 === 1) {\n                        return null;\n                    }\n                }\n            },\n        },\n        Argument: {\n            enter: function (node) {\n                // Remove all matching arguments.\n                if (argMatcher(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n}\nexport function removeFragmentSpreadFromDocument(config, doc) {\n    function enter(node) {\n        if (config.some(function (def) { return def.name === node.name.value; })) {\n            return null;\n        }\n    }\n    return nullIfDocIsEmpty(visit(doc, {\n        FragmentSpread: { enter: enter },\n        FragmentDefinition: { enter: enter },\n    }));\n}\n// If the incoming document is a query, return it as is. Otherwise, build a\n// new document containing a query operation based on the selection set\n// of the previous main operation.\nexport function buildQueryFromSelectionSet(document) {\n    var definition = getMainDefinition(document);\n    var definitionOperation = definition.operation;\n    if (definitionOperation === \"query\") {\n        // Already a query, so return the existing document.\n        return document;\n    }\n    // Build a new query using the selection set of the main operation.\n    var modifiedDoc = visit(document, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { operation: \"query\" });\n            },\n        },\n    });\n    return modifiedDoc;\n}\n// Remove fields / selection sets that include an @client directive.\nexport function removeClientSetsFromDocument(document) {\n    checkDocument(document);\n    var modifiedDoc = removeDirectivesFromDocument([\n        {\n            test: function (directive) { return directive.name.value === \"client\"; },\n            remove: true,\n        },\n    ], document);\n    return modifiedDoc;\n}\n//# sourceMappingURL=transform.js.map","export var version = \"3.9.4\";\n//# sourceMappingURL=version.js.map"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","pop","push","__spreadArray","to","from","pack","ar","l","slice","concat","SuppressedError","defineProperty","exports","decompress","compress","codecimpl_1","compressBatch","proof","centries","lookup","registry","Map","entry","entries","exist","centry","compressExist","nonexist","Error","non","key","left","right","lookupInners","path","map","inner","sig","ics23","InnerOp","encode","finish","idx","get","undefined","set","leaf","decompressBatch","comp","decompressExist","batch","compressed","valuesById","values","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","HashOp","LengthOp","ExistenceProof","properties","keys","newBuffer","emptyArray","message","writer","uint32","bytes","LeafOp","fork","ldelim","encodeDelimited","decode","reader","end","len","pos","tag","skipType","decodeDelimited","verify","isString","error","isArray","fromObject","object","base64","toObject","options","arrays","defaults","j","toJSON","toJSONOptions","NonExistenceProof","CommitmentProof","$oneOfFields","oneOfGetter","oneOfSetter","BatchProof","CompressedBatchProof","oneofs","hash","prehashKey","prehashValue","prefix","int32","enums","suffix","ProofSpec","leafSpec","innerSpec","maxDepth","minDepth","InnerSpec","isInteger","childOrder","childSize","minPrefixLength","maxPrefixLength","emptyChild","end2","BatchEntry","CompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","module","batchVerifyNonMembership","batchVerifyMembership","verifyNonMembership","verifyMembership","compress_1","proofs_1","specs_1","spec","root","match","bytesEqual","x","find","getExistForKey","verifyExistence","_a","bytesBefore","getNonExistForKey","verifyNonExistence","items","norm","tendermintSpec","iavlSpec","calculateExistenceRoot","enumerable","ics23_1","doHash","applyInner","applyLeaf","ripemd160_1","sha256_1","sha512_1","ensure","maybe","pkey","prepareLeafData","ensureHash","ensureLength","pvalue","data","Uint8Array","ensureBytes","child","preimage","h","NO_HASH","NO_PREFIX","hashOp","lengthOp","doHashOrNoop","VAR_PROTO","encodeVarintProto","REQUIRE_32_BYTES","REQUIRE_64_BYTES","FIXED32_LITTLE","encodeFixed32Le","doLengthOp","SHA256","sha256","SHA512","sha512","RIPEMD160","ripemd160","BITCOIN","SHA512_256","sha512_256","enc","Math","abs","floor","ensureLeftNeighbor","ensureSpec","smtSpec","ops_1","calc","ensureBytesEqual","res","ensureLeaf","ensureInner","ensureLeftMost","minPrefix","maxPrefix","getPadding","hasPadding","ensureRightMost","mutleft","mutright","topleft","topright","leftidx","orderFromPadding","rightidx","isLeftStep","branch","order","findIndex","val","getPosition","leftKey","rightKey","ensureBytesBefore","a","first","last","min","check","ensurePrefix","hasPrefix","maxLeftChildBytes","number","Number","isSafeInteger","bool","isBytes","name","lengths","includes","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","assert","HashMD","Maj","Chi","_assert_js_1","utils_js_1","c","Hash","padOffset","isLE","super","buffer","view","createView","update","toBytes","take","subarray","process","dataView","roundClean","digestInto","fill","byteOffset","setBigUint64","_32n","BigInt","_u32_max","wh","wl","setUint32","oview","outLen","state","digest","destroy","_cloneInto","add5L","add5H","add4H","add4L","add3H","add3L","add","rotlBL","rotlBH","rotlSL","rotlSH","rotr32L","rotr32H","rotrBL","rotrBH","rotrSL","rotrSH","shrSL","shrSH","toBig","split","fromBig","U32_MASK64","le","lst","Ah","Uint32Array","Al","_l","_h","Bh","Bl","Cl","low","Ch","Dl","Dh","El","Eh","u64","crypto","globalThis","_md_js_1","Rho","Id","idxL","idxR","k","shifts","shiftsL","shiftsR","Kl","Kr","group","z","R_BUF","h0","h1","h2","h3","h4","offset","getUint32","al","bl","br","cl","cr","dl","dr","el","er","rGroup","hbl","hbr","rl","rr","sl","sr","tl","rotl","tr","wrapConstructor","sha224","SHA256_K","SHA256_IV","SHA256_W","A","B","C","D","E","F","G","H","W15","W2","s0","rotr","s1","T1","T2","SHA224","sha384","sha512_224","_u64_js_1","SHA512_Kh","SHA512_Kl","default","SHA512_W_H","SHA512_W_L","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA384","randomBytes","wrapXOFConstructorWithOpts","wrapConstructorWithOpts","checkOpts","concatBytes","utf8ToBytes","asyncLoop","nextTick","hexToBytes","bytesToHex","byteSwap32","byteSwapIfBE","byteSwap","u32","u8","crypto_1","arr","byteLength","DataView","word","shift","hexes","toString","padStart","hex","asciis","_0","_9","_A","_F","_f","asciiToBase16","char","hl","array","ai","hi","n1","charCodeAt","n2","str","TextEncoder","async","iters","tick","cb","ts","Date","now","diff","sum","pad","clone","toStr","opts","hashCons","hashC","msg","tmp","bytesLength","getRandomValues","protobuf","configure","_configure","BufferWriter","BufferReader","build","rpc","LongBits","utf8","indexOutOfRange","writeLength","RangeError","buf","create_array","Buffer","isBuffer","readLongVarint","bits","lo","readFixed32_end","readFixed64","_slice","sint32","fixed32","sfixed32","float","readFloatLE","double","readDoubleLE","start","string","read","skip","wireType","BufferReader_","fn","Long","merge","int64","uint64","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","EventEmitter","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","self","asPromise","err","response","emit","setTimeout","endedByRPC","off","zero","toNumber","zzEncode","zeroHash","fromNumber","sign","parseInt","fromString","high","unsigned","toLong","fromHash","toHash","fromCharCode","mask","part0","part1","part2","dst","src","ifNotSet","newError","CustomError","captureStackTrace","stack","inquire","pool","isNode","versions","node","global","window","freeze","emptyObject","isFinite","isObject","isset","isSet","obj","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","lcFirst","charAt","toLowerCase","substring","ProtocolError","fieldNames","fieldMap","longs","json","encoding","allocUnsafe","size","Op","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","alloc","_push","writeFloatLE","writeDoubleLE","writeBytes","write","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","BinaryWriter","BinaryReader","WireType","utf8_1","varint_1","assertBounds","type","fieldNo","Varint","Fixed64","Bytes","Fixed32","varint32read","bind","num","readUInt32","readInt32","varint64read","int64ToString","uInt64ToString","utf8Read","proceed","static","SIZE","MAX","slab","writeVarint32","int64FromString","int64Length","utf8Length","Params","ModuleCredential","ModuleAccount","BaseAccount","protobufPackage","any_1","binary_1","helpers_1","createBaseBaseAccount","address","pubKey","accountNumber","sequence","createBaseParams","maxMemoCharacters","txSigLimit","txSizeCostPerByte","sigVerifyCostEd25519","sigVerifyCostSecp256k1","typeUrl","Any","input","fromJSON","fromPartial","baseAccount","permissions","moduleName","derivationKeys","bytesFromBase64","base64FromBytes","QueryClientImpl","QueryAccountInfoResponse","QueryAccountInfoRequest","QueryAccountAddressByIDResponse","QueryAccountAddressByIDRequest","AddressStringToBytesResponse","AddressStringToBytesRequest","AddressBytesToStringResponse","AddressBytesToStringRequest","Bech32PrefixResponse","Bech32PrefixRequest","QueryModuleAccountByNameResponse","QueryModuleAccountByNameRequest","QueryModuleAccountsResponse","QueryModuleAccountsRequest","QueryParamsResponse","QueryParamsRequest","QueryAccountResponse","QueryAccountRequest","QueryAccountsResponse","QueryAccountsRequest","pagination_1","auth_1","createBaseQueryParamsResponse","params","createBaseAddressBytesToStringRequest","addressBytes","createBaseAddressStringToBytesResponse","createBaseQueryAccountAddressByIDRequest","id","accountId","pagination","PageRequest","accounts","PageResponse","account","bech32Prefix","addressString","accountAddress","info","Accounts","Account","AccountAddressByID","ModuleAccounts","ModuleAccountByName","Bech32Prefix","AddressBytesToString","AddressStringToBytes","AccountInfo","GrantQueueItem","GrantAuthorization","Grant","GenericAuthorization","timestamp_1","authorization","expiration","Timestamp","fromJsonTimestamp","fromTimestamp","toISOString","granter","grantee","msgTypeUrls","QueryGranteeGrantsResponse","QueryGranteeGrantsRequest","QueryGranterGrantsResponse","QueryGranterGrantsRequest","QueryGrantsResponse","QueryGrantsRequest","authz_1","msgTypeUrl","grants","Grants","GranterGrants","GranteeGrants","MsgClientImpl","MsgRevokeResponse","MsgRevoke","MsgGrantResponse","MsgExec","MsgExecResponse","MsgGrant","createBaseMsgGrant","grant","results","msgs","Exec","Revoke","Metadata","DenomUnit","Supply","Output","Input","SendEnabled","coin_1","sendEnabled","defaultSendEnabled","denom","enabled","coins","Coin","total","exponent","aliases","round","description","denomUnits","base","display","symbol","uri","uriHash","QuerySendEnabledResponse","QuerySendEnabledRequest","QueryDenomOwnersResponse","DenomOwner","QueryDenomOwnersRequest","QueryDenomMetadataResponse","QueryDenomMetadataRequest","QueryDenomsMetadataResponse","QueryDenomsMetadataRequest","QuerySupplyOfResponse","QuerySupplyOfRequest","QueryTotalSupplyResponse","QueryTotalSupplyRequest","QuerySpendableBalanceByDenomResponse","QuerySpendableBalanceByDenomRequest","QuerySpendableBalancesResponse","QuerySpendableBalancesRequest","QueryAllBalancesResponse","QueryAllBalancesRequest","QueryBalanceResponse","QueryBalanceRequest","bank_1","createBaseQuerySupplyOfResponse","amount","createBaseQueryDenomMetadataResponse","metadata","createBaseDenomOwner","balance","balances","supply","metadatas","denomOwners","denoms","Balance","AllBalances","SpendableBalances","SpendableBalanceByDenom","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","DenomOwners","MsgSetSendEnabledResponse","MsgSetSendEnabled","MsgUpdateParamsResponse","MsgUpdateParams","MsgMultiSendResponse","MsgMultiSend","MsgSendResponse","MsgSend","createBaseMsgUpdateParams","authority","fromAddress","toAddress","inputs","outputs","useDefaultFor","Send","MultiSend","UpdateParams","SetSendEnabled","SearchTxsResult","TxMsgData","MsgData","SimulationResponse","Result","GasInfo","Attribute","StringEvent","ABCIMessageLog","TxResponse","types_1","createBaseTxResponse","height","txhash","codespace","code","rawLog","logs","gasWanted","gasUsed","tx","timestamp","events","createBaseGasInfo","createBaseResult","log","msgResponses","createBaseSimulationResponse","gasInfo","createBaseMsgData","msgType","createBaseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","Event","msgIndex","attributes","createBasePageRequest","countTotal","reverse","createBasePageResponse","nextKey","DecProto","IntProto","DecCoin","int","dec","PrivKey","PubKey","createBasePubKey","createBasePrivKey","LegacyAminoPubKey","threshold","publicKeys","CompactBitArray","MultiSignature","createBaseCompactBitArray","extraBitsStored","elems","signatures","CommunityPoolSpendProposalWithDeposit","DelegationDelegatorReward","DelegatorStartingInfo","CommunityPoolSpendProposal","FeePool","ValidatorSlashEvents","ValidatorSlashEvent","ValidatorOutstandingRewards","ValidatorAccumulatedCommission","ValidatorCurrentRewards","ValidatorHistoricalRewards","createBaseValidatorCurrentRewards","rewards","period","createBaseValidatorSlashEvent","validatorPeriod","fraction","createBaseDelegatorStartingInfo","previousPeriod","stake","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","cumulativeRewardRatio","referenceCount","commission","validatorSlashEvents","communityPool","title","recipient","validatorAddress","reward","deposit","QueryCommunityPoolResponse","QueryCommunityPoolRequest","QueryDelegatorWithdrawAddressResponse","QueryDelegatorWithdrawAddressRequest","QueryDelegatorValidatorsResponse","QueryDelegatorValidatorsRequest","QueryDelegationTotalRewardsResponse","QueryDelegationTotalRewardsRequest","QueryDelegationRewardsResponse","QueryDelegationRewardsRequest","QueryValidatorSlashesResponse","QueryValidatorSlashesRequest","QueryValidatorCommissionResponse","QueryValidatorCommissionRequest","QueryValidatorOutstandingRewardsResponse","QueryValidatorOutstandingRewardsRequest","QueryValidatorDistributionInfoResponse","QueryValidatorDistributionInfoRequest","distribution_1","createBaseQueryValidatorOutstandingRewardsResponse","createBaseQueryValidatorCommissionResponse","createBaseQueryValidatorSlashesRequest","startingHeight","endingHeight","operatorAddress","selfBondRewards","slashes","delegatorAddress","validators","withdrawAddress","ValidatorDistributionInfo","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","MsgCommunityPoolSpendResponse","MsgCommunityPoolSpend","MsgFundCommunityPoolResponse","MsgFundCommunityPool","MsgWithdrawValidatorCommissionResponse","MsgWithdrawValidatorCommission","MsgWithdrawDelegatorRewardResponse","MsgWithdrawDelegatorReward","MsgSetWithdrawAddressResponse","MsgSetWithdrawAddress","depositor","SetWithdrawAddress","WithdrawDelegatorReward","WithdrawValidatorCommission","FundCommunityPool","CommunityPoolSpend","AllowedMsgAllowance","PeriodicAllowance","BasicAllowance","duration_1","createBasePeriodicAllowance","basic","Duration","periodSpendLimit","periodCanSpend","periodReset","spendLimit","allowance","allowedMessages","QueryAllowancesByGranterResponse","QueryAllowancesByGranterRequest","QueryAllowancesResponse","QueryAllowancesRequest","QueryAllowanceResponse","QueryAllowanceRequest","feegrant_1","allowances","Allowance","Allowances","AllowancesByGranter","MsgRevokeAllowanceResponse","MsgRevokeAllowance","MsgGrantAllowanceResponse","MsgGrantAllowance","GrantAllowance","RevokeAllowance","TallyParams","VotingParams","DepositParams","Vote","TallyResult","Proposal","Deposit","WeightedVoteOption","proposalStatusToJSON","proposalStatusFromJSON","ProposalStatus","voteOptionToJSON","voteOptionFromJSON","VoteOption","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","UNRECOGNIZED","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","createBaseDeposit","proposalId","createBaseProposal","messages","status","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","summary","proposer","createBaseVote","voter","option","weight","yesCount","abstainCount","noCount","noWithVetoCount","minDeposit","maxDepositPeriod","votingPeriod","quorum","vetoThreshold","minInitialDepositRatio","burnVoteQuorum","burnProposalDepositPrevote","burnVoteVeto","MsgDepositResponse","MsgDeposit","MsgVoteWeightedResponse","MsgVoteWeighted","MsgVoteResponse","MsgVote","MsgExecLegacyContentResponse","MsgExecLegacyContent","MsgSubmitProposalResponse","MsgSubmitProposal","gov_1","createBaseMsgSubmitProposalResponse","createBaseMsgVote","createBaseMsgVoteWeighted","createBaseMsgDeposit","initialDeposit","content","SubmitProposal","ExecLegacyContent","VoteWeighted","QueryTallyResultResponse","QueryTallyResultRequest","QueryDepositsResponse","QueryDepositsRequest","QueryDepositResponse","QueryDepositRequest","QueryVotesResponse","QueryVotesRequest","QueryVoteResponse","QueryVoteRequest","QueryProposalsResponse","QueryProposalsRequest","QueryProposalResponse","QueryProposalRequest","createBaseQueryProposalRequest","createBaseQueryProposalResponse","proposal","createBaseQueryVoteRequest","createBaseQueryVoteResponse","vote","createBaseQueryVotesRequest","votingParams","depositParams","tallyParams","createBaseQueryDepositRequest","createBaseQueryDepositResponse","createBaseQueryDepositsRequest","createBaseQueryTallyResultRequest","createBaseQueryTallyResultResponse","tally","proposalStatus","proposals","votes","paramsType","deposits","Proposals","Votes","Deposits","MsgLeaveGroupResponse","MsgLeaveGroup","MsgWithdrawProposalResponse","MsgWithdrawProposal","MsgUpdateGroupPolicyMetadataResponse","MsgUpdateGroupPolicyMetadata","MsgUpdateGroupPolicyDecisionPolicyResponse","MsgUpdateGroupPolicyDecisionPolicy","MsgCreateGroupWithPolicyResponse","MsgCreateGroupWithPolicy","MsgUpdateGroupPolicyAdminResponse","MsgUpdateGroupPolicyAdmin","MsgCreateGroupPolicyResponse","MsgCreateGroupPolicy","MsgUpdateGroupMetadataResponse","MsgUpdateGroupMetadata","MsgUpdateGroupAdminResponse","MsgUpdateGroupAdmin","MsgUpdateGroupMembersResponse","MsgUpdateGroupMembers","MsgCreateGroupResponse","MsgCreateGroup","execToJSON","execFromJSON","EXEC_UNSPECIFIED","EXEC_TRY","createBaseMsgCreateGroupResponse","groupId","createBaseMsgUpdateGroupMembers","admin","memberUpdates","createBaseMsgUpdateGroupAdmin","newAdmin","createBaseMsgUpdateGroupMetadata","createBaseMsgCreateGroupPolicy","decisionPolicy","createBaseMsgCreateGroupWithPolicyResponse","groupPolicyAddress","createBaseMsgWithdrawProposal","exec","createBaseMsgExec","executor","createBaseMsgLeaveGroup","members","MemberRequest","groupMetadata","groupPolicyMetadata","groupPolicyAsAdmin","proposers","proposalExecutorResultFromJSON","proposalExecutorResultToJSON","CreateGroup","UpdateGroupMembers","UpdateGroupAdmin","UpdateGroupMetadata","CreateGroupPolicy","CreateGroupWithPolicy","UpdateGroupPolicyAdmin","UpdateGroupPolicyDecisionPolicy","UpdateGroupPolicyMetadata","WithdrawProposal","LeaveGroup","GroupPolicyInfo","GroupMember","GroupInfo","DecisionPolicyWindows","PercentageDecisionPolicy","ThresholdDecisionPolicy","Member","ProposalExecutorResult","PROPOSAL_STATUS_SUBMITTED","PROPOSAL_STATUS_ACCEPTED","PROPOSAL_STATUS_ABORTED","PROPOSAL_STATUS_WITHDRAWN","PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED","PROPOSAL_EXECUTOR_RESULT_NOT_RUN","PROPOSAL_EXECUTOR_RESULT_SUCCESS","PROPOSAL_EXECUTOR_RESULT_FAILURE","createBaseMember","addedAt","createBaseDecisionPolicyWindows","minExecutionPeriod","createBaseGroupInfo","version","totalWeight","createdAt","createBaseGroupMember","member","createBaseGroupPolicyInfo","groupVersion","groupPolicyVersion","votingPeriodEnd","executorResult","windows","percentage","lengthOpToJSON","lengthOpFromJSON","hashOpToJSON","hashOpFromJSON","KECCAK","VAR_RLP","FIXED32_BIG","FIXED64_BIG","FIXED64_LITTLE","createBaseExistenceProof","createBaseNonExistenceProof","createBaseLeafOp","createBaseInnerOp","createBaseInnerSpec","createBaseCompressedExistenceProof","createBaseCompressedNonExistenceProof","Minter","mintDenom","inflationRateChange","inflationMax","inflationMin","goalBonded","blocksPerYear","inflation","annualProvisions","QueryAnnualProvisionsResponse","QueryAnnualProvisionsRequest","QueryInflationResponse","QueryInflationRequest","mint_1","createBaseQueryInflationResponse","createBaseQueryAnnualProvisionsResponse","Inflation","AnnualProvisions","QuerySigningInfosResponse","QuerySigningInfosRequest","QuerySigningInfoResponse","QuerySigningInfoRequest","slashing_1","createBaseQuerySigningInfoResponse","valSigningInfo","ValidatorSigningInfo","consAddress","SigningInfo","SigningInfos","createBaseValidatorSigningInfo","startHeight","indexOffset","jailedUntil","tombstoned","missedBlocksCounter","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","QueryPoolResponse","QueryPoolRequest","QueryHistoricalInfoResponse","QueryHistoricalInfoRequest","QueryDelegatorValidatorResponse","QueryDelegatorValidatorRequest","QueryRedelegationsResponse","QueryRedelegationsRequest","QueryDelegatorUnbondingDelegationsResponse","QueryDelegatorUnbondingDelegationsRequest","QueryDelegatorDelegationsResponse","QueryDelegatorDelegationsRequest","QueryUnbondingDelegationResponse","QueryUnbondingDelegationRequest","QueryDelegationResponse","QueryDelegationRequest","QueryValidatorUnbondingDelegationsResponse","QueryValidatorUnbondingDelegationsRequest","QueryValidatorDelegationsResponse","QueryValidatorDelegationsRequest","QueryValidatorResponse","QueryValidatorRequest","QueryValidatorsResponse","QueryValidatorsRequest","staking_1","createBaseQueryValidatorResponse","validator","Validator","createBaseQueryUnbondingDelegationResponse","unbond","UnbondingDelegation","createBaseQueryDelegatorValidatorResponse","createBaseQueryHistoricalInfoRequest","createBaseQueryPoolResponse","Pool","validatorAddr","delegationResponses","DelegationResponse","unbondingResponses","delegatorAddr","delegationResponse","srcValidatorAddr","dstValidatorAddr","redelegationResponses","RedelegationResponse","hist","HistoricalInfo","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","Delegation","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","MsgCancelUnbondingDelegationResponse","MsgCancelUnbondingDelegation","MsgUndelegateResponse","MsgUndelegate","MsgBeginRedelegateResponse","MsgBeginRedelegate","MsgDelegateResponse","MsgDelegate","MsgEditValidatorResponse","MsgEditValidator","MsgCreateValidatorResponse","MsgCreateValidator","createBaseMsgCreateValidator","Description","CommissionRates","minSelfDelegation","pubkey","createBaseMsgEditValidator","commissionRate","createBaseMsgDelegate","createBaseMsgBeginRedelegate","validatorSrcAddress","validatorDstAddress","createBaseMsgBeginRedelegateResponse","completionTime","createBaseMsgUndelegate","createBaseMsgUndelegateResponse","createBaseMsgCancelUnbondingDelegation","creationHeight","CreateValidator","EditValidator","Delegate","BeginRedelegate","Undelegate","CancelUnbondingDelegation","SignatureDescriptor_Data_Multi","SignatureDescriptor_Data_Single","SignatureDescriptor_Data","SignatureDescriptor","SignatureDescriptors","signModeToJSON","signModeFromJSON","SignMode","multisig_1","SIGN_MODE_UNSPECIFIED","SIGN_MODE_DIRECT","SIGN_MODE_TEXTUAL","SIGN_MODE_DIRECT_AUX","SIGN_MODE_LEGACY_AMINO_JSON","SIGN_MODE_EIP_191","createBaseSignatureDescriptor","publicKey","createBaseSignatureDescriptor_Data_Single","mode","signature","single","multi","bitarray","AuxSignerData","Tip","Fee","ModeInfo_Multi","ModeInfo_Single","ModeInfo","SignerInfo","AuthInfo","TxBody","SignDocDirectAux","SignDoc","TxRaw","Tx","signing_1","createBaseTxRaw","bodyBytes","authInfoBytes","createBaseSignDoc","chainId","createBaseSignDocDirectAux","tip","createBaseTxBody","memo","timeoutHeight","extensionOptions","nonCriticalExtensionOptions","createBaseSignerInfo","modeInfo","createBaseFee","gasLimit","payer","createBaseAuxSignerData","signDoc","authInfo","signerInfos","fee","modeInfos","tipper","ModuleVersion","CancelSoftwareUpgradeProposal","SoftwareUpgradeProposal","Plan","createBasePlan","time","upgradedClientState","createBaseSoftwareUpgradeProposal","plan","createBaseModuleVersion","MsgCreatePeriodicVestingAccountResponse","MsgCreatePeriodicVestingAccount","MsgCreatePermanentLockedAccountResponse","MsgCreatePermanentLockedAccount","MsgCreateVestingAccountResponse","MsgCreateVestingAccount","vesting_1","createBaseMsgCreateVestingAccount","endTime","delayed","createBaseMsgCreatePeriodicVestingAccount","startTime","vestingPeriods","Period","CreateVestingAccount","CreatePermanentLockedAccount","CreatePeriodicVestingAccount","PermanentLockedAccount","PeriodicVestingAccount","DelayedVestingAccount","ContinuousVestingAccount","BaseVestingAccount","createBaseBaseVestingAccount","originalVesting","delegatedFree","delegatedVesting","createBaseContinuousVestingAccount","baseVestingAccount","createBasePeriod","createBasePeriodicVestingAccount","QueryContractsByCreatorResponse","QueryContractsByCreatorRequest","QueryPinnedCodesResponse","QueryPinnedCodesRequest","QueryCodesResponse","QueryCodesRequest","QueryCodeResponse","CodeInfoResponse","QueryCodeRequest","QuerySmartContractStateResponse","QuerySmartContractStateRequest","QueryRawContractStateResponse","QueryRawContractStateRequest","QueryAllContractStateResponse","QueryAllContractStateRequest","QueryContractsByCodeResponse","QueryContractsByCodeRequest","QueryContractHistoryResponse","QueryContractHistoryRequest","QueryContractInfoResponse","QueryContractInfoRequest","createBaseQueryContractInfoResponse","contractInfo","ContractInfo","createBaseQueryContractsByCodeRequest","codeId","createBaseQueryRawContractStateRequest","queryData","createBaseQueryRawContractStateResponse","createBaseQuerySmartContractStateRequest","createBaseQuerySmartContractStateResponse","createBaseQueryCodeRequest","createBaseCodeInfoResponse","creator","dataHash","instantiatePermission","AccessConfig","createBaseQueryCodeResponse","codeInfo","ContractCodeHistoryEntry","contracts","models","Model","codeInfos","codeIds","creatorAddress","contractAddresses","ContractHistory","ContractsByCode","AllContractState","RawContractState","SmartContractState","Code","Codes","PinnedCodes","ContractsByCreator","MsgUpdateInstantiateConfigResponse","MsgUpdateInstantiateConfig","MsgClearAdminResponse","MsgClearAdmin","MsgUpdateAdminResponse","MsgUpdateAdmin","MsgMigrateContractResponse","MsgMigrateContract","MsgExecuteContractResponse","MsgExecuteContract","MsgInstantiateContract2Response","MsgInstantiateContractResponse","MsgInstantiateContract2","MsgInstantiateContract","MsgStoreCodeResponse","MsgStoreCode","createBaseMsgStoreCode","sender","wasmByteCode","createBaseMsgStoreCodeResponse","checksum","createBaseMsgInstantiateContract","funds","createBaseMsgInstantiateContract2","salt","fixMsg","createBaseMsgInstantiateContractResponse","createBaseMsgInstantiateContract2Response","createBaseMsgExecuteContract","contract","createBaseMsgExecuteContractResponse","createBaseMsgMigrateContract","createBaseMsgMigrateContractResponse","createBaseMsgUpdateInstantiateConfig","newInstantiatePermission","StoreCode","InstantiateContract","InstantiateContract2","ExecuteContract","MigrateContract","UpdateAdmin","ClearAdmin","UpdateInstantiateConfig","AbsoluteTxPosition","CodeInfo","AccessTypeParam","contractCodeHistoryOperationTypeToJSON","contractCodeHistoryOperationTypeFromJSON","ContractCodeHistoryOperationType","accessTypeToJSON","accessTypeFromJSON","AccessType","ACCESS_TYPE_UNSPECIFIED","ACCESS_TYPE_NOBODY","ACCESS_TYPE_ONLY_ADDRESS","ACCESS_TYPE_EVERYBODY","ACCESS_TYPE_ANY_OF_ADDRESSES","CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED","CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT","CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE","CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS","codeUploadAccess","instantiateDefaultPermission","createBaseCodeInfo","codeHash","instantiateConfig","createBaseContractInfo","created","ibcPortId","extension","createBaseContractCodeHistoryEntry","operation","updated","createBaseAbsoluteTxPosition","blockHeight","txIndex","createBaseModel","permission","addresses","createBaseAny","createBaseDuration","seconds","nanos","createBaseTimestamp","toTimestamp","setPaginationParams","fromDuration","toDuration","omitDefault","atob","b64","bin","btoa","forEach","byte","join","duration","date","getTime","trunc","millis","o","QueryEscrowAddressResponse","QueryEscrowAddressRequest","QueryDenomHashResponse","QueryDenomHashRequest","QueryDenomTracesResponse","QueryDenomTracesRequest","QueryDenomTraceResponse","QueryDenomTraceRequest","transfer_1","denomTrace","DenomTrace","denomTraces","trace","portId","channelId","escrowAddress","DenomTraces","DenomHash","EscrowAddress","baseDenom","receiveEnabled","MsgTransferResponse","MsgTransfer","client_1","createBaseMsgTransfer","sourcePort","sourceChannel","token","receiver","Height","timeoutTimestamp","createBaseMsgTransferResponse","Transfer","QueryNextSequenceReceiveResponse","QueryNextSequenceReceiveRequest","QueryUnreceivedAcksResponse","QueryUnreceivedAcksRequest","QueryUnreceivedPacketsResponse","QueryUnreceivedPacketsRequest","QueryPacketAcknowledgementsResponse","QueryPacketAcknowledgementsRequest","QueryPacketAcknowledgementResponse","QueryPacketAcknowledgementRequest","QueryPacketReceiptResponse","QueryPacketReceiptRequest","QueryPacketCommitmentsResponse","QueryPacketCommitmentsRequest","QueryPacketCommitmentResponse","QueryPacketCommitmentRequest","QueryChannelConsensusStateResponse","QueryChannelConsensusStateRequest","QueryChannelClientStateResponse","QueryChannelClientStateRequest","QueryConnectionChannelsResponse","QueryConnectionChannelsRequest","QueryChannelsResponse","QueryChannelsRequest","QueryChannelResponse","QueryChannelRequest","channel_1","createBaseQueryChannelResponse","channel","proofHeight","createBaseQueryChannelsResponse","channels","createBaseQueryConnectionChannelsResponse","createBaseQueryChannelClientStateResponse","identifiedClientState","createBaseQueryChannelConsensusStateRequest","revisionNumber","revisionHeight","createBaseQueryChannelConsensusStateResponse","consensusState","clientId","createBaseQueryPacketCommitmentRequest","createBaseQueryPacketCommitmentResponse","commitment","createBaseQueryPacketCommitmentsResponse","commitments","createBaseQueryPacketReceiptRequest","createBaseQueryPacketReceiptResponse","received","createBaseQueryPacketAcknowledgementRequest","createBaseQueryPacketAcknowledgementResponse","acknowledgement","createBaseQueryPacketAcknowledgementsResponse","acknowledgements","createBaseQueryUnreceivedPacketsResponse","sequences","createBaseQueryUnreceivedAcksResponse","createBaseQueryNextSequenceReceiveResponse","nextSequenceReceive","Channel","IdentifiedChannel","connection","IdentifiedClientState","PacketState","packetCommitmentSequences","packetAckSequences","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","MsgAcknowledgementResponse","MsgAcknowledgement","MsgTimeoutOnCloseResponse","MsgTimeoutOnClose","MsgTimeoutResponse","MsgTimeout","MsgRecvPacketResponse","MsgRecvPacket","MsgChannelCloseConfirmResponse","MsgChannelCloseConfirm","MsgChannelCloseInitResponse","MsgChannelCloseInit","MsgChannelOpenConfirmResponse","MsgChannelOpenConfirm","MsgChannelOpenAckResponse","MsgChannelOpenAck","MsgChannelOpenTryResponse","MsgChannelOpenTry","MsgChannelOpenInitResponse","MsgChannelOpenInit","responseResultTypeToJSON","responseResultTypeFromJSON","ResponseResultType","RESPONSE_RESULT_TYPE_UNSPECIFIED","RESPONSE_RESULT_TYPE_NOOP","RESPONSE_RESULT_TYPE_SUCCESS","createBaseMsgChannelOpenInit","signer","createBaseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","createBaseMsgChannelOpenAck","counterpartyChannelId","proofTry","createBaseMsgChannelOpenConfirm","proofAck","createBaseMsgChannelCloseConfirm","createBaseMsgRecvPacket","packet","Packet","proofCommitment","createBaseMsgTimeout","proofUnreceived","nextSequenceRecv","createBaseMsgTimeoutOnClose","proofClose","createBaseMsgAcknowledgement","proofAcked","ChannelOpenInit","ChannelOpenTry","ChannelOpenAck","ChannelOpenConfirm","ChannelCloseInit","ChannelCloseConfirm","RecvPacket","Timeout","TimeoutOnClose","Acknowledgement","UpgradeProposal","ClientUpdateProposal","ClientConsensusStates","ConsensusStateWithHeight","upgrade_1","createBaseConsensusStateWithHeight","createBaseUpgradeProposal","createBaseHeight","clientState","consensusStates","subjectClientId","substituteClientId","allowedClients","QueryUpgradedConsensusStateResponse","QueryUpgradedConsensusStateRequest","QueryUpgradedClientStateResponse","QueryUpgradedClientStateRequest","QueryClientParamsResponse","QueryClientParamsRequest","QueryClientStatusResponse","QueryClientStatusRequest","QueryConsensusStateHeightsResponse","QueryConsensusStateHeightsRequest","QueryConsensusStatesResponse","QueryConsensusStatesRequest","QueryConsensusStateResponse","QueryConsensusStateRequest","QueryClientStatesResponse","QueryClientStatesRequest","QueryClientStateResponse","QueryClientStateRequest","createBaseQueryClientStateResponse","createBaseQueryConsensusStateRequest","latestHeight","createBaseQueryConsensusStateResponse","clientStates","consensusStateHeights","upgradedConsensusState","ClientState","ClientStates","ConsensusState","ConsensusStates","ConsensusStateHeights","ClientStatus","ClientParams","UpgradedClientState","UpgradedConsensusState","MsgSubmitMisbehaviourResponse","MsgSubmitMisbehaviour","MsgUpgradeClientResponse","MsgUpgradeClient","MsgUpdateClientResponse","MsgUpdateClient","MsgCreateClientResponse","MsgCreateClient","createBaseMsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","clientMessage","misbehaviour","CreateClient","UpdateClient","UpgradeClient","SubmitMisbehaviour","MerkleProof","MerklePath","MerklePrefix","MerkleRoot","createBaseMerkleRoot","createBaseMerklePrefix","keyPrefix","keyPath","proofs","Version","ConnectionPaths","ClientPaths","Counterparty","IdentifiedConnection","ConnectionEnd","stateToJSON","stateFromJSON","commitment_1","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","createBaseConnectionEnd","counterparty","delayPeriod","createBaseIdentifiedConnection","createBaseCounterparty","connectionId","maxExpectedTimePerBlock","paths","identifier","features","QueryConnectionParamsResponse","QueryConnectionParamsRequest","QueryConnectionConsensusStateResponse","QueryConnectionConsensusStateRequest","QueryConnectionClientStateResponse","QueryConnectionClientStateRequest","QueryClientConnectionsResponse","QueryClientConnectionsRequest","QueryConnectionsResponse","QueryConnectionsRequest","QueryConnectionResponse","QueryConnectionRequest","connection_1","createBaseQueryConnectionResponse","createBaseQueryConnectionsResponse","connections","createBaseQueryClientConnectionsResponse","connectionPaths","createBaseQueryConnectionClientStateResponse","createBaseQueryConnectionConsensusStateRequest","createBaseQueryConnectionConsensusStateResponse","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionParams","MsgConnectionOpenConfirmResponse","MsgConnectionOpenConfirm","MsgConnectionOpenAckResponse","MsgConnectionOpenAck","MsgConnectionOpenTryResponse","MsgConnectionOpenTry","MsgConnectionOpenInitResponse","MsgConnectionOpenInit","createBaseMsgConnectionOpenInit","createBaseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","hostConsensusStateProof","createBaseMsgConnectionOpenAck","counterpartyConnectionId","createBaseMsgConnectionOpenConfirm","ConnectionOpenInit","ConnectionOpenTry","ConnectionOpenAck","ConnectionOpenConfirm","Fraction","Header","Misbehaviour","validator_1","createBaseClientState","trustLevel","trustingPeriod","unbondingPeriod","maxClockDrift","frozenHeight","proofSpecs","upgradePath","allowUpdateAfterExpiry","allowUpdateAfterMisbehaviour","createBaseConsensusState","nextValidatorsHash","createBaseHeader","signedHeader","validatorSet","trustedHeight","trustedValidators","createBaseFraction","numerator","denominator","header1","header2","SignedHeader","ValidatorSet","ResponsePrepareProposal","ResponseApplySnapshotChunk","ResponseLoadSnapshotChunk","ResponseOfferSnapshot","ResponseListSnapshots","ResponseCommit","ResponseEndBlock","ResponseDeliverTx","ResponseCheckTx","ResponseBeginBlock","ResponseQuery","ResponseInitChain","ResponseInfo","ResponseFlush","ResponseEcho","ResponseException","Response","RequestProcessProposal","RequestPrepareProposal","RequestApplySnapshotChunk","RequestLoadSnapshotChunk","RequestOfferSnapshot","RequestListSnapshots","RequestCommit","RequestEndBlock","RequestDeliverTx","RequestCheckTx","RequestBeginBlock","RequestQuery","RequestInitChain","RequestInfo","RequestFlush","RequestEcho","Request","misbehaviorTypeToJSON","misbehaviorTypeFromJSON","MisbehaviorType","responseProcessProposal_ProposalStatusToJSON","responseProcessProposal_ProposalStatusFromJSON","ResponseProcessProposal_ProposalStatus","responseApplySnapshotChunk_ResultToJSON","responseApplySnapshotChunk_ResultFromJSON","ResponseApplySnapshotChunk_Result","responseOfferSnapshot_ResultToJSON","responseOfferSnapshot_ResultFromJSON","ResponseOfferSnapshot_Result","checkTxTypeToJSON","checkTxTypeFromJSON","CheckTxType","ABCIApplicationClientImpl","Snapshot","Misbehavior","ExtendedVoteInfo","VoteInfo","ValidatorUpdate","TxResult","EventAttribute","ExtendedCommitInfo","CommitInfo","ResponseProcessProposal","params_1","proof_1","keys_1","NEW","RECHECK","UNKNOWN","ACCEPT","ABORT","REJECT","REJECT_FORMAT","REJECT_SENDER","RETRY","RETRY_SNAPSHOT","REJECT_SNAPSHOT","DUPLICATE_VOTE","LIGHT_CLIENT_ATTACK","createBaseRequestInfo","blockVersion","p2pVersion","abciVersion","createBaseRequestInitChain","consensusParams","appStateBytes","initialHeight","createBaseRequestQuery","prove","createBaseRequestBeginBlock","header","lastCommitInfo","byzantineValidators","createBaseRequestCheckTx","createBaseRequestDeliverTx","createBaseRequestEndBlock","createBaseRequestOfferSnapshot","snapshot","appHash","createBaseRequestLoadSnapshotChunk","format","chunk","createBaseRequestApplySnapshotChunk","index","createBaseRequestPrepareProposal","maxTxBytes","localLastCommit","misbehavior","proposerAddress","createBaseRequestProcessProposal","proposedLastCommit","createBaseResponseInfo","appVersion","lastBlockHeight","lastBlockAppHash","createBaseResponseInitChain","createBaseResponseQuery","proofOps","createBaseResponseCheckTx","priority","mempoolError","createBaseResponseDeliverTx","createBaseResponseCommit","retainHeight","createBaseResponseLoadSnapshotChunk","createBaseTxResult","createBaseValidator","power","createBaseValidatorUpdate","PublicKey","createBaseVoteInfo","signedLastBlock","createBaseExtendedVoteInfo","voteExtension","createBaseMisbehavior","totalVotingPower","createBaseSnapshot","chunks","echo","flush","initChain","query","beginBlock","checkTx","deliverTx","endBlock","commit","listSnapshots","offerSnapshot","loadSnapshotChunk","applySnapshotChunk","prepareProposal","processProposal","ConsensusParams","exception","ProofOps","gas_wanted","gas_used","validatorUpdates","consensusParamUpdates","snapshots","refetchChunks","rejectSenders","Echo","Flush","Info","DeliverTx","CheckTx","Query","Commit","InitChain","BeginBlock","EndBlock","ListSnapshots","OfferSnapshot","LoadSnapshotChunk","ApplySnapshotChunk","PrepareProposal","ProcessProposal","ed25519","secp256k1","ProofOp","DominoOp","ValueOp","Proof","createBaseProof","leafHash","aunts","createBaseValueOp","createBaseProofOp","Block","evidence_1","createBaseBlock","Data","evidence","EvidenceList","lastCommit","LightClientAttackEvidence","DuplicateVoteEvidence","Evidence","createBaseDuplicateVoteEvidence","voteA","voteB","validatorPower","createBaseLightClientAttackEvidence","conflictingBlock","commonHeight","duplicateVoteEvidence","lightClientAttackEvidence","LightBlock","HashedParams","VersionParams","ValidatorParams","EvidenceParams","BlockParams","createBaseBlockParams","maxBytes","maxGas","createBaseEvidenceParams","maxAgeNumBlocks","maxAgeDuration","createBaseVersionParams","app","createBaseHashedParams","blockMaxBytes","blockMaxGas","block","pubKeyTypes","TxProof","BlockMeta","CommitSig","BlockID","Part","PartSetHeader","signedMsgTypeToJSON","signedMsgTypeFromJSON","SignedMsgType","blockIDFlagToJSON","blockIDFlagFromJSON","BlockIDFlag","BLOCK_ID_FLAG_UNKNOWN","BLOCK_ID_FLAG_ABSENT","BLOCK_ID_FLAG_COMMIT","BLOCK_ID_FLAG_NIL","SIGNED_MSG_TYPE_UNKNOWN","SIGNED_MSG_TYPE_PREVOTE","SIGNED_MSG_TYPE_PRECOMMIT","SIGNED_MSG_TYPE_PROPOSAL","createBasePartSetHeader","createBasePart","createBaseBlockID","partSetHeader","Consensus","lastBlockId","lastCommitHash","validatorsHash","consensusHash","lastResultsHash","evidenceHash","blockId","validatorIndex","createBaseCommit","createBaseCommitSig","blockIdFlag","polRound","createBaseBlockMeta","blockSize","numTxs","createBaseTxProof","rootHash","SimpleValidator","createBaseValidatorSet","votingPower","proposerPriority","createBaseSimpleValidator","App","createBaseApp","protocol","software","createBaseConsensus","parts","c1","c2","varint32write","varint64write","lowBits","highBits","middleByte","hasNext","splitBits","hasMoreBits","TWO_PWR_32_DBL","toUnsigned","mid","digitA","digitB","digitC","decimalFrom1e7WithLeadingZeros","newBits","negate","minus","add1e6digit","begin","digit1e6","negative","digit1e7","partial","readBytes","getPrototypeOf","kindOf","cache","thing","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isFunction","isNumber","isPlainObject","toStringTag","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","allOwnKeys","getOwnPropertyNames","findKey","_key","_global","isContextDefined","context","isTypedArray","TypedArray","isHTMLForm","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","ret","defineProperties","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","toUpperCase","isAsyncFn","_setImmediate","setImmediateSupported","setImmediate","postMessageSupported","postMessage","random","callbacks","addEventListener","source","asap","queueMicrotask","utils$1","isFormData","kind","FormData","append","isArrayBufferView","ArrayBuffer","isView","isBoolean","isStream","pipe","caseless","assignValue","targetKey","extend","trim","replace","stripBOM","inherits","superConstructor","props","toFlatObject","sourceObj","destObj","filter","propFilter","merged","endsWith","searchString","position","lastIndex","toArray","forEachEntry","pair","matchAll","regExp","matches","hasOwnProp","freezeMethods","writable","toObjectSet","arrayOrString","delimiter","define","toCamelCase","m","p1","p2","toFiniteNumber","defaultValue","generateString","alphabet","isSpecCompliantForm","toJSONObject","visit","target","reducedValue","isThenable","catch","AxiosError","config","fileName","lineNumber","columnNumber","prototype$1","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","dots","predicates","test","toFormData","formData","metaTokens","indexes","visitor","defaultVisitor","useBlob","Blob","convertValue","JSON","stringify","some","isFlatArray","exposedHelpers","encode$1","charMap","encodeURIComponent","AxiosURLSearchParams","_pairs","buildURL","url","_encode","serializeFn","serialize","serializedParams","hashmarkIndex","encoder","InterceptorManager$1","handlers","use","synchronous","runWhen","eject","clear","transitionalDefaults","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","platform$1","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","document","hasStandardBrowserEnv","product","navigator","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","origin","location","href","platform","formDataToJSON","buildPath","isNumericKey","isLast","arrayToObject","parsePropPath","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","helpers","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parser","parse","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","defaults$1","ignoreDuplicateOf","$internals","normalizeHeader","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","parseHeaders","tokens","tokensRE","parseTokens","has","matcher","delete","deleted","deleteHeader","normalize","normalized","w","formatHeader","targets","asStrings","computed","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","configurable","buildAccessors","accessor","mapped","headerValue","AxiosHeaders$1","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","ERR_BAD_REQUEST","progressEventReducer","listener","isDownloadStream","freq","bytesNotified","_speedometer","samplesCount","timestamps","firstSampleTS","chunkLength","startedAt","bytesCount","passed","speedometer","lastArgs","timer","invoke","args","clearTimeout","throttle","loaded","lengthComputable","progressBytes","rate","progress","estimated","event","progressEventDecorator","throttled","asyncDecorator","isURLSameOrigin","msie","userAgent","urlParsingNode","createElement","originURL","resolveURL","setAttribute","host","search","hostname","port","pathname","requestURL","cookies","expires","domain","secure","cookie","toGMTString","RegExp","decodeURIComponent","remove","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","resolveConfig","newConfig","auth","username","password","unescape","xsrfValue","xhrAdapter","XMLHttpRequest","_config","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","unsubscribe","signal","removeEventListener","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","upload","cancel","abort","subscribe","aborted","parseProtocol","send","composeSignals$1","signals","controller","AbortController","reason","streamChunk","chunkSize","trackStream","stream","onProgress","onFinish","iterable","_onFinish","ReadableStream","close","loadedBytes","enqueue","return","highWaterMark","isFetchSupported","fetch","isReadableStreamSupported","encodeText","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","duplex","supportsResponseStream","resolvers","ERR_NOT_SUPPORT","resolveBodyLength","getContentLength","getBodyLength","knownAdapters","http","xhr","fetchOptions","composedSignal","stopTimeout","requestContentLength","contentTypeHeader","_request","credentials","isStreamResponse","responseContentLength","responseData","renderReason","isResolvedHandle","adapters","getAdapter","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","VERSION","validators$1","deprecatedWarnings","formatMessage","opt","desc","ERR_DEPRECATED","console","warn","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","configOrUrl","dummy","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","promise","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","Axios$1","CancelToken","resolvePromise","_listeners","onfulfilled","_resolve","splice","CancelToken$1","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","HttpStatusCode$1","axios","createInstance","defaultConfig","Cancel","all","promises","spread","isAxiosError","payload","formToJSON","ApolloCache","assumeImmutableResults","getFragmentDoc","max","updateResult","_this","optimisticId","optimistic","performTransaction","recordOptimisticTransaction","transaction","transformDocument","transformForLink","identify","gc","modify","readQuery","rootId","readFragment","fragment","fragmentName","writeQuery","dataId","writeFragment","updateQuery","updateFragment","__DEV__","getMemoryInternals","MissingFieldError","_super","variables","missing","hasOwn","isNullish","defaultDataIdFromObject","__typename","_id","keyObject","dataIdFromObject","addTypename","resultCaching","canonizeResults","shouldCanonizeResults","TypeOrFieldNameRegExp","fieldNameFromStoreName","storeFieldName","selectionSetMatchesResult","selectionSet","every","item","selections","field","storeValueIsStoreObject","extractFragmentContext","fragments","fragmentMap","lookupFragment","def","DELETE","delModifier","INVALIDATE","EntityStore","policies","rootIds","refs","getFieldValue","objectOrReference","maybeDeepFreeze","__ref","canRead","objOrRef","toReference","objOrIdOrRef","mergeIntoStore","ref","fieldName","depend","storeObject","rootTypenamesById","Layer","parent","dependOnExistence","older","newer","existing","incoming","storeObjectReconciler","caching","fieldsToDirty_1","__exists","hasKeyArgs","dirty","fields","changedFields_1","needToMerge_1","allDeleted_1","sharedDetails_1","isReference","readField","fieldNameOrOptions","store","fieldValue","newValue","storage","getStorage","checkReference","seenReference","someNonReference","_i","newValue_1","typename","getStoreFieldName","evict","evicted","extract","extraRootIds","getRootIdSet","__META","sort","newData","rest_1","retain","release","ids","Set","findChildRefIds","idsToRemove","root_1","found_1","workSet_1","makeCacheKey","keyMaker","lookupArray","CacheGroup","resetCaching","canUse","makeDepKey","maybeDependOnExistenceOfEntity","entityId","supportsResultCaching","Root","_b","seed","stump","Stump","storageTrie","addLayer","layerId","replay","removeLayer","ownStoreObject","parentStoreObject","fromParent","existingObject","incomingObject","property","existingValue","incomingValue","ObjectCanon","known","WeakSet","passes","WeakMap","keysByJSON","empty","admit","isKnown","pass","shallowCopy","original","proto_1","array_1","sortedKeys","firstValueIndex_1","sorted","obj_1","execSelectionSetKeyArgs","StoreReader","knownResults","compact","canon","executeSelectionSet","peekArgs","other","peek","enclosingRef","execSelectionSetImpl","resultCacheMaxSize","keyArgs","varString","executeSubSelectedArray","execSubSelectedArrayImpl","resetCanon","diffQueryAgainstStore","_c","returnPartialData","_d","rootRef","execResult","canonicalStringify","firstMissing","complete","isFresh","latest","objectsToMerge","missingMerger","handleMissing","resultName","rootIdsByTypename","workSet","selection","added","FRAGMENT_SPREAD","fragmentMatches","finalResult","mergeDeep","frozen","childResult","getTypenameFromStoreObject","assertSelectionSetForIdValue","tree","specifierInfoCache","lookupSpecifierInfo","cacheKey","keyFieldsFnFromSpecifier","specifier","keyFieldsFn","collectSpecifierPaths","schemaKeyPath","extracted","extractKeyPath","extractKey","keyArgsFnFromSpecifier","keyArgsFn","collected","firstKey","firstChar","variableName","varKeyPath","directives","directiveName_1","directiveArgs","extractor","merger","getSpecifierPaths","reduce","toMerge","paths_1","currentPath_1","argsFromFieldSpecifier","nullKeyFieldsFn","simpleKeyArgsFn","_args","mergeTrueFn","mergeObjects","mergeFalseFn","Policies","typePolicies","toBeAdded","supertypeMap","fuzzySubtypes","usingPossibleTypes","setRootTypename","possibleTypes","addPossibleTypes","addTypePolicies","partialContext","ROOT_QUERY","normalizeReadFieldOptions","policy","getTypePolicy","keyFn","specifierOrId","queryType","mutationType","subscriptionType","updateTypePolicy","keyFields","setMerge","getFieldPolicy","which","old","supertype","getSupertypeSet","subtype","policy_1","supertypes_1","fuzzy","fuzzySupertypes","rest","inbox","createIfMissing","fieldPolicies","supertypeSet","typeCondition","typenameSupertypeSet","workQueue_1","maybeEnqueue_1","needToCheckFuzzySubtypes","checkingFuzzySubtypes","fuzzyString","fieldSpec","specifierOrString","readOptions","makeFieldFunctionOptions","withValue","getReadFunction","getMergeFunction","parentTypename","childTypename","runMergeFunction","makeMergeObjectsFunction","overwrite","readFieldArgs","argc","stringifyForDisplay","eType","iType","getContextFlavor","clientOnly","deferred","flavored","flavors","StoreWriter","writeToStore","operationDefinition","written","incomingById","processSelectionSet","mergeTree","fieldNodeSet","entityRef","applied","applyMerges","fieldsWithSelectionSets_1","hasSelectionSet_1","childTree","hasMergeFunction_1","existingRef","incomingObj","getChild","parentType","typeDotName","warnings","childTypenames","warnAboutDataLoss","result_1","flattenFields","resultFieldKey","getChildMergeTree","processFieldValue","maybeRecycleChildMergeTree","dataRef","sets","previous_1","mergeMergeTrees","mergeTreeIsEmpty","cloneDeep","limitingTrie","flatten","inheritedContext","visitedNode","visited","dir","if","getStorageArgs","e_1","i_1","getValue_1","eVal","iVal","aVal","emptyMergeTreePool","needToMergeMaps","remainingRightKeys_1","leftTree","InMemoryCache","watches","addTypenameTransform","DocumentTransform","makeVar","txCount","normalizeConfig","init","rootStore","optimisticData","resetResultCache","resetResultIdentities","previousReader","storeReader","storeWriter","maybeBroadcastWatch","broadcastWatch","restore","broadcast","broadcastWatches","watch","immediate","forget","print","resetCache","resetCaches","discardWatches","removeOptimistic","idToRemove","newOptimisticData","onWatchUpdated","perform","layer","alreadyDirty","addTypenameToDocument","addFragmentsToDocument","transform","lastDiff","fromOptimisticTransaction","cacheSlot","cacheInfoMap","getCacheInfo","vars","dep","forgetCache","rv","recallCache","attachCache","caches","listeners","oldListeners","getValue","attach","onNextChange","execute","ApolloLink","asyncMap","observable","mapFn","catchFn","observer","promiseQueue","makeCallback","examiner","arg","both","closed","handler","sub","graphQLResultHasError","errors","getGraphQLErrorsFromResult","graphQLErrors","incremental","incrementalResult","iterateObserversSafely","observers","argument","observersWithMethod","obs","fixObservableSubclass","subclass","species","isPromiseLike","Concast","sources","addObserver","removeObserver","notify","nextResultListeners","deliverLastMessage","nextOrError","beforeNext","called","equalByQuery","aData","aRest","bData","bRest","equalBySelectionSet","aResult","bResult","seenSelections","selectionHasNonreactiveDirective","resultKey","aResultChild","bResultChild","childSelectionSet","aChildIsArray","bChildIsArray","length_1","directiveIsNonreactive","ObservableQuery","queryManager","queryInfo","subObserver","_subscription","_observer","defaultSubscriptionObserverErrorCallback","reobserve","tearDownQuery","subscriptions","waitForOwnResult","skipCacheDataFor","fetchPolicy","isTornDown","defaultOptions","watchQuery","defaultFetchPolicy","_e","initialFetchPolicy","queryId","generateQueryId","opDef","queryName","lastQuery","removeQuery","subscription","resetDiff","getCurrentResult","saveAsLastResult","lastResult","getLastResult","networkStatus","ready","loading","getDocumentInfo","hasForcedResolvers","getDiff","partialRefetch","logMissingFieldErrors","updateLastResult","isDifferentFromLastResult","newResult","hasNonreactiveDirective","getLast","variablesMustMatch","getLastError","resetLastResults","resetQueryStoreErrors","resetErrors","refetch","reobserveOptions","pollInterval","queryDef","variableDefinitions","variable","resetLastWrite","fetchMore","fetchMoreOptions","combinedOptions","qid","originalNetworkStatus","notifyOnNetworkStatusChange","observe","updatedQuerySet","fetchQuery","fetchMoreResult","previous","finally","reobserveCacheFirst","subscribeToMore","startGraphQLSubscription","subscriptionData","onError","setOptions","newOptions","silentSetOptions","mergedOptions","setVariables","broadcastQueries","startPolling","updatePolling","stopPolling","applyNextFetchPolicy","nextFetchPolicy","newNetworkStatus","setObservableQuery","ssrMode","pollingInfo","interval","maybeFetch","skipPollAttempt","poll","reobserveAsConcast","useDisposableConcast","oldVariables","oldFetchPolicy","finishWaitingForOwnResult","concast","fromLink","reportResult","reportError","resubscribeAfterError","lastError","isDifferent","errorResult","hasObservers","stopQuery","obsQuery","currentFetchPolicy","debug","LocalState","client","fragmentMatcher","selectionsToResolveCache","addResolvers","setFragmentMatcher","resolverGroup","setResolvers","getResolvers","runResolvers","remoteResult","onlyRunForcedResolvers","resolveDocument","localResult","getFragmentMatcher","clientQuery","serverQuery","prepareContext","getCacheKey","addExportedVariables","buildRootValueFromCache","exportedVariables","shouldForceResolvers","forceResolvers","Directive","enter","rootValue","mainDefinition","selectionsToResolve","definitionOperation","defaultOperationType","execContext","collectSelectionsToResolve","resolveSelectionSet","isClientFieldDescendant","resultsToMerge","resolveField","fieldResult","fragmentResult","aliasedFieldName","aliasUsed","defaultResult","resultPromise","resolverType","resolverMap","directive","isClientField","resolveSubSelectedArray","isSingleASTNode","collectByDefinition","definitionNode","matches_1","___","ancestors","FragmentSpread","fragmentSelections","destructiveMethodCounts","wrapDestructiveCacheMethod","cancelNotifyTimeout","QueryInfo","lastRequestId","stopped","observableQuery","networkError","getDiffOptions","updateWatch","oq","updateLastDiff","setDiff","oldDiff","notifyTimeout","oqListener","shouldNotify","stop","watchOptions","watcher","lastWatch","lastWrite","shouldWrite","dmCount","markResult","cacheWriteBehavior","mergedData","shouldWriteResult","errorPolicy","diffOptions","markReady","markError","ignoreErrors","writeWithErrors","IGNORE","QueryManager","link","documentTransform","queryDeduplication","onBroadcast","clientAwareness","localState","defaultContext","queries","fetchCancelFns","transformCache","queryIdCounter","requestIdCounter","mutationIdCounter","inFlightLinkObservables","defaultDocumentTransform","mutationStore","_info","stopQueryNoBroadcast","cancelPendingFetches","mutate","mutation","optimisticResponse","updateQueries","refetchQueries","awaitRefetchQueries","updateWithProxyFn","onQueryUpdated","_g","keepRootFields","mutationId","hasClientExports","mutationStoreValue","isOptimistic","generateMutationId","getVariables","markMutationOptimistic","getObservableFromLink","storeResult","markMutationResult","cacheWrites","skipCache","asQuery","updateQueries_1","updater","currentQueryResult","nextQueryResult","mutationResult","queryVariables","results_1","updateCache","isFinalResult","include","fetchConcastWithInfo","getQueryStore","cacheEntry","defaultVars","definitions","generateRequestId","stopQueryInStore","stopQueryInStoreNoBroadcast","clearStore","getObservableQueries","queryNamesAndDocs","legacyQueryOptions","makeUniqueId","getQuery","included","nameOrDoc","reFetchObservableQueries","includeStandby","observableQueryPromises","makeObservable","hasErrors","hasProtocolErrors","protocolErrors","extensions","observablePromise_1","getLocalState","deduplication","inFlightLinkObservables_1","operationName","forceFetch","printedServerQuery_1","varJson_1","of","getResultsFromLink","requestId","linkDocument","aqr","containsDataFromLink","fromVariables","sourcesWithInfo","fetchQueryByPolicy","cleanupCancelFn","includedQueriesById","refetchWritePolicy","oldNetworkStatus","readCache","resultsFromCache","fromData","resolved","resultsFromLink","newContext","hasSuggestedDevtools","ApolloClient","resetStoreCallbacks","clearStoreCallbacks","ssrForceFetchDelay","connectToDevTools","__APOLLO_CLIENT__","typeDefs","clientAwarenessName","clientAwarenessVersion","HttpLink","disableNetworkFetches","resetStore","devToolsHookCb","action","mutations","dataWithOptimisticResults","windowWithDevTools","devtoolsSymbol","for","top","__APOLLO_DEVTOOLS_GLOBAL_HOOK__","nav","ua","mergeOptions","__actionHookForDevTools","__requestRaw","onResetStore","onClearStore","serializedState","setLocalStateFragmentMatcher","setLink","newLink","NetworkStatus","isNetworkRequestInFlight","PROTOCOL_ERRORS_SYMBOL","graphQLResultHasProtocolErrors","isApolloError","ApolloError","clientErrors","errorMessage","extraInfo","passthrough","forward","toLink","isTerminating","links","leftLink","rightLink","starting","createOperation","transformedOperation","transformOperation","OPERATION_FIELDS","validateOperation","second","firstLink","nextLink","setOnError","serializeFetchParameter","serialized","parseError","nodeStreamIterator","cleanup","waiting","onData","shiftedArr","onEnd","removeListener","on","asyncIterator","readerIterator","responseIterator","isAsyncIterableIterator","getReader","isStreamableBlob","promiseIterator","isNodeReadableStream","throwServerError","statusCode","headerText","headersInit","name_1","parseJsonBody","bodyText","getResult","fallbackHttpConfig","includeQuery","includeExtensions","preserveHeaderCase","accept","defaultPrinter","ast","printer","selectHttpOptionsAndBodyInternal","configs","normalizedHeaders_1","headerData","originalName","normalizedHeaders","removeDuplicateHeaders","fromError","errorValue","backupFetch","createHttpLink","linkOptions","preferredFetch","useGETForQueries","includeUnusedVariables","requestOptions","fetcher","checkFetcher","linkConfig","chosenURI","fallbackURI","contextURI","getContext","selectURI","clientAwarenessHeaders","contextConfig","transformedQuery","unusedNames","Variable","isSubscription","hasDefer","acceptHeader","queryParams","addQueryParam","serializedVariables","serializedExtensions","preFragment","fragmentStart","substr","queryParamsPrefix","newURI","rewriteURIForGET","currentFetch","observerNext","setContext","operations","ctype","nextValue","decoder","boundaryVal","boundary","running","searchFrom","bi","contentType_1","TextDecoder","readMultipartBody","text","handleError","GraphQLWsLink","likeClose","WebSocket","CLOSED","isLikeErrorEvent","scheduledCleanup","schedule","clean","AutoCleanedWeakCache","dispose","AutoCleanedStrongCache","globalCaches","registerGlobalCache","getSize","getApolloClientMemoryInternals","limits","fromEntries","sizes","linkInfo","documentTransforms","transformInfo","getInMemoryCacheMemoryInternals","_getApolloCacheMemoryInternals","addTypenameDocumentTransform","inMemoryCache","getWrapperInformation","fragmentRegistry","findFragmentSpreads","getApolloCacheMemoryInternals","fragmentQueryDocuments","isWrapper","isDefined","recurseTransformInfo","cacheSizeSymbol","cacheSizes","isNonEmptyArray","sortingMap","stableObjectReplacer","proto","everyKeyInOrder","unsortedKey","sortedKey","sortedObject_1","cloneDeepHelper","seen","copy_1","copy_2","objects","isExecutionPatchIncrementalResult","isExecutionPatchResult","isExecutionPatchInitialResult","isApolloPayloadResult","mergeIncrementalData","prevResult","parent_1","isNaN","prefixCounts","deepFreeze","isFrozen","shallowFreeze","mergeDeepArray","DeepMerger","defaultReconciler","reconciler","pastCopies","sourceKey","targetValue","shallowCopyForMerge","isNonNullObject","space","undefId","thunk","wrap","arg0","getHandledErrorMsg","getFallbackErrorMsg","invariant","condition","newInvariantError","optionalParams","ApolloErrorMessageHandler","messageArgs","identity","resultCache","cached","predicate","stableCacheKeys_1","performWork","cacheKeys","transformedDocument","otherTransform","shouldInclude","isInclusionDirective","directiveArguments","directiveName","ifArgument","ifValue","getInclusionDirectives","evaledValue","hasDirectives","names","nameSet","uniqueCount","getFragmentQueryDocument","actualFragmentName","definition","createFragmentMap","symTable","getFragmentFromSelection","checkDocument","doc","getOperationDefinition","getOperationName","getFragmentDefinitions","getQueryDefinition","getFragmentDefinition","fragmentDef","getMainDefinition","queryDoc","fragmentDefinition","getDefaultValues","defaultValues","defs","printCache","makeReference","isDocumentNode","valueToObjectRepresentation","argObj","isIntValue","isFloatValue","isBooleanValue","isStringValue","isObjectValue","nestedArgObj_1","isVariable","variableValue","isListValue","listValue","nestedArgArrayObj","isEnumValue","isNullValue","storeKeyNameFromField","directivesObj","getStoreKeyName","KNOWN_DIRECTIVES","storeKeyNameStringify","filterKeys","filteredArgs_1","completeFieldName","stringifiedArgs","setStringify","argumentsObjectFromField","argObj_1","resultKeyNameFromField","alias","getTypenameFromResult","isField","fragments_1","isInlineFragment","TYPENAME_FIELD","FIELD","NAME","isEmpty","nullIfDocIsEmpty","getDirectiveMatcher","tests","testConfig","makeInUseGetterFunction","defaultKey","inUse","fragmentSpreads","removeDirectivesFromDocument","getInUseByOperationName","getInUseByFragmentName","getInUse","ancestor","OPERATION_DEFINITION","FRAGMENT_DEFINITION","operationCount","directiveMatcher","shouldRemoveField","nodeDirectives","originalFragmentDefsByPath","firstVisitMadeChanges","fieldOrInlineFragmentVisitor","docWithoutDirectiveSubtrees","Field","InlineFragment","VariableDefinition","_parent","_path","FragmentDefinition","leave","removed","populateTransitiveVars","transitiveVars","childFragmentName","varName","allFragmentNamesUsed","enterVisitor","OperationDefinition","usedVariableNames_1","varDef","SelectionSet","lastIndexOf","buildQueryFromSelectionSet","removeClientSetsFromDocument"],"sourceRoot":""}